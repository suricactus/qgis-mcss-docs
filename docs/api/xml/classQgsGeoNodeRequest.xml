<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsGeoNodeRequest" kind="class" language="C++" prot="public">
    <compoundname>QgsGeoNodeRequest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="qgsgeonoderequest_8h" local="no">qgsgeonoderequest.h</includes>
    <innerclass refid="structQgsGeoNodeRequest_1_1ServiceLayerDetail" prot="public">QgsGeoNodeRequest::ServiceLayerDetail</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsGeoNodeRequest_1a215baaa1977dd9b961d19d0ca0455b0b" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsGeoNodeRequest::mBaseUrl</definition>
        <argsstring></argsstring>
        <name>mBaseUrl</name>
        <briefdescription>
<para>URL part of URI (httpuri) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="250" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsGeoNodeRequest_1a7e55d3175fc596c30213292762f39bd2" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsGeoNodeRequest::mError</definition>
        <argsstring></argsstring>
        <name>mError</name>
        <briefdescription>
<para>The error message associated with the last error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="256" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsGeoNodeRequest_1ae7ce566630e964664813fbba94d9e83b" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsGeoNodeRequest::mErrorFormat</definition>
        <argsstring></argsstring>
        <name>mErrorFormat</name>
        <briefdescription>
<para>The mime type of the message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="259" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsGeoNodeRequest_1a4652302982295637777197c98290b69a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsGeoNodeRequest::mForceRefresh</definition>
        <argsstring></argsstring>
        <name>mForceRefresh</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="265" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsGeoNodeRequest_1ae97c048feeaed52526de5004459f2977" prot="private" static="no" mutable="no">
        <type>QNetworkReply *</type>
        <definition>QNetworkReply* QgsGeoNodeRequest::mGeoNodeReply</definition>
        <argsstring></argsstring>
        <name>mGeoNodeReply</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>The reply to the geonode request. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="253" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsGeoNodeRequest_1a4dcc8c2c41ffe146b6602d65fd76b9a0" prot="private" static="no" mutable="no">
        <type>QByteArray</type>
        <definition>QByteArray QgsGeoNodeRequest::mHttpGeoNodeResponse</definition>
        <argsstring></argsstring>
        <name>mHttpGeoNodeResponse</name>
        <briefdescription>
<para>Response. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="262" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsGeoNodeRequest_1a0775176fe0d7ea2096fc18a53fb8b6ad" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsGeoNodeRequest::mIsAborted</definition>
        <argsstring></argsstring>
        <name>mIsAborted</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="264" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsGeoNodeRequest_1a3c40b416b5b494753fcffea5e4f0004d" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsGeoNodeRequest::mProtocol</definition>
        <argsstring></argsstring>
        <name>mProtocol</name>
        <briefdescription>
<para>URL part of URI (httpuri) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="247" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a13b5d9920cbb7dcda058cbb6c2110432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsGeoNodeRequest::QgsGeoNodeRequest</definition>
        <argsstring>(const QString &amp;baseUrl, bool forceRefresh, QObject *parent=nullptr)</argsstring>
        <name>QgsGeoNodeRequest</name>
        <param>
          <type>const QString &amp;</type>
          <declname>baseUrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceRefresh</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsGeoNodeRequest" kindref="compound">QgsGeoNodeRequest</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>forceRefresh</emphasis> is false, then cached copies of the request may be reused. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="96" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1afdf0068071dfc4ab77bbd3488d5b4753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsGeoNodeRequest::~QgsGeoNodeRequest</definition>
        <argsstring>() override</argsstring>
        <name>~QgsGeoNodeRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="98" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a66644b2fea8241df5bbd9c88f0de7c44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structQgsGeoNodeStyle" kindref="compound">QgsGeoNodeStyle</ref></type>
        <definition>QgsGeoNodeStyle QgsGeoNodeRequest::fetchDefaultStyleBlocking</definition>
        <argsstring>(const QString &amp;layerName)</argsstring>
        <name>fetchDefaultStyleBlocking</name>
        <param>
          <type>const QString &amp;</type>
          <declname>layerName</declname>
        </param>
        <briefdescription>
<para>Requests the default style for the layer with matching <emphasis>layerName</emphasis> from the server. </para>        </briefdescription>
        <detaileddescription>
<para>This method is blocking and will wait for results from the server before returning. Accordingly it should not be used from any code which potentially blocks operation in the main GUI thread. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="167" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="88" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a4223e296681aac8dc5e4a4ebd978e661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeoNodeRequest::fetchLayers</definition>
        <argsstring>()</argsstring>
        <name>fetchLayers</name>
        <briefdescription>
<para>Triggers a new request to fetch the list of available layers from the server. </para>        </briefdescription>
        <detaileddescription>
<para>When complete, the <ref refid="classQgsGeoNodeRequest_1a0ed0b6e8e8711de2649fdb4e51d11c29" kindref="member">layersFetched()</ref> signal will be emitted with the result.</para><para>This method is non-blocking and returns immediately.</para><para><simplesect kind="warning"><para>When using the non-blocking methods in this class, sending overlapping requests results in undefined behavior. Use separate instances of <ref refid="classQgsGeoNodeRequest" kindref="compound">QgsGeoNodeRequest</ref> instead to avoid this.</para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsGeoNodeRequest_1a0ed0b6e8e8711de2649fdb4e51d11c29" kindref="member">layersFetched()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsGeoNodeRequest_1a4f1b4064add55cc682ee336bd99b453b" kindref="member">fetchLayersBlocking()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="139" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="53" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a4f1b4064add55cc682ee336bd99b453b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="structQgsGeoNodeRequest_1_1ServiceLayerDetail" kindref="compound">QgsGeoNodeRequest::ServiceLayerDetail</ref> &gt;</type>
        <definition>QList&lt; QgsGeoNodeRequest::ServiceLayerDetail &gt; QgsGeoNodeRequest::fetchLayersBlocking</definition>
        <argsstring>()</argsstring>
        <name>fetchLayersBlocking</name>
        <briefdescription>
<para>Requests the list of available layers from the server. </para>        </briefdescription>
        <detaileddescription>
<para>This method is blocking and will wait for results from the server before returning. Accordingly it should not be used from any code which potentially blocks operation in the main GUI thread.</para><para><simplesect kind="see"><para><ref refid="classQgsGeoNodeRequest_1a4223e296681aac8dc5e4a4ebd978e661" kindref="member">fetchLayers()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="149" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="71" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a79115b120acd0a2bfbea0af066f9982a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="qgis_8h_1ab13d4e9821da606b92748097c691b9dd" kindref="member">QgsStringMap</ref></type>
        <definition>QgsStringMap QgsGeoNodeRequest::fetchServiceUrlDataBlocking</definition>
        <argsstring>(const QString &amp;serviceType)</argsstring>
        <name>fetchServiceUrlDataBlocking</name>
        <param>
          <type>const QString &amp;</type>
          <declname>serviceType</declname>
        </param>
        <briefdescription>
<para>Obtains a map of layer name to URL for available services with matching <emphasis>serviceType</emphasis> from the server. </para>        </briefdescription>
        <detaileddescription>
<para>This method is blocking and will wait for results from the server before returning. Accordingly it should not be used from any code which potentially blocks operation in the main GUI thread. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="191" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="445" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a722845cf731b9f434873bbf62560c401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsGeoNodeRequest::fetchServiceUrlsBlocking</definition>
        <argsstring>(const QString &amp;serviceType)</argsstring>
        <name>fetchServiceUrlsBlocking</name>
        <param>
          <type>const QString &amp;</type>
          <declname>serviceType</declname>
        </param>
        <briefdescription>
<para>Requests the list of unique URLs for available services with matching <emphasis>serviceType</emphasis> from the server. </para>        </briefdescription>
        <detaileddescription>
<para>This method is blocking and will wait for results from the server before returning. Accordingly it should not be used from any code which potentially blocks operation in the main GUI thread. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="183" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="402" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a472ce6687df51e32501ca164b6c92db9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structQgsGeoNodeStyle" kindref="compound">QgsGeoNodeStyle</ref></type>
        <definition>QgsGeoNodeStyle QgsGeoNodeRequest::fetchStyleBlocking</definition>
        <argsstring>(const QString &amp;styleId)</argsstring>
        <name>fetchStyleBlocking</name>
        <param>
          <type>const QString &amp;</type>
          <declname>styleId</declname>
        </param>
        <briefdescription>
<para>Requests the details for the style with matching <emphasis>styleId</emphasis> from the server. </para>        </briefdescription>
        <detaileddescription>
<para>This method is blocking and will wait for results from the server before returning. Accordingly it should not be used from any code which potentially blocks operation in the main GUI thread. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="175" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a3a69ed07b065d44af11861e105d944c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="structQgsGeoNodeStyle" kindref="compound">QgsGeoNodeStyle</ref> &gt;</type>
        <definition>QList&lt; QgsGeoNodeStyle &gt; QgsGeoNodeRequest::fetchStylesBlocking</definition>
        <argsstring>(const QString &amp;layerName)</argsstring>
        <name>fetchStylesBlocking</name>
        <param>
          <type>const QString &amp;</type>
          <declname>layerName</declname>
        </param>
        <briefdescription>
<para>Requests the list of available styles for the layer with matching <emphasis>layerName</emphasis> from the server. </para>        </briefdescription>
        <detaileddescription>
<para>This method is blocking and will wait for results from the server before returning. Accordingly it should not be used from any code which potentially blocks operation in the main GUI thread. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="159" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="112" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a3a3dd32c430b4cb9391e4879437f5178" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsGeoNodeRequest::lastError</definition>
        <argsstring>() const</argsstring>
        <name>lastError</name>
        <briefdescription>
<para>Returns the most recent error string for any encountered errors, or an empty string if no errors have been encountered. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="197" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1ab56103bc3e6d0fb8b34eb687798496a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray QgsGeoNodeRequest::lastResponse</definition>
        <argsstring>() const</argsstring>
        <name>lastResponse</name>
        <briefdescription>
<para>Returns the most recent response obtained from the server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="202" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1aa2d20ded5377c89f928d595d01c454ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsGeoNodeRequest::protocol</definition>
        <argsstring>() const</argsstring>
        <name>protocol</name>
        <briefdescription>
<para>Returns the network protocol (e.g. </para>        </briefdescription>
        <detaileddescription>
<para>&apos;http&apos;) used for connecting with the server. <simplesect kind="see"><para><ref refid="classQgsGeoNodeRequest_1afd3de568bfdc06c9ab71c86feb5c6908" kindref="member">setProtocol()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="208" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1ad5a366aad5d8a8875630bc1080f2c720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeoNodeRequest::request</definition>
        <argsstring>(const QString &amp;endPoint)</argsstring>
        <name>request</name>
        <param>
          <type>const QString &amp;</type>
          <declname>endPoint</declname>
        </param>
        <briefdescription>
<para>Triggers a new request to the GeoNode server, with the requested <emphasis>endPoint</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Any existing request will be aborted.</para><para>Calling this method does not block while waiting for a result.</para><para><simplesect kind="warning"><para>When using the non-blocking methods in this class, sending overlapping requests results in undefined behavior. Use separate instances of <ref refid="classQgsGeoNodeRequest" kindref="compound">QgsGeoNodeRequest</ref> instead to avoid this.</para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsGeoNodeRequest_1a1328e6ad4349373b8b5f74761d45e732" kindref="member">requestBlocking()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="112" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="490" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a1328e6ad4349373b8b5f74761d45e732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsGeoNodeRequest::requestBlocking</definition>
        <argsstring>(const QString &amp;endPoint)</argsstring>
        <name>requestBlocking</name>
        <param>
          <type>const QString &amp;</type>
          <declname>endPoint</declname>
        </param>
        <briefdescription>
<para>Triggers a new request to the GeoNode server, with the requested <emphasis>endPoint</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Any existing request will be aborted.</para><para>Calling this method will block while waiting for a result. It should not be used from any code which potentially blocks operation in the main GUI thread.</para><para><simplesect kind="see"><para><ref refid="classQgsGeoNodeRequest_1ad5a366aad5d8a8875630bc1080f2c720" kindref="member">request()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="123" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="508" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1afd3de568bfdc06c9ab71c86feb5c6908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeoNodeRequest::setProtocol</definition>
        <argsstring>(const QString &amp;protocol)</argsstring>
        <name>setProtocol</name>
        <param>
          <type>const QString &amp;</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
<para>Sets the network <emphasis>protocol</emphasis> (e.g. </para>        </briefdescription>
        <detaileddescription>
<para>&apos;http&apos;) used for connecting with the server. <simplesect kind="see"><para><ref refid="classQgsGeoNodeRequest_1aa2d20ded5377c89f928d595d01c454ad" kindref="member">protocol()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="214" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="159" bodyend="162"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="classQgsGeoNodeRequest_1af5014857fd16d1185331dacee85092ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeoNodeRequest::abort</definition>
        <argsstring>()</argsstring>
        <name>abort</name>
        <briefdescription>
<para>Aborts any active network request immediately. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="221" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="43" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classQgsGeoNodeRequest_1a0ed0b6e8e8711de2649fdb4e51d11c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeoNodeRequest::layersFetched</definition>
        <argsstring>(const QList&lt; QgsGeoNodeRequest::ServiceLayerDetail &gt; &amp;layers)</argsstring>
        <name>layersFetched</name>
        <param>
          <type>const QList&lt; <ref refid="structQgsGeoNodeRequest_1_1ServiceLayerDetail" kindref="compound">QgsGeoNodeRequest::ServiceLayerDetail</ref> &gt; &amp;</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
<para>Emitted when the result of a fetchLayers call has been received and processed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsGeoNodeRequest_1a33189f2aefb186070f11a0200fefa881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeoNodeRequest::requestFinished</definition>
        <argsstring>()</argsstring>
        <name>requestFinished</name>
        <briefdescription>
<para>Emitted when the existing request has been completed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsGeoNodeRequest_1a8f057de97a1bac08ddfcac173d23e339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeoNodeRequest::statusChanged</definition>
        <argsstring>(const QString &amp;statusQString)</argsstring>
        <name>statusChanged</name>
        <param>
          <type>const QString &amp;</type>
          <declname>statusQString</declname>
        </param>
        <briefdescription>
<para>Emitted when the status of an ongoing request is changed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="228" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-slot">
      <memberdef kind="slot" id="classQgsGeoNodeRequest_1ad6c76f0280a57ad8b778f915019380a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeoNodeRequest::replyFinished</definition>
        <argsstring>()</argsstring>
        <name>replyFinished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="241" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="164" bodyend="257"/>
      </memberdef>
      <memberdef kind="slot" id="classQgsGeoNodeRequest_1a17211a10207e94c84f3a997458ae68d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeoNodeRequest::replyProgress</definition>
        <argsstring>(qint64, qint64)</argsstring>
        <name>replyProgress</name>
        <param>
          <type>qint64</type>
          <defname>bytesReceived</defname>
        </param>
        <param>
          <type>qint64</type>
          <defname>bytesTotal</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="242" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="147" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsGeoNodeRequest_1af6d1590fab8238b5c51883763f4d0213" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="structQgsGeoNodeRequest_1_1ServiceLayerDetail" kindref="compound">QgsGeoNodeRequest::ServiceLayerDetail</ref> &gt;</type>
        <definition>QList&lt; QgsGeoNodeRequest::ServiceLayerDetail &gt; QgsGeoNodeRequest::parseLayers</definition>
        <argsstring>(const QByteArray &amp;layerResponse)</argsstring>
        <name>parseLayers</name>
        <param>
          <type>const QByteArray &amp;</type>
          <declname>layerResponse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="267" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="259" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a2a7ccb8e7a7a2d01b2f1d47697e1e68e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QNetworkReply *</type>
        <definition>QNetworkReply * QgsGeoNodeRequest::requestUrl</definition>
        <argsstring>(const QString &amp;url)</argsstring>
        <name>requestUrl</name>
        <param>
          <type>const QString &amp;</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="270" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="519" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeoNodeRequest_1a84d4c2645b0c458609019a9c00dde1e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structQgsGeoNodeStyle" kindref="compound">QgsGeoNodeStyle</ref></type>
        <definition>QgsGeoNodeStyle QgsGeoNodeRequest::retrieveStyle</definition>
        <argsstring>(const QString &amp;styleUrl)</argsstring>
        <name>retrieveStyle</name>
        <param>
          <type>const QString &amp;</type>
          <declname>styleUrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="268" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.cpp" bodystart="369" bodyend="400"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Request handler for GeoNode servers. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classQgsGeoNodeRequest" kindref="compound">QgsGeoNodeRequest</ref> handles requesting and parsing service details from a GeoNode server instance, for instance requesting all available layers or layer styles.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3709">
        <label>QObject</label>
      </node>
      <node id="3708">
        <label>QgsGeoNodeRequest</label>
        <link refid="classQgsGeoNodeRequest"/>
        <childnode refid="3709" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3711">
        <label>QObject</label>
      </node>
      <node id="3710">
        <label>QgsGeoNodeRequest</label>
        <link refid="classQgsGeoNodeRequest"/>
        <childnode refid="3711" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geocms/geonode/qgsgeonoderequest.h" bodystart="65" bodyend="272"/>
    <listofallmembers>
      <member refid="classQgsGeoNodeRequest_1af5014857fd16d1185331dacee85092ba" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>abort</name></member>
      <member refid="classQgsGeoNodeRequest_1a66644b2fea8241df5bbd9c88f0de7c44" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>fetchDefaultStyleBlocking</name></member>
      <member refid="classQgsGeoNodeRequest_1a4223e296681aac8dc5e4a4ebd978e661" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>fetchLayers</name></member>
      <member refid="classQgsGeoNodeRequest_1a4f1b4064add55cc682ee336bd99b453b" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>fetchLayersBlocking</name></member>
      <member refid="classQgsGeoNodeRequest_1a79115b120acd0a2bfbea0af066f9982a" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>fetchServiceUrlDataBlocking</name></member>
      <member refid="classQgsGeoNodeRequest_1a722845cf731b9f434873bbf62560c401" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>fetchServiceUrlsBlocking</name></member>
      <member refid="classQgsGeoNodeRequest_1a472ce6687df51e32501ca164b6c92db9" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>fetchStyleBlocking</name></member>
      <member refid="classQgsGeoNodeRequest_1a3a69ed07b065d44af11861e105d944c5" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>fetchStylesBlocking</name></member>
      <member refid="classQgsGeoNodeRequest_1a3a3dd32c430b4cb9391e4879437f5178" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>lastError</name></member>
      <member refid="classQgsGeoNodeRequest_1ab56103bc3e6d0fb8b34eb687798496a2" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>lastResponse</name></member>
      <member refid="classQgsGeoNodeRequest_1a0ed0b6e8e8711de2649fdb4e51d11c29" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>layersFetched</name></member>
      <member refid="classQgsGeoNodeRequest_1a215baaa1977dd9b961d19d0ca0455b0b" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>mBaseUrl</name></member>
      <member refid="classQgsGeoNodeRequest_1a7e55d3175fc596c30213292762f39bd2" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>mError</name></member>
      <member refid="classQgsGeoNodeRequest_1ae7ce566630e964664813fbba94d9e83b" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>mErrorFormat</name></member>
      <member refid="classQgsGeoNodeRequest_1a4652302982295637777197c98290b69a" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>mForceRefresh</name></member>
      <member refid="classQgsGeoNodeRequest_1ae97c048feeaed52526de5004459f2977" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>mGeoNodeReply</name></member>
      <member refid="classQgsGeoNodeRequest_1a4dcc8c2c41ffe146b6602d65fd76b9a0" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>mHttpGeoNodeResponse</name></member>
      <member refid="classQgsGeoNodeRequest_1a0775176fe0d7ea2096fc18a53fb8b6ad" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>mIsAborted</name></member>
      <member refid="classQgsGeoNodeRequest_1a3c40b416b5b494753fcffea5e4f0004d" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>mProtocol</name></member>
      <member refid="classQgsGeoNodeRequest_1af6d1590fab8238b5c51883763f4d0213" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>parseLayers</name></member>
      <member refid="classQgsGeoNodeRequest_1aa2d20ded5377c89f928d595d01c454ad" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>protocol</name></member>
      <member refid="classQgsGeoNodeRequest_1a13b5d9920cbb7dcda058cbb6c2110432" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>QgsGeoNodeRequest</name></member>
      <member refid="classQgsGeoNodeRequest_1ad6c76f0280a57ad8b778f915019380a4" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>replyFinished</name></member>
      <member refid="classQgsGeoNodeRequest_1a17211a10207e94c84f3a997458ae68d1" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>replyProgress</name></member>
      <member refid="classQgsGeoNodeRequest_1ad5a366aad5d8a8875630bc1080f2c720" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>request</name></member>
      <member refid="classQgsGeoNodeRequest_1a1328e6ad4349373b8b5f74761d45e732" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>requestBlocking</name></member>
      <member refid="classQgsGeoNodeRequest_1a33189f2aefb186070f11a0200fefa881" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>requestFinished</name></member>
      <member refid="classQgsGeoNodeRequest_1a2a7ccb8e7a7a2d01b2f1d47697e1e68e" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>requestUrl</name></member>
      <member refid="classQgsGeoNodeRequest_1a84d4c2645b0c458609019a9c00dde1e2" prot="private" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>retrieveStyle</name></member>
      <member refid="classQgsGeoNodeRequest_1afd3de568bfdc06c9ab71c86feb5c6908" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>setProtocol</name></member>
      <member refid="classQgsGeoNodeRequest_1a8f057de97a1bac08ddfcac173d23e339" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>statusChanged</name></member>
      <member refid="classQgsGeoNodeRequest_1afdf0068071dfc4ab77bbd3488d5b4753" prot="public" virt="non-virtual"><scope>QgsGeoNodeRequest</scope><name>~QgsGeoNodeRequest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
