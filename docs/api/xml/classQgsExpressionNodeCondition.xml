<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsExpressionNodeCondition" kind="class" language="C++" prot="public">
    <compoundname>QgsExpressionNodeCondition</compoundname>
    <basecompoundref refid="classQgsExpressionNode" prot="public" virt="non-virtual">QgsExpressionNode</basecompoundref>
    <includes refid="qgsexpressionnodeimpl_8h" local="no">qgsexpressionnodeimpl.h</includes>
    <innerclass refid="classQgsExpressionNodeCondition_1_1WhenThen" prot="public">QgsExpressionNodeCondition::WhenThen</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classQgsExpressionNodeCondition_1a35fb014ccf3499d55db73b2a6667aa93" prot="public" static="no">
        <type>QList&lt; <ref refid="classQgsExpressionNodeCondition_1_1WhenThen" kindref="compound">QgsExpressionNodeCondition::WhenThen</ref> * &gt;</type>
        <definition>typedef QList&lt;QgsExpressionNodeCondition::WhenThen *&gt; QgsExpressionNodeCondition::WhenThenList</definition>
        <argsstring></argsstring>
        <name>WhenThenList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="490" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsExpressionNodeCondition_1a455a7706d4b3916298cc03994f091de9" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsExpressionNodeCondition_1a35fb014ccf3499d55db73b2a6667aa93" kindref="member">WhenThenList</ref></type>
        <definition>WhenThenList QgsExpressionNodeCondition::mConditions</definition>
        <argsstring></argsstring>
        <name>mConditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="535" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionNodeCondition_1a17742f07e2b1059cc972eea1ea9e1503" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
        <definition>QgsExpressionNode* QgsExpressionNodeCondition::mElseExp</definition>
        <argsstring></argsstring>
        <name>mElseExp</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="536" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1a54dd8f2b135411e37a417937bbe89e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionNodeCondition::QgsExpressionNodeCondition</definition>
        <argsstring>(QgsExpressionNodeCondition::WhenThenList *conditions, QgsExpressionNode *elseExp=nullptr)</argsstring>
        <name>QgsExpressionNodeCondition</name>
        <param>
          <type><ref refid="classQgsExpressionNodeCondition_1a35fb014ccf3499d55db73b2a6667aa93" kindref="member">QgsExpressionNodeCondition::WhenThenList</ref> *</type>
          <declname>conditions</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
          <declname>elseExp</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Create a new node with the given list of <emphasis>conditions</emphasis> and an optional <emphasis>elseExp</emphasis> expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="495" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1324" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1a14fa928e07e4dc9e3ab7e136d966efef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionNodeCondition::QgsExpressionNodeCondition</definition>
        <argsstring>(const QgsExpressionNodeCondition::WhenThenList &amp;conditions, QgsExpressionNode *elseExp=nullptr)</argsstring>
        <name>QgsExpressionNodeCondition</name>
        <param>
          <type>const <ref refid="classQgsExpressionNodeCondition_1a35fb014ccf3499d55db73b2a6667aa93" kindref="member">QgsExpressionNodeCondition::WhenThenList</ref> &amp;</type>
          <declname>conditions</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
          <declname>elseExp</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Create a new node with the given list of <emphasis>conditions</emphasis> and an optional <emphasis>elseExp</emphasis> expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="500" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="500" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1af8940b466bcea4719c528843e921896c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionNodeCondition::~QgsExpressionNodeCondition</definition>
        <argsstring>() override</argsstring>
        <name>~QgsExpressionNodeCondition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="505" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1331" bodyend="1335"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1ae807e2c2b4176822bafa4a6f5f18f40a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
        <definition>QgsExpressionNode * QgsExpressionNodeCondition::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classQgsExpressionNode_1aef7cfdb7ec3109244fc357e15d0dc75b">clone</reimplements>
        <briefdescription>
<para>Generate a clone of this node. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership is transferred to the caller.</para><para><simplesect kind="return"><para>a deep copy of this node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="531" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1467" bodyend="1476"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1af0e09b001b301568dc4decf3026c7898" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsExpressionNodeCondition_1a35fb014ccf3499d55db73b2a6667aa93" kindref="member">WhenThenList</ref></type>
        <definition>WhenThenList QgsExpressionNodeCondition::conditions</definition>
        <argsstring>() const</argsstring>
        <name>conditions</name>
        <briefdescription>
<para>The list of WHEN THEN expression parts of the expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The list of WHEN THEN expression parts of the expression. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="516" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="516" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1ab42a59113c07cbfc3a41846507d059f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsExpressionNodeCondition::dump</definition>
        <argsstring>() const override</argsstring>
        <name>dump</name>
        <reimplements refid="classQgsExpressionNode_1a0c72a75b7a531593d71594bfebf5f932">dump</reimplements>
        <briefdescription>
<para>Dump this node into a serialized (part) of an expression. </para>        </briefdescription>
        <detaileddescription>
<para>The returned expression does not necessarily literally match the original expression, it&apos;s just guaranteed to behave the same way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="510" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1385" bodyend="1396"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1ab429ad24afd4abf032e2761d3cdfb596" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
        <definition>QgsExpressionNode* QgsExpressionNodeCondition::elseExp</definition>
        <argsstring>() const</argsstring>
        <name>elseExp</name>
        <briefdescription>
<para>The ELSE expression used for the condition. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The ELSE expression used for the condition. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="522" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="522" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1acc6683ee2bc0df83ffa7480230c50fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsExpressionNodeCondition::evalNode</definition>
        <argsstring>(QgsExpression *parent, const QgsExpressionContext *context) override</argsstring>
        <name>evalNode</name>
        <reimplements refid="classQgsExpressionNode_1ab20c45f2f72c5fd5c8489449c00fdcc7">evalNode</reimplements>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Abstract virtual eval method Errors are reported to the parent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="508" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1342" bodyend="1366"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1acc88f12a9697cb8c1657076e87747531" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionNodeCondition::isStatic</definition>
        <argsstring>(QgsExpression *parent, const QgsExpressionContext *context) const override</argsstring>
        <name>isStatic</name>
        <reimplements refid="classQgsExpressionNode_1a3033cb76fe3df0170c5852c7ea024e2b">isStatic</reimplements>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns true if this node can be evaluated for a static value. </para>        </briefdescription>
        <detaileddescription>
<para>This is used during the <ref refid="classQgsExpressionNode_1a3b931e8f7aab4e96979f9f959d80a5d7" kindref="member">prepare()</ref> step and in case it returns true, the value of this node will already be evaluated and the result cached (and therefore not re-evaluated in subsequent calls to <ref refid="classQgsExpressionNode_1a1b79f6a2f67f4a1dcf7ce16bcaab72b9" kindref="member">eval()</ref>). In case this returns true, <ref refid="classQgsExpressionNodeCondition_1aeec0a1b286c909623d0f01a4463d4c62" kindref="member">prepareNode()</ref> will never be called.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="532" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1478" bodyend="1490"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1aa736a94fc634a49eee16534da0eb06c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionNodeCondition::needsGeometry</definition>
        <argsstring>() const override</argsstring>
        <name>needsGeometry</name>
        <reimplements refid="classQgsExpressionNode_1ac7752e64a29acfe6b95a257b5941659c">needsGeometry</reimplements>
        <briefdescription>
<para>Abstract virtual method which returns if the geometry is required to evaluate this expression. </para>        </briefdescription>
        <detaileddescription>
<para>This needs to call <computeroutput><ref refid="classQgsExpressionNodeCondition_1aa736a94fc634a49eee16534da0eb06c5" kindref="member">needsGeometry()</ref></computeroutput> recursively on any child nodes.</para><para><simplesect kind="return"><para>true if a geometry is required to evaluate this expression </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="530" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1455" bodyend="1465"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1afb76da28ed10a5d0c1677234048f6093" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QList&lt; const <ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> * &gt;</type>
        <definition>QList&lt; const QgsExpressionNode * &gt; QgsExpressionNodeCondition::nodes</definition>
        <argsstring>() const override</argsstring>
        <name>nodes</name>
        <reimplements refid="classQgsExpressionNode_1a09383975a4b34f1520166f217b1f804e">nodes</reimplements>
        <briefdescription>
<para>Returns a list of all nodes which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="528" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1440" bodyend="1453"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1ada87d095062250e336a2e7bb4fc2a7e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3" kindref="member">QgsExpressionNode::NodeType</ref></type>
        <definition>QgsExpressionNode::NodeType QgsExpressionNodeCondition::nodeType</definition>
        <argsstring>() const override</argsstring>
        <name>nodeType</name>
        <reimplements refid="classQgsExpressionNode_1a532476efe2a5dc3c189769de3c513b0b">nodeType</reimplements>
        <briefdescription>
<para>Gets the type of this node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of this node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="507" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1337" bodyend="1340"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1aeec0a1b286c909623d0f01a4463d4c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionNodeCondition::prepareNode</definition>
        <argsstring>(QgsExpression *parent, const QgsExpressionContext *context) override</argsstring>
        <name>prepareNode</name>
        <reimplements refid="classQgsExpressionNode_1a54fb196e3071b648bd72fb2eec2802a0">prepareNode</reimplements>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Abstract virtual preparation method Errors are reported to the parent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="509" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1368" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1aff3f3763b5a08a8ca5e0932de18168ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpressionNodeCondition::referencedColumns</definition>
        <argsstring>() const override</argsstring>
        <name>referencedColumns</name>
        <reimplements refid="classQgsExpressionNode_1aa4c548e3c817d09afb1e5b69273fbf15">referencedColumns</reimplements>
        <briefdescription>
<para>Abstract virtual method which returns a list of columns required to evaluate this node. </para>        </briefdescription>
        <detaileddescription>
<para>When reimplementing this, you need to return any column that is required to evaluate this node and in addition recursively collect all the columns required to evaluate child nodes.</para><para><simplesect kind="return"><para>A list of columns required to evaluate this expression </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="524" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1398" bodyend="1410"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1af76896036a50a999476f9baf608810b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpressionNodeCondition::referencedFunctions</definition>
        <argsstring>() const override</argsstring>
        <name>referencedFunctions</name>
        <reimplements refid="classQgsExpressionNode_1adea974442757d76c919e34c44bc431ec">referencedFunctions</reimplements>
        <briefdescription>
<para>Returns a set of all functions which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="526" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1426" bodyend="1438"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeCondition_1a681fa684caa0df19d17280148239e1bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpressionNodeCondition::referencedVariables</definition>
        <argsstring>() const override</argsstring>
        <name>referencedVariables</name>
        <reimplements refid="classQgsExpressionNode_1ae9bf72613241511dc67c62d5e47e8bd4">referencedVariables</reimplements>
        <briefdescription>
<para>Returns a set of all variables which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="525" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1412" bodyend="1424"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An expression node for CASE WHEN clauses. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2892">
        <label>QgsExpressionNode</label>
        <link refid="classQgsExpressionNode"/>
      </node>
      <node id="2891">
        <label>QgsExpressionNodeCondition</label>
        <link refid="classQgsExpressionNodeCondition"/>
        <childnode refid="2892" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2894">
        <label>QgsExpressionNode</label>
        <link refid="classQgsExpressionNode"/>
      </node>
      <node id="2893">
        <label>QgsExpressionNodeCondition</label>
        <link refid="classQgsExpressionNodeCondition"/>
        <childnode refid="2894" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="441" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="440" bodyend="537"/>
    <listofallmembers>
      <member refid="classQgsExpressionNodeCondition_1ae807e2c2b4176822bafa4a6f5f18f40a" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>clone</name></member>
      <member refid="classQgsExpressionNode_1acfa09f97a4345faf4dbe781982dfd025" prot="protected" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>cloneTo</name></member>
      <member refid="classQgsExpressionNodeCondition_1af0e09b001b301568dc4decf3026c7898" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>conditions</name></member>
      <member refid="classQgsExpressionNodeCondition_1ab42a59113c07cbfc3a41846507d059f0" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>dump</name></member>
      <member refid="classQgsExpressionNodeCondition_1ab429ad24afd4abf032e2761d3cdfb596" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>elseExp</name></member>
      <member refid="classQgsExpressionNode_1a1b79f6a2f67f4a1dcf7ce16bcaab72b9" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>eval</name></member>
      <member refid="classQgsExpressionNodeCondition_1acc6683ee2bc0df83ffa7480230c50fde" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>evalNode</name></member>
      <member refid="classQgsExpressionNodeCondition_1acc88f12a9697cb8c1657076e87747531" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>isStatic</name></member>
      <member refid="classQgsExpressionNodeCondition_1a455a7706d4b3916298cc03994f091de9" prot="private" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>mConditions</name></member>
      <member refid="classQgsExpressionNodeCondition_1a17742f07e2b1059cc972eea1ea9e1503" prot="private" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>mElseExp</name></member>
      <member refid="classQgsExpressionNodeCondition_1aa736a94fc634a49eee16534da0eb06c5" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>needsGeometry</name></member>
      <member refid="classQgsExpressionNodeCondition_1afb76da28ed10a5d0c1677234048f6093" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>nodes</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>NodeType</name></member>
      <member refid="classQgsExpressionNodeCondition_1ada87d095062250e336a2e7bb4fc2a7e7" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>nodeType</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3aeacda25c3654ea68ef25f2ba10bb2725" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>ntBinaryOperator</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3ab2fd59a8c005277d0878de1ddb3a62b6" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>ntColumnRef</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3a7588318074e2a4470a29a73bd5e49277" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>ntCondition</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3a70130329d2d32daf35a359e3e869cb9b" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>ntFunction</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3aec300d86abb3213d2ca8cdbc678f8f88" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>ntIndexOperator</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3aaa86a394a0c5c995e853bb8c210c3c5f" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>ntInOperator</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3ac96e6246304179f9d468d8ec42f650c1" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>ntLiteral</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3a73b2ff34f88301e39001e90cfbaa0bdb" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>ntUnaryOperator</name></member>
      <member refid="classQgsExpressionNode_1adf5ba97236ccdf1c095103eec9f86d26" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>parserFirstColumn</name></member>
      <member refid="classQgsExpressionNode_1ac54f72bcdc4736f54a3640b7cd253cae" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>parserFirstLine</name></member>
      <member refid="classQgsExpressionNode_1acfdf4ea6895801be88b56a945243c8b8" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>parserLastColumn</name></member>
      <member refid="classQgsExpressionNode_1ac7062639325076c5118cbc8f0e124580" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>parserLastLine</name></member>
      <member refid="classQgsExpressionNode_1a3b931e8f7aab4e96979f9f959d80a5d7" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>prepare</name></member>
      <member refid="classQgsExpressionNodeCondition_1aeec0a1b286c909623d0f01a4463d4c62" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>prepareNode</name></member>
      <member refid="classQgsExpressionNodeCondition_1a54dd8f2b135411e37a417937bbe89e65" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>QgsExpressionNodeCondition</name></member>
      <member refid="classQgsExpressionNodeCondition_1a14fa928e07e4dc9e3ab7e136d966efef" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>QgsExpressionNodeCondition</name></member>
      <member refid="classQgsExpressionNodeCondition_1aff3f3763b5a08a8ca5e0932de18168ac" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>referencedColumns</name></member>
      <member refid="classQgsExpressionNodeCondition_1af76896036a50a999476f9baf608810b2" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>referencedFunctions</name></member>
      <member refid="classQgsExpressionNodeCondition_1a681fa684caa0df19d17280148239e1bf" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>referencedVariables</name></member>
      <member refid="classQgsExpressionNodeCondition_1a35fb014ccf3499d55db73b2a6667aa93" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>WhenThenList</name></member>
      <member refid="classQgsExpressionNode_1a8f06aaa5e0846f17de3ec9ba157c1e77" prot="public" virt="virtual"><scope>QgsExpressionNodeCondition</scope><name>~QgsExpressionNode</name></member>
      <member refid="classQgsExpressionNodeCondition_1af8940b466bcea4719c528843e921896c" prot="public" virt="non-virtual"><scope>QgsExpressionNodeCondition</scope><name>~QgsExpressionNodeCondition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
