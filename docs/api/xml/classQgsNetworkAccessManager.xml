<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsNetworkAccessManager" kind="class" language="C++" prot="public">
    <compoundname>QgsNetworkAccessManager</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QNetworkAccessManager</basecompoundref>
    <includes refid="qgsnetworkaccessmanager_8h" local="no">qgsnetworkaccessmanager.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsNetworkAccessManager_1a4d23c44c2918fb40e0a0de5c11e0de2e" prot="private" static="no" mutable="no">
        <type>QStringList</type>
        <definition>QStringList QgsNetworkAccessManager::mExcludedURLs</definition>
        <argsstring></argsstring>
        <name>mExcludedURLs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="125" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsNetworkAccessManager_1acdb93e2bdf1de7361d5aa76671ba611a" prot="private" static="no" mutable="no">
        <type>QNetworkProxy</type>
        <definition>QNetworkProxy QgsNetworkAccessManager::mFallbackProxy</definition>
        <argsstring></argsstring>
        <name>mFallbackProxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="124" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsNetworkAccessManager_1a804f5afaf50d06804f98257a9e3bb213" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsNetworkAccessManager::mInitialized</definition>
        <argsstring></argsstring>
        <name>mInitialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="127" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsNetworkAccessManager_1a4cd2838b96902b39eba6875589d4b53d" prot="private" static="no" mutable="no">
        <type>QList&lt; QNetworkProxyFactory * &gt;</type>
        <definition>QList&lt;QNetworkProxyFactory *&gt; QgsNetworkAccessManager::mProxyFactories</definition>
        <argsstring></argsstring>
        <name>mProxyFactories</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="123" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsNetworkAccessManager_1a9425500ac8b91cbc74f787c17543afeb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsNetworkAccessManager::mUseSystemProxy</definition>
        <argsstring></argsstring>
        <name>mUseSystemProxy</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="126" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classQgsNetworkAccessManager_1a12f71fc9a3a259409d1430c1e8404e49" prot="private" static="yes" mutable="no">
        <type><ref refid="classQgsNetworkAccessManager" kindref="compound">QgsNetworkAccessManager</ref> *</type>
        <definition>QgsNetworkAccessManager * QgsNetworkAccessManager::sMainNAM</definition>
        <argsstring></argsstring>
        <name>sMainNAM</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="128" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsNetworkAccessManager_1a66345a869d73fde7134190fbe6558677" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QNetworkRequest::CacheLoadControl</type>
        <definition>QNetworkRequest::CacheLoadControl QgsNetworkAccessManager::cacheLoadControlFromName</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>cacheLoadControlFromName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets QNetworkRequest::CacheLoadControl from name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="97" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="263" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkAccessManager_1a351362e0dd1e1b6addf7b00931a50e37" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsNetworkAccessManager::cacheLoadControlName</definition>
        <argsstring>(QNetworkRequest::CacheLoadControl control)</argsstring>
        <name>cacheLoadControlName</name>
        <param>
          <type>QNetworkRequest::CacheLoadControl</type>
          <declname>control</declname>
        </param>
        <briefdescription>
<para>Gets name for QNetworkRequest::CacheLoadControl. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="94" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="245" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkAccessManager_1ad6744b4063755b69e2e071ab23efa0eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsNetworkAccessManager" kindref="compound">QgsNetworkAccessManager</ref> *</type>
        <definition>QgsNetworkAccessManager * QgsNetworkAccessManager::instance</definition>
        <argsstring>(Qt::ConnectionType connectionType=Qt::BlockingQueuedConnection)</argsstring>
        <name>instance</name>
        <param>
          <type>Qt::ConnectionType</type>
          <declname>connectionType</declname>
          <defval>Qt::BlockingQueuedConnection</defval>
        </param>
        <briefdescription>
<para>Returns a pointer to the active <ref refid="classQgsNetworkAccessManager" kindref="compound">QgsNetworkAccessManager</ref> for the current thread. </para>        </briefdescription>
        <detaileddescription>
<para>With the <emphasis>connectionType</emphasis> parameter it is possible to setup the default connection type that is used to handle signals that might require user interaction and therefore need to be handled on the main thread. See in-depth discussion below.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionType</parametername>
</parameternamelist>
<parameterdescription>
<para>In most cases the default of using a <computeroutput>Qt::BlockingQueuedConnection</computeroutput> is ok, to make a background thread wait for the main thread to answer such a request is fine and anything else is dangerous. However, in case the request was started on the main thread, one should execute a local event loop in a helper thread and freeze the main thread for the duration of the download. In this case, if an authentication request is sent from the background thread network access manager, the background thread should be blocked, the main thread be woken up, processEvents() executed once, the main thread frozen again and the background thread continued. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="71" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="105" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsNetworkAccessManager_1a71b3b410733dcf4d0b65a53ffe92ebbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsNetworkAccessManager::QgsNetworkAccessManager</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>QgsNetworkAccessManager</name>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="73" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkAccessManager_1ad4261cdbb8cb84c9c07b064822b0a85b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsNetworkAccessManager::excludeList</definition>
        <argsstring>() const</argsstring>
        <name>excludeList</name>
        <briefdescription>
<para>retrieve exclude list (urls shouldn&apos;t use the fallback proxy) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="88" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkAccessManager_1a94c447d9a3f2314e8179f36bedd6bebb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QNetworkProxy &amp;</type>
        <definition>const QNetworkProxy &amp; QgsNetworkAccessManager::fallbackProxy</definition>
        <argsstring>() const</argsstring>
        <name>fallbackProxy</name>
        <briefdescription>
<para>retrieve fall back proxy (for urls that no factory returned proxies for) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="85" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkAccessManager_1a140f17ffa9ab626900b14c3111210890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsNetworkAccessManager::insertProxyFactory</definition>
        <argsstring>(QNetworkProxyFactory *factory)</argsstring>
        <name>insertProxyFactory</name>
        <param>
          <type>QNetworkProxyFactory *</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
<para>insert a factory into the proxy factories list </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="76" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkAccessManager_1a1da4878f8a5385f80e8d792074232af6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; QNetworkProxyFactory * &gt;</type>
        <definition>const QList&lt; QNetworkProxyFactory * &gt; QgsNetworkAccessManager::proxyFactories</definition>
        <argsstring>() const</argsstring>
        <name>proxyFactories</name>
        <briefdescription>
<para>retrieve proxy factory list </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="82" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkAccessManager_1ae1610376d4eda5a97f42310508f0754f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsNetworkAccessManager::removeProxyFactory</definition>
        <argsstring>(QNetworkProxyFactory *factory)</argsstring>
        <name>removeProxyFactory</name>
        <param>
          <type>QNetworkProxyFactory *</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
<para>remove a factory from the proxy factories list </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="79" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkAccessManager_1ad1d70c23f04fbbcd30d6ff151af8ca18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsNetworkAccessManager::setFallbackProxyAndExcludes</definition>
        <argsstring>(const QNetworkProxy &amp;proxy, const QStringList &amp;excludes)</argsstring>
        <name>setFallbackProxyAndExcludes</name>
        <param>
          <type>const QNetworkProxy &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>const QStringList &amp;</type>
          <declname>excludes</declname>
        </param>
        <briefdescription>
<para>Sets fallback proxy and URL that shouldn&apos;t use it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="91" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="150" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkAccessManager_1aafaa838b77b2b59b214125f5e0d5237d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsNetworkAccessManager::setupDefaultProxyAndCache</definition>
        <argsstring>(Qt::ConnectionType connectionType=Qt::BlockingQueuedConnection)</argsstring>
        <name>setupDefaultProxyAndCache</name>
        <param>
          <type>Qt::ConnectionType</type>
          <declname>connectionType</declname>
          <defval>Qt::BlockingQueuedConnection</defval>
        </param>
        <briefdescription>
<para>Setup the <ref refid="classQgsNetworkAccessManager" kindref="compound">QgsNetworkAccessManager</ref> (NAM) according to the user&apos;s settings. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>connectionType</emphasis> sets up the default connection type that is used to handle signals that might require user interaction and therefore need to be handled on the main thread. See in-depth discussion in the documentation for the constructor of this class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="106" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="284" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkAccessManager_1afc1db49affa3e493abeb38f5d09b1b63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsNetworkAccessManager::useSystemProxy</definition>
        <argsstring>() const</argsstring>
        <name>useSystemProxy</name>
        <briefdescription>
<para>Returns whether the system proxy should be used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="109" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" bodystart="109" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classQgsNetworkAccessManager_1a195d9194f29f33177a6a7c4655287dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsNetworkAccessManager::requestAboutToBeCreated</definition>
        <argsstring>(QNetworkAccessManager::Operation, const QNetworkRequest &amp;, QIODevice *)</argsstring>
        <name>requestAboutToBeCreated</name>
        <param>
          <type>QNetworkAccessManager::Operation</type>
        </param>
        <param>
          <type>const QNetworkRequest &amp;</type>
        </param>
        <param>
          <type>QIODevice *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsNetworkAccessManager_1a4e0d48b0ecb7106ce298c431f8bd6e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsNetworkAccessManager::requestCreated</definition>
        <argsstring>(QNetworkReply *)</argsstring>
        <name>requestCreated</name>
        <param>
          <type>QNetworkReply *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsNetworkAccessManager_1a2fd67f91c244b80f0fcce65a62db9fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsNetworkAccessManager::requestTimedOut</definition>
        <argsstring>(QNetworkReply *)</argsstring>
        <name>requestTimedOut</name>
        <param>
          <type>QNetworkReply *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="114" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-slot">
      <memberdef kind="slot" id="classQgsNetworkAccessManager_1a03eaa5f272a969d857f3c866bb5fb449" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsNetworkAccessManager::abortRequest</definition>
        <argsstring>()</argsstring>
        <name>abortRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="117" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="228" bodyend="242"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsNetworkAccessManager_1afe914729fee9ea17078d93e4479c0f9d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QNetworkReply *</type>
        <definition>QNetworkReply * QgsNetworkAccessManager::createRequest</definition>
        <argsstring>(QNetworkAccessManager::Operation op, const QNetworkRequest &amp;req, QIODevice *outgoingData=nullptr) override</argsstring>
        <name>createRequest</name>
        <param>
          <type>QNetworkAccessManager::Operation</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const QNetworkRequest &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>QIODevice *</type>
          <declname>outgoingData</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="120" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.cpp" bodystart="169" bodyend="226"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>network access manager for QGIS</para><para>This class implements the QGIS network access manager. </para>    </briefdescription>
    <detaileddescription>
<para>It&apos;s a singleton that can be used across QGIS.</para><para>Plugins can insert proxy factories and thereby redirect requests to individual proxies.</para><para>If no proxy factories are there or none returns a proxy for an URL a fallback proxy can be set. There&apos;s also a exclude list that defines URLs that the fallback proxy should not be used for, then no proxy will be used.</para><para><simplesect kind="since"><para>1.5 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6045">
        <label>QgsNetworkAccessManager</label>
        <link refid="classQgsNetworkAccessManager"/>
        <childnode refid="6046" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6046">
        <label>QNetworkAccessManager</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6047">
        <label>QgsNetworkAccessManager</label>
        <link refid="classQgsNetworkAccessManager"/>
        <childnode refid="6048" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6048">
        <label>QNetworkAccessManager</label>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" line="48" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkaccessmanager.h" bodystart="47" bodyend="129"/>
    <listofallmembers>
      <member refid="classQgsNetworkAccessManager_1a03eaa5f272a969d857f3c866bb5fb449" prot="private" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>abortRequest</name></member>
      <member refid="classQgsNetworkAccessManager_1a66345a869d73fde7134190fbe6558677" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>cacheLoadControlFromName</name></member>
      <member refid="classQgsNetworkAccessManager_1a351362e0dd1e1b6addf7b00931a50e37" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>cacheLoadControlName</name></member>
      <member refid="classQgsNetworkAccessManager_1afe914729fee9ea17078d93e4479c0f9d" prot="protected" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>createRequest</name></member>
      <member refid="classQgsNetworkAccessManager_1ad4261cdbb8cb84c9c07b064822b0a85b" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>excludeList</name></member>
      <member refid="classQgsNetworkAccessManager_1a94c447d9a3f2314e8179f36bedd6bebb" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>fallbackProxy</name></member>
      <member refid="classQgsNetworkAccessManager_1a140f17ffa9ab626900b14c3111210890" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>insertProxyFactory</name></member>
      <member refid="classQgsNetworkAccessManager_1ad6744b4063755b69e2e071ab23efa0eb" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>instance</name></member>
      <member refid="classQgsNetworkAccessManager_1a4d23c44c2918fb40e0a0de5c11e0de2e" prot="private" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>mExcludedURLs</name></member>
      <member refid="classQgsNetworkAccessManager_1acdb93e2bdf1de7361d5aa76671ba611a" prot="private" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>mFallbackProxy</name></member>
      <member refid="classQgsNetworkAccessManager_1a804f5afaf50d06804f98257a9e3bb213" prot="private" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>mInitialized</name></member>
      <member refid="classQgsNetworkAccessManager_1a4cd2838b96902b39eba6875589d4b53d" prot="private" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>mProxyFactories</name></member>
      <member refid="classQgsNetworkAccessManager_1a9425500ac8b91cbc74f787c17543afeb" prot="private" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>mUseSystemProxy</name></member>
      <member refid="classQgsNetworkAccessManager_1a1da4878f8a5385f80e8d792074232af6" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>proxyFactories</name></member>
      <member refid="classQgsNetworkAccessManager_1a71b3b410733dcf4d0b65a53ffe92ebbc" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>QgsNetworkAccessManager</name></member>
      <member refid="classQgsNetworkAccessManager_1ae1610376d4eda5a97f42310508f0754f" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>removeProxyFactory</name></member>
      <member refid="classQgsNetworkAccessManager_1a195d9194f29f33177a6a7c4655287dcf" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>requestAboutToBeCreated</name></member>
      <member refid="classQgsNetworkAccessManager_1a4e0d48b0ecb7106ce298c431f8bd6e15" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>requestCreated</name></member>
      <member refid="classQgsNetworkAccessManager_1a2fd67f91c244b80f0fcce65a62db9fc2" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>requestTimedOut</name></member>
      <member refid="classQgsNetworkAccessManager_1ad1d70c23f04fbbcd30d6ff151af8ca18" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>setFallbackProxyAndExcludes</name></member>
      <member refid="classQgsNetworkAccessManager_1aafaa838b77b2b59b214125f5e0d5237d" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>setupDefaultProxyAndCache</name></member>
      <member refid="classQgsNetworkAccessManager_1a12f71fc9a3a259409d1430c1e8404e49" prot="private" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>sMainNAM</name></member>
      <member refid="classQgsNetworkAccessManager_1afc1db49affa3e493abeb38f5d09b1b63" prot="public" virt="non-virtual"><scope>QgsNetworkAccessManager</scope><name>useSystemProxy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
