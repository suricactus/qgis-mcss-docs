<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsPropertyCollectionStack" kind="class" language="C++" prot="public">
    <compoundname>QgsPropertyCollectionStack</compoundname>
    <basecompoundref refid="classQgsAbstractPropertyCollection" prot="public" virt="non-virtual">QgsAbstractPropertyCollection</basecompoundref>
    <includes refid="qgspropertycollection_8h" local="no">qgspropertycollection.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsPropertyCollectionStack_1a7f0579da6671dc4d82fbd340888118ea" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> *&gt;</type>
        <definition>QList&lt; QgsPropertyCollection * &gt; QgsPropertyCollectionStack::mStack</definition>
        <argsstring></argsstring>
        <name>mStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="481" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1a478da901649a8ac9ebb3b9af32e97398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPropertyCollectionStack::QgsPropertyCollectionStack</definition>
        <argsstring>()=default</argsstring>
        <name>QgsPropertyCollectionStack</name>
        <briefdescription>
<para>Constructor for <ref refid="classQgsPropertyCollectionStack" kindref="compound">QgsPropertyCollectionStack</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1ad4a6c0999d51b21151be10d9eee5a238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPropertyCollectionStack::QgsPropertyCollectionStack</definition>
        <argsstring>(const QgsPropertyCollectionStack &amp;other)</argsstring>
        <name>QgsPropertyCollectionStack</name>
        <param>
          <type>const <ref refid="classQgsPropertyCollectionStack" kindref="compound">QgsPropertyCollectionStack</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="379" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="364" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1ab6da975b63e41c816ec020a78fcc73c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPropertyCollectionStack::~QgsPropertyCollectionStack</definition>
        <argsstring>() override</argsstring>
        <name>~QgsPropertyCollectionStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="376" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="359" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1a5d5a9ecf6a286051eb84a5ba43eabedc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPropertyCollectionStack::appendCollection</definition>
        <argsstring>(QgsPropertyCollection *collection)</argsstring>
        <name>appendCollection</name>
        <param>
          <type><ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> *</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
<para>Appends a collection to the end of the stack, and transfers ownership of the collection to the stack. </para>        </briefdescription>
        <detaileddescription>
<para>Properties from the newly added collection will take priority over any existing properties with the same name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>collection</parametername>
</parameternamelist>
<parameterdescription>
<para>collection to append. Ownership is transferred to the stack. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="398" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="399" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1a67f6e36a7b24c75c035490689479cbb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> *</type>
        <definition>QgsPropertyCollection * QgsPropertyCollectionStack::at</definition>
        <argsstring>(int index)</argsstring>
        <name>at</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the collection at the corresponding index from the stack. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>position of collection, 0 based </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>collection if one exists at the specified index </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="405" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="404" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1a4b3459f904e5fd0649e8bbf5ded84acd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> *</type>
        <definition>const QgsPropertyCollection * QgsPropertyCollectionStack::at</definition>
        <argsstring>(int index) const</argsstring>
        <name>at</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the collection at the corresponding index from the stack. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>position of collection, 0 based </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>collection if one exists at the specified index </para></simplesect>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="413" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="409" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1ad4b2c799a9aa9bd3737fb60e0abe52db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPropertyCollectionStack::clear</definition>
        <argsstring>() override</argsstring>
        <name>clear</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a84cf4043db5b88bc0008d7c19c194639">clear</reimplements>
        <briefdescription>
<para>Removes all collections from the stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="391" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="393" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1ae111ea6e68a42ba6cf8353c1bb271a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> *</type>
        <definition>QgsPropertyCollection * QgsPropertyCollectionStack::collection</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>collection</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the first collection with a matching name from the stack. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of collection to find </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>collection if one exists with the specified name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="420" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="414" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1a18003ca97af5b61f3619db886934a4f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsPropertyCollectionStack::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <briefdescription>
<para>Returns the number of collections contained within the stack. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="386" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1aa50130ccf45aeaa403f0f662c8e17f9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollectionStack::hasActiveProperties</definition>
        <argsstring>() const override</argsstring>
        <name>hasActiveProperties</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1aac16f8363300a66598266fdc550711d9">hasActiveProperties</reimplements>
        <briefdescription>
<para>Returns true if the collection has any active properties, or false if all properties within the collection are deactivated. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPropertyCollectionStack_1ada1779a3b9fb34f1f03d67ce33924993" kindref="member">isActive()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPropertyCollectionStack_1ae4acafd728c1ffc1d34829809222bfc8" kindref="member">hasDynamicProperties()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="428" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="424" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1ae4acafd728c1ffc1d34829809222bfc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollectionStack::hasDynamicProperties</definition>
        <argsstring>() const override</argsstring>
        <name>hasDynamicProperties</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1ad63932a119c9161052949f80e4aa9b72">hasDynamicProperties</reimplements>
        <briefdescription>
<para>Returns true if the collection has any active, non-static properties, or false if either all non-static properties within the collection are deactivated or if the collection only contains static properties. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPropertyCollectionStack_1aa50130ccf45aeaa403f0f662c8e17f9f" kindref="member">hasActiveProperties()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="435" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="434" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1a54bb33fe86505596681a755f59f91e42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollectionStack::hasProperty</definition>
        <argsstring>(int key) const override</argsstring>
        <name>hasProperty</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a2dd48b0c0fc917034fbe85cfb42cb8f9">hasProperty</reimplements>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns true if the collection contains a property with the specified key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsPropertyCollectionStack_1ad02b87ed8994e54c394612bb9a8e2fc7" kindref="member">property()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="473" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="506" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1ada1779a3b9fb34f1f03d67ce33924993" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollectionStack::isActive</definition>
        <argsstring>(int key) const override</argsstring>
        <name>isActive</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a39c5569f5ed2905f4ae9e62b1cd5a97c">isActive</reimplements>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns true if the stack contains an active property with the specified key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to test. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsPropertyCollectionStack_1aa50130ccf45aeaa403f0f662c8e17f9f" kindref="member">hasActiveProperties()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="443" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="444" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1aced9cac862336ece2d82ba779511a78a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollectionStack::loadVariant</definition>
        <argsstring>(const QVariant &amp;collection, const QgsPropertiesDefinition &amp;definitions) override</argsstring>
        <name>loadVariant</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1aa147e983f4c75fd920bd42d2828603e9">loadVariant</reimplements>
        <param>
          <type>const QVariant &amp;</type>
          <declname>configuration</declname>
        </param>
        <param>
          <type>const <ref refid="qgspropertycollection_8h_1a55b05677f78795114fa12c8fe7356db6" kindref="member">QgsPropertiesDefinition</ref> &amp;</type>
          <declname>definitions</declname>
        </param>
        <briefdescription>
<para>Loads this property collection from a QVariantMap, wrapped in a QVariant. </para>        </briefdescription>
        <detaileddescription>
<para>You can use <ref refid="classQgsXmlUtils_1a78b54d8785573d3ad51566999d7a3884" kindref="member">QgsXmlUtils::readVariant</ref> to save it to an XML document.</para><para><simplesect kind="see"><para><ref refid="classQgsPropertyCollectionStack_1ae78983934843397e5cd09edc5e734534" kindref="member">toVariant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="477" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="534" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1a00f15e4ac674649dcecdd5567f7e32d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPropertyCollectionStack" kindref="compound">QgsPropertyCollectionStack</ref> &amp;</type>
        <definition>QgsPropertyCollectionStack &amp; QgsPropertyCollectionStack::operator=</definition>
        <argsstring>(const QgsPropertyCollectionStack &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsPropertyCollectionStack" kindref="compound">QgsPropertyCollectionStack</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="381" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="375" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1a7bf8ca0b6ec34d54adabf1855e76c652" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollectionStack::prepare</definition>
        <argsstring>(const QgsExpressionContext &amp;context=QgsExpressionContext()) const override</argsstring>
        <name>prepare</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a920cb81a5b99cfa6237c86402bb14b4c">prepare</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>()</defval>
        </param>
        <briefdescription>
<para>Prepares the collection against a specified expression context. </para>        </briefdescription>
        <detaileddescription>
<para>Calling prepare before evaluating the collection&apos;s properties multiple times allows precalculation of expensive setup tasks such as parsing expressions. Returns true if preparation was successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="470" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="486" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1ad02b87ed8994e54c394612bb9a8e2fc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsProperty" kindref="compound">QgsProperty</ref></type>
        <definition>QgsProperty QgsPropertyCollectionStack::property</definition>
        <argsstring>(int key) const override</argsstring>
        <name>property</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a50d7627921b3cdc734708ff471ba46b2">property</reimplements>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns the highest priority property with a matching key from within the stack. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching property, or null if no matching, active property found. </para></simplesect>
<simplesect kind="see"><para>hasActiveProperty() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="452" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="449" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1ab6d4839a8c373c84d27c8d22654bcaf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; int &gt;</type>
        <definition>QSet&lt; int &gt; QgsPropertyCollectionStack::propertyKeys</definition>
        <argsstring>() const override</argsstring>
        <name>propertyKeys</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1aabba89a7b870a6dfd690188d6853f2ac">propertyKeys</reimplements>
        <briefdescription>
<para>Returns a list of property keys contained within the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="472" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="496" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1a36752a203d9a719d568af71bda4aa0da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsPropertyCollectionStack::referencedFields</definition>
        <argsstring>(const QgsExpressionContext &amp;context=QgsExpressionContext()) const override</argsstring>
        <name>referencedFields</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a4627b3aa0a221b112e0dd8c735a63f5e">referencedFields</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>()</defval>
        </param>
        <briefdescription>
<para>Returns the set of any fields referenced by the active properties from the stack. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>expression context the properties will be evaluated against. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="469" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="476" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1ae78983934843397e5cd09edc5e734534" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsPropertyCollectionStack::toVariant</definition>
        <argsstring>(const QgsPropertiesDefinition &amp;definitions) const override</argsstring>
        <name>toVariant</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1aeb3800ad6eb6f4bb842831b14c7f02fa">toVariant</reimplements>
        <param>
          <type>const <ref refid="qgspropertycollection_8h_1a55b05677f78795114fa12c8fe7356db6" kindref="member">QgsPropertiesDefinition</ref> &amp;</type>
          <declname>definitions</declname>
        </param>
        <briefdescription>
<para>Saves this property collection to a QVariantMap, wrapped in a QVariant. </para>        </briefdescription>
        <detaileddescription>
<para>You can use <ref refid="classQgsXmlUtils_1a4192d177c2475a2825cc1ba9972d97b9" kindref="member">QgsXmlUtils::writeVariant</ref> to save it to an XML document.</para><para><simplesect kind="see"><para><ref refid="classQgsPropertyCollectionStack_1aced9cac862336ece2d82ba779511a78a" kindref="member">loadVariant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="475" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="516" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollectionStack_1a2ea3cc352482d59c5046c0ebae836fa5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsPropertyCollectionStack::value</definition>
        <argsstring>(int key, const QgsExpressionContext &amp;context, const QVariant &amp;defaultValue=QVariant()) const override</argsstring>
        <name>value</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a019335a5ad374d375c5c6d40dce06c94">value</reimplements>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>defaultValue</declname>
          <defval>QVariant()</defval>
        </param>
        <briefdescription>
<para>Returns the calculated value of the highest priority property with the specified key from within the stack. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to calculate. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>expression context to evaluate property against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>default value to return if no matching, active property found or if the property value cannot be calculated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated property value, or default value if property could not be evaluated </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="463" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="466" bodyend="474"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An ordered stack of <ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> containers, where collections added later to the stack will take priority over earlier collections. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7318">
        <label>QgsAbstractPropertyCollection</label>
        <link refid="classQgsAbstractPropertyCollection"/>
      </node>
      <node id="7317">
        <label>QgsPropertyCollectionStack</label>
        <link refid="classQgsPropertyCollectionStack"/>
        <childnode refid="7318" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7320">
        <label>QgsAbstractPropertyCollection</label>
        <link refid="classQgsAbstractPropertyCollection"/>
      </node>
      <node id="7319">
        <label>QgsPropertyCollectionStack</label>
        <link refid="classQgsPropertyCollectionStack"/>
        <childnode refid="7320" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="368" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="367" bodyend="483"/>
    <listofallmembers>
      <member refid="classQgsPropertyCollectionStack_1a5d5a9ecf6a286051eb84a5ba43eabedc" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>appendCollection</name></member>
      <member refid="classQgsPropertyCollectionStack_1a67f6e36a7b24c75c035490689479cbb2" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>at</name></member>
      <member refid="classQgsPropertyCollectionStack_1a4b3459f904e5fd0649e8bbf5ded84acd" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>at</name></member>
      <member refid="classQgsPropertyCollectionStack_1ad4b2c799a9aa9bd3737fb60e0abe52db" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>clear</name></member>
      <member refid="classQgsPropertyCollectionStack_1ae111ea6e68a42ba6cf8353c1bb271a2d" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>collection</name></member>
      <member refid="classQgsPropertyCollectionStack_1a18003ca97af5b61f3619db886934a4f5" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>count</name></member>
      <member refid="classQgsPropertyCollectionStack_1aa50130ccf45aeaa403f0f662c8e17f9f" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>hasActiveProperties</name></member>
      <member refid="classQgsPropertyCollectionStack_1ae4acafd728c1ffc1d34829809222bfc8" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>hasDynamicProperties</name></member>
      <member refid="classQgsPropertyCollectionStack_1a54bb33fe86505596681a755f59f91e42" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>hasProperty</name></member>
      <member refid="classQgsPropertyCollectionStack_1ada1779a3b9fb34f1f03d67ce33924993" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>isActive</name></member>
      <member refid="classQgsPropertyCollectionStack_1aced9cac862336ece2d82ba779511a78a" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>loadVariant</name></member>
      <member refid="classQgsPropertyCollectionStack_1a7f0579da6671dc4d82fbd340888118ea" prot="private" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>mStack</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aae99df08fe5b8d30cd1309fb6fe6f47f" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>name</name></member>
      <member refid="classQgsPropertyCollectionStack_1a00f15e4ac674649dcecdd5567f7e32d9" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>operator=</name></member>
      <member refid="classQgsPropertyCollectionStack_1a7bf8ca0b6ec34d54adabf1855e76c652" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>prepare</name></member>
      <member refid="classQgsPropertyCollectionStack_1ad02b87ed8994e54c394612bb9a8e2fc7" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>property</name></member>
      <member refid="classQgsPropertyCollectionStack_1ab6d4839a8c373c84d27c8d22654bcaf1" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>propertyKeys</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a9ac950d71aba3faca73df84d27d17445" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>QgsAbstractPropertyCollection</name></member>
      <member refid="classQgsPropertyCollectionStack_1a478da901649a8ac9ebb3b9af32e97398" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>QgsPropertyCollectionStack</name></member>
      <member refid="classQgsPropertyCollectionStack_1ad4a6c0999d51b21151be10d9eee5a238" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>QgsPropertyCollectionStack</name></member>
      <member refid="classQgsAbstractPropertyCollection_1ab3df675b6cb01963b82dd84f26417ae1" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>readXml</name></member>
      <member refid="classQgsPropertyCollectionStack_1a36752a203d9a719d568af71bda4aa0da" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>referencedFields</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a1c01a41cc99b48d2a1150bfbf661cc56" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>setName</name></member>
      <member refid="classQgsPropertyCollectionStack_1ae78983934843397e5cd09edc5e734534" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>toVariant</name></member>
      <member refid="classQgsPropertyCollectionStack_1a2ea3cc352482d59c5046c0ebae836fa5" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>value</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a57efefb4c0dad49de9854fc7476955b2" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>valueAsBool</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a26635d5d39d88cad06a644656c90fce5" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>valueAsColor</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a8f7248ffb2b0645ec589f5a3d7d7ea89" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>valueAsDouble</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a4fe8018df9c685a0ceb400f990eb29b1" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>valueAsInt</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aceb66fd899863e2f94ddea8685f47945" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>valueAsString</name></member>
      <member refid="classQgsAbstractPropertyCollection_1ae5dc589ec5b5f4864e5f52e7114f9372" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>writeXml</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aeb2b834ea10c36bbf91eff05b4f5d167" prot="public" virt="virtual"><scope>QgsPropertyCollectionStack</scope><name>~QgsAbstractPropertyCollection</name></member>
      <member refid="classQgsPropertyCollectionStack_1ab6da975b63e41c816ec020a78fcc73c7" prot="public" virt="non-virtual"><scope>QgsPropertyCollectionStack</scope><name>~QgsPropertyCollectionStack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
