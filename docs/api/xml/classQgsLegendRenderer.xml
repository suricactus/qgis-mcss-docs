<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsLegendRenderer" kind="class" language="C++" prot="public">
    <compoundname>QgsLegendRenderer</compoundname>
    <includes refid="qgslegendrenderer_8h" local="no">qgslegendrenderer.h</includes>
    <innerclass refid="classQgsLegendRenderer_1_1Atom" prot="private">QgsLegendRenderer::Atom</innerclass>
    <innerclass refid="classQgsLegendRenderer_1_1Nucleon" prot="private">QgsLegendRenderer::Nucleon</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsLegendRenderer_1a9f22a849f0f386ab1cdf4f97a80ccd26" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsLayerTreeModel" kindref="compound">QgsLayerTreeModel</ref> *</type>
        <definition>QgsLayerTreeModel* QgsLegendRenderer::mLegendModel</definition>
        <argsstring></argsstring>
        <name>mLegendModel</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="289" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsLegendRenderer_1a0276e3579606e68d94685d5bfb12f40a" prot="private" static="no" mutable="no">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::mLegendSize</definition>
        <argsstring></argsstring>
        <name>mLegendSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="293" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsLegendRenderer_1a5d6bc1872814cdb9dcbb5746796a3fb7" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsLegendSettings" kindref="compound">QgsLegendSettings</ref></type>
        <definition>QgsLegendSettings QgsLegendRenderer::mSettings</definition>
        <argsstring></argsstring>
        <name>mSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="291" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsLegendRenderer_1a5129784d65f9b4351020e334b87599c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsLegendRenderer::QgsLegendRenderer</definition>
        <argsstring>(QgsLayerTreeModel *legendModel, const QgsLegendSettings &amp;settings)</argsstring>
        <name>QgsLegendRenderer</name>
        <param>
          <type><ref refid="classQgsLayerTreeModel" kindref="compound">QgsLayerTreeModel</ref> *</type>
          <declname>legendModel</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsLegendSettings" kindref="compound">QgsLegendSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsLegendRenderer" kindref="compound">QgsLegendRenderer</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The ownership of the legend model is not changed, and the model must exist for the lifetime of this renderer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="53" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a765ced66ea2e39c323620ec55abca219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLegendRenderer::drawLegend</definition>
        <argsstring>(QPainter *painter)</argsstring>
        <name>drawLegend</name>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
<para>Draws the legend with given <emphasis>painter</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The legend will occupy the area reported in <ref refid="classQgsLegendRenderer_1ab408a9c5d8a3a844a0d08b406b216d8a" kindref="member">legendSize()</ref>. The <emphasis>painter</emphasis> should be scaled beforehand so that units correspond to millimeters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="86" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1ac85b11b90545a7d4dac3c58729805eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLegendRenderer::drawLegend</definition>
        <argsstring>(QgsRenderContext &amp;context)</argsstring>
        <name>drawLegend</name>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Draws the legend using a given render <emphasis>context</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The legend will occupy the area reported in <ref refid="classQgsLegendRenderer_1ab408a9c5d8a3a844a0d08b406b216d8a" kindref="member">legendSize()</ref>.</para><para><simplesect kind="since"><para>QGIS 3.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="93" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="716" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1ab408a9c5d8a3a844a0d08b406b216d8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::legendSize</definition>
        <argsstring>() const</argsstring>
        <name>legendSize</name>
        <briefdescription>
<para>Returns the preferred legend size set by the client. </para>        </briefdescription>
        <detaileddescription>
<para>If the returned size is null, the legend will be drawn with the minimum possible size to fit its content.</para><para><simplesect kind="see"><para><ref refid="classQgsLegendRenderer_1a320aec89975dabe281989a01e0933c98" kindref="member">minimumSize()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLegendRenderer_1a5963336aaf5892ff4b1504f9146ce9cf" kindref="member">setLegendSize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="80" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a320aec89975dabe281989a01e0933c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::minimumSize</definition>
        <argsstring>()</argsstring>
        <name>minimumSize</name>
        <briefdescription>
<para>Runs the layout algorithm and returns the minimum size required for the legend. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsLegendRenderer_1a5963336aaf5892ff4b1504f9146ce9cf" kindref="member">setLegendSize()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLegendRenderer_1ab408a9c5d8a3a844a0d08b406b216d8a" kindref="member">legendSize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="60" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a5963336aaf5892ff4b1504f9146ce9cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLegendRenderer::setLegendSize</definition>
        <argsstring>(QSizeF s)</argsstring>
        <name>setLegendSize</name>
        <param>
          <type>QSizeF</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Sets the preferred resulting legend size. </para>        </briefdescription>
        <detaileddescription>
<para>If the size is null, the legend will be drawn with the minimum possible size to fit its content.</para><para><simplesect kind="see"><para><ref refid="classQgsLegendRenderer_1ab408a9c5d8a3a844a0d08b406b216d8a" kindref="member">legendSize()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLegendRenderer_1a320aec89975dabe281989a01e0933c98" kindref="member">minimumSize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="70" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" bodystart="70" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsLegendRenderer_1a53c6cab280bb64020ff416c143aeb129" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLegendStyle_1acae0c6c735f4cb36f30fc53df74bd84e" kindref="member">QgsLegendStyle::Style</ref></type>
        <definition>QgsLegendStyle::Style QgsLegendRenderer::nodeLegendStyle</definition>
        <argsstring>(QgsLayerTreeNode *node, QgsLayerTreeModel *model)</argsstring>
        <name>nodeLegendStyle</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsLayerTreeModel" kindref="compound">QgsLayerTreeModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Returns the style for the given <emphasis>node</emphasis>, within the specified <emphasis>model</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsLegendRenderer_1a22795c95381dd4200ea18f57c58703b9" kindref="member">setNodeLegendStyle()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="107" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="639" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a22795c95381dd4200ea18f57c58703b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLegendRenderer::setNodeLegendStyle</definition>
        <argsstring>(QgsLayerTreeNode *node, QgsLegendStyle::Style style)</argsstring>
        <name>setNodeLegendStyle</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsLegendStyle_1acae0c6c735f4cb36f30fc53df74bd84e" kindref="member">QgsLegendStyle::Style</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Sets the <emphasis>style</emphasis> of a <emphasis>node</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsLegendRenderer_1a53c6cab280bb64020ff416c143aeb129" kindref="member">nodeLegendStyle()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="100" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="667" bodyend="689"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsLegendRenderer_1a99ebde88bb900cdc70c4bf0e79cd46a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; Atom &gt;</type>
        <definition>QList&lt; QgsLegendRenderer::Atom &gt; QgsLegendRenderer::createAtomList</definition>
        <argsstring>(QgsLayerTreeGroup *parentGroup, bool splitLayer)</argsstring>
        <name>createAtomList</name>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>parentGroup</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>splitLayer</declname>
        </param>
        <briefdescription>
<para>Returns a list of Atoms for the specified <emphasis>parentGroup</emphasis>, respecting the current layer&apos;s splitting settings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="186" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="158" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1af02f17c265b5342cd7cce03d1de1f86d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawAtom</definition>
        <argsstring>(const Atom &amp;atom, QPainter *painter=nullptr, QPointF point=QPointF())</argsstring>
        <name>drawAtom</name>
        <param>
          <type>const Atom &amp;</type>
          <declname>atom</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
          <defval>QPointF()</defval>
        </param>
        <briefdescription>
<para>Draws an <emphasis>atom</emphasis> and return its actual size. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>atom</emphasis> is drawn with the space above it, so that the first atoms in column are all aligned to the same line regardless of their style top spacing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="213" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="472" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1adcae6d69113806828e377d163eb21d88" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawAtom</definition>
        <argsstring>(const Atom &amp;atom, QgsRenderContext *rendercontext, QPointF point=QPointF())</argsstring>
        <name>drawAtom</name>
        <param>
          <type>const Atom &amp;</type>
          <declname>atom</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>rendercontext</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
          <defval>QPointF()</defval>
        </param>
        <briefdescription>
<para>Draws an <emphasis>atom</emphasis> and return its actual size, using the specified render <emphasis>context</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>atom</emphasis> is drawn with the space above it, so that the first atoms in column are all aligned to the same line regardless of their style top spacing.</para><para>If <emphasis>context</emphasis> is nullptr, no painting will be attempted, but the required size will still be calculated and returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="260" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="696" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1ac0f10429f0bd1e60c2e50c2b6ac5a249" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawAtomInternal</definition>
        <argsstring>(const Atom &amp;atom, QgsRenderContext *context, QPainter *painter, QPointF point)</argsstring>
        <name>drawAtomInternal</name>
        <param>
          <type>const Atom &amp;</type>
          <declname>atom</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="297" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="477" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1ab17797ac1b2d03a33b85c829fef288a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawGroupTitle</definition>
        <argsstring>(QgsLayerTreeGroup *nodeGroup, QPainter *painter=nullptr, QPointF point=QPointF())</argsstring>
        <name>drawGroupTitle</name>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>nodeGroup</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
          <defval>QPointF()</defval>
        </param>
        <briefdescription>
<para>Draws a group item. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the size of the title. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="233" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="601" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a2f83247b9f45d51233e83ea4aae49ee2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawGroupTitle</definition>
        <argsstring>(QgsLayerTreeGroup *nodeGroup, QgsRenderContext *context, QPointF point=QPointF())</argsstring>
        <name>drawGroupTitle</name>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>nodeGroup</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
          <defval>QPointF()</defval>
        </param>
        <briefdescription>
<para>Draws a group&apos;s title, using the specified render <emphasis>context</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the size of the title. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="281" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="711" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a597f500d4b7673c99704a828080e3d4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawGroupTitleInternal</definition>
        <argsstring>(QgsLayerTreeGroup *nodeGroup, QgsRenderContext *context, QPainter *painter, QPointF point)</argsstring>
        <name>drawGroupTitleInternal</name>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>nodeGroup</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="300" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="606" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a3a5d73299cad6021da2ffbd40c20c91c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawLayerTitle</definition>
        <argsstring>(QgsLayerTreeLayer *nodeLayer, QPainter *painter=nullptr, QPointF point=QPointF())</argsstring>
        <name>drawLayerTitle</name>
        <param>
          <type><ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> *</type>
          <declname>nodeLayer</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
          <defval>QPointF()</defval>
        </param>
        <briefdescription>
<para>Draws the title of a layer, given a <ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref>, and a destination <emphasis>painter</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the size of the title.</para><para>The <emphasis>painter</emphasis> may be nullptr, in which case on the size is calculated and no painting is attempted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="227" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="558" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a26d00816742f9a194133e6c78a12958d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawLayerTitle</definition>
        <argsstring>(QgsLayerTreeLayer *nodeLayer, QgsRenderContext *context, QPointF point=QPointF())</argsstring>
        <name>drawLayerTitle</name>
        <param>
          <type><ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> *</type>
          <declname>nodeLayer</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
          <defval>QPointF()</defval>
        </param>
        <briefdescription>
<para>Draws the title of a layer, given a <ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref>, and a destination render <emphasis>context</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the size of the title.</para><para>The <emphasis>context</emphasis> may be nullptr, in which case on the size is calculated and no painting is attempted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="274" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="706" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1aa1e4f191fa1b4f15a9b94723b6172466" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawLayerTitleInternal</definition>
        <argsstring>(QgsLayerTreeLayer *nodeLayer, QgsRenderContext *context, QPainter *painter, QPointF point)</argsstring>
        <name>drawLayerTitleInternal</name>
        <param>
          <type><ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> *</type>
          <declname>nodeLayer</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="299" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="563" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a0fea730004d48db73c971965929b32cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Nucleon</type>
        <definition>QgsLegendRenderer::Nucleon QgsLegendRenderer::drawSymbolItem</definition>
        <argsstring>(QgsLayerTreeModelLegendNode *symbolItem, QPainter *painter=nullptr, QPointF point=QPointF(), double labelXOffset=0)</argsstring>
        <name>drawSymbolItem</name>
        <param>
          <type><ref refid="classQgsLayerTreeModelLegendNode" kindref="compound">QgsLayerTreeModelLegendNode</ref> *</type>
          <declname>symbolItem</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
          <defval>QPointF()</defval>
        </param>
        <param>
          <type>double</type>
          <declname>labelXOffset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draws the symbol of a given symbol <ref refid="classQgsLayerTreeModelLegendNode" kindref="compound">QgsLayerTreeModelLegendNode</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="218" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="531" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1af203224371977f67c573de7da8a6540f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Nucleon</type>
        <definition>QgsLegendRenderer::Nucleon QgsLegendRenderer::drawSymbolItem</definition>
        <argsstring>(QgsLayerTreeModelLegendNode *symbolItem, QgsRenderContext *context, QPointF point=QPointF(), double labelXOffset=0)</argsstring>
        <name>drawSymbolItem</name>
        <param>
          <type><ref refid="classQgsLayerTreeModelLegendNode" kindref="compound">QgsLayerTreeModelLegendNode</ref> *</type>
          <declname>symbolItem</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
          <defval>QPointF()</defval>
        </param>
        <param>
          <type>double</type>
          <declname>labelXOffset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draws the symbol of a given symbol <ref refid="classQgsLayerTreeModelLegendNode" kindref="compound">QgsLayerTreeModelLegendNode</ref>, using the specified render <emphasis>context</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="265" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="701" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a247a45c1a4526f26f6584e284451f9f4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QgsLegendRenderer::Nucleon</type>
        <definition>QgsLegendRenderer::Nucleon QgsLegendRenderer::drawSymbolItemInternal</definition>
        <argsstring>(QgsLayerTreeModelLegendNode *symbolItem, QgsRenderContext *context, QPainter *painter, QPointF point, double labelXOffset)</argsstring>
        <name>drawSymbolItemInternal</name>
        <param>
          <type><ref refid="classQgsLayerTreeModelLegendNode" kindref="compound">QgsLayerTreeModelLegendNode</ref> *</type>
          <declname>symbolItem</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
        </param>
        <param>
          <type>double</type>
          <declname>labelXOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="298" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="536" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1afc3b040a36d44585362123f475902ba3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawTitle</definition>
        <argsstring>(QPainter *painter=nullptr, QPointF point=QPointF(), Qt::AlignmentFlag halignment=Qt::AlignLeft, double legendWidth=0)</argsstring>
        <name>drawTitle</name>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
          <defval>QPointF()</defval>
        </param>
        <param>
          <type>Qt::AlignmentFlag</type>
          <declname>halignment</declname>
          <defval>Qt::AlignLeft</defval>
        </param>
        <param>
          <type>double</type>
          <declname>legendWidth</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draws a title in the legend using the title font and the specified alignment settings. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the size required to draw the complete title.</para><para>If <emphasis>painter</emphasis> is nullptr, no painting will be attempted, but the required size will still be calculated and returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="200" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a0231f4acfd7e425d0f3ab1e29693f28f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawTitle</definition>
        <argsstring>(QgsRenderContext *context, QPointF point=QPointF(), Qt::AlignmentFlag halignment=Qt::AlignLeft, double legendWidth=0)</argsstring>
        <name>drawTitle</name>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
          <defval>QPointF()</defval>
        </param>
        <param>
          <type>Qt::AlignmentFlag</type>
          <declname>halignment</declname>
          <defval>Qt::AlignLeft</defval>
        </param>
        <param>
          <type>double</type>
          <declname>legendWidth</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draws a title in the legend using the specified render <emphasis>context</emphasis>, with the title font and the specified alignment settings. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the size required to draw the complete title.</para><para>If <emphasis>context</emphasis> is nullptr, no painting will be attempted, but the required size will still be calculated and returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="250" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="691" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1abc1bdf41f5a144c58505fa04485352e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::drawTitleInternal</definition>
        <argsstring>(QgsRenderContext *context, QPainter *painter, QPointF point, Qt::AlignmentFlag halignment, double legendWidth)</argsstring>
        <name>drawTitleInternal</name>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>point</declname>
        </param>
        <param>
          <type>Qt::AlignmentFlag</type>
          <declname>halignment</declname>
        </param>
        <param>
          <type>double</type>
          <declname>legendWidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="296" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="372" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1afbb78efe74aa8ae9f5d15fe941b6086b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLegendStyle_1acae0c6c735f4cb36f30fc53df74bd84e" kindref="member">QgsLegendStyle::Style</ref></type>
        <definition>QgsLegendStyle::Style QgsLegendRenderer::nodeLegendStyle</definition>
        <argsstring>(QgsLayerTreeNode *node)</argsstring>
        <name>nodeLegendStyle</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Returns the style of the given <emphasis>node</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="286" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="662" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a69e8c88d2935f977d7914230b4c5e388" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::paintAndDetermineSize</definition>
        <argsstring>(QPainter *painter=nullptr)</argsstring>
        <name>paintAndDetermineSize</name>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Draws the legend and returns the actual size of the legend. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>painter</emphasis> is nullptr, only the size of the legend will be calculated and no painting will be attempted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="180" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a33ee6ed7214cfe41efaf49a89c241c51" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::paintAndDetermineSize</definition>
        <argsstring>(QgsRenderContext *context)</argsstring>
        <name>paintAndDetermineSize</name>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Draws the legend using the specified render <emphasis>context</emphasis>, and returns the actual size of the legend. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>context</emphasis> is nullptr, only the size of the legend will be calculated and no painting will be attempted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="241" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="721" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a1b6b3825fcb4672dc9cd5c7b59a3eeb8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsLegendRenderer::paintAndDetermineSizeInternal</definition>
        <argsstring>(QgsRenderContext *context, QPainter *painter)</argsstring>
        <name>paintAndDetermineSizeInternal</name>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="301" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="52" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1a4469d2445e5409e96dd142caa952f8b3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLegendRenderer::setColumns</definition>
        <argsstring>(QList&lt; Atom &gt; &amp;atomList)</argsstring>
        <name>setColumns</name>
        <param>
          <type>QList&lt; Atom &gt; &amp;</type>
          <declname>atomList</declname>
        </param>
        <briefdescription>
<para>Divides a list of Atoms into columns, and sets the column index for each atom in the list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="191" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="271" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLegendRenderer_1aae50c5aca19d2533a489d37f8a0a36e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLegendRenderer::spaceAboveAtom</definition>
        <argsstring>(const Atom &amp;atom)</argsstring>
        <name>spaceAboveAtom</name>
        <param>
          <type>const Atom &amp;</type>
          <declname>atom</declname>
        </param>
        <briefdescription>
<para>Returns the calculated padding space required above the given <emphasis>atom</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="205" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.cpp" bodystart="447" bodyend="468"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classQgsLegendRenderer" kindref="compound">QgsLegendRenderer</ref> class handles automatic layout and rendering of legend. </para>    </briefdescription>
    <detaileddescription>
<para>The content is given by <ref refid="classQgsLayerTreeModel" kindref="compound">QgsLayerTreeModel</ref> instance. Various layout properties can be configured within <ref refid="classQgsLegendRenderer" kindref="compound">QgsLegendRenderer</ref>.</para><para>All spacing and sizes are in millimeters.</para><para><simplesect kind="since"><para>QGIS 2.6 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" line="46" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslegendrenderer.h" bodystart="45" bodyend="302"/>
    <listofallmembers>
      <member refid="classQgsLegendRenderer_1a99ebde88bb900cdc70c4bf0e79cd46a2" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>createAtomList</name></member>
      <member refid="classQgsLegendRenderer_1af02f17c265b5342cd7cce03d1de1f86d" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawAtom</name></member>
      <member refid="classQgsLegendRenderer_1adcae6d69113806828e377d163eb21d88" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawAtom</name></member>
      <member refid="classQgsLegendRenderer_1ac0f10429f0bd1e60c2e50c2b6ac5a249" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawAtomInternal</name></member>
      <member refid="classQgsLegendRenderer_1ab17797ac1b2d03a33b85c829fef288a4" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawGroupTitle</name></member>
      <member refid="classQgsLegendRenderer_1a2f83247b9f45d51233e83ea4aae49ee2" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawGroupTitle</name></member>
      <member refid="classQgsLegendRenderer_1a597f500d4b7673c99704a828080e3d4a" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawGroupTitleInternal</name></member>
      <member refid="classQgsLegendRenderer_1a3a5d73299cad6021da2ffbd40c20c91c" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawLayerTitle</name></member>
      <member refid="classQgsLegendRenderer_1a26d00816742f9a194133e6c78a12958d" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawLayerTitle</name></member>
      <member refid="classQgsLegendRenderer_1aa1e4f191fa1b4f15a9b94723b6172466" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawLayerTitleInternal</name></member>
      <member refid="classQgsLegendRenderer_1a765ced66ea2e39c323620ec55abca219" prot="public" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawLegend</name></member>
      <member refid="classQgsLegendRenderer_1ac85b11b90545a7d4dac3c58729805eb0" prot="public" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawLegend</name></member>
      <member refid="classQgsLegendRenderer_1a0fea730004d48db73c971965929b32cf" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawSymbolItem</name></member>
      <member refid="classQgsLegendRenderer_1af203224371977f67c573de7da8a6540f" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawSymbolItem</name></member>
      <member refid="classQgsLegendRenderer_1a247a45c1a4526f26f6584e284451f9f4" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawSymbolItemInternal</name></member>
      <member refid="classQgsLegendRenderer_1afc3b040a36d44585362123f475902ba3" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawTitle</name></member>
      <member refid="classQgsLegendRenderer_1a0231f4acfd7e425d0f3ab1e29693f28f" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawTitle</name></member>
      <member refid="classQgsLegendRenderer_1abc1bdf41f5a144c58505fa04485352e8" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>drawTitleInternal</name></member>
      <member refid="classQgsLegendRenderer_1ab408a9c5d8a3a844a0d08b406b216d8a" prot="public" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>legendSize</name></member>
      <member refid="classQgsLegendRenderer_1a320aec89975dabe281989a01e0933c98" prot="public" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>minimumSize</name></member>
      <member refid="classQgsLegendRenderer_1a9f22a849f0f386ab1cdf4f97a80ccd26" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>mLegendModel</name></member>
      <member refid="classQgsLegendRenderer_1a0276e3579606e68d94685d5bfb12f40a" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>mLegendSize</name></member>
      <member refid="classQgsLegendRenderer_1a5d6bc1872814cdb9dcbb5746796a3fb7" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>mSettings</name></member>
      <member refid="classQgsLegendRenderer_1a53c6cab280bb64020ff416c143aeb129" prot="public" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>nodeLegendStyle</name></member>
      <member refid="classQgsLegendRenderer_1afbb78efe74aa8ae9f5d15fe941b6086b" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>nodeLegendStyle</name></member>
      <member refid="classQgsLegendRenderer_1a69e8c88d2935f977d7914230b4c5e388" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>paintAndDetermineSize</name></member>
      <member refid="classQgsLegendRenderer_1a33ee6ed7214cfe41efaf49a89c241c51" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>paintAndDetermineSize</name></member>
      <member refid="classQgsLegendRenderer_1a1b6b3825fcb4672dc9cd5c7b59a3eeb8" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>paintAndDetermineSizeInternal</name></member>
      <member refid="classQgsLegendRenderer_1a5129784d65f9b4351020e334b87599c3" prot="public" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>QgsLegendRenderer</name></member>
      <member refid="classQgsLegendRenderer_1a4469d2445e5409e96dd142caa952f8b3" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>setColumns</name></member>
      <member refid="classQgsLegendRenderer_1a5963336aaf5892ff4b1504f9146ce9cf" prot="public" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>setLegendSize</name></member>
      <member refid="classQgsLegendRenderer_1a22795c95381dd4200ea18f57c58703b9" prot="public" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>setNodeLegendStyle</name></member>
      <member refid="classQgsLegendRenderer_1aae50c5aca19d2533a489d37f8a0a36e0" prot="private" virt="non-virtual"><scope>QgsLegendRenderer</scope><name>spaceAboveAtom</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
