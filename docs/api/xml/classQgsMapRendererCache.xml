<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsMapRendererCache" kind="class" language="C++" prot="public">
    <compoundname>QgsMapRendererCache</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="qgsmaprenderercache_8h" local="no">qgsmaprenderercache.h</includes>
    <innerclass refid="structQgsMapRendererCache_1_1CacheParameters" prot="private">QgsMapRendererCache::CacheParameters</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsMapRendererCache_1a780c4ae3b34832fd86116a828a18c5ff" prot="private" static="no" mutable="no">
        <type>QMap&lt; QString, CacheParameters &gt;</type>
        <definition>QMap&lt;QString, CacheParameters&gt; QgsMapRendererCache::mCachedImages</definition>
        <argsstring></argsstring>
        <name>mCachedImages</name>
        <briefdescription>
<para>Map of cache key to cache parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="125" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsMapRendererCache_1a2a20c4509f51f4ac1f49a5ed6fe9327d" prot="private" static="no" mutable="no">
        <type>QSet&lt; <ref refid="qgsmaplayer_8h_1a20864e6cf415152d2053e97b2c4db774" kindref="member">QgsWeakMapLayerPointer</ref> &gt;</type>
        <definition>QSet&lt; QgsWeakMapLayerPointer &gt; QgsMapRendererCache::mConnectedLayers</definition>
        <argsstring></argsstring>
        <name>mConnectedLayers</name>
        <briefdescription>
<para>List of all layers on which this cache is currently connected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="127" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsMapRendererCache_1a745a958c19a99c1eeb407bdb248e90e0" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref></type>
        <definition>QgsRectangle QgsMapRendererCache::mExtent</definition>
        <argsstring></argsstring>
        <name>mExtent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="121" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsMapRendererCache_1ac2dc2509efff52cccf0588d51a4be4a4" prot="private" static="no" mutable="yes">
        <type>QMutex</type>
        <definition>QMutex QgsMapRendererCache::mMutex</definition>
        <argsstring></argsstring>
        <name>mMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="120" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsMapRendererCache_1a1d43bd3c8654f9e28151122454711cad" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsMapRendererCache::mScale</definition>
        <argsstring></argsstring>
        <name>mScale</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="122" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsMapRendererCache_1addd8e4c0e3e67949ab2559c835dbe7b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsMapRendererCache::QgsMapRendererCache</definition>
        <argsstring>()</argsstring>
        <name>QgsMapRendererCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="47" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classQgsMapRendererCache_1a7383f90530475bae682087e570c09a0d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QImage</type>
        <definition>QImage QgsMapRendererCache::cacheImage</definition>
        <argsstring>(const QString &amp;cacheKey) const</argsstring>
        <name>cacheImage</name>
        <param>
          <type>const QString &amp;</type>
          <declname>cacheKey</declname>
        </param>
        <briefdescription>
<para>Returns the cached image for the specified <emphasis>cacheKey</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>cacheKey</emphasis> usually matches the <ref refid="classQgsMapLayer_1a4357e72f2c4a36d71225c286e3ef95ab" kindref="member">QgsMapLayer::id()</ref> which the image is a render of. Returns a null image if it is not cached. <simplesect kind="see"><para><ref refid="classQgsMapRendererCache_1ab3460a55fcf1e03c020d2a153612eb64" kindref="member">setCacheImage()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsMapRendererCache_1a712e31a56183120ccee2d365ba6bda04" kindref="member">hasCacheImage()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="86" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classQgsMapRendererCache_1a4bbbf4eb5631ba77958f9dec988c33c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsMapRendererCache::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Invalidates the cache contents, clearing all cached images. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsMapRendererCache_1ab66275ad5b48dd63781852223a229e1d" kindref="member">clearCacheImage()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="53" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classQgsMapRendererCache_1ab66275ad5b48dd63781852223a229e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsMapRendererCache::clearCacheImage</definition>
        <argsstring>(const QString &amp;cacheKey)</argsstring>
        <name>clearCacheImage</name>
        <param>
          <type>const QString &amp;</type>
          <declname>cacheKey</declname>
        </param>
        <briefdescription>
<para>Removes an image from the cache with matching <emphasis>cacheKey</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsMapRendererCache_1a4bbbf4eb5631ba77958f9dec988c33c9" kindref="member">clear()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="98" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="167" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classQgsMapRendererCache_1a949efc2eeb7c7691b8504e18bbeeea03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *&gt;</type>
        <definition>QList&lt; QgsMapLayer *&gt; QgsMapRendererCache::dependentLayers</definition>
        <argsstring>(const QString &amp;cacheKey) const</argsstring>
        <name>dependentLayers</name>
        <param>
          <type>const QString &amp;</type>
          <declname>cacheKey</declname>
        </param>
        <briefdescription>
<para>Returns a list of map layers on which an image in the cache depends. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="92" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="135" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classQgsMapRendererCache_1a712e31a56183120ccee2d365ba6bda04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsMapRendererCache::hasCacheImage</definition>
        <argsstring>(const QString &amp;cacheKey) const</argsstring>
        <name>hasCacheImage</name>
        <param>
          <type>const QString &amp;</type>
          <declname>cacheKey</declname>
        </param>
        <briefdescription>
<para>Returns true if the cache contains an image with the specified <emphasis>cacheKey</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsMapRendererCache_1a7383f90530475bae682087e570c09a0d" kindref="member">cacheImage()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="77" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classQgsMapRendererCache_1afa758becba70f5e16ea4a344d0d4ef4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsMapRendererCache::init</definition>
        <argsstring>(const QgsRectangle &amp;extent, double scale)</argsstring>
        <name>init</name>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Initialize cache: set new parameters and clears the cache if any parameters have changed since last initialization. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>flag whether the parameters are the same as last time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="60" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="81" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classQgsMapRendererCache_1ab3460a55fcf1e03c020d2a153612eb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsMapRendererCache::setCacheImage</definition>
        <argsstring>(const QString &amp;cacheKey, const QImage &amp;image, const QList&lt; QgsMapLayer * &gt; &amp;dependentLayers=QList&lt; QgsMapLayer * &gt;())</argsstring>
        <name>setCacheImage</name>
        <param>
          <type>const QString &amp;</type>
          <declname>cacheKey</declname>
        </param>
        <param>
          <type>const QImage &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> * &gt; &amp;</type>
          <declname>dependentLayers</declname>
          <defval>QList&lt; <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> * &gt;()</defval>
        </param>
        <briefdescription>
<para>Set the cached <emphasis>image</emphasis> for a particular <emphasis>cacheKey</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>cacheKey</emphasis> usually matches the <ref refid="classQgsMapLayer_1a4357e72f2c4a36d71225c286e3ef95ab" kindref="member">QgsMapLayer::id()</ref> which the image is a render of. A list of <emphasis>dependentLayers</emphasis> should be passed containing all layer on which this cache image is dependent. If any of these layers triggers a repaint then the cache image will be cleared. <simplesect kind="see"><para><ref refid="classQgsMapRendererCache_1a7383f90530475bae682087e570c09a0d" kindref="member">cacheImage()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="70" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="99" bodyend="122"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-slot">
      <memberdef kind="slot" id="classQgsMapRendererCache_1aef1303a8f73e57936ce693b0c636b5e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsMapRendererCache::layerRequestedRepaint</definition>
        <argsstring>()</argsstring>
        <name>layerRequestedRepaint</name>
        <briefdescription>
<para>Remove layer (that emitted the signal) from the cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="102" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="144" bodyend="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsMapRendererCache_1a9ade19a14ccf810bc7c544f44332c862" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsMapRendererCache::clearInternal</definition>
        <argsstring>()</argsstring>
        <name>clearInternal</name>
        <briefdescription>
<para>Invalidate cache contents (without locking) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="113" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="32" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classQgsMapRendererCache_1a154f55fbae7b6ca190a9be6ad019109b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSet&lt; <ref refid="qgsmaplayer_8h_1a20864e6cf415152d2053e97b2c4db774" kindref="member">QgsWeakMapLayerPointer</ref> &gt;</type>
        <definition>QSet&lt; QgsWeakMapLayerPointer &gt; QgsMapRendererCache::dependentLayers</definition>
        <argsstring>() const</argsstring>
        <name>dependentLayers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="118" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="66" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classQgsMapRendererCache_1a1dcf7d432205ce484a76ee6aaad83d95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsMapRendererCache::dropUnusedConnections</definition>
        <argsstring>()</argsstring>
        <name>dropUnusedConnections</name>
        <briefdescription>
<para>Disconnects from layers we no longer care about. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="116" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.cpp" bodystart="50" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is responsible for keeping cache of rendered images resulting from a map rendering job. </para>    </briefdescription>
    <detaileddescription>
<para>Once a job has a rendered image stored in the cache (using setCacheImage(...)), the cache listens to repaintRequested() signals from dependent layers. If triggered, the cache removes the rendered image (and disconnects from the layers).</para><para>The class is thread-safe (multiple classes can access the same instance safely).</para><para><simplesect kind="since"><para>QGIS 2.4 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5520">
        <label>QObject</label>
      </node>
      <node id="5519">
        <label>QgsMapRendererCache</label>
        <link refid="classQgsMapRendererCache"/>
        <childnode refid="5520" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5522">
        <label>QObject</label>
      </node>
      <node id="5521">
        <label>QgsMapRendererCache</label>
        <link refid="classQgsMapRendererCache"/>
        <childnode refid="5522" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" line="43" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmaprenderercache.h" bodystart="42" bodyend="128"/>
    <listofallmembers>
      <member refid="classQgsMapRendererCache_1a7383f90530475bae682087e570c09a0d" prot="public" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>cacheImage</name></member>
      <member refid="classQgsMapRendererCache_1a4bbbf4eb5631ba77958f9dec988c33c9" prot="public" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>clear</name></member>
      <member refid="classQgsMapRendererCache_1ab66275ad5b48dd63781852223a229e1d" prot="public" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>clearCacheImage</name></member>
      <member refid="classQgsMapRendererCache_1a9ade19a14ccf810bc7c544f44332c862" prot="private" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>clearInternal</name></member>
      <member refid="classQgsMapRendererCache_1a949efc2eeb7c7691b8504e18bbeeea03" prot="public" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>dependentLayers</name></member>
      <member refid="classQgsMapRendererCache_1a154f55fbae7b6ca190a9be6ad019109b" prot="private" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>dependentLayers</name></member>
      <member refid="classQgsMapRendererCache_1a1dcf7d432205ce484a76ee6aaad83d95" prot="private" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>dropUnusedConnections</name></member>
      <member refid="classQgsMapRendererCache_1a712e31a56183120ccee2d365ba6bda04" prot="public" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>hasCacheImage</name></member>
      <member refid="classQgsMapRendererCache_1afa758becba70f5e16ea4a344d0d4ef4e" prot="public" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>init</name></member>
      <member refid="classQgsMapRendererCache_1aef1303a8f73e57936ce693b0c636b5e2" prot="private" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>layerRequestedRepaint</name></member>
      <member refid="classQgsMapRendererCache_1a780c4ae3b34832fd86116a828a18c5ff" prot="private" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>mCachedImages</name></member>
      <member refid="classQgsMapRendererCache_1a2a20c4509f51f4ac1f49a5ed6fe9327d" prot="private" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>mConnectedLayers</name></member>
      <member refid="classQgsMapRendererCache_1a745a958c19a99c1eeb407bdb248e90e0" prot="private" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>mExtent</name></member>
      <member refid="classQgsMapRendererCache_1ac2dc2509efff52cccf0588d51a4be4a4" prot="private" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>mMutex</name></member>
      <member refid="classQgsMapRendererCache_1a1d43bd3c8654f9e28151122454711cad" prot="private" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>mScale</name></member>
      <member refid="classQgsMapRendererCache_1addd8e4c0e3e67949ab2559c835dbe7b1" prot="public" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>QgsMapRendererCache</name></member>
      <member refid="classQgsMapRendererCache_1ab3460a55fcf1e03c020d2a153612eb64" prot="public" virt="non-virtual"><scope>QgsMapRendererCache</scope><name>setCacheImage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
