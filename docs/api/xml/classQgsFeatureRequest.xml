<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsFeatureRequest" kind="class" language="C++" prot="public">
    <compoundname>QgsFeatureRequest</compoundname>
    <includes refid="qgsfeaturerequest_8h" local="no">qgsfeaturerequest.h</includes>
    <innerclass refid="classQgsFeatureRequest_1_1OrderBy" prot="public">QgsFeatureRequest::OrderBy</innerclass>
    <innerclass refid="classQgsFeatureRequest_1_1OrderByClause" prot="public">QgsFeatureRequest::OrderByClause</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3ce" prot="public" static="no">
        <name>FilterType</name>
        <enumvalue id="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3ceaab451ed02fe23834cc0b634231af7a28" prot="public">
          <name>FilterNone</name>
          <briefdescription>
<para>No filter is applied. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3cea43b4876471fcce38faf309b854792014" prot="public">
          <name>FilterFid</name>
          <briefdescription>
<para>Filter using feature ID. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3ceab1c178f3589cd7fb1083967e8af53cb1" prot="public">
          <name>FilterExpression</name>
          <briefdescription>
<para>Filter using expression. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3cea64d63ec6aad7febbc87c3cecba455b32" prot="public">
          <name>FilterFids</name>
          <briefdescription>
<para>Filter using feature IDs. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of filters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="88" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="87" bodyend="93"/>
      </memberdef>
      <memberdef kind="enum" id="classQgsFeatureRequest_1aab0dc2dca2b882316c3bb3668dbf4667" prot="public" static="no">
        <name>Flag</name>
        <enumvalue id="classQgsFeatureRequest_1aab0dc2dca2b882316c3bb3668dbf4667a504746b6d86b14d7835d00c3dfb0ad87" prot="public">
          <name>NoFlags</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsFeatureRequest_1aab0dc2dca2b882316c3bb3668dbf4667af5584cc22947cb704cb5c89a9c2e066d" prot="public">
          <name>NoGeometry</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Geometry is not required. It may still be returned if e.g. required for a filter condition. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsFeatureRequest_1aab0dc2dca2b882316c3bb3668dbf4667a4308bb892b15c3fbf61130f4ee6ce0d5" prot="public">
          <name>SubsetOfAttributes</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Fetch only a subset of attributes (setSubsetOfAttributes sets this flag) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsFeatureRequest_1aab0dc2dca2b882316c3bb3668dbf4667ad60a395ad4de36b56d511dcca27d4502" prot="public">
          <name>ExactIntersect</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Use exact geometry intersection (slower) instead of bounding boxes. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="76" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="75" bodyend="81"/>
      </memberdef>
      <memberdef kind="enum" id="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8" prot="public" static="no">
        <name>InvalidGeometryCheck</name>
        <enumvalue id="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8a3abf45c895dbb96edad2a4dc65622681" prot="public">
          <name>GeometryNoCheck</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>No invalid geometry checking. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8ab6134488c6a02084c202118678783ca5" prot="public">
          <name>GeometrySkipInvalid</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Skip any features with invalid geometry. This requires a slow geometry validity check for every feature. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8a68247e0311086358d9533cea838bf506" prot="public">
          <name>GeometryAbortOnInvalid</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Close iterator on encountering any features with invalid geometry. This requires a slow geometry validity check for every feature. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Handling of features with invalid geometries. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="97" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="96" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classQgsFeatureRequest_1a717fcc8fa42a78f0b4f30253ca1b478e" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsFeatureRequest::ALL_ATTRIBUTES</definition>
        <argsstring></argsstring>
        <name>ALL_ATTRIBUTES</name>
        <initializer>= QStringLiteral( &quot;#!allattributes!#&quot; )</initializer>
        <briefdescription>
<para>A special attribute that if set matches all attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="272" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQgsFeatureRequest_1aab6539166629811f921606641f3f90f3" prot="protected" static="no" mutable="no">
        <type><ref refid="qgsfield_8h_1a00f27df80eac3fb534923fefaed2181d" kindref="member">QgsAttributeList</ref></type>
        <definition>QgsAttributeList QgsFeatureRequest::mAttrs</definition>
        <argsstring></argsstring>
        <name>mAttrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="708" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a1aa496e2d43d6cc177f82fa0fc77c7ed" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>QgsCoordinateReferenceSystem QgsFeatureRequest::mCrs</definition>
        <argsstring></argsstring>
        <name>mCrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="715" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="715" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a74079b03fb3e432eac29bfd723193322" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref></type>
        <definition>QgsExpressionContext QgsFeatureRequest::mExpressionContext</definition>
        <argsstring></argsstring>
        <name>mExpressionContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="706" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="706" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a4c870018f6fa04e7385dce7f34c319bb" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3ce" kindref="member">FilterType</ref></type>
        <definition>FilterType QgsFeatureRequest::mFilter</definition>
        <argsstring></argsstring>
        <name>mFilter</name>
        <initializer>= <ref refid="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3ceaab451ed02fe23834cc0b634231af7a28" kindref="member">FilterNone</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="701" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a1893e1d36df9a6203baa53ca215c47f5" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsExpression &gt; QgsFeatureRequest::mFilterExpression</definition>
        <argsstring></argsstring>
        <name>mFilterExpression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="705" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a39d5d34452cf3d3cf4411a32d1f6a677" prot="protected" static="no" mutable="no">
        <type><ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref></type>
        <definition>QgsFeatureId QgsFeatureRequest::mFilterFid</definition>
        <argsstring></argsstring>
        <name>mFilterFid</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="703" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a64e39e1fcacecc4d34cc9d1d47b5c66f" prot="protected" static="no" mutable="no">
        <type><ref refid="qgsfeatureid_8h_1a443917048a2ef75006fdeba30f1549f3" kindref="member">QgsFeatureIds</ref></type>
        <definition>QgsFeatureIds QgsFeatureRequest::mFilterFids</definition>
        <argsstring></argsstring>
        <name>mFilterFids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="704" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a4d3b1b7745b1756a1973ba71f903896c" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref></type>
        <definition>QgsRectangle QgsFeatureRequest::mFilterRect</definition>
        <argsstring></argsstring>
        <name>mFilterRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="702" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="702" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1ac317eec42fa683e07842cd27095b3958" prot="protected" static="no" mutable="no">
        <type>Flags</type>
        <definition>Flags QgsFeatureRequest::mFlags</definition>
        <argsstring></argsstring>
        <name>mFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="707" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="707" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1ab81eb5723be2d313784eb562a70f4f23" prot="protected" static="no" mutable="no">
        <type>std::function&lt; void(const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;) &gt;</type>
        <definition>std::function&lt; void( const QgsFeature &amp; ) &gt; QgsFeatureRequest::mInvalidGeometryCallback</definition>
        <argsstring></argsstring>
        <name>mInvalidGeometryCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="713" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="713" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a8c547950bbf3c67867e439e8f2a1fd43" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8" kindref="member">InvalidGeometryCheck</ref></type>
        <definition>InvalidGeometryCheck QgsFeatureRequest::mInvalidGeometryFilter</definition>
        <argsstring></argsstring>
        <name>mInvalidGeometryFilter</name>
        <initializer>= <ref refid="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8a3abf45c895dbb96edad2a4dc65622681" kindref="member">GeometryNoCheck</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="712" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="712" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1ae91e94fd62e779f7812ef4747e1ec8dc" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long QgsFeatureRequest::mLimit</definition>
        <argsstring></argsstring>
        <name>mLimit</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="710" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="710" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a28df38114c4d5a9baff63cd9b9b75666" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsFeatureRequest_1_1OrderBy" kindref="compound">OrderBy</ref></type>
        <definition>OrderBy QgsFeatureRequest::mOrderBy</definition>
        <argsstring></argsstring>
        <name>mOrderBy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="711" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a04559509ba6e25965770e67d62d4c957" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int QgsFeatureRequest::mRequestMayBeNested</definition>
        <argsstring></argsstring>
        <name>mRequestMayBeNested</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="718" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="718" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a81917cfb6fc1a80cfd9c7729e55a0d5a" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsSimplifyMethod" kindref="compound">QgsSimplifyMethod</ref></type>
        <definition>QgsSimplifyMethod QgsFeatureRequest::mSimplifyMethod</definition>
        <argsstring></argsstring>
        <name>mSimplifyMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="709" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="709" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1ab9d169e2cd0d59a0562194a3a43c5726" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int QgsFeatureRequest::mTimeout</definition>
        <argsstring></argsstring>
        <name>mTimeout</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="717" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a3307fa7aba3579f4b1a016b21ee81a4f" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsCoordinateTransformContext" kindref="compound">QgsCoordinateTransformContext</ref></type>
        <definition>QgsCoordinateTransformContext QgsFeatureRequest::mTransformContext</definition>
        <argsstring></argsstring>
        <name>mTransformContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="716" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="716" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1a91f4b9fe63363c6015cc38515ba3e365" prot="protected" static="no" mutable="no">
        <type>std::function&lt; void(const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;) &gt;</type>
        <definition>std::function&lt; void( const QgsFeature &amp; ) &gt; QgsFeatureRequest::mTransformErrorCallback</definition>
        <argsstring></argsstring>
        <name>mTransformErrorCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="714" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="714" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsFeatureRequest_1aef2570979be41b6abfe2c0f6e4cd26b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsFeatureRequest::QgsFeatureRequest</definition>
        <argsstring>()</argsstring>
        <name>QgsFeatureRequest</name>
        <briefdescription>
<para>construct a default request: for all features get attributes and geometries </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="275" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ad1cbe9f3e49b3ccf064ae2989ef71908" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsFeatureRequest::QgsFeatureRequest</definition>
        <argsstring>(QgsFeatureId fid)</argsstring>
        <name>QgsFeatureRequest</name>
        <param>
          <type><ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref></type>
          <declname>fid</declname>
        </param>
        <briefdescription>
<para>construct a request with feature ID filter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="277" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a52d5eba68be5a48943e211df955f5785" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsFeatureRequest::QgsFeatureRequest</definition>
        <argsstring>(const QgsFeatureIds &amp;fids)</argsstring>
        <name>QgsFeatureRequest</name>
        <param>
          <type>const <ref refid="qgsfeatureid_8h_1a443917048a2ef75006fdeba30f1549f3" kindref="member">QgsFeatureIds</ref> &amp;</type>
          <declname>fids</declname>
        </param>
        <briefdescription>
<para>construct a request with feature ID filter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="279" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1acd9e9e8d71c0076e1256e03014af571e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsFeatureRequest::QgsFeatureRequest</definition>
        <argsstring>(const QgsRectangle &amp;rectangle)</argsstring>
        <name>QgsFeatureRequest</name>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>rectangle</declname>
        </param>
        <briefdescription>
<para>Construct a request with <emphasis>rectangle</emphasis> bounding box filter. </para>        </briefdescription>
        <detaileddescription>
<para>When a destination CRS is set using <ref refid="classQgsFeatureRequest_1a974ed810d366d7b06bc009da78fc2cb3" kindref="member">setDestinationCrs()</ref>, <emphasis>rectangle</emphasis> is expected to be in the same CRS as the <ref refid="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" kindref="member">destinationCrs()</ref>. Otherwise, <emphasis>rectangle</emphasis> should use the same CRS as the source layer/provider. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="288" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a51060ce58e3d8c9b6f9dde8ebe809d2e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsFeatureRequest::QgsFeatureRequest</definition>
        <argsstring>(const QgsExpression &amp;expr, const QgsExpressionContext &amp;context=QgsExpressionContext())</argsstring>
        <name>QgsFeatureRequest</name>
        <param>
          <type>const <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>()</defval>
        </param>
        <briefdescription>
<para>construct a request with a filter expression </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="291" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="51" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1aade4c22e260fc3c613137b5fc40448a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsFeatureRequest::QgsFeatureRequest</definition>
        <argsstring>(const QgsFeatureRequest &amp;rh)</argsstring>
        <name>QgsFeatureRequest</name>
        <param>
          <type>const <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
          <declname>rh</declname>
        </param>
        <briefdescription>
<para>copy constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="293" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ab3da22efd2ee7b3826de2602dbc45537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFeatureRequest::acceptFeature</definition>
        <argsstring>(const QgsFeature &amp;feature)</argsstring>
        <name>acceptFeature</name>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Check if a feature is accepted by this requests filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feature</parametername>
</parameternamelist>
<parameterdescription>
<para>The feature which will be tested</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true, if the filter accepts the feature</para></simplesect>
<simplesect kind="since"><para>QGIS 2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="628" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="270" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a6a3774f3fc3a670574377a0a6f908498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::addOrderBy</definition>
        <argsstring>(const QString &amp;expression, bool ascending=true)</argsstring>
        <name>addOrderBy</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascending</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Adds a new <ref refid="classQgsFeatureRequest_1_1OrderByClause" kindref="compound">OrderByClause</ref>, appending it as the least important one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>The expression to use for ordering </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascending</parametername>
</parameternamelist>
<parameterdescription>
<para>If the order should be ascending (1,2,3) or descending (3,2,1) If the order is ascending, by default nulls are last If the order is descending, by default nulls are first</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="449" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a58e19ac58496d56971d131a3fa310e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::addOrderBy</definition>
        <argsstring>(const QString &amp;expression, bool ascending, bool nullsfirst)</argsstring>
        <name>addOrderBy</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascending</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nullsfirst</declname>
        </param>
        <briefdescription>
<para>Adds a new <ref refid="classQgsFeatureRequest_1_1OrderByClause" kindref="compound">OrderByClause</ref>, appending it as the least important one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>The expression to use for ordering </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascending</parametername>
</parameternamelist>
<parameterdescription>
<para>If the order should be ascending (1,2,3) or descending (3,2,1) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nullsfirst</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, NULLS are at the beginning, if false, NULLS are at the end</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="460" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a58e594610f8bd47528d76cafa3fd35c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::combineFilterExpression</definition>
        <argsstring>(const QString &amp;expression)</argsstring>
        <name>combineFilterExpression</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Modifies the existing filter expression to add an additional expression filter. </para>        </briefdescription>
        <detaileddescription>
<para>The filter expressions are combined using AND, so only features matching both the existing expression and the additional expression will be returned. <simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="410" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="132" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ab98cacee590a85809fd5b345241cfdf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Q_DECL_DEPRECATED int</type>
        <definition>int QgsFeatureRequest::connectionTimeout</definition>
        <argsstring>() const</argsstring>
        <name>connectionTimeout</name>
        <briefdescription>
<para>Returns the timeout (in milliseconds) for how long we should wait for a connection if none is available from the pool at this moment. </para>        </briefdescription>
        <detaileddescription>
<para>A negative value (which is set by default) will wait forever.</para><para><simplesect kind="note"><para>Only works if the provider supports this option.</para></simplesect>
<xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classQgsFeatureRequest_1a87c0e47bd493745e37c9acf83e4affde" kindref="member">timeout()</ref> instead. </para></xrefdescription></xrefsect><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="639" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>QgsCoordinateReferenceSystem QgsFeatureRequest::destinationCrs</definition>
        <argsstring>() const</argsstring>
        <name>destinationCrs</name>
        <briefdescription>
<para>Returns the destination coordinate reference system for feature&apos;s geometries, or an invalid <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> if no reprojection will be done and all features will be left with their original geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1a974ed810d366d7b06bc009da78fc2cb3" kindref="member">setDestinationCrs()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1ab9fe0275aa8684f752725ed8872226be" kindref="member">transformContext()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="544" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ad2c49b2da6b3384bd35aa58eb9eced62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest&amp; QgsFeatureRequest::disableFilter</definition>
        <argsstring>()</argsstring>
        <name>disableFilter</name>
        <briefdescription>
<para>Disables filter conditions. </para>        </briefdescription>
        <detaileddescription>
<para>The spatial filter (filterRect) will be kept in place.</para><para><simplesect kind="return"><para>The object the method is called on for chaining</para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="436" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="436" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1aa7bcce393f08fe559abdc451834c6822" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
        <definition>QgsExpressionContext* QgsFeatureRequest::expressionContext</definition>
        <argsstring>()</argsstring>
        <name>expressionContext</name>
        <briefdescription>
<para>Returns the expression context used to evaluate filter expressions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aab8133184e42ff63b3b685e88bf6cd3e" kindref="member">setExpressionContext</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1a4b0a3038006e54733b242557520aef27" kindref="member">filterExpression</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="418" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="418" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a4b0a3038006e54733b242557520aef27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
        <definition>QgsExpression* QgsFeatureRequest::filterExpression</definition>
        <argsstring>() const</argsstring>
        <name>filterExpression</name>
        <briefdescription>
<para>Returns the filter expression if set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aa7c168ddbcaaaa88eafb92340880e773" kindref="member">setFilterExpression</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aa7bcce393f08fe559abdc451834c6822" kindref="member">expressionContext</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="402" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="402" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1af9d529143ad897a0bdbb2f06432ed378" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref></type>
        <definition>QgsFeatureId QgsFeatureRequest::filterFid</definition>
        <argsstring>() const</argsstring>
        <name>filterFid</name>
        <briefdescription>
<para>Gets the feature ID that should be fetched. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="330" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="330" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ae7172f44bad6adb832ca23a71d3ee405" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="qgsfeatureid_8h_1a443917048a2ef75006fdeba30f1549f3" kindref="member">QgsFeatureIds</ref> &amp;</type>
        <definition>const QgsFeatureIds&amp; QgsFeatureRequest::filterFids</definition>
        <argsstring>() const</argsstring>
        <name>filterFids</name>
        <briefdescription>
<para>Gets feature IDs that should be fetched. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="335" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="335" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ad705b1f58332544500b01959f60144b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
        <definition>const QgsRectangle&amp; QgsFeatureRequest::filterRect</definition>
        <argsstring>() const</argsstring>
        <name>filterRect</name>
        <briefdescription>
<para>Returns the rectangle from which features will be taken. </para>        </briefdescription>
        <detaileddescription>
<para>If the returned rectangle is null, then no filter rectangle is set.</para><para>When a destination CRS is set using <ref refid="classQgsFeatureRequest_1a974ed810d366d7b06bc009da78fc2cb3" kindref="member">setDestinationCrs()</ref>, the rectangle will be in the same CRS as the <ref refid="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" kindref="member">destinationCrs()</ref>. Otherwise, the rectangle will use the same CRS as the source layer/provider.</para><para><simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aff23c6b25cb0b69d472eeae8ba38647f" kindref="member">setFilterRect()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="325" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1adde6b806e518a685269726fd12d4bf51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3ce" kindref="member">FilterType</ref></type>
        <definition>FilterType QgsFeatureRequest::filterType</definition>
        <argsstring>() const</argsstring>
        <name>filterType</name>
        <briefdescription>
<para>Returns the filter type which is currently set on this request. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Filter type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="302" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="302" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1aecdd3e90a49cc111b88960ada7691b16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Flags &amp;</type>
        <definition>const Flags&amp; QgsFeatureRequest::flags</definition>
        <argsstring>() const</argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="493" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="493" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a16f5ff2b6d174eb33c4e05457e43979f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::function&lt; void(const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;) &gt;</type>
        <definition>std::function&lt; void( const QgsFeature &amp; ) &gt; QgsFeatureRequest::invalidGeometryCallback</definition>
        <argsstring>() const</argsstring>
        <name>invalidGeometryCallback</name>
        <briefdescription>
<para>Returns the callback function to use when encountering an invalid geometry and <ref refid="classQgsFeatureRequest_1a3fc5ce07c30d23a8dac575450e37de66" kindref="member">invalidGeometryCheck()</ref> is set to GeometryAbortOnInvalid or GeometrySkipInvalid. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1ac72fc25628e73e48af02ba20c9877acc" kindref="member">setInvalidGeometryCallback()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="387" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="387" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a3fc5ce07c30d23a8dac575450e37de66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8" kindref="member">InvalidGeometryCheck</ref></type>
        <definition>InvalidGeometryCheck QgsFeatureRequest::invalidGeometryCheck</definition>
        <argsstring>() const</argsstring>
        <name>invalidGeometryCheck</name>
        <briefdescription>
<para>Returns the invalid geometry checking behavior. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1ad6ccaf42184a99b33d1628d4835fc0df" kindref="member">setInvalidGeometryCheck()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="351" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="351" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1aeafcfebfdac0abbd45736524ea974a12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long QgsFeatureRequest::limit</definition>
        <argsstring>() const</argsstring>
        <name>limit</name>
        <briefdescription>
<para>Returns the maximum number of features to request, or -1 if no limit set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aa724a450498eeba7a783ead6b62a2e67" kindref="member">setLimit</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="489" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="489" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ad1ff45fbbe2fedf827f160794522c1bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::operator=</definition>
        <argsstring>(const QgsFeatureRequest &amp;rh)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
          <declname>rh</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="295" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="64" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a6216380cbbda0293cd606f075077c2f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest_1_1OrderBy" kindref="compound">OrderBy</ref></type>
        <definition>QgsFeatureRequest::OrderBy QgsFeatureRequest::orderBy</definition>
        <argsstring>() const</argsstring>
        <name>orderBy</name>
        <briefdescription>
<para>Returns a list of order by clauses specified for this feature request. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="467" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1aea6a883063ec35ba96bcb69899977c2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFeatureRequest::requestMayBeNested</definition>
        <argsstring>() const</argsstring>
        <name>requestMayBeNested</name>
        <briefdescription>
<para>In case this request may be run nested within another already running iteration on the same connection, set this to true. </para>        </briefdescription>
        <detaileddescription>
<para>If this flag is true, this request will be able to make use of &quot;spare&quot; connections to avoid deadlocks.</para><para>For example, this should be set on requests that are issued from an expression function.</para><para><simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="684" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="319" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a3ba436ea4e077d41efbede0c214c42fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_DECL_DEPRECATED <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setConnectionTimeout</definition>
        <argsstring>(int connectionTimeout)</argsstring>
        <name>setConnectionTimeout</name>
        <param>
          <type>int</type>
          <declname>connectionTimeout</declname>
        </param>
        <briefdescription>
<para>Sets the timeout (in milliseconds) for how long we should wait for a connection if none is available from the pool at this moment. </para>        </briefdescription>
        <detaileddescription>
<para>A negative value (which is set by default) will wait forever.</para><para><simplesect kind="note"><para>Only works if the provider supports this option.</para></simplesect>
<xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classQgsFeatureRequest_1a6fca59fda6c23a22c3f70886edb2a275" kindref="member">setTimeout()</ref> instead. </para></xrefdescription></xrefsect><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="650" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="302" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a974ed810d366d7b06bc009da78fc2cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setDestinationCrs</definition>
        <argsstring>(const QgsCoordinateReferenceSystem &amp;crs, const QgsCoordinateTransformContext &amp;context)</argsstring>
        <name>setDestinationCrs</name>
        <param>
          <type>const <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &amp;</type>
          <declname>crs</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsCoordinateTransformContext" kindref="compound">QgsCoordinateTransformContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Sets the destination <emphasis>crs</emphasis> for feature&apos;s geometries. </para>        </briefdescription>
        <detaileddescription>
<para>If set, all geometries will be reprojected from their original coordinate reference system to this desired reference system. If <emphasis>crs</emphasis> is an invalid <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> then no reprojection will be done and all features will be left with their original geometry.</para><para>When a <emphasis>crs</emphasis> is set using <ref refid="classQgsFeatureRequest_1a974ed810d366d7b06bc009da78fc2cb3" kindref="member">setDestinationCrs()</ref>, then any <ref refid="classQgsFeatureRequest_1ad705b1f58332544500b01959f60144b2" kindref="member">filterRect()</ref> set on the request is expected to be in the same CRS as the destination CRS.</para><para>The feature geometry transformation to the destination CRS is performed after all filter expressions are tested and any virtual fields are calculated. Accordingly, any geometric expressions used in <ref refid="classQgsFeatureRequest_1a4b0a3038006e54733b242557520aef27" kindref="member">filterExpression()</ref> will be performed in the original source CRS. This ensures consistent results are returned regardless of the destination CRS. Similarly, virtual field values will be calculated using the original geometry in the source CRS, so these values are not affected by any destination CRS transform present in the feature request.</para><para><simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" kindref="member">destinationCrs()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="578" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="257" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1aab8133184e42ff63b3b685e88bf6cd3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setExpressionContext</definition>
        <argsstring>(const QgsExpressionContext &amp;context)</argsstring>
        <name>setExpressionContext</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Sets the expression context used to evaluate filter expressions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aa7bcce393f08fe559abdc451834c6822" kindref="member">expressionContext</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aa7c168ddbcaaaa88eafb92340880e773" kindref="member">setFilterExpression</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="426" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1aa7c168ddbcaaaa88eafb92340880e773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setFilterExpression</definition>
        <argsstring>(const QString &amp;expression)</argsstring>
        <name>setFilterExpression</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Set the filter expression. </para>        </briefdescription>
        <detaileddescription>
<para>{<simplesect kind="see"><para><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref>} </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>expression string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1a4b0a3038006e54733b242557520aef27" kindref="member">filterExpression</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aab8133184e42ff63b3b685e88bf6cd3e" kindref="member">setExpressionContext</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="395" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1af69925811b246513d7cb4aba7f959a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setFilterFid</definition>
        <argsstring>(QgsFeatureId fid)</argsstring>
        <name>setFilterFid</name>
        <param>
          <type><ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref></type>
          <declname>fid</declname>
        </param>
        <briefdescription>
<para>Sets feature ID that should be fetched. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="328" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a59955b7d1e3d23b32020465ce41e2da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setFilterFids</definition>
        <argsstring>(const QgsFeatureIds &amp;fids)</argsstring>
        <name>setFilterFids</name>
        <param>
          <type>const <ref refid="qgsfeatureid_8h_1a443917048a2ef75006fdeba30f1549f3" kindref="member">QgsFeatureIds</ref> &amp;</type>
          <declname>fids</declname>
        </param>
        <briefdescription>
<para>Sets feature IDs that should be fetched. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="333" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1aff23c6b25cb0b69d472eeae8ba38647f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setFilterRect</definition>
        <argsstring>(const QgsRectangle &amp;rectangle)</argsstring>
        <name>setFilterRect</name>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>rectangle</declname>
        </param>
        <briefdescription>
<para>Sets the <emphasis>rectangle</emphasis> from which features will be taken. </para>        </briefdescription>
        <detaileddescription>
<para>An empty rectangle removes the filter.</para><para>When a destination CRS is set using <ref refid="classQgsFeatureRequest_1a974ed810d366d7b06bc009da78fc2cb3" kindref="member">setDestinationCrs()</ref>, <emphasis>rectangle</emphasis> is expected to be in the same CRS as the <ref refid="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" kindref="member">destinationCrs()</ref>. Otherwise, <emphasis>rectangle</emphasis> should use the same CRS as the source layer/provider.</para><para><simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1ad705b1f58332544500b01959f60144b2" kindref="member">filterRect()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="313" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a650612f14b4a10f5afa553d13a810927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setFlags</definition>
        <argsstring>(QgsFeatureRequest::Flags flags)</argsstring>
        <name>setFlags</name>
        <param>
          <type>QgsFeatureRequest::Flags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Sets flags that affect how features will be fetched. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="492" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ac72fc25628e73e48af02ba20c9877acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setInvalidGeometryCallback</definition>
        <argsstring>(const std::function&lt; void(const QgsFeature &amp;)&gt; &amp;callback)</argsstring>
        <name>setInvalidGeometryCallback</name>
        <param>
          <type>const std::function&lt; void(const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;)&gt; &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Sets a callback function to use when encountering an invalid geometry and <ref refid="classQgsFeatureRequest_1a3fc5ce07c30d23a8dac575450e37de66" kindref="member">invalidGeometryCheck()</ref> is set to GeometryAbortOnInvalid or GeometrySkipInvalid. </para>        </briefdescription>
        <detaileddescription>
<para>This function will be called using the feature with invalid geometry as a parameter. <simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1a16f5ff2b6d174eb33c4e05457e43979f" kindref="member">invalidGeometryCallback()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="361" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ad6ccaf42184a99b33d1628d4835fc0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setInvalidGeometryCheck</definition>
        <argsstring>(InvalidGeometryCheck check)</argsstring>
        <name>setInvalidGeometryCheck</name>
        <param>
          <type><ref refid="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8" kindref="member">InvalidGeometryCheck</ref></type>
          <declname>check</declname>
        </param>
        <briefdescription>
<para>Sets invalid geometry checking behavior. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Invalid geometry checking is not performed when retrieving features directly from a <ref refid="classQgsVectorDataProvider" kindref="compound">QgsVectorDataProvider</ref>. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1a3fc5ce07c30d23a8dac575450e37de66" kindref="member">invalidGeometryCheck()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="344" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1aa724a450498eeba7a783ead6b62a2e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setLimit</definition>
        <argsstring>(long limit)</argsstring>
        <name>setLimit</name>
        <param>
          <type>long</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Set the maximum number of features to request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of features, or -1 to request all features. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aeafcfebfdac0abbd45736524ea974a12" kindref="member">limit()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="482" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1acd26b70f82a3079944fa72e37de5c9fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setNoAttributes</definition>
        <argsstring>()</argsstring>
        <name>setNoAttributes</name>
        <briefdescription>
<para>Set that no attributes will be fetched. </para>        </briefdescription>
        <detaileddescription>
<para>To revert a call to setNoAttributes and fetch all or some available attributes, the SubsetOfAttributes flag should be removed from the request. <simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="510" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ad9c11d4c88185fcfb0a54f8703699717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setOrderBy</definition>
        <argsstring>(const OrderBy &amp;orderBy)</argsstring>
        <name>setOrderBy</name>
        <param>
          <type>const <ref refid="classQgsFeatureRequest_1_1OrderBy" kindref="compound">OrderBy</ref> &amp;</type>
          <declname>orderBy</declname>
        </param>
        <briefdescription>
<para>Set a list of order by clauses. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="474" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="168" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a54c750a49ad9c6f46de671e1d3710c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setRequestMayBeNested</definition>
        <argsstring>(bool requestMayBeNested)</argsstring>
        <name>setRequestMayBeNested</name>
        <param>
          <type>bool</type>
          <declname>requestMayBeNested</declname>
        </param>
        <briefdescription>
<para>In case this request may be run nested within another already running iteration on the same connection, set this to true. </para>        </briefdescription>
        <detaileddescription>
<para>If this flag is true, this request will be able to make use of &quot;spare&quot; connections to avoid deadlocks.</para><para>For example, this should be set on requests that are issued from an expression function.</para><para><simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="698" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="324" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a2e5c4392cf06d45fefc3c38762fe6916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setSimplifyMethod</definition>
        <argsstring>(const QgsSimplifyMethod &amp;simplifyMethod)</argsstring>
        <name>setSimplifyMethod</name>
        <param>
          <type>const <ref refid="classQgsSimplifyMethod" kindref="compound">QgsSimplifyMethod</ref> &amp;</type>
          <declname>simplifyMethod</declname>
        </param>
        <briefdescription>
<para>Set a simplification method for geometries that will be fetched. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="528" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a85f831f339a9882822d5d5cf19b29fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setSubsetOfAttributes</definition>
        <argsstring>(const QgsAttributeList &amp;attrs)</argsstring>
        <name>setSubsetOfAttributes</name>
        <param>
          <type>const <ref refid="qgsfield_8h_1a00f27df80eac3fb534923fefaed2181d" kindref="member">QgsAttributeList</ref> &amp;</type>
          <declname>attrs</declname>
        </param>
        <briefdescription>
<para>Set a subset of attributes that will be fetched. </para>        </briefdescription>
        <detaileddescription>
<para>An empty attributes list indicates that no attributes will be fetched. To revert a call to setSubsetOfAttributes and fetch all available attributes, the SubsetOfAttributes flag should be removed from the request. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="502" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="186" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a3c4e1145e9de3aa7068d15008408fffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setSubsetOfAttributes</definition>
        <argsstring>(const QStringList &amp;attrNames, const QgsFields &amp;fields)</argsstring>
        <name>setSubsetOfAttributes</name>
        <param>
          <type>const QStringList &amp;</type>
          <declname>attrNames</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsFields" kindref="compound">QgsFields</ref> &amp;</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
<para>Sets a subset of attributes by names that will be fetched. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="519" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="198" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a78e7656ab9dc1e7eebd5ed2dad7d4a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setSubsetOfAttributes</definition>
        <argsstring>(const QSet&lt; QString &gt; &amp;attrNames, const QgsFields &amp;fields)</argsstring>
        <name>setSubsetOfAttributes</name>
        <param>
          <type>const QSet&lt; QString &gt; &amp;</type>
          <declname>attrNames</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsFields" kindref="compound">QgsFields</ref> &amp;</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
<para>Sets a subset of attributes by names that will be fetched. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="522" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="219" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a6fca59fda6c23a22c3f70886edb2a275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setTimeout</definition>
        <argsstring>(int timeout)</argsstring>
        <name>setTimeout</name>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Sets the <emphasis>timeout</emphasis> (in milliseconds) for the maximum time we should wait during feature requests before a feature is returned. </para>        </briefdescription>
        <detaileddescription>
<para>A negative value (which is set by default) will wait forever.</para><para><simplesect kind="note"><para>Only works if the provider supports this option.</para></simplesect>
<simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="670" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="313" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1adb58f2cfbed1e7adf7d6df4aab9b996b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
        <definition>QgsFeatureRequest &amp; QgsFeatureRequest::setTransformErrorCallback</definition>
        <argsstring>(const std::function&lt; void(const QgsFeature &amp;)&gt; &amp;callback)</argsstring>
        <name>setTransformErrorCallback</name>
        <param>
          <type>const std::function&lt; void(const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;)&gt; &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Sets a callback function to use when encountering a transform error when iterating features and a <ref refid="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" kindref="member">destinationCrs()</ref> is set. </para>        </briefdescription>
        <detaileddescription>
<para>This function will be called using the feature which encountered the transform error as a parameter. <simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1af3972dad0c92849c94ebb2eb5d70add1" kindref="member">transformErrorCallback()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1a974ed810d366d7b06bc009da78fc2cb3" kindref="member">setDestinationCrs()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="589" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="264" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a2c0399fe6df521ae052b162df9cd1d0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classQgsSimplifyMethod" kindref="compound">QgsSimplifyMethod</ref> &amp;</type>
        <definition>const QgsSimplifyMethod&amp; QgsFeatureRequest::simplifyMethod</definition>
        <argsstring>() const</argsstring>
        <name>simplifyMethod</name>
        <briefdescription>
<para>Gets simplification method for geometries that will be fetched. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="534" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="534" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1acf134a9b1498188a92b00b0d36e0a41d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="qgsfield_8h_1a00f27df80eac3fb534923fefaed2181d" kindref="member">QgsAttributeList</ref></type>
        <definition>QgsAttributeList QgsFeatureRequest::subsetOfAttributes</definition>
        <argsstring>() const</argsstring>
        <name>subsetOfAttributes</name>
        <briefdescription>
<para>Returns the subset of attributes which at least need to be fetched. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A list of attributes to be fetched </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="516" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="516" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1a87c0e47bd493745e37c9acf83e4affde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsFeatureRequest::timeout</definition>
        <argsstring>() const</argsstring>
        <name>timeout</name>
        <briefdescription>
<para>Returns the timeout (in milliseconds) for the maximum time we should wait during feature requests before a feature is returned. </para>        </briefdescription>
        <detaileddescription>
<para>A negative value (which is set by default) will wait forever.</para><para><simplesect kind="note"><para>Only works if the provider supports this option.</para></simplesect>
<simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="660" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1ab9fe0275aa8684f752725ed8872226be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCoordinateTransformContext" kindref="compound">QgsCoordinateTransformContext</ref></type>
        <definition>QgsCoordinateTransformContext QgsFeatureRequest::transformContext</definition>
        <argsstring>() const</argsstring>
        <name>transformContext</name>
        <briefdescription>
<para>Returns the transform context, for use when a <ref refid="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" kindref="member">destinationCrs()</ref> has been set and reprojection is required. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1a974ed810d366d7b06bc009da78fc2cb3" kindref="member">setDestinationCrs()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" kindref="member">destinationCrs()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="553" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1af3972dad0c92849c94ebb2eb5d70add1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::function&lt; void(const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;) &gt;</type>
        <definition>std::function&lt; void( const QgsFeature &amp; ) &gt; QgsFeatureRequest::transformErrorCallback</definition>
        <argsstring>() const</argsstring>
        <name>transformErrorCallback</name>
        <briefdescription>
<para>Returns the callback function to use when encountering a transform error when iterating features and a <ref refid="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" kindref="member">destinationCrs()</ref> is set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1adb58f2cfbed1e7adf7d6df4aab9b996b" kindref="member">setTransformErrorCallback()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" kindref="member">destinationCrs()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="616" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="616" bodyend="616"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class wraps a request for features to a vector layer (or directly its vector data provider). </para>    </briefdescription>
    <detaileddescription>
<para>The request may apply a filter to fetch only a particular subset of features. Currently supported filters:<itemizedlist>
<listitem><para>no filter - all features are returned</para></listitem><listitem><para>feature id - only feature that matches given feature id is returned</para></listitem><listitem><para>feature ids - only features that match any of the given feature ids are returned</para></listitem><listitem><para>filter expression - only features that match the given filter expression are returned</para></listitem></itemizedlist>
</para><para>Additionally a spatial rectangle can be set in combination: Only features that intersect given rectangle should be fetched. For the sake of speed, the intersection is often done only using feature&apos;s bounding box. There is a flag ExactIntersect that makes sure that only intersecting features will be returned.</para><para>For efficiency, it is also possible to tell provider that some data is not required:<itemizedlist>
<listitem><para>NoGeometry flag</para></listitem><listitem><para>SubsetOfAttributes flag</para></listitem><listitem><para>SimplifyMethod for geometries to fetch</para></listitem></itemizedlist>
</para><para>The options may be chained, e.g.:</para><para><programlisting><codeline><highlight class="normal"><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>().setFilterRect(<ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref>(0,0,1,1)).setFlags(QgsFeatureRequest.ExactIntersect)</highlight></codeline>
</programlisting></para><para>Examples:</para><para><programlisting><codeline><highlight class="comment">#<sp/>fetch<sp/>all<sp/>features:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>()</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>fetch<sp/>all<sp/>features,<sp/>only<sp/>one<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>().setSubsetOfAttributes([</highlight><highlight class="stringliteral">&apos;myfield&apos;</highlight><highlight class="normal">],<sp/>layer.fields())</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>fetch<sp/>all<sp/>features,<sp/>without<sp/>geometries</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>().setFlags(QgsFeatureRequest.NoGeometry)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>fetch<sp/>only<sp/>features<sp/>from<sp/>particular<sp/>extent</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>().setFilterRect(<ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref>(0,0,1,1))</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>fetch<sp/>only<sp/>one<sp/>feature</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>().setFilterFid(45)</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <collaborationgraph>
      <node id="3048">
        <label>QgsCoordinateTransformContext</label>
        <link refid="classQgsCoordinateTransformContext"/>
      </node>
      <node id="3045">
        <label>QList&lt; QgsFeatureRequest::OrderByClause &gt;</label>
      </node>
      <node id="3043">
        <label>QgsFeatureRequest</label>
        <link refid="classQgsFeatureRequest"/>
        <childnode refid="3044" relation="usage">
          <edgelabel>mOrderBy</edgelabel>
        </childnode>
        <childnode refid="3046" relation="usage">
          <edgelabel>mFilterRect</edgelabel>
        </childnode>
        <childnode refid="3047" relation="usage">
          <edgelabel>mCrs</edgelabel>
        </childnode>
        <childnode refid="3048" relation="usage">
          <edgelabel>mTransformContext</edgelabel>
        </childnode>
        <childnode refid="3049" relation="usage">
          <edgelabel>mSimplifyMethod</edgelabel>
        </childnode>
        <childnode refid="3050" relation="usage">
          <edgelabel>mExpressionContext</edgelabel>
        </childnode>
      </node>
      <node id="3046">
        <label>QgsRectangle</label>
        <link refid="classQgsRectangle"/>
      </node>
      <node id="3047">
        <label>QgsCoordinateReferenceSystem</label>
        <link refid="classQgsCoordinateReferenceSystem"/>
      </node>
      <node id="3050">
        <label>QgsExpressionContext</label>
        <link refid="classQgsExpressionContext"/>
      </node>
      <node id="3049">
        <label>QgsSimplifyMethod</label>
        <link refid="classQgsSimplifyMethod"/>
      </node>
      <node id="3044">
        <label>QgsFeatureRequest::OrderBy</label>
        <link refid="classQgsFeatureRequest_1_1OrderBy"/>
        <childnode refid="3045" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="73" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="72" bodyend="719"/>
    <listofallmembers>
      <member refid="classQgsFeatureRequest_1ab3da22efd2ee7b3826de2602dbc45537" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>acceptFeature</name></member>
      <member refid="classQgsFeatureRequest_1a6a3774f3fc3a670574377a0a6f908498" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>addOrderBy</name></member>
      <member refid="classQgsFeatureRequest_1a58e19ac58496d56971d131a3fa310e91" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>addOrderBy</name></member>
      <member refid="classQgsFeatureRequest_1a717fcc8fa42a78f0b4f30253ca1b478e" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>ALL_ATTRIBUTES</name></member>
      <member refid="classQgsFeatureRequest_1a58e594610f8bd47528d76cafa3fd35c0" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>combineFilterExpression</name></member>
      <member refid="classQgsFeatureRequest_1ab98cacee590a85809fd5b345241cfdf6" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>connectionTimeout</name></member>
      <member refid="classQgsFeatureRequest_1aa97dec19d1e0078e4edb242610d29740" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>destinationCrs</name></member>
      <member refid="classQgsFeatureRequest_1ad2c49b2da6b3384bd35aa58eb9eced62" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>disableFilter</name></member>
      <member refid="classQgsFeatureRequest_1aab0dc2dca2b882316c3bb3668dbf4667ad60a395ad4de36b56d511dcca27d4502" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>ExactIntersect</name></member>
      <member refid="classQgsFeatureRequest_1aa7bcce393f08fe559abdc451834c6822" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>expressionContext</name></member>
      <member refid="classQgsFeatureRequest_1a4b0a3038006e54733b242557520aef27" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>filterExpression</name></member>
      <member refid="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3ceab1c178f3589cd7fb1083967e8af53cb1" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>FilterExpression</name></member>
      <member refid="classQgsFeatureRequest_1af9d529143ad897a0bdbb2f06432ed378" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>filterFid</name></member>
      <member refid="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3cea43b4876471fcce38faf309b854792014" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>FilterFid</name></member>
      <member refid="classQgsFeatureRequest_1ae7172f44bad6adb832ca23a71d3ee405" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>filterFids</name></member>
      <member refid="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3cea64d63ec6aad7febbc87c3cecba455b32" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>FilterFids</name></member>
      <member refid="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3ceaab451ed02fe23834cc0b634231af7a28" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>FilterNone</name></member>
      <member refid="classQgsFeatureRequest_1ad705b1f58332544500b01959f60144b2" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>filterRect</name></member>
      <member refid="classQgsFeatureRequest_1aebb40b4fad24a88f44aece4d3bf9b3ce" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>FilterType</name></member>
      <member refid="classQgsFeatureRequest_1adde6b806e518a685269726fd12d4bf51" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>filterType</name></member>
      <member refid="classQgsFeatureRequest_1aab0dc2dca2b882316c3bb3668dbf4667" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>Flag</name></member>
      <member refid="classQgsFeatureRequest_1aecdd3e90a49cc111b88960ada7691b16" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>flags</name></member>
      <member refid="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8a68247e0311086358d9533cea838bf506" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>GeometryAbortOnInvalid</name></member>
      <member refid="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8a3abf45c895dbb96edad2a4dc65622681" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>GeometryNoCheck</name></member>
      <member refid="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8ab6134488c6a02084c202118678783ca5" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>GeometrySkipInvalid</name></member>
      <member refid="classQgsFeatureRequest_1a16f5ff2b6d174eb33c4e05457e43979f" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>invalidGeometryCallback</name></member>
      <member refid="classQgsFeatureRequest_1a3fc5ce07c30d23a8dac575450e37de66" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>invalidGeometryCheck</name></member>
      <member refid="classQgsFeatureRequest_1a3655611e7a12a5117d5003aa352b28c8" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>InvalidGeometryCheck</name></member>
      <member refid="classQgsFeatureRequest_1aeafcfebfdac0abbd45736524ea974a12" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>limit</name></member>
      <member refid="classQgsFeatureRequest_1aab6539166629811f921606641f3f90f3" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mAttrs</name></member>
      <member refid="classQgsFeatureRequest_1a1aa496e2d43d6cc177f82fa0fc77c7ed" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mCrs</name></member>
      <member refid="classQgsFeatureRequest_1a74079b03fb3e432eac29bfd723193322" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mExpressionContext</name></member>
      <member refid="classQgsFeatureRequest_1a4c870018f6fa04e7385dce7f34c319bb" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mFilter</name></member>
      <member refid="classQgsFeatureRequest_1a1893e1d36df9a6203baa53ca215c47f5" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mFilterExpression</name></member>
      <member refid="classQgsFeatureRequest_1a39d5d34452cf3d3cf4411a32d1f6a677" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mFilterFid</name></member>
      <member refid="classQgsFeatureRequest_1a64e39e1fcacecc4d34cc9d1d47b5c66f" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mFilterFids</name></member>
      <member refid="classQgsFeatureRequest_1a4d3b1b7745b1756a1973ba71f903896c" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mFilterRect</name></member>
      <member refid="classQgsFeatureRequest_1ac317eec42fa683e07842cd27095b3958" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mFlags</name></member>
      <member refid="classQgsFeatureRequest_1ab81eb5723be2d313784eb562a70f4f23" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mInvalidGeometryCallback</name></member>
      <member refid="classQgsFeatureRequest_1a8c547950bbf3c67867e439e8f2a1fd43" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mInvalidGeometryFilter</name></member>
      <member refid="classQgsFeatureRequest_1ae91e94fd62e779f7812ef4747e1ec8dc" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mLimit</name></member>
      <member refid="classQgsFeatureRequest_1a28df38114c4d5a9baff63cd9b9b75666" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mOrderBy</name></member>
      <member refid="classQgsFeatureRequest_1a04559509ba6e25965770e67d62d4c957" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mRequestMayBeNested</name></member>
      <member refid="classQgsFeatureRequest_1a81917cfb6fc1a80cfd9c7729e55a0d5a" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mSimplifyMethod</name></member>
      <member refid="classQgsFeatureRequest_1ab9d169e2cd0d59a0562194a3a43c5726" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mTimeout</name></member>
      <member refid="classQgsFeatureRequest_1a3307fa7aba3579f4b1a016b21ee81a4f" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mTransformContext</name></member>
      <member refid="classQgsFeatureRequest_1a91f4b9fe63363c6015cc38515ba3e365" prot="protected" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>mTransformErrorCallback</name></member>
      <member refid="classQgsFeatureRequest_1aab0dc2dca2b882316c3bb3668dbf4667a504746b6d86b14d7835d00c3dfb0ad87" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>NoFlags</name></member>
      <member refid="classQgsFeatureRequest_1aab0dc2dca2b882316c3bb3668dbf4667af5584cc22947cb704cb5c89a9c2e066d" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>NoGeometry</name></member>
      <member refid="classQgsFeatureRequest_1ad1ff45fbbe2fedf827f160794522c1bf" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>operator=</name></member>
      <member refid="classQgsFeatureRequest_1a6216380cbbda0293cd606f075077c2f1" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>orderBy</name></member>
      <member refid="classQgsFeatureRequest_1aef2570979be41b6abfe2c0f6e4cd26b1" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>QgsFeatureRequest</name></member>
      <member refid="classQgsFeatureRequest_1ad1cbe9f3e49b3ccf064ae2989ef71908" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>QgsFeatureRequest</name></member>
      <member refid="classQgsFeatureRequest_1a52d5eba68be5a48943e211df955f5785" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>QgsFeatureRequest</name></member>
      <member refid="classQgsFeatureRequest_1acd9e9e8d71c0076e1256e03014af571e" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>QgsFeatureRequest</name></member>
      <member refid="classQgsFeatureRequest_1a51060ce58e3d8c9b6f9dde8ebe809d2e" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>QgsFeatureRequest</name></member>
      <member refid="classQgsFeatureRequest_1aade4c22e260fc3c613137b5fc40448a5" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>QgsFeatureRequest</name></member>
      <member refid="classQgsFeatureRequest_1aea6a883063ec35ba96bcb69899977c2d" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>requestMayBeNested</name></member>
      <member refid="classQgsFeatureRequest_1a3ba436ea4e077d41efbede0c214c42fd" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setConnectionTimeout</name></member>
      <member refid="classQgsFeatureRequest_1a974ed810d366d7b06bc009da78fc2cb3" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setDestinationCrs</name></member>
      <member refid="classQgsFeatureRequest_1aab8133184e42ff63b3b685e88bf6cd3e" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setExpressionContext</name></member>
      <member refid="classQgsFeatureRequest_1aa7c168ddbcaaaa88eafb92340880e773" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setFilterExpression</name></member>
      <member refid="classQgsFeatureRequest_1af69925811b246513d7cb4aba7f959a03" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setFilterFid</name></member>
      <member refid="classQgsFeatureRequest_1a59955b7d1e3d23b32020465ce41e2da1" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setFilterFids</name></member>
      <member refid="classQgsFeatureRequest_1aff23c6b25cb0b69d472eeae8ba38647f" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setFilterRect</name></member>
      <member refid="classQgsFeatureRequest_1a650612f14b4a10f5afa553d13a810927" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setFlags</name></member>
      <member refid="classQgsFeatureRequest_1ac72fc25628e73e48af02ba20c9877acc" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setInvalidGeometryCallback</name></member>
      <member refid="classQgsFeatureRequest_1ad6ccaf42184a99b33d1628d4835fc0df" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setInvalidGeometryCheck</name></member>
      <member refid="classQgsFeatureRequest_1aa724a450498eeba7a783ead6b62a2e67" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setLimit</name></member>
      <member refid="classQgsFeatureRequest_1acd26b70f82a3079944fa72e37de5c9fb" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setNoAttributes</name></member>
      <member refid="classQgsFeatureRequest_1ad9c11d4c88185fcfb0a54f8703699717" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setOrderBy</name></member>
      <member refid="classQgsFeatureRequest_1a54c750a49ad9c6f46de671e1d3710c95" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setRequestMayBeNested</name></member>
      <member refid="classQgsFeatureRequest_1a2e5c4392cf06d45fefc3c38762fe6916" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setSimplifyMethod</name></member>
      <member refid="classQgsFeatureRequest_1a85f831f339a9882822d5d5cf19b29fdf" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setSubsetOfAttributes</name></member>
      <member refid="classQgsFeatureRequest_1a3c4e1145e9de3aa7068d15008408fffc" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setSubsetOfAttributes</name></member>
      <member refid="classQgsFeatureRequest_1a78e7656ab9dc1e7eebd5ed2dad7d4a81" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setSubsetOfAttributes</name></member>
      <member refid="classQgsFeatureRequest_1a6fca59fda6c23a22c3f70886edb2a275" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setTimeout</name></member>
      <member refid="classQgsFeatureRequest_1adb58f2cfbed1e7adf7d6df4aab9b996b" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>setTransformErrorCallback</name></member>
      <member refid="classQgsFeatureRequest_1a2c0399fe6df521ae052b162df9cd1d0b" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>simplifyMethod</name></member>
      <member refid="classQgsFeatureRequest_1acf134a9b1498188a92b00b0d36e0a41d" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>subsetOfAttributes</name></member>
      <member refid="classQgsFeatureRequest_1aab0dc2dca2b882316c3bb3668dbf4667a4308bb892b15c3fbf61130f4ee6ce0d5" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>SubsetOfAttributes</name></member>
      <member refid="classQgsFeatureRequest_1a87c0e47bd493745e37c9acf83e4affde" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>timeout</name></member>
      <member refid="classQgsFeatureRequest_1ab9fe0275aa8684f752725ed8872226be" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>transformContext</name></member>
      <member refid="classQgsFeatureRequest_1af3972dad0c92849c94ebb2eb5d70add1" prot="public" virt="non-virtual"><scope>QgsFeatureRequest</scope><name>transformErrorCallback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
