<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsProcessingOutputMultipleLayers" kind="class" language="C++" prot="public">
    <compoundname>QgsProcessingOutputMultipleLayers</compoundname>
    <basecompoundref refid="classQgsProcessingOutputDefinition" prot="public" virt="non-virtual">QgsProcessingOutputDefinition</basecompoundref>
    <includes refid="qgsprocessingoutputs_8h" local="no">qgsprocessingoutputs.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsProcessingOutputMultipleLayers_1a768b29a091fe8d6c6ef35ea8f949e3b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsProcessingOutputMultipleLayers::QgsProcessingOutputMultipleLayers</definition>
        <argsstring>(const QString &amp;name, const QString &amp;description=QString())</argsstring>
        <name>QgsProcessingOutputMultipleLayers</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>description</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsProcessingOutputMultipleLayers" kindref="compound">QgsProcessingOutputMultipleLayers</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingoutputs.h" line="234" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingoutputs.cpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingOutputMultipleLayers_1a9655237c5bfcb1b5981fc7525b7b811c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsProcessingOutputMultipleLayers::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classQgsProcessingOutputDefinition_1aab8d9c5651c923a01b791c5670aaebd6">type</reimplements>
        <briefdescription>
<para>Unique output type name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingoutputs.h" line="240" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingoutputs.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsProcessingOutputMultipleLayers_1a0cd64af5814c49524e6907615caaa3a7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>static QString QgsProcessingOutputMultipleLayers::typeName</definition>
        <argsstring>()</argsstring>
        <name>typeName</name>
        <briefdescription>
<para>Returns the type name for the output class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingoutputs.h" line="239" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingoutputs.h" bodystart="239" bodyend="239"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A multi-layer output for processing algorithms which create map layers, when the number and nature of the output layers is not predefined. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Always prefer to explicitly define <ref refid="classQgsProcessingOutputVectorLayer" kindref="compound">QgsProcessingOutputVectorLayer</ref>, <ref refid="classQgsProcessingOutputRasterLayer" kindref="compound">QgsProcessingOutputRasterLayer</ref> or <ref refid="classQgsProcessingOutputMapLayer" kindref="compound">QgsProcessingOutputMapLayer</ref> where possible. <ref refid="classQgsProcessingOutputMultipleLayers" kindref="compound">QgsProcessingOutputMultipleLayers</ref> should only ever be used when the number of output layers is not fixed - e.g. as a result of processing all layers in a specified folder. </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6850">
        <label>QgsProcessingOutputDefinition</label>
        <link refid="classQgsProcessingOutputDefinition"/>
      </node>
      <node id="6849">
        <label>QgsProcessingOutputMultipleLayers</label>
        <link refid="classQgsProcessingOutputMultipleLayers"/>
        <childnode refid="6850" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6852">
        <label>QgsProcessingOutputDefinition</label>
        <link refid="classQgsProcessingOutputDefinition"/>
      </node>
      <node id="6851">
        <label>QgsProcessingOutputMultipleLayers</label>
        <link refid="classQgsProcessingOutputMultipleLayers"/>
        <childnode refid="6852" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingoutputs.h" line="228" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingoutputs.h" bodystart="227" bodyend="242"/>
    <listofallmembers>
      <member refid="classQgsProcessingOutputDefinition_1af511632a74cfddf942fd43cb2688f6ee" prot="public" virt="non-virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>description</name></member>
      <member refid="classQgsProcessingOutputDefinition_1ae0e46cf278f8f461d9372cccfe2cfcbb" prot="protected" virt="non-virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>mDescription</name></member>
      <member refid="classQgsProcessingOutputDefinition_1aafd8c4f31c214dee98fcc9e519ee408d" prot="protected" virt="non-virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>mName</name></member>
      <member refid="classQgsProcessingOutputDefinition_1a1cb1fc498dfcf2b94ddf2a527ff03981" prot="public" virt="non-virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>name</name></member>
      <member refid="classQgsProcessingOutputDefinition_1a975db0ec6983d7feee9defca01f61e26" prot="public" virt="non-virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>QgsProcessingOutputDefinition</name></member>
      <member refid="classQgsProcessingOutputMultipleLayers_1a768b29a091fe8d6c6ef35ea8f949e3b4" prot="public" virt="non-virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>QgsProcessingOutputMultipleLayers</name></member>
      <member refid="classQgsProcessingOutputDefinition_1a0ab775f1671d025114f5df3e51947d2b" prot="public" virt="non-virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>setDescription</name></member>
      <member refid="classQgsProcessingOutputDefinition_1a1da3901d80203a3e0c0e33c4cdf20ed1" prot="public" virt="non-virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>setName</name></member>
      <member refid="classQgsProcessingOutputMultipleLayers_1a9655237c5bfcb1b5981fc7525b7b811c" prot="public" virt="virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>type</name></member>
      <member refid="classQgsProcessingOutputMultipleLayers_1a0cd64af5814c49524e6907615caaa3a7" prot="public" virt="non-virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>typeName</name></member>
      <member refid="classQgsProcessingOutputDefinition_1a775bc2f75319f58f2736ab0622205fca" prot="public" virt="virtual"><scope>QgsProcessingOutputMultipleLayers</scope><name>~QgsProcessingOutputDefinition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
