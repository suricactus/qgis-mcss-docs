<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsExpressionFunction" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QgsExpressionFunction</compoundname>
    <derivedcompoundref refid="classQgsArrayFilterExpressionFunction" prot="public" virt="non-virtual">QgsArrayFilterExpressionFunction</derivedcompoundref>
    <derivedcompoundref refid="classQgsArrayForeachExpressionFunction" prot="public" virt="non-virtual">QgsArrayForeachExpressionFunction</derivedcompoundref>
    <derivedcompoundref refid="classQgsScopedExpressionFunction" prot="public" virt="non-virtual">QgsScopedExpressionFunction</derivedcompoundref>
    <derivedcompoundref refid="classQgsStaticExpressionFunction" prot="public" virt="non-virtual">QgsStaticExpressionFunction</derivedcompoundref>
    <derivedcompoundref refid="classQgsWithVariableExpressionFunction" prot="public" virt="non-virtual">QgsWithVariableExpressionFunction</derivedcompoundref>
    <includes refid="qgsexpressionfunction_8h" local="no">qgsexpressionfunction.h</includes>
    <innerclass refid="classQgsExpressionFunction_1_1Parameter" prot="public">QgsExpressionFunction::Parameter</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classQgsExpressionFunction_1af8f1aaa201835de29f9e58d0ae726af2" prot="public" static="no">
        <type>QVariant(*</type>
        <definition>typedef QVariant( * QgsExpressionFunction::FcnEval) (const QVariantList &amp;values, const QgsExpressionContext *context, QgsExpression *parent, const QgsExpressionNodeFunction *node)</definition>
        <argsstring>)(const QVariantList &amp;values, const QgsExpressionContext *context, QgsExpression *parent, const QgsExpressionNodeFunction *node)</argsstring>
        <name>FcnEval</name>
        <briefdescription>
<para>Function definition for evaluation against an expression context, using a list of values as parameters to the function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="47" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" prot="public" static="no">
        <type>QList&lt; <ref refid="classQgsExpressionFunction_1_1Parameter" kindref="compound">QgsExpressionFunction::Parameter</ref> &gt;</type>
        <definition>typedef QList&lt; QgsExpressionFunction::Parameter &gt; QgsExpressionFunction::ParameterList</definition>
        <argsstring></argsstring>
        <name>ParameterList</name>
        <briefdescription>
<para>List of parameters, used for function definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="104" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsExpressionFunction_1a482b3d9b230256b50167ff1ba3640177" prot="private" static="no" mutable="no">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionFunction::mGroups</definition>
        <argsstring></argsstring>
        <name>mGroups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="336" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionFunction_1af2ec08032a5d07451f4742e5c7f0fab2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::mHandlesNull</definition>
        <argsstring></argsstring>
        <name>mHandlesNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="339" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionFunction_1a312ec0a1d45b19f72f6b17959c724d95" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsExpressionFunction::mHelpText</definition>
        <argsstring></argsstring>
        <name>mHelpText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="337" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionFunction_1aef93ce2f6d849f5a16e3676b2d69e5d0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::mIsContextual</definition>
        <argsstring></argsstring>
        <name>mIsContextual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="340" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionFunction_1a5b6f46ad7dad2f91bea329718723c55d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::mLazyEval</definition>
        <argsstring></argsstring>
        <name>mLazyEval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="338" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionFunction_1a163d718d0037d1d65d8e5ef2c54ac12b" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsExpressionFunction::mName</definition>
        <argsstring></argsstring>
        <name>mName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="333" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionFunction_1a5b43eac15bd0de052c23a558fbcabcfc" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" kindref="member">QgsExpressionFunction::ParameterList</ref></type>
        <definition>QgsExpressionFunction::ParameterList QgsExpressionFunction::mParameterList</definition>
        <argsstring></argsstring>
        <name>mParameterList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="335" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionFunction_1a83055f0c8228408b79297cda26234f72" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int QgsExpressionFunction::mParams</definition>
        <argsstring></argsstring>
        <name>mParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="334" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsExpressionFunction_1a2637c89917718ead50b08c760316c328" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionFunction::QgsExpressionFunction</definition>
        <argsstring>(const QString &amp;fnname, int params, const QString &amp;group, const QString &amp;helpText=QString(), bool lazyEval=false, bool handlesNull=false, bool isContextual=false)</argsstring>
        <name>QgsExpressionFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fnname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>helpText</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lazyEval</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>handlesNull</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isContextual</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor for function which uses unnamed parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="107" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="107" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a721f8a31e84ecf173278082ee6f345c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionFunction::QgsExpressionFunction</definition>
        <argsstring>(const QString &amp;fnname, int params, const QStringList &amp;groups, const QString &amp;helpText=QString(), bool lazyEval=false, bool handlesNull=false, bool isContextual=false)</argsstring>
        <name>QgsExpressionFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fnname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const QStringList &amp;</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>helpText</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lazyEval</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>handlesNull</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isContextual</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor for function which uses unnamed parameters and group list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="128" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="128" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1afc7af3ed9f0bb5da6c2e3df39b65fb06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionFunction::QgsExpressionFunction</definition>
        <argsstring>(const QString &amp;fnname, const QgsExpressionFunction::ParameterList &amp;params, const QString &amp;group, const QString &amp;helpText=QString(), bool lazyEval=false, bool handlesNull=false, bool isContextual=false)</argsstring>
        <name>QgsExpressionFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fnname</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" kindref="member">QgsExpressionFunction::ParameterList</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>helpText</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lazyEval</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>handlesNull</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isContextual</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor for function which uses named parameter list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="149" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="149" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a0a1834d566ebe3860d3772913b9a9fe3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionFunction::QgsExpressionFunction</definition>
        <argsstring>(const QString &amp;fnname, const QgsExpressionFunction::ParameterList &amp;params, const QStringList &amp;groups, const QString &amp;helpText=QString(), bool lazyEval=false, bool handlesNull=false, bool isContextual=false)</argsstring>
        <name>QgsExpressionFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fnname</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" kindref="member">QgsExpressionFunction::ParameterList</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const QStringList &amp;</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>helpText</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lazyEval</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>handlesNull</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isContextual</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor for function which uses named parameter list and group list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="170" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="170" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a4fcb413c419837eeb3b425d046048844" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QgsExpressionFunction::~QgsExpressionFunction</definition>
        <argsstring>()=default</argsstring>
        <name>~QgsExpressionFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a3df939a4995ff37fa1bd5c85f5c5b48a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionFunction::aliases</definition>
        <argsstring>() const</argsstring>
        <name>aliases</name>
        <reimplementedby refid="classQgsStaticExpressionFunction_1a2dfcda664509e799cd1da8bda2db4597">aliases</reimplementedby>
        <briefdescription>
<para>Returns a list of possible aliases for the function. </para>        </briefdescription>
        <detaileddescription>
<para>These include other permissible names for the function, e.g., deprecated names. <simplesect kind="return"><para>list of known aliases </para></simplesect>
<simplesect kind="since"><para>QGIS 2.9 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="225" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1aac3bdce16c2974dff049cdd6f9946d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>QVariant</type>
        <definition>virtual QVariant QgsExpressionFunction::func</definition>
        <argsstring>(const QVariantList &amp;values, const QgsExpressionContext *context, QgsExpression *parent, const QgsExpressionNodeFunction *node)=0</argsstring>
        <name>func</name>
        <reimplementedby refid="classQgsScopedExpressionFunction_1acada1c6e4c5d72c2a09813e34a841e1e">func</reimplementedby>
        <reimplementedby refid="classQgsStaticExpressionFunction_1a7a7adcee2172d46e7313cf6693b89dd4">func</reimplementedby>
        <reimplementedby refid="classQgsArrayForeachExpressionFunction_1a4cf4e8bb8b3567349c0c5b425306042f">func</reimplementedby>
        <reimplementedby refid="classQgsArrayFilterExpressionFunction_1a0f4dc712e3296b06d7658205b5880c8a">func</reimplementedby>
        <reimplementedby refid="classQgsWithVariableExpressionFunction_1aba04dbaad16dd33908fdf2324692c269">func</reimplementedby>
        <param>
          <type>const QVariantList &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Returns result of evaluating the function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>list of values passed to the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>context expression is being evaluated against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>parent expression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>expression node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result of function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1aa29b1d86d870e46689d02d9c0d7db236" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpressionFunction::group</definition>
        <argsstring>() const</argsstring>
        <name>group</name>
        <briefdescription>
<para>Returns the first group which the function belongs to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>consider using <ref refid="classQgsExpressionFunction_1a1b9cee2c24287bd685088a96471e66e9" kindref="member">groups()</ref> instead, as some functions naturally belong in multiple groups </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="283" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a1b9cee2c24287bd685088a96471e66e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionFunction::groups</definition>
        <argsstring>() const</argsstring>
        <name>groups</name>
        <briefdescription>
<para>Returns a list of the groups the function belongs to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionFunction_1aa29b1d86d870e46689d02d9c0d7db236" kindref="member">group()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="290" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="290" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1ac0b17f18a0e5280ec554d89ea5475b51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::handlesNull</definition>
        <argsstring>() const</argsstring>
        <name>handlesNull</name>
        <briefdescription>
<para>Returns true if the function handles NULL values in arguments by itself, and the default NULL value handling should be skipped. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="317" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1ad61ceb46aa3133a40d29300fdb73777c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsExpressionFunction::helpText</definition>
        <argsstring>() const</argsstring>
        <name>helpText</name>
        <briefdescription>
<para>The help text for the function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="293" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a0a6475c1b384c3654f2269dfc6e7a243" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::isContextual</definition>
        <argsstring>() const</argsstring>
        <name>isContextual</name>
        <briefdescription>
<para>Returns whether the function is only available if provided by a <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="270" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="270" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a324a412f350be861600cef3b4a07bd6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::isDeprecated</definition>
        <argsstring>() const</argsstring>
        <name>isDeprecated</name>
        <briefdescription>
<para>Returns true if the function is deprecated and should not be presented as a valid option to users in expression builders. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="277" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a399b81147422abf64c288d0c8b74b596" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::isStatic</definition>
        <argsstring>(const QgsExpressionNodeFunction *node, QgsExpression *parent, const QgsExpressionContext *context) const</argsstring>
        <name>isStatic</name>
        <reimplementedby refid="classQgsScopedExpressionFunction_1a7ad3bd625ded5491101d0409242a83c7">isStatic</reimplementedby>
        <reimplementedby refid="classQgsStaticExpressionFunction_1a7f813d148f6699c110bc2ee7459205e8">isStatic</reimplementedby>
        <reimplementedby refid="classQgsArrayForeachExpressionFunction_1ad3ba7218ca83abfab346ffd4ba39d901">isStatic</reimplementedby>
        <reimplementedby refid="classQgsArrayFilterExpressionFunction_1a355c899d3684d39156c678a943de2cf0">isStatic</reimplementedby>
        <reimplementedby refid="classQgsWithVariableExpressionFunction_1a3ae6eee9c8baf9518cf352515ef74d44">isStatic</reimplementedby>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Will be called during prepare to determine if the function is static. </para>        </briefdescription>
        <detaileddescription>
<para>A function is static if it will return the same value for every feature with different attributes and/or geometry.</para><para>By default this will return true, if all arguments that have been passed to the function are also static.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="244" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="103" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a3fb17cb0e65635ea646fd80ed1d51f8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::lazyEval</definition>
        <argsstring>() const</argsstring>
        <name>lazyEval</name>
        <briefdescription>
<para>True if this function should use lazy evaluation. </para>        </briefdescription>
        <detaileddescription>
<para>Lazy evaluation functions take QgsExpression::Node objects rather than the node results when called. You can use node-&gt;eval(parent, feature) to evaluate the node and return the result Functions are non lazy default and will be given the node return value when called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="232" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a70702a09951459dbb665622ba65c755e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int QgsExpressionFunction::minParams</definition>
        <argsstring>() const</argsstring>
        <name>minParams</name>
        <briefdescription>
<para>The minimum number of parameters this function takes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="196" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="196" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a75b3d6b9d50a8dd663465a42cce11848" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpressionFunction::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
<para>The name of the function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="190" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a22fc286594b6d3ba60d2a222a1ced67b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::operator==</definition>
        <argsstring>(const QgsExpressionFunction &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classQgsExpressionFunction" kindref="compound">QgsExpressionFunction</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="311" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1ab3056f181ae6085f89ca16639db00ed0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" kindref="member">QgsExpressionFunction::ParameterList</ref> &amp;</type>
        <definition>const QgsExpressionFunction::ParameterList&amp; QgsExpressionFunction::parameters</definition>
        <argsstring>() const</argsstring>
        <name>parameters</name>
        <briefdescription>
<para>Returns the list of named parameters for the function, if set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="214" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a14d5dbed8e5dd8fdcf7d5c02e18bbd7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int QgsExpressionFunction::params</definition>
        <argsstring>() const</argsstring>
        <name>params</name>
        <briefdescription>
<para>The number of parameters this function takes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="193" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1ac8dcaad4093a5831ff42d5b7755d43b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::prepare</definition>
        <argsstring>(const QgsExpressionNodeFunction *node, QgsExpression *parent, const QgsExpressionContext *context) const</argsstring>
        <name>prepare</name>
        <reimplementedby refid="classQgsStaticExpressionFunction_1a27a672f5175635643f8364d9bb3f965e">prepare</reimplementedby>
        <reimplementedby refid="classQgsArrayForeachExpressionFunction_1ae1a70b0d02632ca9ed2e157930bef369">prepare</reimplementedby>
        <reimplementedby refid="classQgsArrayFilterExpressionFunction_1a246849df0c3326f3153fcdb94a2ddd89">prepare</reimplementedby>
        <reimplementedby refid="classQgsWithVariableExpressionFunction_1aef5779c90afd23d3cbeed2157d016ba1">prepare</reimplementedby>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>This will be called during the prepare step() of an expression if it is not static. </para>        </briefdescription>
        <detaileddescription>
<para>This can be used by functions to do any preparation steps that might help to speedup the upcoming evaluation.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="254" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1abef6a1ef1af36137394c969371a23aed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpressionFunction::referencedColumns</definition>
        <argsstring>(const QgsExpressionNodeFunction *node) const</argsstring>
        <name>referencedColumns</name>
        <reimplementedby refid="classQgsScopedExpressionFunction_1a0cb1da28207af8c792ee22387dada1af">referencedColumns</reimplementedby>
        <reimplementedby refid="classQgsStaticExpressionFunction_1aedb887972621fc8c10b86c97ad561e8c">referencedColumns</reimplementedby>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Returns a set of field names which are required for this function. </para>        </briefdescription>
        <detaileddescription>
<para>May contain QgsFeatureRequest::AllAttributes to signal that all attributes are required. If in doubt this will return more fields than strictly required.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="264" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1a8cd98eda990f063851b333b5ebc2fbd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsExpressionFunction::run</definition>
        <argsstring>(QgsExpressionNode::NodeList *args, const QgsExpressionContext *context, QgsExpression *parent, const QgsExpressionNodeFunction *node)</argsstring>
        <name>run</name>
        <reimplementedby refid="classQgsArrayForeachExpressionFunction_1ad848b17a50efa2607f5999ea88280328">run</reimplementedby>
        <reimplementedby refid="classQgsArrayFilterExpressionFunction_1a9ccc3fab4cf22fc29b1f89e5e426df93">run</reimplementedby>
        <reimplementedby refid="classQgsWithVariableExpressionFunction_1a66cc71793c323c04a9f88311fb5142eb">run</reimplementedby>
        <param>
          <type><ref refid="classQgsExpressionNode_1_1NodeList" kindref="compound">QgsExpressionNode::NodeList</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Evaluates the function, first evaluating all required arguments before passing them to the function&apos;s <ref refid="classQgsExpressionFunction_1aac3bdce16c2974dff049cdd6f9946d6f" kindref="member">func()</ref> method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="309" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="59" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionFunction_1aea286ec1a3c8ced38d33b0544385924d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::usesGeometry</definition>
        <argsstring>(const QgsExpressionNodeFunction *node) const</argsstring>
        <name>usesGeometry</name>
        <reimplementedby refid="classQgsScopedExpressionFunction_1aa959787f4041762c1dd9fd018f15bb5b">usesGeometry</reimplementedby>
        <reimplementedby refid="classQgsStaticExpressionFunction_1af79223f2108220ac48dcc62064adb13f">usesGeometry</reimplementedby>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Does this function use a geometry object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="217" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="92" bodyend="96"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classQgsExpressionFunction_1a4b513026b2f50b370d62210acc38dbd9" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionFunction::allParamsStatic</definition>
        <argsstring>(const QgsExpressionNodeFunction *node, QgsExpression *parent, const QgsExpressionContext *context)</argsstring>
        <name>allParamsStatic</name>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>This will return true if all the params for the provided function <emphasis>node</emphasis> are static within the constraints imposed by the <emphasis>context</emphasis> within the given <emphasis>parent</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>This can be used as callback for custom implementations of subclasses. It is the default for implementation for StaticFunction::isStatic.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="330" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="214" bodyend="227"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A abstract base class for defining <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> functions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2855">
        <label>QgsWithVariableExpressionFunction</label>
        <link refid="classQgsWithVariableExpressionFunction"/>
        <childnode refid="2850" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2853">
        <label>QgsScopedExpressionFunction</label>
        <link refid="classQgsScopedExpressionFunction"/>
        <childnode refid="2850" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2854">
        <label>QgsStaticExpressionFunction</label>
        <link refid="classQgsStaticExpressionFunction"/>
        <childnode refid="2850" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2850">
        <label>QgsExpressionFunction</label>
        <link refid="classQgsExpressionFunction"/>
      </node>
      <node id="2852">
        <label>QgsArrayForeachExpressionFunction</label>
        <link refid="classQgsArrayForeachExpressionFunction"/>
        <childnode refid="2850" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2851">
        <label>QgsArrayFilterExpressionFunction</label>
        <link refid="classQgsArrayFilterExpressionFunction"/>
        <childnode refid="2850" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="41" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="40" bodyend="341"/>
    <listofallmembers>
      <member refid="classQgsExpressionFunction_1a3df939a4995ff37fa1bd5c85f5c5b48a" prot="public" virt="virtual"><scope>QgsExpressionFunction</scope><name>aliases</name></member>
      <member refid="classQgsExpressionFunction_1a4b513026b2f50b370d62210acc38dbd9" prot="protected" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>allParamsStatic</name></member>
      <member refid="classQgsExpressionFunction_1af8f1aaa201835de29f9e58d0ae726af2" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>FcnEval</name></member>
      <member refid="classQgsExpressionFunction_1aac3bdce16c2974dff049cdd6f9946d6f" prot="public" virt="pure-virtual"><scope>QgsExpressionFunction</scope><name>func</name></member>
      <member refid="classQgsExpressionFunction_1aa29b1d86d870e46689d02d9c0d7db236" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>group</name></member>
      <member refid="classQgsExpressionFunction_1a1b9cee2c24287bd685088a96471e66e9" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>groups</name></member>
      <member refid="classQgsExpressionFunction_1ac0b17f18a0e5280ec554d89ea5475b51" prot="public" virt="virtual"><scope>QgsExpressionFunction</scope><name>handlesNull</name></member>
      <member refid="classQgsExpressionFunction_1ad61ceb46aa3133a40d29300fdb73777c" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>helpText</name></member>
      <member refid="classQgsExpressionFunction_1a0a6475c1b384c3654f2269dfc6e7a243" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>isContextual</name></member>
      <member refid="classQgsExpressionFunction_1a324a412f350be861600cef3b4a07bd6e" prot="public" virt="virtual"><scope>QgsExpressionFunction</scope><name>isDeprecated</name></member>
      <member refid="classQgsExpressionFunction_1a399b81147422abf64c288d0c8b74b596" prot="public" virt="virtual"><scope>QgsExpressionFunction</scope><name>isStatic</name></member>
      <member refid="classQgsExpressionFunction_1a3fb17cb0e65635ea646fd80ed1d51f8c" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>lazyEval</name></member>
      <member refid="classQgsExpressionFunction_1a482b3d9b230256b50167ff1ba3640177" prot="private" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>mGroups</name></member>
      <member refid="classQgsExpressionFunction_1af2ec08032a5d07451f4742e5c7f0fab2" prot="private" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>mHandlesNull</name></member>
      <member refid="classQgsExpressionFunction_1a312ec0a1d45b19f72f6b17959c724d95" prot="private" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>mHelpText</name></member>
      <member refid="classQgsExpressionFunction_1a70702a09951459dbb665622ba65c755e" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>minParams</name></member>
      <member refid="classQgsExpressionFunction_1aef93ce2f6d849f5a16e3676b2d69e5d0" prot="private" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>mIsContextual</name></member>
      <member refid="classQgsExpressionFunction_1a5b6f46ad7dad2f91bea329718723c55d" prot="private" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>mLazyEval</name></member>
      <member refid="classQgsExpressionFunction_1a163d718d0037d1d65d8e5ef2c54ac12b" prot="private" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>mName</name></member>
      <member refid="classQgsExpressionFunction_1a5b43eac15bd0de052c23a558fbcabcfc" prot="private" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>mParameterList</name></member>
      <member refid="classQgsExpressionFunction_1a83055f0c8228408b79297cda26234f72" prot="private" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>mParams</name></member>
      <member refid="classQgsExpressionFunction_1a75b3d6b9d50a8dd663465a42cce11848" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>name</name></member>
      <member refid="classQgsExpressionFunction_1a22fc286594b6d3ba60d2a222a1ced67b" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>operator==</name></member>
      <member refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>ParameterList</name></member>
      <member refid="classQgsExpressionFunction_1ab3056f181ae6085f89ca16639db00ed0" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>parameters</name></member>
      <member refid="classQgsExpressionFunction_1a14d5dbed8e5dd8fdcf7d5c02e18bbd7d" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>params</name></member>
      <member refid="classQgsExpressionFunction_1ac8dcaad4093a5831ff42d5b7755d43b1" prot="public" virt="virtual"><scope>QgsExpressionFunction</scope><name>prepare</name></member>
      <member refid="classQgsExpressionFunction_1a2637c89917718ead50b08c760316c328" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1a721f8a31e84ecf173278082ee6f345c3" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1afc7af3ed9f0bb5da6c2e3df39b65fb06" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1a0a1834d566ebe3860d3772913b9a9fe3" prot="public" virt="non-virtual"><scope>QgsExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1abef6a1ef1af36137394c969371a23aed" prot="public" virt="virtual"><scope>QgsExpressionFunction</scope><name>referencedColumns</name></member>
      <member refid="classQgsExpressionFunction_1a8cd98eda990f063851b333b5ebc2fbd5" prot="public" virt="virtual"><scope>QgsExpressionFunction</scope><name>run</name></member>
      <member refid="classQgsExpressionFunction_1aea286ec1a3c8ced38d33b0544385924d" prot="public" virt="virtual"><scope>QgsExpressionFunction</scope><name>usesGeometry</name></member>
      <member refid="classQgsExpressionFunction_1a4fcb413c419837eeb3b425d046048844" prot="public" virt="virtual"><scope>QgsExpressionFunction</scope><name>~QgsExpressionFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
