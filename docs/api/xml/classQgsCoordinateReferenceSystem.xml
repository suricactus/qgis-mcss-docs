<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsCoordinateReferenceSystem" kind="class" language="C++" prot="public">
    <compoundname>QgsCoordinateReferenceSystem</compoundname>
    <includes refid="qgscoordinatereferencesystem_8h" local="no">qgscoordinatereferencesystem.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cf" prot="public" static="no">
        <name>CrsType</name>
        <enumvalue id="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cfabc92b4ee3c6be188b5dfe000ddac415e" prot="public">
          <name>InternalCrsId</name>
          <briefdescription>
<para>Internal ID used by QGIS in the local SQLite database. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cfae88ca07f39092200cb8f0ac4328551a5" prot="public">
          <name>PostgisCrsId</name>
          <briefdescription>
<para>SRID used in PostGIS. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cfaa999f03c89ccddb4fb57570089de576b" prot="public">
          <name>EpsgCrsId</name>
          <briefdescription>
<para>EPSG code. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of types of IDs accepted in <ref refid="classQgsCoordinateReferenceSystem_1a7b1cc27b6feeb0c798176b034644c421" kindref="member">createFromId()</ref> method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="199" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="198" bodyend="203"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classQgsCoordinateReferenceSystem_1a238dfb729c699d5e3f6d37f7527991b0" prot="private" static="no">
        <type>QMap&lt; QString, QString &gt;</type>
        <definition>typedef QMap&lt;QString, QString&gt; QgsCoordinateReferenceSystem::RecordMap</definition>
        <argsstring></argsstring>
        <name>RecordMap</name>
        <briefdescription>
<para>A string based associative array used for passing records around. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="721" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="classQgsCoordinateReferenceSystem_1a79949e22a654073dcc4f8d1810f07c5f" prot="public" static="no" readable="yes" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="classQgsUnitTypes_1a0602e8a06afd37c267e9e532bb27f50d" kindref="member">QgsUnitTypes::DistanceUnit</ref></type>
        <definition>QgsUnitTypes::DistanceUnit QgsCoordinateReferenceSystem::mapUnits</definition>
        <argsstring></argsstring>
        <name>mapUnits</name>
        <read>mapUnits</read>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="191" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1ac77b89ce0dda140df8b624559191d58e" prot="private" static="no" mutable="no">
        <type>QExplicitlySharedDataPointer&lt; QgsCoordinateReferenceSystemPrivate &gt;</type>
        <definition>QExplicitlySharedDataPointer&lt;QgsCoordinateReferenceSystemPrivate&gt; QgsCoordinateReferenceSystem::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="755" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="755" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1a00027ee17ae6306f819322fe8ee6dc8d" prot="private" static="yes" mutable="no">
        <type><ref refid="qgscoordinatereferencesystem_8h_1ae594353fae7a3563d756927092d45f74" kindref="member">CUSTOM_CRS_VALIDATION</ref></type>
        <definition>CUSTOM_CRS_VALIDATION QgsCoordinateReferenceSystem::mCustomSrsValidation</definition>
        <argsstring></argsstring>
        <name>mCustomSrsValidation</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Function for CRS validation. May be null. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="758" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1ac8dfb3df64a0f2b266b1704a6e9dd2ea" prot="private" static="yes" mutable="no">
        <type>QReadWriteLock</type>
        <definition>QReadWriteLock QgsCoordinateReferenceSystem::sCRSSrsIdLock</definition>
        <argsstring></argsstring>
        <name>sCRSSrsIdLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="771" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1a5263cd7fac86d4efeebb1d9b0b864625" prot="private" static="yes" mutable="no">
        <type>QReadWriteLock</type>
        <definition>QReadWriteLock QgsCoordinateReferenceSystem::sCrsStringLock</definition>
        <argsstring></argsstring>
        <name>sCrsStringLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="773" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1a238b5147c9b889523d7626cd189b5bd5" prot="private" static="yes" mutable="no">
        <type>QReadWriteLock</type>
        <definition>QReadWriteLock QgsCoordinateReferenceSystem::sCRSWktLock</definition>
        <argsstring></argsstring>
        <name>sCRSWktLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="769" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1a1c8e1eb79521df3b71040a96dfadfa9d" prot="private" static="yes" mutable="no">
        <type>QHash&lt; QString, <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &gt;</type>
        <definition>QHash&lt; QString, QgsCoordinateReferenceSystem &gt; QgsCoordinateReferenceSystem::sOgcCache</definition>
        <argsstring></argsstring>
        <name>sOgcCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="766" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1a2c74400509939c55d1904782256f435b" prot="private" static="yes" mutable="no">
        <type>QReadWriteLock</type>
        <definition>QReadWriteLock QgsCoordinateReferenceSystem::sOgcLock</definition>
        <argsstring></argsstring>
        <name>sOgcLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="765" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1ad0f1c77d0b11b5641b7c71ffb35f9346" prot="private" static="yes" mutable="no">
        <type>QHash&lt; QString, <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &gt;</type>
        <definition>QHash&lt; QString, QgsCoordinateReferenceSystem &gt; QgsCoordinateReferenceSystem::sProj4Cache</definition>
        <argsstring></argsstring>
        <name>sProj4Cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="768" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="768" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1a09107882e342df7f9934adb23556be5c" prot="private" static="yes" mutable="no">
        <type>QReadWriteLock</type>
        <definition>QReadWriteLock QgsCoordinateReferenceSystem::sProj4CacheLock</definition>
        <argsstring></argsstring>
        <name>sProj4CacheLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="767" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1af24ec3ec9215b73c331ea56b909c916e" prot="private" static="yes" mutable="no">
        <type>QHash&lt; long, <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &gt;</type>
        <definition>QHash&lt; long, QgsCoordinateReferenceSystem &gt; QgsCoordinateReferenceSystem::sSrIdCache</definition>
        <argsstring></argsstring>
        <name>sSrIdCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="764" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1ab0fad36fdaa97c03f85659e6c4637523" prot="private" static="yes" mutable="no">
        <type>QReadWriteLock</type>
        <definition>QReadWriteLock QgsCoordinateReferenceSystem::sSrIdCacheLock</definition>
        <argsstring></argsstring>
        <name>sSrIdCacheLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="763" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1a8360b8abe2b9185709b260f38e8edef6" prot="private" static="yes" mutable="no">
        <type>QHash&lt; long, <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &gt;</type>
        <definition>QHash&lt; long, QgsCoordinateReferenceSystem &gt; QgsCoordinateReferenceSystem::sSrsIdCache</definition>
        <argsstring></argsstring>
        <name>sSrsIdCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="772" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="772" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1a5a558ad8353ff21a608a148c4e62f345" prot="private" static="yes" mutable="no">
        <type>QHash&lt; QString, <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &gt;</type>
        <definition>QHash&lt; QString, QgsCoordinateReferenceSystem &gt; QgsCoordinateReferenceSystem::sStringCache</definition>
        <argsstring></argsstring>
        <name>sStringCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="774" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsCoordinateReferenceSystem_1ad50b67580dc7ac9b11df5da336aff996" prot="private" static="yes" mutable="no">
        <type>QHash&lt; QString, <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &gt;</type>
        <definition>QHash&lt; QString, QgsCoordinateReferenceSystem &gt; QgsCoordinateReferenceSystem::sWktCache</definition>
        <argsstring></argsstring>
        <name>sWktCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="770" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="770" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classQgsCoordinateReferenceSystem_1ac002c7f5ba79da1b89df86913b4fc1f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TestQgsCoordinateReferenceSystem</definition>
        <argsstring></argsstring>
        <name>TestQgsCoordinateReferenceSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="776" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="776" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a51fef08cdc3353f9c6d5073981cefdc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsCoordinateReferenceSystem::QgsCoordinateReferenceSystem</definition>
        <argsstring>()</argsstring>
        <name>QgsCoordinateReferenceSystem</name>
        <briefdescription>
<para>Constructs an invalid CRS object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="206" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a2155dc5b81655f328ced767f3ccd2602" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsCoordinateReferenceSystem::QgsCoordinateReferenceSystem</definition>
        <argsstring>(const QString &amp;definition)</argsstring>
        <name>QgsCoordinateReferenceSystem</name>
        <param>
          <type>const QString &amp;</type>
          <declname>definition</declname>
        </param>
        <briefdescription>
<para>Constructs a CRS object from a string definition using <ref refid="classQgsCoordinateReferenceSystem_1a0b233da61bdfd4f6cdc9e43af21044ed" kindref="member">createFromString()</ref> </para>        </briefdescription>
        <detaileddescription>
<para>It supports the following formats:<itemizedlist>
<listitem><para>&quot;EPSG:&lt;code&gt;&quot; - handled with createFromOgcWms()</para></listitem><listitem><para>&quot;POSTGIS:&lt;srid&gt;&quot; - handled with <ref refid="classQgsCoordinateReferenceSystem_1ab5e8107d5d4aa3c08e3a6d570a78915e" kindref="member">createFromSrid()</ref></para></listitem><listitem><para>&quot;INTERNAL:&lt;srsid&gt;&quot; - handled with <ref refid="classQgsCoordinateReferenceSystem_1a7ad5a7957fa06c24db1f831cb9f0a052" kindref="member">createFromSrsId()</ref></para></listitem><listitem><para>&quot;PROJ4:&lt;proj4&gt;&quot; - handled with <ref refid="classQgsCoordinateReferenceSystem_1a1edc7752a75a3b3753d6079957b61f9b" kindref="member">createFromProj4()</ref></para></listitem><listitem><para>&quot;WKT:&lt;wkt&gt;&quot; - handled with <ref refid="classQgsCoordinateReferenceSystem_1a08876a710bfc24adaa30a345d9408367" kindref="member">createFromWkt()</ref></para></listitem></itemizedlist>
</para><para>If no prefix is specified, WKT definition is assumed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>definition</parametername>
</parameternamelist>
<parameterdescription>
<para>A String containing a coordinate reference system definition. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a0b233da61bdfd4f6cdc9e43af21044ed" kindref="member">createFromString()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="224" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1aab2aeb3e8d3888dd35778701af683a78" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsCoordinateReferenceSystem::QgsCoordinateReferenceSystem</definition>
        <argsstring>(long id, CrsType type=PostgisCrsId)</argsstring>
        <name>QgsCoordinateReferenceSystem</name>
        <param>
          <type>long</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cf" kindref="member">CrsType</ref></type>
          <declname>type</declname>
          <defval><ref refid="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cfae88ca07f39092200cb8f0ac4328551a5" kindref="member">PostgisCrsId</ref></defval>
        </param>
        <briefdescription>
<para>Constructor a CRS object using a PostGIS SRID, an EPSG code or an internal QGIS CRS ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>We encourage you to use EPSG code, WKT or Proj4 to describe CRS&apos;s in your code wherever possible. Internal QGIS CRS IDs are not guaranteed to be permanent / involatile. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID valid for the chosen CRS ID type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the types described in CrsType </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="233" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1ace0cb3e77a0bbd8080c68b60c8bafc1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsCoordinateReferenceSystem::QgsCoordinateReferenceSystem</definition>
        <argsstring>(const QgsCoordinateReferenceSystem &amp;srs)</argsstring>
        <name>QgsCoordinateReferenceSystem</name>
        <param>
          <type>const <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &amp;</type>
          <declname>srs</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="236" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a11b56d68ff28a4c7505e097336de7a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsCoordinateReferenceSystem::~QgsCoordinateReferenceSystem</definition>
        <argsstring>()</argsstring>
        <name>~QgsCoordinateReferenceSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="208" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1ab2dee1805d8e3b62448e4d106753b595" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsCoordinateReferenceSystem::authid</definition>
        <argsstring>() const</argsstring>
        <name>authid</name>
        <briefdescription>
<para>Returns the authority identifier for the CRS. </para>        </briefdescription>
        <detaileddescription>
<para>The identifier includes both the authority (e.g., EPSG) and the CRS number (e.g., 4326). This is the best method to use when showing a very short CRS identifier to a user, e.g., &quot;EPSG:4326&quot;.</para><para>If CRS object is a custom CRS (not found in database), the method will return internal QGIS CRS ID with &quot;QGIS&quot; authority, for example &quot;QGIS:100005&quot; <simplesect kind="return"><para>the authority identifier for this CRS </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a2888185eab7e7bf2f7d80ffe2b274224" kindref="member">description()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="522" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="981" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a133fc56cc73dffa0baf91d945a42b536" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref></type>
        <definition>QgsRectangle QgsCoordinateReferenceSystem::bounds</definition>
        <argsstring>() const</argsstring>
        <name>bounds</name>
        <briefdescription>
<para>Returns the approximate bounds for the region the CRS is usable within. </para>        </briefdescription>
        <detaileddescription>
<para>The returned bounds represent the latitude and longitude extent for the projection in the WGS 84 CRS.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="594" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1051" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a7b1cc27b6feeb0c798176b034644c421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::createFromId</definition>
        <argsstring>(long id, CrsType type=PostgisCrsId)</argsstring>
        <name>createFromId</name>
        <param>
          <type>long</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cf" kindref="member">CrsType</ref></type>
          <declname>type</declname>
          <defval><ref refid="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cfae88ca07f39092200cb8f0ac4328551a5" kindref="member">PostgisCrsId</ref></defval>
        </param>
        <briefdescription>
<para>Sets this CRS by lookup of the given ID in the CRS database. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True on success else false </para></simplesect>
<simplesect kind="note"><para>We encourage you to use EPSG code, WKT or Proj4 to describe CRS&apos;s in your code wherever possible. Internal QGIS CRS IDs are not guaranteed to be permanent / involatile. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="311" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="193" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a07523ae2730845c275ca96ee5acf095e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::createFromOgcWmsCrs</definition>
        <argsstring>(const QString &amp;crs)</argsstring>
        <name>createFromOgcWmsCrs</name>
        <param>
          <type>const QString &amp;</type>
          <declname>crs</declname>
        </param>
        <briefdescription>
<para>Sets this CRS to the given OGC WMS-format Coordinate Reference Systems. </para>        </briefdescription>
        <detaileddescription>
<para>Accepts both &quot;&lt;auth&gt;:&lt;code&gt;&quot; format and OGC URN &quot;urn:ogc:def:crs:&lt;auth&gt;:[&lt;version&gt;]:&lt;code&gt;&quot;. It also recognizes &quot;QGIS&quot;, &quot;USER&quot;, &quot;CUSTOM&quot; authorities, which all have the same meaning and refer to QGIS internal CRS IDs. <simplesect kind="return"><para>True on success else false </para></simplesect>
<simplesect kind="note"><para>this method uses an internal cache. Call <ref refid="classQgsCoordinateReferenceSystem_1a4e869297fba5f0ea801f44cd756b6b52" kindref="member">invalidateCache()</ref> to clear the cache. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a0213a21ebf445a417db751b1e5da7afe" kindref="member">fromOgcWmsCrs()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="323" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="321" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a1edc7752a75a3b3753d6079957b61f9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::createFromProj4</definition>
        <argsstring>(const QString &amp;projString)</argsstring>
        <name>createFromProj4</name>
        <param>
          <type>const QString &amp;</type>
          <declname>projString</declname>
        </param>
        <briefdescription>
<para>Sets this CRS by passing it a PROJ style formatted string. </para>        </briefdescription>
        <detaileddescription>
<para>The string will be parsed and the projection and ellipsoid members set and the remainder of the proj4 string will be stored in the parameters member. The reason for this is so that we can easily present the user with &apos;natural language&apos; representation of the projection and ellipsoid by looking them up in the srs.db sqlite database.</para><para>We try to match the proj4 string to internal QGIS CRS ID using the following logic:</para><para><itemizedlist>
<listitem><para>perform a whole text search on proj4 string (if not null)</para></listitem><listitem><para>if not match is found, split proj4 into individual parameters and try to find a match where the parameters are in a different order</para></listitem><listitem><para>if none of the above match, use <ref refid="classQgsCoordinateReferenceSystem_1a3dcef003135c7bf9de91c79e6d9a54bb" kindref="member">findMatchingProj()</ref></para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>projString</parametername>
</parameternamelist>
<parameterdescription>
<para>A proj4 format string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on success else false </para></simplesect>
<simplesect kind="note"><para>Some members may be left blank if no match can be found in CRS database. </para></simplesect>
<simplesect kind="note"><para>this method uses an internal cache. Call <ref refid="classQgsCoordinateReferenceSystem_1a4e869297fba5f0ea801f44cd756b6b52" kindref="member">invalidateCache()</ref> to clear the cache. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1afebf8e84e1ca648f50a407ce3cc7ab88" kindref="member">fromProj4()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="382" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="675" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1ab5e8107d5d4aa3c08e3a6d570a78915e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::createFromSrid</definition>
        <argsstring>(long srid)</argsstring>
        <name>createFromSrid</name>
        <param>
          <type>long</type>
          <declname>srid</declname>
        </param>
        <briefdescription>
<para>Sets this CRS by lookup of the given PostGIS SRID in the CRS database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srid</parametername>
</parameternamelist>
<parameterdescription>
<para>The PostGIS SRID for the desired spatial reference system. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on success else false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="330" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="420" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a7ad5a7957fa06c24db1f831cb9f0a052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::createFromSrsId</definition>
        <argsstring>(long srsId)</argsstring>
        <name>createFromSrsId</name>
        <param>
          <type>long</type>
          <declname>srsId</declname>
        </param>
        <briefdescription>
<para>Sets this CRS by lookup of internal QGIS CRS ID in the CRS database. </para>        </briefdescription>
        <detaileddescription>
<para>If the srsid is &lt; USER_CRS_START_ID, system CRS database is used, otherwise user&apos;s local CRS database from home directory is used. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srsId</parametername>
</parameternamelist>
<parameterdescription>
<para>The internal QGIS CRS ID for the desired spatial reference system. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on success else false </para></simplesect>
<simplesect kind="note"><para>this method uses an internal cache. Call <ref refid="classQgsCoordinateReferenceSystem_1a4e869297fba5f0ea801f44cd756b6b52" kindref="member">invalidateCache()</ref> to clear the cache. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1ac8d137de30c09b41c96033aa31d14bf1" kindref="member">fromSrsId()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="357" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="442" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a0b233da61bdfd4f6cdc9e43af21044ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::createFromString</definition>
        <argsstring>(const QString &amp;definition)</argsstring>
        <name>createFromString</name>
        <param>
          <type>const QString &amp;</type>
          <declname>definition</declname>
        </param>
        <briefdescription>
<para>Set up this CRS from a string definition. </para>        </briefdescription>
        <detaileddescription>
<para>It supports the following formats:<itemizedlist>
<listitem><para>&quot;EPSG:&lt;code&gt;&quot; - handled with createFromOgcWms()</para></listitem><listitem><para>&quot;POSTGIS:&lt;srid&gt;&quot; - handled with <ref refid="classQgsCoordinateReferenceSystem_1ab5e8107d5d4aa3c08e3a6d570a78915e" kindref="member">createFromSrid()</ref></para></listitem><listitem><para>&quot;INTERNAL:&lt;srsid&gt;&quot; - handled with <ref refid="classQgsCoordinateReferenceSystem_1a7ad5a7957fa06c24db1f831cb9f0a052" kindref="member">createFromSrsId()</ref></para></listitem><listitem><para>&quot;PROJ4:&lt;proj4&gt;&quot; - handled with <ref refid="classQgsCoordinateReferenceSystem_1a1edc7752a75a3b3753d6079957b61f9b" kindref="member">createFromProj4()</ref></para></listitem><listitem><para>&quot;WKT:&lt;wkt&gt;&quot; - handled with <ref refid="classQgsCoordinateReferenceSystem_1a08876a710bfc24adaa30a345d9408367" kindref="member">createFromWkt()</ref></para></listitem></itemizedlist>
</para><para>If no prefix is specified, WKT definition is assumed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>definition</parametername>
</parameternamelist>
<parameterdescription>
<para>A String containing a coordinate reference system definition. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on success else false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="398" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="214" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a51e619c7d985c4496aed33fc1dcbb657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::createFromUserInput</definition>
        <argsstring>(const QString &amp;definition)</argsstring>
        <name>createFromUserInput</name>
        <param>
          <type>const QString &amp;</type>
          <declname>definition</declname>
        </param>
        <briefdescription>
<para>Set up this CRS from various text formats. </para>        </briefdescription>
        <detaileddescription>
<para>Valid formats: WKT string, &quot;EPSG:n&quot;, &quot;EPSGA:n&quot;, &quot;AUTO:proj_id,unit_id,lon0,lat0&quot;, &quot;urn:ogc:def:crs:EPSG::n&quot;, PROJ string, filename (with WKT, XML or PROJ string), well known name (such as NAD27, NAD83, WGS84 or WGS72), ESRI::[WKT string] (directly or in a file), &quot;IGNF:xxx&quot;</para><para>For more details on supported formats see OGRSpatialReference::SetFromUserInput() ( <ulink url="http://www.gdal.org/ogr/classOGRSpatialReference.html#aec3c6a49533fe457ddc763d699ff8796">http://www.gdal.org/ogr/classOGRSpatialReference.html#aec3c6a49533fe457ddc763d699ff8796</ulink> ) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>definition</parametername>
</parameternamelist>
<parameterdescription>
<para>A String containing a coordinate reference system definition. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on success else false </para></simplesect>
<simplesect kind="note"><para>this function generates a WKT string using OSRSetFromUserInput() and passes it to <ref refid="classQgsCoordinateReferenceSystem_1a08876a710bfc24adaa30a345d9408367" kindref="member">createFromWkt()</ref> function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="415" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="275" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a08876a710bfc24adaa30a345d9408367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::createFromWkt</definition>
        <argsstring>(const QString &amp;wkt)</argsstring>
        <name>createFromWkt</name>
        <param>
          <type>const QString &amp;</type>
          <declname>wkt</declname>
        </param>
        <briefdescription>
<para>Sets this CRS using a WKT definition. </para>        </briefdescription>
        <detaileddescription>
<para>If EPSG code of the WKT definition can be determined, it is extracted and <ref refid="classQgsCoordinateReferenceSystem_1a07523ae2730845c275ca96ee5acf095e" kindref="member">createFromOgcWmsCrs()</ref> is used to initialize the object. Otherwise the WKT will be converted to a proj4 string and <ref refid="classQgsCoordinateReferenceSystem_1a1edc7752a75a3b3753d6079957b61f9b" kindref="member">createFromProj4()</ref> set up the object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wkt</parametername>
</parameternamelist>
<parameterdescription>
<para>The WKT for the desired spatial reference system. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on success else false </para></simplesect>
<simplesect kind="note"><para>Some members may be left blank if no match can be found in CRS database. </para></simplesect>
<simplesect kind="note"><para>this method uses an internal cache. Call <ref refid="classQgsCoordinateReferenceSystem_1a4e869297fba5f0ea801f44cd756b6b52" kindref="member">invalidateCache()</ref> to clear the cache. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1ac567ae2a9264c460dbdd87ab6baded83" kindref="member">fromWkt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="345" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="571" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a2888185eab7e7bf2f7d80ffe2b274224" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsCoordinateReferenceSystem::description</definition>
        <argsstring>() const</argsstring>
        <name>description</name>
        <briefdescription>
<para>Returns the descriptive name of the CRS, e.g., &quot;WGS 84&quot; or &quot;GDA 94 / Vicgrid94&quot;. </para>        </briefdescription>
        <detaileddescription>
<para>In most cases this is the best method to use when showing a friendly identifier for the CRS to a user. <simplesect kind="return"><para>descriptive name of the CRS </para></simplesect>
<simplesect kind="note"><para>an empty string will be returned if the description is not available for the CRS </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1ab2dee1805d8e3b62448e4d106753b595" kindref="member">authid()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="532" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="986" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a23384af6f9401c380effc74a1d5d8713" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsCoordinateReferenceSystem::ellipsoidAcronym</definition>
        <argsstring>() const</argsstring>
        <name>ellipsoidAcronym</name>
        <briefdescription>
<para>Returns the ellipsoid acronym for the ellipsoid used by the CRS. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the official proj4 acronym for the ellipoid </para></simplesect>
<simplesect kind="note"><para>an empty string will be returned if the ellipsoidAcronym is not available for the CRS </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a4ae7f768ca2efd1d7b7f5bf1c795c61a" kindref="member">projectionAcronym()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="548" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1010" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a3dcef003135c7bf9de91c79e6d9a54bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long QgsCoordinateReferenceSystem::findMatchingProj</definition>
        <argsstring>()</argsstring>
        <name>findMatchingProj</name>
        <briefdescription>
<para>Walks the CRS databases (both system and user database) trying to match stored PROJ string to a database entry in order to fill in further pieces of information about CRS. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The ellipsoid and projection acronyms must be set as well as the proj4string! </para></simplesect>
<simplesect kind="return"><para>long the SrsId of the matched CRS, zero if no match was found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="451" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1222" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1acfd9eae9ba8c7b80142dc4033991da07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsCoordinateReferenceSystem::geographicCrsAuthId</definition>
        <argsstring>() const</argsstring>
        <name>geographicCrsAuthId</name>
        <briefdescription>
<para>Returns auth id of related geographic CRS. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="625" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="2354" bodyend="2368"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1aecc077365492da22796fe7c702616406" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::hasAxisInverted</definition>
        <argsstring>() const</argsstring>
        <name>hasAxisInverted</name>
        <briefdescription>
<para>Returns whether axis is inverted (e.g., for WMS 1.3) for the CRS. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if CRS axis is inverted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="579" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="544" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a277cab862bc3e29bd5057bc38ebe4943" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::isGeographic</definition>
        <argsstring>() const</argsstring>
        <name>isGeographic</name>
        <briefdescription>
<para>Returns whether the CRS is a geographic CRS (using lat/lon coordinates) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if CRS is geographic, or false if it is a projected CRS </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="573" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1038" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a077267450cec872305c6690de5b5b09c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Returns whether this CRS is correctly initialized and usable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="429" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="670" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a3c12b38470f974a6c36625988fdf9859" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsUnitTypes_1a0602e8a06afd37c267e9e532bb27f50d" kindref="member">QgsUnitTypes::DistanceUnit</ref></type>
        <definition>QgsUnitTypes::DistanceUnit QgsCoordinateReferenceSystem::mapUnits</definition>
        <argsstring>() const</argsstring>
        <name>mapUnits</name>
        <briefdescription>
<para>Returns the units for the projection used by the CRS. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="584" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a1f6176f96bdc9d6abd9e62e69d9aa9a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsCoordinateReferenceSystem::operator QVariant</definition>
        <argsstring>() const</argsstring>
        <name>operator QVariant</name>
        <briefdescription>
<para>Allows direct construction of QVariants from <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="242" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a54ce7fefe585a1e534580468138a0cb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::operator!=</definition>
        <argsstring>(const QgsCoordinateReferenceSystem &amp;srs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &amp;</type>
          <declname>srs</declname>
        </param>
        <briefdescription>
<para>Overloaded != operator used to compare to CRS&apos;s. </para>        </briefdescription>
        <detaileddescription>
<para>Returns opposite bool value to operator == </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="465" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1304" bodyend="1307"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a82e312eac028563b73c045c61bbac266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &amp;</type>
        <definition>QgsCoordinateReferenceSystem &amp; QgsCoordinateReferenceSystem::operator=</definition>
        <argsstring>(const QgsCoordinateReferenceSystem &amp;srs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &amp;</type>
          <declname>srs</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="239" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a4ac56deae42db141632511530258e3dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::operator==</definition>
        <argsstring>(const QgsCoordinateReferenceSystem &amp;srs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &amp;</type>
          <declname>srs</declname>
        </param>
        <briefdescription>
<para>Overloaded == operator used to compare to CRS&apos;s. </para>        </briefdescription>
        <detaileddescription>
<para>Internally it will use <ref refid="classQgsCoordinateReferenceSystem_1ab2dee1805d8e3b62448e4d106753b595" kindref="member">authid()</ref> for comparison. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="458" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1298" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a289b8b7295fdebe393ec2d937b5ff8d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long QgsCoordinateReferenceSystem::postgisSrid</definition>
        <argsstring>() const</argsstring>
        <name>postgisSrid</name>
        <briefdescription>
<para>Returns PostGIS SRID for the CRS. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the PostGIS spatial_ref_sys identifier for this CRS (defaults to 0) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="508" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="976" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a4ae7f768ca2efd1d7b7f5bf1c795c61a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsCoordinateReferenceSystem::projectionAcronym</definition>
        <argsstring>() const</argsstring>
        <name>projectionAcronym</name>
        <briefdescription>
<para>Returns the projection acronym for the projection used by the CRS. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the official proj4 acronym for the projection family </para></simplesect>
<simplesect kind="note"><para>an empty string will be returned if the projectionAcronym is not available for the CRS </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a23384af6f9401c380effc74a1d5d8713" kindref="member">ellipsoidAcronym()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="540" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="998" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a183c17d37be47503fc9592cd18bac586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::readXml</definition>
        <argsstring>(const QDomNode &amp;node)</argsstring>
        <name>readXml</name>
        <param>
          <type>const QDomNode &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Restores state from the given DOM node. </para>        </briefdescription>
        <detaileddescription>
<para>If it fails or if the node is empty, a default empty CRS will be returned. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node from which state will be restored </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True on success, False on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="473" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1323" bodyend="1426"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a70f8049289da491c0584b7291e122502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long QgsCoordinateReferenceSystem::saveAsUserCrs</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>saveAsUserCrs</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Save the proj4-string as a custom CRS. </para>        </briefdescription>
        <detaileddescription>
<para>Copied from QgsCustomProjectionDialog /// Please refactor into SQL handler !!! ///.</para><para>Returns the new CRS <ref refid="classQgsCoordinateReferenceSystem_1ae4ea9435d989c13d536635563a3ad71e" kindref="member">srsid()</ref>, or -1 if the CRS could not be saved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="622" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1603" bodyend="1689"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a40171c3b7c249bc4ae9dbb926cd02171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setValidationHint</definition>
        <argsstring>(const QString &amp;html)</argsstring>
        <name>setValidationHint</name>
        <param>
          <type>const QString &amp;</type>
          <declname>html</declname>
        </param>
        <briefdescription>
<para>Set user hint for validation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="601" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1589" bodyend="1593"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1ae4ea9435d989c13d536635563a3ad71e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long QgsCoordinateReferenceSystem::srsid</definition>
        <argsstring>() const</argsstring>
        <name>srsid</name>
        <briefdescription>
<para>Returns the internal CRS ID, if available. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the internal sqlite3 srs.db primary key for this CRS </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="502" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="971" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a433853323df4837869a2a8c2ad7521ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsCoordinateReferenceSystem::toProj4</definition>
        <argsstring>() const</argsstring>
        <name>toProj4</name>
        <briefdescription>
<para>Returns a Proj4 string representation of this CRS. </para>        </briefdescription>
        <detaileddescription>
<para>If proj and ellps keys are found in the parameters, they will be stripped out and the projection and ellipsoid acronyms will be overridden with these. <simplesect kind="return"><para>Proj4 format string that defines this CRS. </para></simplesect>
<simplesect kind="note"><para>an empty string will be returned if the CRS could not be represented by a Proj4 string </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1ad0a46c5e28ecb31a4b160931ab96d0a3" kindref="member">toWkt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="567" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1022" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1ad0a46c5e28ecb31a4b160931ab96d0a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsCoordinateReferenceSystem::toWkt</definition>
        <argsstring>() const</argsstring>
        <name>toWkt</name>
        <briefdescription>
<para>Returns a WKT representation of this CRS. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string containing WKT of the CRS </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a433853323df4837869a2a8c2ad7521ea" kindref="member">toProj4()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="555" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1309" bodyend="1321"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a116bcaa537aea15ad7a137ec85d3e1fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::validate</definition>
        <argsstring>()</argsstring>
        <name>validate</name>
        <briefdescription>
<para>Perform some validation on this CRS. </para>        </briefdescription>
        <detaileddescription>
<para>If the CRS doesn&apos;t validate the default behavior settings for layers with unknown CRS will be consulted and acted on accordingly. By hell or high water this method will do its best to make sure that this CRS is valid - even if that involves resorting to a hard coded default of geocs:wgs84.</para><para><simplesect kind="note"><para>It is not usually necessary to use this function, unless you are trying to force this CRS to be valid. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a2494196604ef8bd572e4caaca633a3ce" kindref="member">setCustomCrsValidation()</ref>, <ref refid="classQgsCoordinateReferenceSystem_1a14f511357cd10d47f7833faa9e8918ef" kindref="member">customCrsValidation()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="442" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="403" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a797b2bfe6a0f95ba0f75abacba5eca0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsCoordinateReferenceSystem::validationHint</definition>
        <argsstring>()</argsstring>
        <name>validationHint</name>
        <briefdescription>
<para>Gets user hint for validation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="606" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1595" bodyend="1598"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1ac6187f872b2910674d041dc1981b4ef0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::writeXml</definition>
        <argsstring>(QDomNode &amp;node, QDomDocument &amp;doc) const</argsstring>
        <name>writeXml</name>
        <param>
          <type>QDomNode &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
<para>Stores state to the given Dom node in the given document. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node in which state will be restored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>doc</parametername>
</parameternamelist>
<parameterdescription>
<para>The document in which state will be stored </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True on success, False on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="481" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1428" bodyend="1475"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a14f511357cd10d47f7833faa9e8918ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="qgscoordinatereferencesystem_8h_1ae594353fae7a3563d756927092d45f74" kindref="member">CUSTOM_CRS_VALIDATION</ref></type>
        <definition>CUSTOM_CRS_VALIDATION QgsCoordinateReferenceSystem::customCrsValidation</definition>
        <argsstring>()</argsstring>
        <name>customCrsValidation</name>
        <briefdescription>
<para>Gets custom function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="494" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1562" bodyend="1565"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a1ebd03dee30d9041b9cd2f987b48e0fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_INVOKABLE <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>QgsCoordinateReferenceSystem QgsCoordinateReferenceSystem::fromEpsgId</definition>
        <argsstring>(long epsg)</argsstring>
        <name>fromEpsgId</name>
        <param>
          <type>long</type>
          <declname>epsg</declname>
        </param>
        <briefdescription>
<para>Creates a CRS from a given EPSG ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>epsg</parametername>
</parameternamelist>
<parameterdescription>
<para>epsg CRS ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching CRS, or an invalid CRS if string could not be matched </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="273" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a0213a21ebf445a417db751b1e5da7afe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>QgsCoordinateReferenceSystem QgsCoordinateReferenceSystem::fromOgcWmsCrs</definition>
        <argsstring>(const QString &amp;ogcCrs)</argsstring>
        <name>fromOgcWmsCrs</name>
        <param>
          <type>const QString &amp;</type>
          <declname>ogcCrs</declname>
        </param>
        <briefdescription>
<para>Creates a CRS from a given OGC WMS-format Coordinate Reference System string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ogcCrs</parametername>
</parameternamelist>
<parameterdescription>
<para>OGR compliant CRS definition, e.g., &quot;EPSG:4326&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching CRS, or an invalid CRS if string could not be matched </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a07523ae2730845c275ca96ee5acf095e" kindref="member">createFromOgcWmsCrs()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="265" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1afebf8e84e1ca648f50a407ce3cc7ab88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>QgsCoordinateReferenceSystem QgsCoordinateReferenceSystem::fromProj4</definition>
        <argsstring>(const QString &amp;proj4)</argsstring>
        <name>fromProj4</name>
        <param>
          <type>const QString &amp;</type>
          <declname>proj4</declname>
        </param>
        <briefdescription>
<para>Creates a CRS from a proj4 style formatted string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proj4</parametername>
</parameternamelist>
<parameterdescription>
<para>proj4 format string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching CRS, or an invalid CRS if string could not be matched </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a1edc7752a75a3b3753d6079957b61f9b" kindref="member">createFromProj4()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="282" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="168" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1ac8d137de30c09b41c96033aa31d14bf1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>QgsCoordinateReferenceSystem QgsCoordinateReferenceSystem::fromSrsId</definition>
        <argsstring>(long srsId)</argsstring>
        <name>fromSrsId</name>
        <param>
          <type>long</type>
          <declname>srsId</declname>
        </param>
        <briefdescription>
<para>Creates a CRS from a specified QGIS SRS ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srsId</parametername>
</parameternamelist>
<parameterdescription>
<para>internal QGIS SRS ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching CRS, or an invalid CRS if ID could not be found </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a7ad5a7957fa06c24db1f831cb9f0a052" kindref="member">createFromSrsId()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a3ee43d5d0b60e26e886e6cec9347e737" kindref="member">validSrsIds()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="301" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="182" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1ac567ae2a9264c460dbdd87ab6baded83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>QgsCoordinateReferenceSystem QgsCoordinateReferenceSystem::fromWkt</definition>
        <argsstring>(const QString &amp;wkt)</argsstring>
        <name>fromWkt</name>
        <param>
          <type>const QString &amp;</type>
          <declname>wkt</declname>
        </param>
        <briefdescription>
<para>Creates a CRS from a WKT spatial ref sys definition string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wkt</parametername>
</parameternamelist>
<parameterdescription>
<para>WKT for the desired spatial reference system. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching CRS, or an invalid CRS if string could not be matched </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1a08876a710bfc24adaa30a345d9408367" kindref="member">createFromWkt()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="291" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="175" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a4e869297fba5f0ea801f44cd756b6b52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::invalidateCache</definition>
        <argsstring>()</argsstring>
        <name>invalidateCache</name>
        <briefdescription>
<para>Clears the internal cache used to initialize <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> objects. </para>        </briefdescription>
        <detaileddescription>
<para>This should be called whenever the srs database has been modified in order to ensure that outdated CRS objects are not created. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="640" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="2412" bodyend="2432"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a22bb0b4fee4e7e251f52433df846e202" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsCoordinateReferenceSystem::recentProjections</definition>
        <argsstring>()</argsstring>
        <name>recentProjections</name>
        <briefdescription>
<para>Returns a list of recently used projections. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of srsid for recently used projections </para></simplesect>
<simplesect kind="since"><para>QGIS 2.7 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="632" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="2370" bodyend="2410"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a2494196604ef8bd572e4caaca633a3ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setCustomCrsValidation</definition>
        <argsstring>(CUSTOM_CRS_VALIDATION f)</argsstring>
        <name>setCustomCrsValidation</name>
        <param>
          <type><ref refid="qgscoordinatereferencesystem_8h_1ae594353fae7a3563d756927092d45f74" kindref="member">CUSTOM_CRS_VALIDATION</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Sets custom function to force valid CRS. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="488" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1557" bodyend="1560"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a98d3c061553eb9a87bdb71824e493ca6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setupESRIWktFix</definition>
        <argsstring>()</argsstring>
        <name>setupESRIWktFix</name>
        <briefdescription>
<para>Make sure that ESRI WKT import is done properly. </para>        </briefdescription>
        <detaileddescription>
<para>This is required for proper shapefile CRS import when using gdal&gt;= 1.9. <simplesect kind="note"><para>This function is called by <ref refid="classQgsCoordinateReferenceSystem_1a51e619c7d985c4496aed33fc1dcbb657" kindref="member">createFromUserInput()</ref> and QgsOgrProvider::crs(), there is usually no need to call it from elsewhere. </para></simplesect>
<simplesect kind="note"><para>This function sets CPL config option GDAL_FIX_ESRI_WKT to a proper value, unless it has been set by the user through the commandline or an environment variable. For more details refer to OGRSpatialReference::morphFromESRI() . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="426" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="300" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a5257588fdbab1d5a2f1748f1521e6ccf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsCoordinateReferenceSystem::syncDatabase</definition>
        <argsstring>()</argsstring>
        <name>syncDatabase</name>
        <briefdescription>
<para>Update proj.4 parameters in our database from proj.4. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of updated CRS on success and negative number of failed updates in case of errors. </para></simplesect>
<simplesect kind="note"><para>This is used internally and should not be necessary to call in client code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="614" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1849" bodyend="2155"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a3ee43d5d0b60e26e886e6cec9347e737" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; long &gt;</type>
        <definition>QList&lt; long &gt; QgsCoordinateReferenceSystem::validSrsIds</definition>
        <argsstring>()</argsstring>
        <name>validSrsIds</name>
        <briefdescription>
<para>Returns a list of all valid SRS IDs present in the CRS database. </para>        </briefdescription>
        <detaileddescription>
<para>Any of the returned values can be safely passed to <ref refid="classQgsCoordinateReferenceSystem_1ac8d137de30c09b41c96033aa31d14bf1" kindref="member">fromSrsId()</ref> to create a new, valid <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> object. <simplesect kind="see"><para><ref refid="classQgsCoordinateReferenceSystem_1ac8d137de30c09b41c96033aa31d14bf1" kindref="member">fromSrsId()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="254" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="101" bodyend="154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a61331ed878682079e02b39ad52f49e8a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::loadIds</definition>
        <argsstring>(QHash&lt; int, QString &gt; &amp;wkts)</argsstring>
        <name>loadIds</name>
        <param>
          <type>QHash&lt; int, QString &gt; &amp;</type>
          <declname>wkts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="750" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1767" bodyend="1847"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a2e547785914bbe8e9a037537ad8cd7d1" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::loadWkts</definition>
        <argsstring>(QHash&lt; int, QString &gt; &amp;wkts, const char *filename)</argsstring>
        <name>loadWkts</name>
        <param>
          <type>QHash&lt; int, QString &gt; &amp;</type>
          <declname>wkts</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="751" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1719" bodyend="1765"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a86cb2c1868766c87f2eeec8beacd4ad9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsCoordinateReferenceSystem::openDatabase</definition>
        <argsstring>(const QString &amp;path, sqlite3_database_unique_ptr &amp;database, bool readonly=true)</argsstring>
        <name>openDatabase</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="classsqlite3__database__unique__ptr" kindref="compound">sqlite3_database_unique_ptr</ref> &amp;</type>
          <declname>database</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>readonly</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Open SQLite db and show message if cannot be opened. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the same code as sqlite3_open </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="736" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1535" bodyend="1555"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1addd5e0c46a2cffe109dd92cb0da0d4a9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsCoordinateReferenceSystem::proj4FromSrsId</definition>
        <argsstring>(int srsId)</argsstring>
        <name>proj4FromSrsId</name>
        <param>
          <type>int</type>
          <declname>srsId</declname>
        </param>
        <briefdescription>
<para>A static helper function to find out the proj4 string for a srsid. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srsId</parametername>
</parameternamelist>
<parameterdescription>
<para>The srsid used for the lookup </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>QString The proj4 string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="652" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1486" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a00db112cac253a50076ebe2acc797071" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::syncDatumTransform</definition>
        <argsstring>(const QString &amp;dbPath)</argsstring>
        <name>syncDatumTransform</name>
        <param>
          <type>const QString &amp;</type>
          <declname>dbPath</declname>
        </param>
        <briefdescription>
<para>Update datum shift definitions from GDAL data. Used by syncDb() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="753" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="2157" bodyend="2352"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a43352910866a504c28c15be3bc73310f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::debugPrint</definition>
        <argsstring>()</argsstring>
        <name>debugPrint</name>
        <briefdescription>
<para>Print the description if debugging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="718" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1567" bodyend="1587"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1af40b734d68dfb7b55e7e5ed99153e0db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RecordMap</type>
        <definition>QgsCoordinateReferenceSystem::RecordMap QgsCoordinateReferenceSystem::getRecord</definition>
        <argsstring>(const QString &amp;sql)</argsstring>
        <name>getRecord</name>
        <param>
          <type>const QString &amp;</type>
          <declname>sql</declname>
        </param>
        <briefdescription>
<para>Gets a record from the srs.db or qgis.db backends, given an sql statement. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sql</parametername>
</parameternamelist>
<parameterdescription>
<para>The sql query to execute </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An associative array of field name &lt;-&gt; value pairs </para></simplesect>
<simplesect kind="note"><para>only handles queries that return a single record. </para></simplesect>
<simplesect kind="note"><para>it will first try the system srs.db then the users qgis.db! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="730" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="875" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1abe5c19bd120267c722fd354efe997bea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long QgsCoordinateReferenceSystem::getRecordCount</definition>
        <argsstring>()</argsstring>
        <name>getRecordCount</name>
        <briefdescription>
<para>Helper for getting number of user CRS already in db. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="742" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1691" bodyend="1716"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a4a44beaaa6a8c24bf276f7b1f8951c95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCoordinateReferenceSystem::loadFromDatabase</definition>
        <argsstring>(const QString &amp;db, const QString &amp;expression, const QString &amp;value)</argsstring>
        <name>loadFromDatabase</name>
        <param>
          <type>const QString &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Initialize the CRS object by looking up CRS database in path given in db argument, using first CRS entry where expression = &apos;value&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="748" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="466" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a03bc4f86c541c1b20b9bb31d52c06de9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setAuthId</definition>
        <argsstring>(const QString &amp;theID)</argsstring>
        <name>setAuthId</name>
        <param>
          <type>const QString &amp;</type>
          <declname>theID</declname>
        </param>
        <briefdescription>
<para>Set the authority identifier for this CRS. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theID</parametername>
</parameternamelist>
<parameterdescription>
<para>the authority identifier for this CRS (defaults to 0) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="701" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1102" bodyend="1106"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a7b30527dc9aa856d58bb0aa48563aab0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setDescription</definition>
        <argsstring>(const QString &amp;description)</argsstring>
        <name>setDescription</name>
        <param>
          <type>const QString &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Set the Description. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>A textual description of the CRS. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="670" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1112" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a6f2884009c2f0b0529cfba4b8315acde" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setEllipsoidAcronym</definition>
        <argsstring>(const QString &amp;ellipsoidAcronym)</argsstring>
        <name>setEllipsoidAcronym</name>
        <param>
          <type>const QString &amp;</type>
          <declname>ellipsoidAcronym</declname>
        </param>
        <briefdescription>
<para>Set the ellipsoid acronym. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ellipsoidAcronym</parametername>
</parameternamelist>
<parameterdescription>
<para>the acronym (must be a valid proj4 ellipsoid acronym) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="713" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1162" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a0244f2f2bd5a75f934b89650d095ef0d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setEpsg</definition>
        <argsstring>(long epsg)</argsstring>
        <name>setEpsg</name>
        <param>
          <type>long</type>
          <declname>epsg</declname>
        </param>
        <briefdescription>
<para>Set the EpsgCrsId identifier for this CRS. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>epsg</parametername>
</parameternamelist>
<parameterdescription>
<para>the ESPG identifier for this CRS (defaults to 0) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="695" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1152" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1aa7627ec678b001f975727c1e4ce0f025" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setGeographicFlag</definition>
        <argsstring>(bool geoFlag)</argsstring>
        <name>setGeographicFlag</name>
        <param>
          <type>bool</type>
          <declname>geoFlag</declname>
        </param>
        <briefdescription>
<para>Set this Geographic? flag. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geoFlag</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this is a geographic or projected coordinate system </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="689" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1147" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1aa075f6299a800e2898b87d8183c7ed8e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setInternalId</definition>
        <argsstring>(long srsId)</argsstring>
        <name>setInternalId</name>
        <param>
          <type>long</type>
          <declname>srsId</declname>
        </param>
        <briefdescription>
<para>Set the QGIS SrsId. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srsId</parametername>
</parameternamelist>
<parameterdescription>
<para>The internal sqlite3 srs.db primary key for this CRS </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="658" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1097" bodyend="1101"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1ac552bc85c6d409b529b6889bfd2456ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setMapUnits</definition>
        <argsstring>()</argsstring>
        <name>setMapUnits</name>
        <briefdescription>
<para>Work out the projection units and set the appropriate local variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="739" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1168" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a83a19689b72d5ceaaaf74db3b9ceadc5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setProj4String</definition>
        <argsstring>(const QString &amp;proj4String)</argsstring>
        <name>setProj4String</name>
        <param>
          <type>const QString &amp;</type>
          <declname>proj4String</declname>
        </param>
        <briefdescription>
<para>Set the Proj Proj4String. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proj4String</parametername>
</parameternamelist>
<parameterdescription>
<para>Proj4 format specifies (excluding proj and ellips) that define this CRS. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>some content of the PROJ4 string may be stripped off by this method due to the parsing of the string by OSRNewSpatialReference . For example input: +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs Gets stored in the CRS as: +proj=longlat +datum=WGS84 +no_defs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="683" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1117" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1a7aa57422be225ce7152f7d632f138b7c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setProjectionAcronym</definition>
        <argsstring>(const QString &amp;projectionAcronym)</argsstring>
        <name>setProjectionAcronym</name>
        <param>
          <type>const QString &amp;</type>
          <declname>projectionAcronym</declname>
        </param>
        <briefdescription>
<para>Set the projection acronym. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>projectionAcronym</parametername>
</parameternamelist>
<parameterdescription>
<para>the acronym (must be a valid proj4 projection acronym) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="707" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1157" bodyend="1161"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCoordinateReferenceSystem_1af445356c27d0dd970cbcb5d854a12155" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCoordinateReferenceSystem::setSrid</definition>
        <argsstring>(long srid)</argsstring>
        <name>setSrid</name>
        <param>
          <type>long</type>
          <declname>srid</declname>
        </param>
        <briefdescription>
<para>Set the PostGIS srid. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srid</parametername>
</parameternamelist>
<parameterdescription>
<para>The PostGIS spatial_ref_sys key for this CRS </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="664" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.cpp" bodystart="1107" bodyend="1111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a coordinate reference system (CRS). </para>    </briefdescription>
    <detaileddescription>
<para>Coordinate reference system object defines a specific map projection, as well as transformations between different coordinate reference systems. There are various ways how a CRS can be defined: using well-known text (WKT), PROJ string or combination of authority and code (e.g. EPSG:4326). QGIS comes with its internal database of coordinate reference systems (stored in SQLite) that allows lookups of CRS and seamless conversions between the various definitions.</para><para>Most commonly one comes across two types of coordinate systems:</para><para><orderedlist>
<listitem><para><bold>Geographic coordinate systems</bold> - based on a geodetic datum, normally with coordinates being latitude/longitude in degrees. The most common one is World Geodetic System 84 (WGS84).</para></listitem><listitem><para><bold>Projected coordinate systems</bold> - based on a geodetic datum with coordinates projected to a plane, typically using meters or feet as units. Common projected coordinate systems are Universal Transverse Mercator or Albers Equal Area.</para></listitem></orderedlist>
</para><para>Internally QGIS uses proj4 library for all the math behind coordinate transformations, so in case of any troubles with projections it is best to examine the PROJ representation within the object, as that is the representation that will be ultimately used.</para><para>Methods that allow inspection of CRS instances include <ref refid="classQgsCoordinateReferenceSystem_1a077267450cec872305c6690de5b5b09c" kindref="member">isValid()</ref>, <ref refid="classQgsCoordinateReferenceSystem_1ab2dee1805d8e3b62448e4d106753b595" kindref="member">authid()</ref>, <ref refid="classQgsCoordinateReferenceSystem_1a2888185eab7e7bf2f7d80ffe2b274224" kindref="member">description()</ref>, <ref refid="classQgsCoordinateReferenceSystem_1ad0a46c5e28ecb31a4b160931ab96d0a3" kindref="member">toWkt()</ref>, <ref refid="classQgsCoordinateReferenceSystem_1a433853323df4837869a2a8c2ad7521ea" kindref="member">toProj4()</ref>, <ref refid="classQgsCoordinateReferenceSystem_1a79949e22a654073dcc4f8d1810f07c5f" kindref="member">mapUnits()</ref> and others. Creation of CRS instances is further described in <ref refid="classQgsCoordinateReferenceSystem_1crs_construct_and_copy" kindref="member">Object Construction and Copying </ref> section below. Transformations between coordinate reference systems are done using <ref refid="classQgsCoordinateTransform" kindref="compound">QgsCoordinateTransform</ref> class.</para><para>For example, the following code will create and inspect &quot;British national grid&quot; CRS:</para><para><programlisting><codeline><highlight class="normal">crs<sp/>=<sp/><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref>(</highlight><highlight class="stringliteral">&quot;EPSG:27700&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>crs.isValid():</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;CRS<sp/>Description:<sp/>{}&quot;</highlight><highlight class="normal">.format(crs.description()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;CRS<sp/>PROJ<sp/>text:<sp/>{}&quot;</highlight><highlight class="normal">.format(crs.toProj4()))</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>CRS!&quot;</highlight><highlight class="normal">)</highlight></codeline>
</programlisting></para><para>This will produce the following output:</para><para><programlisting><codeline><highlight class="normal">CRS<sp/>Description:<sp/>OSGB<sp/>1936<sp/>/<sp/>British<sp/>National<sp/>Grid</highlight></codeline>
<codeline><highlight class="normal">CRS<sp/>PROJ<sp/>text:<sp/>+proj=tmerc<sp/>+lat_0=49<sp/>+lon_0=-2<sp/>+k=0.9996012717<sp/>+x_0=400000<sp/>+y_0=-100000<sp/>[output<sp/>trimmed]</highlight></codeline>
</programlisting></para><para><heading level="1">CRS Definition Formats </heading>
</para><para>This section gives an overview of various supported CRS definition formats:</para><para><orderedlist>
<listitem><para><bold>Authority and Code.</bold> Also referred to as OGC WMS format within QGIS as they have been widely used in OGC standards. These are encoded as <computeroutput>&lt;auth&gt;:&lt;code&gt;</computeroutput>, for example <computeroutput>EPSG:4326</computeroutput> refers to WGS84 system. EPSG is the most commonly used authority that covers a wide range of coordinate systems around the world.</para><para>An extended variant of this format is OGC URN. Syntax of URN for CRS definition is <computeroutput>urn:ogc:def:crs:&lt;auth&gt;:[&lt;version&gt;]:&lt;code&gt;</computeroutput>. This class can also parse URNs (versions are currently ignored). For example, WGS84 may be encoded as <computeroutput>urn:ogc:def:crs:OGC:1.3:CRS84</computeroutput>.</para><para>QGIS adds support for &quot;USER&quot; authority that refers to IDs used internally in QGIS. This variant is best avoided or used with caution as the IDs are not permanent and they refer to different CRS on different machines or user profiles.</para><para>See <ref refid="classQgsCoordinateReferenceSystem_1ab2dee1805d8e3b62448e4d106753b595" kindref="member">authid()</ref> and <ref refid="classQgsCoordinateReferenceSystem_1a07523ae2730845c275ca96ee5acf095e" kindref="member">createFromOgcWmsCrs()</ref> methods.</para></listitem><listitem><para><bold>PROJ string.</bold> This is a string consisting of a series of key/value pairs in the following format: <computeroutput>+param1=value1 +param2=value2 [...]</computeroutput>. This is the format natively used by the underlying proj4 library. For example, the definition of WGS84 looks like this: <verbatim>+proj=longlat +datum=WGS84 +no_defs
</verbatim></para><para>See <ref refid="classQgsCoordinateReferenceSystem_1a433853323df4837869a2a8c2ad7521ea" kindref="member">toProj4()</ref> and <ref refid="classQgsCoordinateReferenceSystem_1a1edc7752a75a3b3753d6079957b61f9b" kindref="member">createFromProj4()</ref> methods.</para></listitem><listitem><para><bold>Well-known text (WKT).</bold> Defined by Open Geospatial Consortium (OGC), this is another common format to define CRS. For WGS84 the OGC WKT definition is the following: <verbatim>GEOGCS[&quot;WGS 84&quot;,
       DATUM[&quot;WGS_1984&quot;,
         SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],
         AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],
       PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],
       UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],
       AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]
</verbatim></para><para>See <ref refid="classQgsCoordinateReferenceSystem_1ad0a46c5e28ecb31a4b160931ab96d0a3" kindref="member">toWkt()</ref> and <ref refid="classQgsCoordinateReferenceSystem_1a08876a710bfc24adaa30a345d9408367" kindref="member">createFromWkt()</ref> methods.</para></listitem></orderedlist>
</para><para><heading level="1">CRS Database and Custom CRS </heading>
</para><para>The database of CRS shipped with QGIS is stored in a SQLite database (see <ref refid="classQgsApplication_1ae55dcb7b2578daefddf872b6fc754c60" kindref="member">QgsApplication::srsDatabaseFilePath()</ref>) and it is based on the data files maintained by GDAL project (a variety of .csv and .wkt files).</para><para>Sometimes it happens that users need to use a CRS definition that is not well known or that has been only created with a specific purpose (and thus its definition is not available in our database of CRS). Whenever a new CRS definition is seen, it will be added to the local database (in user&apos;s home directory, see <ref refid="classQgsApplication_1ab60a0a01f2a675b56830b21d586e9344" kindref="member">QgsApplication::qgisUserDatabaseFilePath()</ref>). QGIS also features a GUI for management of local custom CRS definitions.</para><para>There are therefore two databases: one for shipped CRS definitions and one for custom CRS definitions. Custom CRS have internal IDs (accessible with <ref refid="classQgsCoordinateReferenceSystem_1ae4ea9435d989c13d536635563a3ad71e" kindref="member">srsid()</ref>) greater or equal to <ref refid="qgis_8h_1ad8794344628fad7031cceb6b8ab2b8ec" kindref="member">USER_CRS_START_ID</ref>. The local CRS databases should never be accessed directly with SQLite functions, instead you should use <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> API for CRS lookups and for managements of custom CRS.</para><para><heading level="1">Validation </heading>
</para><para>In some cases (most prominently when loading a map layer), QGIS will try to ensure that the given map layer CRS is valid using <ref refid="classQgsCoordinateReferenceSystem_1a116bcaa537aea15ad7a137ec85d3e1fb" kindref="member">validate()</ref> call. If not, a custom validation function will be called - such function may for example show a GUI for manual CRS selection. The validation function is configured using <ref refid="classQgsCoordinateReferenceSystem_1a2494196604ef8bd572e4caaca633a3ce" kindref="member">setCustomCrsValidation()</ref>. If validation fails or no validation function is set, the default CRS is assigned (WGS84). QGIS application registers its validation function that will act according to user&apos;s settings (either show CRS selector dialog or use project/custom CRS).</para><sect1 id="classQgsCoordinateReferenceSystem_1crs_construct_and_copy">
<title>Object Construction and Copying  </title>
<para>The easiest way of creating CRS instances is to use <ref refid="classQgsCoordinateReferenceSystem_1a2155dc5b81655f328ced767f3ccd2602" kindref="member">QgsCoordinateReferenceSystem(const QString&amp;)</ref> constructor that automatically recognizes definition format from the given string.</para><para>Creation of CRS object involves some queries in a local SQLite database, which may be potentially expensive. Consequently, CRS creation methods use an internal cache to avoid unnecessary database lookups. If the CRS database is modified, then it is necessary to call <ref refid="classQgsCoordinateReferenceSystem_1a4e869297fba5f0ea801f44cd756b6b52" kindref="member">invalidateCache()</ref> to ensure that outdated records are not being returned from the cache.</para><para>Since QGIS 2.16 <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> objects are implicitly shared.</para><para><heading level="1">Caveats </heading>
</para><para>There are two different flavors of WKT: one is defined by OGC, the other is the standard used by ESRI. They look very similar, but they are not the same. QGIS is able to consume both flavors.</para><para><simplesect kind="see"><para><ref refid="classQgsCoordinateTransform" kindref="compound">QgsCoordinateTransform</ref> </para></simplesect>
</para></sect1>
    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" line="190" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscoordinatereferencesystem.h" bodystart="189" bodyend="777"/>
    <listofallmembers>
      <member refid="classQgsCoordinateReferenceSystem_1ab2dee1805d8e3b62448e4d106753b595" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>authid</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a133fc56cc73dffa0baf91d945a42b536" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>bounds</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a7b1cc27b6feeb0c798176b034644c421" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>createFromId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a07523ae2730845c275ca96ee5acf095e" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>createFromOgcWmsCrs</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a1edc7752a75a3b3753d6079957b61f9b" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>createFromProj4</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ab5e8107d5d4aa3c08e3a6d570a78915e" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>createFromSrid</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a7ad5a7957fa06c24db1f831cb9f0a052" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>createFromSrsId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a0b233da61bdfd4f6cdc9e43af21044ed" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>createFromString</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a51e619c7d985c4496aed33fc1dcbb657" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>createFromUserInput</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a08876a710bfc24adaa30a345d9408367" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>createFromWkt</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cf" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>CrsType</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a14f511357cd10d47f7833faa9e8918ef" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>customCrsValidation</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ac77b89ce0dda140df8b624559191d58e" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>d</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a43352910866a504c28c15be3bc73310f" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>debugPrint</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a2888185eab7e7bf2f7d80ffe2b274224" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>description</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a23384af6f9401c380effc74a1d5d8713" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>ellipsoidAcronym</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cfaa999f03c89ccddb4fb57570089de576b" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>EpsgCrsId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a3dcef003135c7bf9de91c79e6d9a54bb" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>findMatchingProj</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a1ebd03dee30d9041b9cd2f987b48e0fa" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>fromEpsgId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a0213a21ebf445a417db751b1e5da7afe" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>fromOgcWmsCrs</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1afebf8e84e1ca648f50a407ce3cc7ab88" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>fromProj4</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ac8d137de30c09b41c96033aa31d14bf1" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>fromSrsId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ac567ae2a9264c460dbdd87ab6baded83" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>fromWkt</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1acfd9eae9ba8c7b80142dc4033991da07" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>geographicCrsAuthId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1af40b734d68dfb7b55e7e5ed99153e0db" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>getRecord</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1abe5c19bd120267c722fd354efe997bea" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>getRecordCount</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1aecc077365492da22796fe7c702616406" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>hasAxisInverted</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cfabc92b4ee3c6be188b5dfe000ddac415e" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>InternalCrsId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a4e869297fba5f0ea801f44cd756b6b52" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>invalidateCache</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a277cab862bc3e29bd5057bc38ebe4943" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>isGeographic</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a077267450cec872305c6690de5b5b09c" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>isValid</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a4a44beaaa6a8c24bf276f7b1f8951c95" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>loadFromDatabase</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a61331ed878682079e02b39ad52f49e8a" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>loadIds</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a2e547785914bbe8e9a037537ad8cd7d1" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>loadWkts</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a79949e22a654073dcc4f8d1810f07c5f" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>mapUnits</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a3c12b38470f974a6c36625988fdf9859" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>mapUnits</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a00027ee17ae6306f819322fe8ee6dc8d" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>mCustomSrsValidation</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a86cb2c1868766c87f2eeec8beacd4ad9" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>openDatabase</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a1f6176f96bdc9d6abd9e62e69d9aa9a2" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>operator QVariant</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a54ce7fefe585a1e534580468138a0cb5" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>operator!=</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a82e312eac028563b73c045c61bbac266" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>operator=</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a4ac56deae42db141632511530258e3dd" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>operator==</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a50be71ef85725c7a3959f780ac7c36cfae88ca07f39092200cb8f0ac4328551a5" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>PostgisCrsId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a289b8b7295fdebe393ec2d937b5ff8d3" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>postgisSrid</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1addd5e0c46a2cffe109dd92cb0da0d4a9" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>proj4FromSrsId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a4ae7f768ca2efd1d7b7f5bf1c795c61a" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>projectionAcronym</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a51fef08cdc3353f9c6d5073981cefdc9" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>QgsCoordinateReferenceSystem</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a2155dc5b81655f328ced767f3ccd2602" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>QgsCoordinateReferenceSystem</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1aab2aeb3e8d3888dd35778701af683a78" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>QgsCoordinateReferenceSystem</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ace0cb3e77a0bbd8080c68b60c8bafc1e" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>QgsCoordinateReferenceSystem</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a183c17d37be47503fc9592cd18bac586" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>readXml</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a22bb0b4fee4e7e251f52433df846e202" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>recentProjections</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a238dfb729c699d5e3f6d37f7527991b0" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>RecordMap</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a70f8049289da491c0584b7291e122502" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>saveAsUserCrs</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ac8dfb3df64a0f2b266b1704a6e9dd2ea" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sCRSSrsIdLock</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a5263cd7fac86d4efeebb1d9b0b864625" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sCrsStringLock</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a238b5147c9b889523d7626cd189b5bd5" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sCRSWktLock</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a03bc4f86c541c1b20b9bb31d52c06de9" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setAuthId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a2494196604ef8bd572e4caaca633a3ce" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setCustomCrsValidation</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a7b30527dc9aa856d58bb0aa48563aab0" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setDescription</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a6f2884009c2f0b0529cfba4b8315acde" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setEllipsoidAcronym</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a0244f2f2bd5a75f934b89650d095ef0d" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setEpsg</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1aa7627ec678b001f975727c1e4ce0f025" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setGeographicFlag</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1aa075f6299a800e2898b87d8183c7ed8e" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setInternalId</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ac552bc85c6d409b529b6889bfd2456ac" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setMapUnits</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a83a19689b72d5ceaaaf74db3b9ceadc5" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setProj4String</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a7aa57422be225ce7152f7d632f138b7c" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setProjectionAcronym</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1af445356c27d0dd970cbcb5d854a12155" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setSrid</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a98d3c061553eb9a87bdb71824e493ca6" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setupESRIWktFix</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a40171c3b7c249bc4ae9dbb926cd02171" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>setValidationHint</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a1c8e1eb79521df3b71040a96dfadfa9d" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sOgcCache</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a2c74400509939c55d1904782256f435b" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sOgcLock</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ad0f1c77d0b11b5641b7c71ffb35f9346" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sProj4Cache</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a09107882e342df7f9934adb23556be5c" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sProj4CacheLock</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ae4ea9435d989c13d536635563a3ad71e" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>srsid</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1af24ec3ec9215b73c331ea56b909c916e" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sSrIdCache</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ab0fad36fdaa97c03f85659e6c4637523" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sSrIdCacheLock</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a8360b8abe2b9185709b260f38e8edef6" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sSrsIdCache</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a5a558ad8353ff21a608a148c4e62f345" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sStringCache</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ad50b67580dc7ac9b11df5da336aff996" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>sWktCache</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a5257588fdbab1d5a2f1748f1521e6ccf" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>syncDatabase</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a00db112cac253a50076ebe2acc797071" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>syncDatumTransform</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ac002c7f5ba79da1b89df86913b4fc1f1" prot="private" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>TestQgsCoordinateReferenceSystem</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a433853323df4837869a2a8c2ad7521ea" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>toProj4</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ad0a46c5e28ecb31a4b160931ab96d0a3" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>toWkt</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a116bcaa537aea15ad7a137ec85d3e1fb" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>validate</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a797b2bfe6a0f95ba0f75abacba5eca0c" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>validationHint</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a3ee43d5d0b60e26e886e6cec9347e737" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>validSrsIds</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1ac6187f872b2910674d041dc1981b4ef0" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>writeXml</name></member>
      <member refid="classQgsCoordinateReferenceSystem_1a11b56d68ff28a4c7505e097336de7a4c" prot="public" virt="non-virtual"><scope>QgsCoordinateReferenceSystem</scope><name>~QgsCoordinateReferenceSystem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
