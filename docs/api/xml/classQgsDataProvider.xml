<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsDataProvider" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QgsDataProvider</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="classQgsMeshDataProvider" prot="public" virt="non-virtual">QgsMeshDataProvider</derivedcompoundref>
    <derivedcompoundref refid="classQgsRasterDataProvider" prot="public" virt="non-virtual">QgsRasterDataProvider</derivedcompoundref>
    <derivedcompoundref refid="classQgsVectorDataProvider" prot="public" virt="non-virtual">QgsVectorDataProvider</derivedcompoundref>
    <includes refid="qgsdataprovider_8h" local="no">qgsdataprovider.h</includes>
    <innerclass refid="structQgsDataProvider_1_1PreviewContext" prot="public">QgsDataProvider::PreviewContext</innerclass>
    <innerclass refid="structQgsDataProvider_1_1ProviderOptions" prot="public">QgsDataProvider::ProviderOptions</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153" prot="public" static="no">
        <name>DataCapability</name>
        <enumvalue id="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153a1f81315186e62435cff393022d4afac2" prot="public">
          <name>NoDataCapabilities</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153a4527edddfa87acc2f0e13e76e9bef573" prot="public">
          <name>File</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153ac6c219f067db2e6eab688b6550d64e7e" prot="public">
          <name>Dir</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153a2895dc708693161d3d6316e1feeb4194" prot="public">
          <name>Database</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153ab2188dfa40f0cd2198972b7c771dd97c" prot="public">
          <name>Net</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="68" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="67" bodyend="74"/>
      </memberdef>
      <memberdef kind="enum" id="classQgsDataProvider_1a5b7c15ef49dfa659b23b81c4b0893cdd" prot="public" static="no">
        <name>ProviderProperty</name>
        <enumvalue id="classQgsDataProvider_1a5b7c15ef49dfa659b23b81c4b0893cddabcccdb5e52717ca90a42d83bb247d306" prot="public">
          <name>EvaluateDefaultValues</name>
          <briefdescription>
<para>Evaluate default values on provider side when calling QgsVectorDataProvider::defaultValue( int index ) rather than on commit. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsDataProvider_1a5b7c15ef49dfa659b23b81c4b0893cddafe3bb20221731e6f855d22ed0993e78d" prot="public">
          <name>CustomData</name>
          <initializer>= 3000</initializer>
          <briefdescription>
<para>Custom properties for 3rd party providers or very provider-specific properties which are not expected to be of interest for other providers can be added starting from this value up. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Properties are used to pass custom configuration options into data providers. </para>        </briefdescription>
        <detaileddescription>
<para>This enum defines a list of custom properties which can be used on different providers. It depends on the provider, which properties are supported. In addition to these default properties, providers can add their custom properties starting from CustomData. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="85" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="84" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classQgsDataProvider_1acfd848673de93ad11abb901f23bcc03b" prot="public" static="yes" mutable="no">
        <type>QString</type>
        <definition>QString QgsDataProvider::SUBLAYER_SEPARATOR</definition>
        <argsstring></argsstring>
        <name>SUBLAYER_SEPARATOR</name>
        <initializer>= QString( &quot;!!::!!&quot; )</initializer>
        <briefdescription>
<para>String sequence used for separating components of sublayers strings. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsDataProvider_1ad73997762df861eacb25c553623e14b2" kindref="member">subLayers()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="244" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQgsDataProvider_1a739f3d6e8264888cfd9b9acfb89187c5" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsError" kindref="compound">QgsError</ref></type>
        <definition>QgsError QgsDataProvider::mError</definition>
        <argsstring></argsstring>
        <name>mError</name>
        <briefdescription>
<para>Error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="567" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDataProvider_1a709da4f1f8f9a3ff272a0a6e24fca062" prot="protected" static="no" mutable="no">
        <type>QDateTime</type>
        <definition>QDateTime QgsDataProvider::mTimestamp</definition>
        <argsstring></argsstring>
        <name>mTimestamp</name>
        <briefdescription>
<para>Timestamp of data in the moment when the data were loaded by provider. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="564" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsDataProvider_1ac20fcce36679733269b8950d740f654a" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsDataProvider::mDataSourceURI</definition>
        <argsstring></argsstring>
        <name>mDataSourceURI</name>
        <briefdescription>
<para>Universal Resource Identifier for source data. </para>        </briefdescription>
        <detaileddescription>
<para>This could be a file, database, or server address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="581" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDataProvider_1a40ede19b6c725cbb38158edf752f8523" prot="private" static="no" mutable="no">
        <type>QMap&lt; int, QVariant &gt;</type>
        <definition>QMap&lt; int, QVariant &gt; QgsDataProvider::mProviderProperties</definition>
        <argsstring></argsstring>
        <name>mProviderProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="583" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="583" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsDataProvider_1a01ff4330b3a2b2df1cdd6d27603e04e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsDataProvider::QgsDataProvider</definition>
        <argsstring>(const QString &amp;uri=QString(), const QgsDataProvider::ProviderOptions &amp;options=QgsDataProvider::ProviderOptions())</argsstring>
        <name>QgsDataProvider</name>
        <param>
          <type>const QString &amp;</type>
          <declname>uri</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>const <ref refid="structQgsDataProvider_1_1ProviderOptions" kindref="compound">QgsDataProvider::ProviderOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval><ref refid="structQgsDataProvider_1_1ProviderOptions" kindref="compound">QgsDataProvider::ProviderOptions</ref>()</defval>
        </param>
        <briefdescription>
<para>Create a new dataprovider with the specified in the <emphasis>uri</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Additional creation options are specified within the <emphasis>options</emphasis> value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="105" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a390a2d77b871763209396167d5558d18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>virtual QgsCoordinateReferenceSystem QgsDataProvider::crs</definition>
        <argsstring>() const =0</argsstring>
        <name>crs</name>
        <briefdescription>
<para>Returns the coordinate system for the data source. </para>        </briefdescription>
        <detaileddescription>
<para>If the provider isn&apos;t capable of returning its projection then an invalid <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> will be returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a94c4cce6651e60b9245989ba4bffd625" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>virtual QString QgsDataProvider::dataSourceUri</definition>
        <argsstring>(bool expandAuthConfig=false) const</argsstring>
        <name>dataSourceUri</name>
        <param>
          <type>bool</type>
          <declname>expandAuthConfig</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets the data source specification. </para>        </briefdescription>
        <detaileddescription>
<para>This may be a path or database connection string <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expandAuthConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to expand any assigned authentication configuration </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>data source specification </para></simplesect>
<simplesect kind="note"><para>The default authentication configuration expansion is FALSE. This keeps credentials out of layer data source URIs and project files. Expansion should be specifically done only when needed within a provider </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="138" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="138" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a875178949796ab38817744e2da88159e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QDateTime</type>
        <definition>virtual QDateTime QgsDataProvider::dataTimestamp</definition>
        <argsstring>() const</argsstring>
        <name>dataTimestamp</name>
        <reimplementedby refid="classQgsRasterDataProvider_1aa5feb08163f509264cd3fcbf8e8305b8">dataTimestamp</reimplementedby>
        <briefdescription>
<para>Current time stamp of data source. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="372" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1aa735b1c007dd7becc218de07177afe3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString QgsDataProvider::description</definition>
        <argsstring>() const =0</argsstring>
        <name>description</name>
        <briefdescription>
<para>Returns description. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a terse string describing what the provider is.</para><para><simplesect kind="note"><para></para></simplesect>
Instead of being pure virtual, might be better to generalize this behavior and presume that none of the sub-classes are going to do anything strange with regards to their name or description? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1aee77f143f485b6d792dec21b03e9dec1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QgsDataProvider::enterUpdateMode</definition>
        <argsstring>()</argsstring>
        <name>enterUpdateMode</name>
        <briefdescription>
<para>Enter update mode. </para>        </briefdescription>
        <detaileddescription>
<para>This is aimed at providers that can open differently the connection to the datasource, according it to be in update mode or in read-only mode. A call to this method shall be balanced with a call to <ref refid="classQgsDataProvider_1a06aa48e59fe6cd5aa6584c6bbb7891f2" kindref="member">leaveUpdateMode()</ref>, if this method returns true.</para><para>Most providers will have an empty implementation for that method.</para><para>For backward compatibility, providers that implement <ref refid="classQgsDataProvider_1aee77f143f485b6d792dec21b03e9dec1" kindref="member">enterUpdateMode()</ref> should still make sure to allow editing operations to work even if <ref refid="classQgsDataProvider_1aee77f143f485b6d792dec21b03e9dec1" kindref="member">enterUpdateMode()</ref> is not explicitly called.</para><para>Several successive calls to <ref refid="classQgsDataProvider_1aee77f143f485b6d792dec21b03e9dec1" kindref="member">enterUpdateMode()</ref> can be done. So there is a concept of stack of calls that must be handled by the provider. Only the first call to <ref refid="classQgsDataProvider_1aee77f143f485b6d792dec21b03e9dec1" kindref="member">enterUpdateMode()</ref> will really turn update mode on.</para><para><simplesect kind="return"><para>true in case of success (or no-op implementation), false in case of failure.</para></simplesect>
<simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="409" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="409" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a77e9159d97d4276753cbaf54b89da6d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classQgsError" kindref="compound">QgsError</ref></type>
        <definition>virtual QgsError QgsDataProvider::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <briefdescription>
<para>Gets current status error. </para>        </briefdescription>
        <detaileddescription>
<para>This error describes some principal problem for which provider cannot work and thus is not valid. It is not last error after accessing data by block(), identify() etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="379" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="379" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1aeea803b5b927c0551ec70f06af62971b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref></type>
        <definition>virtual QgsRectangle QgsDataProvider::extent</definition>
        <argsstring>() const =0</argsstring>
        <name>extent</name>
        <reimplementedby refid="classQgsRasterDataProvider_1a855b75f332cfa88c09d5bfc34f67f6e6">extent</reimplementedby>
        <briefdescription>
<para>Returns the extent of the layer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> containing the extent of the layer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a77c62f534a2dccc65b963e03805c5b55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>virtual QString QgsDataProvider::fileRasterFilters</definition>
        <argsstring>() const</argsstring>
        <name>fileRasterFilters</name>
        <briefdescription>
<para>Returns raster file filter string. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a string suitable for a QFileDialog of raster file formats supported by the data provider. Naturally this will be an empty string for those data providers that do not deal with plain files, such as databases and servers.</para><para><simplesect kind="note"><para>It&apos;d be nice to eventually be raster/vector neutral. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="357" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1ac24f20e109d01676c79f8a903a22d7f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>virtual QString QgsDataProvider::fileVectorFilters</definition>
        <argsstring>() const</argsstring>
        <name>fileVectorFilters</name>
        <briefdescription>
<para>Returns vector file filter string. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a string suitable for a QFileDialog of vector file formats supported by the data provider. Naturally this will be an empty string for those data providers that do not deal with plain files, such as databases and servers.</para><para><simplesect kind="note"><para>It&apos;d be nice to eventually be raster/vector neutral. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="341" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a037199bfafba24782f2ea7f07a133876" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QgsDataProvider::invalidateConnections</definition>
        <argsstring>(const QString &amp;connection)</argsstring>
        <name>invalidateConnections</name>
        <param>
          <type>const QString &amp;</type>
          <declname>connection</declname>
        </param>
        <briefdescription>
<para>Invalidate connections corresponding to specified name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="385" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="385" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a6d034edbd7af7a7b02a642d241aa61fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsDataProvider::isValid</definition>
        <argsstring>() const =0</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Returns true if this is a valid layer. </para>        </briefdescription>
        <detaileddescription>
<para>It is up to individual providers to determine what constitutes a valid layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a69646da138dc98e9fa605fbed1283bb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classQgsLayerMetadata" kindref="compound">QgsLayerMetadata</ref></type>
        <definition>virtual QgsLayerMetadata QgsDataProvider::layerMetadata</definition>
        <argsstring>() const</argsstring>
        <name>layerMetadata</name>
        <briefdescription>
<para>Returns layer metadata collected from the provider&apos;s source. </para>        </briefdescription>
        <detaileddescription>
<para>Individual data providers must implement this method if they support collecting metadata.</para><para><simplesect kind="see"><para><ref refid="classQgsDataProvider_1ad9277c014467cb8471e3119397f087e9" kindref="member">writeLayerMetadata()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="513" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="513" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a06aa48e59fe6cd5aa6584c6bbb7891f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QgsDataProvider::leaveUpdateMode</definition>
        <argsstring>()</argsstring>
        <name>leaveUpdateMode</name>
        <briefdescription>
<para>Leave update mode. </para>        </briefdescription>
        <detaileddescription>
<para>This is aimed at providers that can open differently the connection to the datasource, according it to be in update mode or in read-only mode. This method shall be balanced with a successful call to <ref refid="classQgsDataProvider_1aee77f143f485b6d792dec21b03e9dec1" kindref="member">enterUpdateMode()</ref>.</para><para>Most providers will have an empty implementation for that method.</para><para>Several successive calls to <ref refid="classQgsDataProvider_1aee77f143f485b6d792dec21b03e9dec1" kindref="member">enterUpdateMode()</ref> can be done. So there is a concept of stack of calls that must be handled by the provider. Only the last call to <ref refid="classQgsDataProvider_1a06aa48e59fe6cd5aa6584c6bbb7891f2" kindref="member">leaveUpdateMode()</ref> will really turn update mode off.</para><para><simplesect kind="return"><para>true in case of success (or no-op implementation), false in case of failure.</para></simplesect>
<simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="428" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="428" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a167a2d18c5824e4d5b69455b031546bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString QgsDataProvider::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <briefdescription>
<para>Returns a provider name. </para>        </briefdescription>
        <detaileddescription>
<para>Essentially just returns the provider key. Should be used to build file dialogs so that providers can be shown with their supported types. Thus if more than one provider supports a given format, the user is able to select a specific provider to open that file.</para><para><simplesect kind="note"><para></para></simplesect>
Instead of being pure virtual, might be better to generalize this behavior and presume that none of the sub-classes are going to do anything strange with regards to their name or description? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1ac244176fc16f6b0c8f10735da6d52118" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsDataProvider::providerProperty</definition>
        <argsstring>(ProviderProperty property, const QVariant &amp;defaultValue=QVariant()) const</argsstring>
        <name>providerProperty</name>
        <param>
          <type><ref refid="classQgsDataProvider_1a5b7c15ef49dfa659b23b81c4b0893cdd" kindref="member">ProviderProperty</ref></type>
          <declname>property</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>defaultValue</declname>
          <defval>QVariant()</defval>
        </param>
        <briefdescription>
<para>Gets the current value of a certain provider property. </para>        </briefdescription>
        <detaileddescription>
<para>It depends on the provider which properties are supported.</para><para><simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="452" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1adaa3e78c2635798ad3f98c97102d03d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsDataProvider::providerProperty</definition>
        <argsstring>(int property, const QVariant &amp;defaultValue) const</argsstring>
        <name>providerProperty</name>
        <param>
          <type>int</type>
          <declname>property</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Gets the current value of a certain provider property. </para>        </briefdescription>
        <detaileddescription>
<para>It depends on the provider which properties are supported.</para><para><simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="460" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1aea143a6723ae49ca0a10061ec52322d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QgsDataProvider::reloadData</definition>
        <argsstring>()</argsstring>
        <name>reloadData</name>
        <briefdescription>
<para>Reloads the data from the source. </para>        </briefdescription>
        <detaileddescription>
<para>Needs to be implemented by providers with data caches to synchronize with changes in the data source </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="366" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="366" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1ade08d99b8d4d08052d3911de3e3c081f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsDataProvider::renderInPreview</definition>
        <argsstring>(const QgsDataProvider::PreviewContext &amp;context)</argsstring>
        <name>renderInPreview</name>
        <param>
          <type>const <ref refid="structQgsDataProvider_1_1PreviewContext" kindref="compound">QgsDataProvider::PreviewContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns whether the layer must be rendered in preview jobs. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>context</emphasis> argument gives useful information which can be used to determine whether the layer should be rendered or not.</para><para>The base implementation returns true if lastRenderingTimeMs &lt;= maxRenderingTimeMs.</para><para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="503" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a73a6ca365cde3bcd37ff9c7d931b3d75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QgsDataProvider::setDataSourceUri</definition>
        <argsstring>(const QString &amp;uri)</argsstring>
        <name>setDataSourceUri</name>
        <param>
          <type>const QString &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
<para>Set the data source specification. </para>        </briefdescription>
        <detaileddescription>
<para>This may be a path or database connection string <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>source specification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="124" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a0cf28542bcea779cb93d3fd67cd623c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QgsDataProvider::setLayerOrder</definition>
        <argsstring>(const QStringList &amp;layers)</argsstring>
        <name>setLayerOrder</name>
        <param>
          <type>const QStringList &amp;</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
<para>Reorder the list of layer names to be rendered by this provider (in order from bottom to top) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>layers must have been previously added. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="273" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="273" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a2765050355390ae652f50eef6e47c35a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsDataProvider::setListening</definition>
        <argsstring>(bool isListening)</argsstring>
        <name>setListening</name>
        <param>
          <type>bool</type>
          <declname>isListening</declname>
        </param>
        <briefdescription>
<para>Set whether the provider will listen to datasource notifications If set, the provider will issue notify signals. </para>        </briefdescription>
        <detaileddescription>
<para>The default implementation does nothing.</para><para><simplesect kind="see"><para><ref refid="classQgsDataProvider_1abdb764c89cc99ccaa418178c26d84c32" kindref="member">notify</ref></para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="472" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a3012970e7ff3fd790f45d5b680431c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDataProvider::setProviderProperty</definition>
        <argsstring>(ProviderProperty property, const QVariant &amp;value)</argsstring>
        <name>setProviderProperty</name>
        <param>
          <type><ref refid="classQgsDataProvider_1a5b7c15ef49dfa659b23b81c4b0893cdd" kindref="member">ProviderProperty</ref></type>
          <declname>property</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Allows setting arbitrary properties on the provider. </para>        </briefdescription>
        <detaileddescription>
<para>It depends on the provider which properties are supported.</para><para><simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="436" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a3fc28217167326c71ecb68547d971036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDataProvider::setProviderProperty</definition>
        <argsstring>(int property, const QVariant &amp;value)</argsstring>
        <name>setProviderProperty</name>
        <param>
          <type>int</type>
          <declname>property</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Allows setting arbitrary properties on the provider. </para>        </briefdescription>
        <detaileddescription>
<para>It depends on the provider which properties are supported.</para><para><simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="444" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1af1e9e5f613bc26aad36321e789801366" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QgsDataProvider::setSubLayerVisibility</definition>
        <argsstring>(const QString &amp;name, bool vis)</argsstring>
        <name>setSubLayerVisibility</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vis</declname>
        </param>
        <briefdescription>
<para>Set the visibility of the given sublayer name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="287" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="287" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1ad52e4c2dab80e6125e1c07f13c725cc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QgsDataProvider::setSubsetString</definition>
        <argsstring>(const QString &amp;subset, bool updateFeatureCount=true)</argsstring>
        <name>setSubsetString</name>
        <param>
          <type>const QString &amp;</type>
          <declname>subset</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>updateFeatureCount</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set the subset string used to create a subset of features in the layer. </para>        </briefdescription>
        <detaileddescription>
<para>This may be a sql where clause or any other string that can be used by the data provider to create a subset. Must be implemented in the dataprovider. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="200" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="200" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a07f39172fc273ba241d0f8e483ef6b2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDataProvider::setUri</definition>
        <argsstring>(const QgsDataSourceUri &amp;uri)</argsstring>
        <name>setUri</name>
        <param>
          <type>const <ref refid="classQgsDataSourceUri" kindref="compound">QgsDataSourceUri</ref> &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
<para>Set the data source specification. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="156" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1ad54e0150e07dc310f75068543d40e141" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>uint</type>
        <definition>virtual uint QgsDataProvider::subLayerCount</definition>
        <argsstring>() const</argsstring>
        <name>subLayerCount</name>
        <briefdescription>
<para>Returns the number of layers for the current data source. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="262" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1ad73997762df861eacb25c553623e14b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QStringList</type>
        <definition>virtual QStringList QgsDataProvider::subLayers</definition>
        <argsstring>() const</argsstring>
        <name>subLayers</name>
        <reimplementedby refid="classQgsRasterDataProvider_1a9b2426640429f78b13b6a5fbb9d0f6f7">subLayers</reimplementedby>
        <briefdescription>
<para>Sub-layers handled by this provider, in order from bottom to top. </para>        </briefdescription>
        <detaileddescription>
<para>Sub-layers are used when the provider&apos;s source can combine layers it knows about in some way before it hands them off to the provider.</para><para><simplesect kind="see"><para><ref refid="classQgsDataProvider_1acfd848673de93ad11abb901f23bcc03b" kindref="member">SUBLAYER_SEPARATOR</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="234" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1ac37f7be01d016aa85624d80ab94d6f32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QStringList</type>
        <definition>virtual QStringList QgsDataProvider::subLayerStyles</definition>
        <argsstring>() const</argsstring>
        <name>subLayerStyles</name>
        <briefdescription>
<para>Sub-layer styles for each sub-layer handled by this provider, in order from bottom to top. </para>        </briefdescription>
        <detaileddescription>
<para>Sub-layer styles are used to abstract the way the provider&apos;s source can symbolise layers in some way at the server, before it serves them to the provider. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="253" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a63173ed93bfc521d3ed3f50e2c1a046b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>virtual QString QgsDataProvider::subsetString</definition>
        <argsstring>() const</argsstring>
        <name>subsetString</name>
        <briefdescription>
<para>Returns the subset definition string (typically sql) currently in use by the layer and used by the provider to limit the feature set. </para>        </briefdescription>
        <detaileddescription>
<para>Must be overridden in the dataprovider, otherwise returns a null QString. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="220" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a92eaf65492a9162be2583a94f2a3d7df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QgsDataProvider::supportsSubsetString</definition>
        <argsstring>() const</argsstring>
        <name>supportsSubsetString</name>
        <briefdescription>
<para>Returns true if the provider supports setting of subset strings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="212" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a1ea9dadfd22370ef901f0d4d01039a8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QDateTime</type>
        <definition>virtual QDateTime QgsDataProvider::timestamp</definition>
        <argsstring>() const</argsstring>
        <name>timestamp</name>
        <reimplementedby refid="classQgsRasterDataProvider_1a84ae0d3b43181f97eeca04af2fe69f80">timestamp</reimplementedby>
        <briefdescription>
<para>Time stamp of data source in the moment when data/metadata were loaded by provider. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="369" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1acb454ad6003885cfb6f38908e6b31e76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QgsDataProvider::updateExtents</definition>
        <argsstring>()</argsstring>
        <name>updateExtents</name>
        <briefdescription>
<para>Update the extents of the layer. </para>        </briefdescription>
        <detaileddescription>
<para>Not implemented by default. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="188" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1aace8571ba2a6c0fd1beb972b60cc6741" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsDataSourceUri" kindref="compound">QgsDataSourceUri</ref></type>
        <definition>QgsDataSourceUri QgsDataProvider::uri</definition>
        <argsstring>() const</argsstring>
        <name>uri</name>
        <briefdescription>
<para>Gets the data source specification. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="166" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1ad9277c014467cb8471e3119397f087e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QgsDataProvider::writeLayerMetadata</definition>
        <argsstring>(const QgsLayerMetadata &amp;metadata)</argsstring>
        <name>writeLayerMetadata</name>
        <param>
          <type>const <ref refid="classQgsLayerMetadata" kindref="compound">QgsLayerMetadata</ref> &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
<para>Writes layer <emphasis>metadata</emphasis> to the underlying provider source. </para>        </briefdescription>
        <detaileddescription>
<para>Support depends on individual provider capabilities.</para><para>Returns true if metadata was successfully written to the data provider. <simplesect kind="see"><para><ref refid="classQgsDataProvider_1a69646da138dc98e9fa605fbed1283bb6" kindref="member">layerMetadata()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="523" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="523" bodyend="523"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classQgsDataProvider_1a3ef3fe56a79c3a56fccb2cbb528aa886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDataProvider::dataChanged</definition>
        <argsstring>()</argsstring>
        <name>dataChanged</name>
        <briefdescription>
<para>Emitted whenever a change is made to the data provider which may have caused changes in the provider&apos;s data OUTSIDE of QGIS. </para>        </briefdescription>
        <detaileddescription>
<para>When emitted from a <ref refid="classQgsVectorDataProvider" kindref="compound">QgsVectorDataProvider</ref>, any cached information such as feature ids should be invalidated.</para><para><simplesect kind="warning"><para>This signal is NOT emitted when changes are made to a provider from INSIDE QGIS <ndash/> e.g. when adding features to a vector layer, deleting features or modifying existing features. Instead, the specific <ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> signals should be used to detect these operations. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="547" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsDataProvider_1a584aad1c83ef7873a4cefa3d337c391e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDataProvider::fullExtentCalculated</definition>
        <argsstring>()</argsstring>
        <name>fullExtentCalculated</name>
        <briefdescription>
<para>Emitted whenever a deferred extent calculation is completed by the provider. </para>        </briefdescription>
        <detaileddescription>
<para>Layers should connect to this signal and update their cached extents whenever it is emitted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="533" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsDataProvider_1abdb764c89cc99ccaa418178c26d84c32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDataProvider::notify</definition>
        <argsstring>(const QString &amp;msg)</argsstring>
        <name>notify</name>
        <param>
          <type>const QString &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Emitted when the datasource issues a notification. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsDataProvider_1a2765050355390ae652f50eef6e47c35a" kindref="member">setListening</ref></para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="556" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsDataProvider_1aff7aa0a18bcb7170f17cb2d5b073d8ce" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDataProvider::appendError</definition>
        <argsstring>(const QgsErrorMessage &amp;message)</argsstring>
        <name>appendError</name>
        <param>
          <type>const <ref refid="classQgsErrorMessage" kindref="compound">QgsErrorMessage</ref> &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Add error message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="570" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="570" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDataProvider_1a1e7a5b46dcf07d146f257e9a08bde197" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDataProvider::setError</definition>
        <argsstring>(const QgsError &amp;error)</argsstring>
        <name>setError</name>
        <param>
          <type>const <ref refid="classQgsError" kindref="compound">QgsError</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Sets error message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="573" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="573" bodyend="573"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract base class for spatial data provider implementations. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2231">
        <label>QObject</label>
      </node>
      <node id="2233">
        <label>QgsRasterDataProvider</label>
        <link refid="classQgsRasterDataProvider"/>
        <childnode refid="2230" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2230">
        <label>QgsDataProvider</label>
        <link refid="classQgsDataProvider"/>
        <childnode refid="2231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2234">
        <label>QgsVectorDataProvider</label>
        <link refid="classQgsVectorDataProvider"/>
        <childnode refid="2230" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2232">
        <label>QgsMeshDataProvider</label>
        <link refid="classQgsMeshDataProvider"/>
        <childnode refid="2230" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2237">
        <label>QgsError</label>
        <link refid="classQgsError"/>
      </node>
      <node id="2236">
        <label>QObject</label>
      </node>
      <node id="2235">
        <label>QgsDataProvider</label>
        <link refid="classQgsDataProvider"/>
        <childnode refid="2236" relation="public-inheritance">
        </childnode>
        <childnode refid="2237" relation="usage">
          <edgelabel>mError</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" line="41" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdataprovider.h" bodystart="40" bodyend="584"/>
    <listofallmembers>
      <member refid="classQgsDataProvider_1aff7aa0a18bcb7170f17cb2d5b073d8ce" prot="protected" virt="non-virtual"><scope>QgsDataProvider</scope><name>appendError</name></member>
      <member refid="classQgsDataProvider_1a390a2d77b871763209396167d5558d18" prot="public" virt="pure-virtual"><scope>QgsDataProvider</scope><name>crs</name></member>
      <member refid="classQgsDataProvider_1a5b7c15ef49dfa659b23b81c4b0893cddafe3bb20221731e6f855d22ed0993e78d" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>CustomData</name></member>
      <member refid="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153a2895dc708693161d3d6316e1feeb4194" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>Database</name></member>
      <member refid="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>DataCapability</name></member>
      <member refid="classQgsDataProvider_1a3ef3fe56a79c3a56fccb2cbb528aa886" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>dataChanged</name></member>
      <member refid="classQgsDataProvider_1a94c4cce6651e60b9245989ba4bffd625" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>dataSourceUri</name></member>
      <member refid="classQgsDataProvider_1a875178949796ab38817744e2da88159e" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>dataTimestamp</name></member>
      <member refid="classQgsDataProvider_1aa735b1c007dd7becc218de07177afe3f" prot="public" virt="pure-virtual"><scope>QgsDataProvider</scope><name>description</name></member>
      <member refid="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153ac6c219f067db2e6eab688b6550d64e7e" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>Dir</name></member>
      <member refid="classQgsDataProvider_1aee77f143f485b6d792dec21b03e9dec1" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>enterUpdateMode</name></member>
      <member refid="classQgsDataProvider_1a77e9159d97d4276753cbaf54b89da6d0" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>error</name></member>
      <member refid="classQgsDataProvider_1a5b7c15ef49dfa659b23b81c4b0893cddabcccdb5e52717ca90a42d83bb247d306" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>EvaluateDefaultValues</name></member>
      <member refid="classQgsDataProvider_1aeea803b5b927c0551ec70f06af62971b" prot="public" virt="pure-virtual"><scope>QgsDataProvider</scope><name>extent</name></member>
      <member refid="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153a4527edddfa87acc2f0e13e76e9bef573" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>File</name></member>
      <member refid="classQgsDataProvider_1a77c62f534a2dccc65b963e03805c5b55" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>fileRasterFilters</name></member>
      <member refid="classQgsDataProvider_1ac24f20e109d01676c79f8a903a22d7f8" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>fileVectorFilters</name></member>
      <member refid="classQgsDataProvider_1a584aad1c83ef7873a4cefa3d337c391e" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>fullExtentCalculated</name></member>
      <member refid="classQgsDataProvider_1a037199bfafba24782f2ea7f07a133876" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>invalidateConnections</name></member>
      <member refid="classQgsDataProvider_1a6d034edbd7af7a7b02a642d241aa61fd" prot="public" virt="pure-virtual"><scope>QgsDataProvider</scope><name>isValid</name></member>
      <member refid="classQgsDataProvider_1a69646da138dc98e9fa605fbed1283bb6" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>layerMetadata</name></member>
      <member refid="classQgsDataProvider_1a06aa48e59fe6cd5aa6584c6bbb7891f2" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>leaveUpdateMode</name></member>
      <member refid="classQgsDataProvider_1ac20fcce36679733269b8950d740f654a" prot="private" virt="non-virtual"><scope>QgsDataProvider</scope><name>mDataSourceURI</name></member>
      <member refid="classQgsDataProvider_1a739f3d6e8264888cfd9b9acfb89187c5" prot="protected" virt="non-virtual"><scope>QgsDataProvider</scope><name>mError</name></member>
      <member refid="classQgsDataProvider_1a40ede19b6c725cbb38158edf752f8523" prot="private" virt="non-virtual"><scope>QgsDataProvider</scope><name>mProviderProperties</name></member>
      <member refid="classQgsDataProvider_1a709da4f1f8f9a3ff272a0a6e24fca062" prot="protected" virt="non-virtual"><scope>QgsDataProvider</scope><name>mTimestamp</name></member>
      <member refid="classQgsDataProvider_1a167a2d18c5824e4d5b69455b031546bd" prot="public" virt="pure-virtual"><scope>QgsDataProvider</scope><name>name</name></member>
      <member refid="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153ab2188dfa40f0cd2198972b7c771dd97c" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>Net</name></member>
      <member refid="classQgsDataProvider_1a7926195725476b07e40a8acbd7b5b153a1f81315186e62435cff393022d4afac2" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>NoDataCapabilities</name></member>
      <member refid="classQgsDataProvider_1abdb764c89cc99ccaa418178c26d84c32" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>notify</name></member>
      <member refid="classQgsDataProvider_1a5b7c15ef49dfa659b23b81c4b0893cdd" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>ProviderProperty</name></member>
      <member refid="classQgsDataProvider_1ac244176fc16f6b0c8f10735da6d52118" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>providerProperty</name></member>
      <member refid="classQgsDataProvider_1adaa3e78c2635798ad3f98c97102d03d4" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>providerProperty</name></member>
      <member refid="classQgsDataProvider_1a01ff4330b3a2b2df1cdd6d27603e04e9" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>QgsDataProvider</name></member>
      <member refid="classQgsDataProvider_1aea143a6723ae49ca0a10061ec52322d0" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>reloadData</name></member>
      <member refid="classQgsDataProvider_1ade08d99b8d4d08052d3911de3e3c081f" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>renderInPreview</name></member>
      <member refid="classQgsDataProvider_1a73a6ca365cde3bcd37ff9c7d931b3d75" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>setDataSourceUri</name></member>
      <member refid="classQgsDataProvider_1a1e7a5b46dcf07d146f257e9a08bde197" prot="protected" virt="non-virtual"><scope>QgsDataProvider</scope><name>setError</name></member>
      <member refid="classQgsDataProvider_1a0cf28542bcea779cb93d3fd67cd623c0" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>setLayerOrder</name></member>
      <member refid="classQgsDataProvider_1a2765050355390ae652f50eef6e47c35a" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>setListening</name></member>
      <member refid="classQgsDataProvider_1a3012970e7ff3fd790f45d5b680431c8f" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>setProviderProperty</name></member>
      <member refid="classQgsDataProvider_1a3fc28217167326c71ecb68547d971036" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>setProviderProperty</name></member>
      <member refid="classQgsDataProvider_1af1e9e5f613bc26aad36321e789801366" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>setSubLayerVisibility</name></member>
      <member refid="classQgsDataProvider_1ad52e4c2dab80e6125e1c07f13c725cc6" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>setSubsetString</name></member>
      <member refid="classQgsDataProvider_1a07f39172fc273ba241d0f8e483ef6b2b" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>setUri</name></member>
      <member refid="classQgsDataProvider_1acfd848673de93ad11abb901f23bcc03b" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>SUBLAYER_SEPARATOR</name></member>
      <member refid="classQgsDataProvider_1ad54e0150e07dc310f75068543d40e141" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>subLayerCount</name></member>
      <member refid="classQgsDataProvider_1ad73997762df861eacb25c553623e14b2" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>subLayers</name></member>
      <member refid="classQgsDataProvider_1ac37f7be01d016aa85624d80ab94d6f32" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>subLayerStyles</name></member>
      <member refid="classQgsDataProvider_1a63173ed93bfc521d3ed3f50e2c1a046b" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>subsetString</name></member>
      <member refid="classQgsDataProvider_1a92eaf65492a9162be2583a94f2a3d7df" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>supportsSubsetString</name></member>
      <member refid="classQgsDataProvider_1a1ea9dadfd22370ef901f0d4d01039a8c" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>timestamp</name></member>
      <member refid="classQgsDataProvider_1acb454ad6003885cfb6f38908e6b31e76" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>updateExtents</name></member>
      <member refid="classQgsDataProvider_1aace8571ba2a6c0fd1beb972b60cc6741" prot="public" virt="non-virtual"><scope>QgsDataProvider</scope><name>uri</name></member>
      <member refid="classQgsDataProvider_1ad9277c014467cb8471e3119397f087e9" prot="public" virt="virtual"><scope>QgsDataProvider</scope><name>writeLayerMetadata</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
