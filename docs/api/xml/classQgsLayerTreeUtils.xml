<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsLayerTreeUtils" kind="class" language="C++" prot="public">
    <compoundname>QgsLayerTreeUtils</compoundname>
    <includes refid="qgslayertreeutils_8h" local="no">qgslayertreeutils.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsLayerTreeUtils_1af3fd22b58880e916a64fbd38f5b50a46" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Qt::CheckState</type>
        <definition>Qt::CheckState QgsLayerTreeUtils::checkStateFromXml</definition>
        <argsstring>(const QString &amp;txt)</argsstring>
        <name>checkStateFromXml</name>
        <param>
          <type>const QString &amp;</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
<para>Convert QString to Qt::CheckState. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="55" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="195" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a15cbe9454eedaf805581724da9997fca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsLayerTreeUtils::checkStateToXml</definition>
        <argsstring>(Qt::CheckState state)</argsstring>
        <name>checkStateToXml</name>
        <param>
          <type>Qt::CheckState</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Convert Qt::CheckState to QString. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="53" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="181" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a22e8da26d9fba53898e9ce4e34eba2c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSet&lt; <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> * &gt;</type>
        <definition>QSet&lt; QgsMapLayer * &gt; QgsLayerTreeUtils::collectMapLayersRecursive</definition>
        <argsstring>(const QList&lt; QgsLayerTreeNode *&gt; &amp;nodes)</argsstring>
        <name>collectMapLayersRecursive</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *&gt; &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Returns map layers from the given list of layer tree nodes. </para>        </briefdescription>
        <detaileddescription>
<para>Also recursively visits child nodes of groups. <simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="103" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="482" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a6904f174dceb92b5e6a1997a276f1739" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsLayerTreeUtils::countMapLayerInTree</definition>
        <argsstring>(QgsLayerTreeNode *tree, QgsMapLayer *layer)</argsstring>
        <name>countMapLayerInTree</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Returns how many occurrences of a map layer are there in a layer tree. </para>        </briefdescription>
        <detaileddescription>
<para>In normal situations there is at most one occurrence, but sometimes there may be temporarily more: for example, during drag&amp;drop, upon drop a new layer node is created while the original dragged node is still in the tree, resulting in two occurrences.</para><para>This is useful when deciding whether to start or stop listening to a signal of a map layer within a layer tree and only connecting/disconnecting when there is only one occurrence of that layer. <simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="117" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="489" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a627832982ef5c11ecc6f981bcc9aa01a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeUtils::hasLegendFilterExpression</definition>
        <argsstring>(const QgsLayerTreeGroup &amp;group)</argsstring>
        <name>hasLegendFilterExpression</name>
        <param>
          <type>const <ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Test if one of the layers in a group has an expression filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="87" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="430" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a3dd707eac8b3aed669aa25300f693070" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> *</type>
        <definition>QgsLayerTreeLayer * QgsLayerTreeUtils::insertLayerBelow</definition>
        <argsstring>(QgsLayerTreeGroup *group, const QgsMapLayer *refLayer, QgsMapLayer *layerToInsert)</argsstring>
        <name>insertLayerBelow</name>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *</type>
          <declname>refLayer</declname>
        </param>
        <param>
          <type><ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *</type>
          <declname>layerToInsert</declname>
        </param>
        <briefdescription>
<para>Insert a <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> just below another one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>the tree group where layers are (can be the root group) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>refLayer</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layerToInsert</parametername>
</parameternamelist>
<parameterdescription>
<para>the new layer to insert just below the reference layer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new tree layer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="96" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="444" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1afcfeddff51c1942749522d6e202133c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsLayerTreeUtils::invisibleLayerList</definition>
        <argsstring>(QgsLayerTreeNode *node)</argsstring>
        <name>invisibleLayerList</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Gets invisible layers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="80" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="357" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a67ce13c89a329b6993a3b70b5f38b62b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeUtils::layersEditable</definition>
        <argsstring>(const QList&lt; QgsLayerTreeLayer *&gt; &amp;layerNodes)</argsstring>
        <name>layersEditable</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> *&gt; &amp;</type>
          <declname>layerNodes</declname>
        </param>
        <briefdescription>
<para>Returns true if any of the layers is editable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="58" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="263" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a44c33e3d80db258d3a6691b0a62a54e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeUtils::layersModified</definition>
        <argsstring>(const QList&lt; QgsLayerTreeLayer *&gt; &amp;layerNodes)</argsstring>
        <name>layersModified</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> *&gt; &amp;</type>
          <declname>layerNodes</declname>
        </param>
        <briefdescription>
<para>Returns true if any of the layers is modified. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="60" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="277" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a546e7e5be672f4ada2bf5c0d7b4968b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsLayerTreeUtils::legendFilterByExpression</definition>
        <argsstring>(const QgsLayerTreeLayer &amp;layer, bool *enabled=nullptr)</argsstring>
        <name>legendFilterByExpression</name>
        <param>
          <type>const <ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> &amp;</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>enabled</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns the expression filter of a legend layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="85" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="423" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1ac3be9172fb952ee0dc94c6c7c9e10d78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeUtils::readOldLegend</definition>
        <argsstring>(QgsLayerTreeGroup *root, const QDomElement &amp;legendElem)</argsstring>
        <name>readOldLegend</name>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const QDomElement &amp;</type>
          <declname>legendElem</declname>
        </param>
        <briefdescription>
<para>Try to load layer tree from. </para>        </briefdescription>
        <detaileddescription>
<para><verbatim>&lt;legend&gt; </verbatim> tag from project files from QGIS 2.2 and below </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="46" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="28" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a86da97c00ccd9685d288e2bd2d9d83a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeUtils::readOldLegendLayerOrder</definition>
        <argsstring>(const QDomElement &amp;legendElem, bool &amp;hasCustomOrder, QStringList &amp;order)</argsstring>
        <name>readOldLegendLayerOrder</name>
        <param>
          <type>const QDomElement &amp;</type>
          <declname>legendElem</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasCustomOrder</declname>
        </param>
        <param>
          <type>QStringList &amp;</type>
          <declname>order</declname>
        </param>
        <briefdescription>
<para>Try to load custom layer order from. </para>        </briefdescription>
        <detaileddescription>
<para><verbatim>&lt;legend&gt; </verbatim> tag from project files from QGIS 2.2 and below </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="48" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="80" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1ac5250f7cf1595e982e6a16376ff98289" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeUtils::removeInvalidLayers</definition>
        <argsstring>(QgsLayerTreeGroup *group)</argsstring>
        <name>removeInvalidLayers</name>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Removes layer nodes that refer to invalid layers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="63" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="291" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a22cb5ca149b03d0b82c57e5df633ca1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeUtils::replaceChildrenOfEmbeddedGroups</definition>
        <argsstring>(QgsLayerTreeGroup *group)</argsstring>
        <name>replaceChildrenOfEmbeddedGroups</name>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Remove subtree of embedded groups and replaces it with a custom property embedded-visible-layers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="72" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="379" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a4249d2026429309a61c896a60f2170b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeUtils::setLegendFilterByExpression</definition>
        <argsstring>(QgsLayerTreeLayer &amp;layer, const QString &amp;expr, bool enabled=true)</argsstring>
        <name>setLegendFilterByExpression</name>
        <param>
          <type><ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> &amp;</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Sets the expression filter of a legend layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="83" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="417" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a5c4836a629c112f71a6a11877a378339" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeUtils::storeOriginalLayersProperties</definition>
        <argsstring>(QgsLayerTreeGroup *group, const QDomDocument *doc)</argsstring>
        <name>storeOriginalLayersProperties</name>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const QDomDocument *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
<para>Stores in a layer&apos;s originalXmlProperties the layer properties information. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="69" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="309" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1abccc65dd75b33e8ffa48f4a9ac9afd1d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeUtils::updateEmbeddedGroupsProjectPath</definition>
        <argsstring>(QgsLayerTreeGroup *group, const QgsProject *project)</argsstring>
        <name>updateEmbeddedGroupsProjectPath</name>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsProject" kindref="compound">QgsProject</ref> *</type>
          <declname>project</declname>
        </param>
        <briefdescription>
<para>Updates an embedded <emphasis>group</emphasis> from a <emphasis>project</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="77" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="399" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeUtils_1a1275472da03acd3a58c8dc0fb6f23514" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QDomElement</type>
        <definition>QDomElement QgsLayerTreeUtils::writeOldLegend</definition>
        <argsstring>(QDomDocument &amp;doc, QgsLayerTreeGroup *root, bool hasCustomOrder, const QList&lt; QgsMapLayer *&gt; &amp;order)</argsstring>
        <name>writeOldLegend</name>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasCustomOrder</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *&gt; &amp;</type>
          <declname>order</declname>
        </param>
        <briefdescription>
<para>Returns. </para>        </briefdescription>
        <detaileddescription>
<para><verbatim>&lt;legend&gt; </verbatim> tag used in QGIS 2.2 and below </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="50" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.cpp" bodystart="170" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Assorted functions for dealing with layer trees. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.4 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" line="42" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreeutils.h" bodystart="41" bodyend="118"/>
    <listofallmembers>
      <member refid="classQgsLayerTreeUtils_1af3fd22b58880e916a64fbd38f5b50a46" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>checkStateFromXml</name></member>
      <member refid="classQgsLayerTreeUtils_1a15cbe9454eedaf805581724da9997fca" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>checkStateToXml</name></member>
      <member refid="classQgsLayerTreeUtils_1a22e8da26d9fba53898e9ce4e34eba2c7" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>collectMapLayersRecursive</name></member>
      <member refid="classQgsLayerTreeUtils_1a6904f174dceb92b5e6a1997a276f1739" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>countMapLayerInTree</name></member>
      <member refid="classQgsLayerTreeUtils_1a627832982ef5c11ecc6f981bcc9aa01a" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>hasLegendFilterExpression</name></member>
      <member refid="classQgsLayerTreeUtils_1a3dd707eac8b3aed669aa25300f693070" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>insertLayerBelow</name></member>
      <member refid="classQgsLayerTreeUtils_1afcfeddff51c1942749522d6e202133c0" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>invisibleLayerList</name></member>
      <member refid="classQgsLayerTreeUtils_1a67ce13c89a329b6993a3b70b5f38b62b" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>layersEditable</name></member>
      <member refid="classQgsLayerTreeUtils_1a44c33e3d80db258d3a6691b0a62a54e6" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>layersModified</name></member>
      <member refid="classQgsLayerTreeUtils_1a546e7e5be672f4ada2bf5c0d7b4968b4" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>legendFilterByExpression</name></member>
      <member refid="classQgsLayerTreeUtils_1ac3be9172fb952ee0dc94c6c7c9e10d78" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>readOldLegend</name></member>
      <member refid="classQgsLayerTreeUtils_1a86da97c00ccd9685d288e2bd2d9d83a3" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>readOldLegendLayerOrder</name></member>
      <member refid="classQgsLayerTreeUtils_1ac5250f7cf1595e982e6a16376ff98289" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>removeInvalidLayers</name></member>
      <member refid="classQgsLayerTreeUtils_1a22cb5ca149b03d0b82c57e5df633ca1e" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>replaceChildrenOfEmbeddedGroups</name></member>
      <member refid="classQgsLayerTreeUtils_1a4249d2026429309a61c896a60f2170b5" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>setLegendFilterByExpression</name></member>
      <member refid="classQgsLayerTreeUtils_1a5c4836a629c112f71a6a11877a378339" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>storeOriginalLayersProperties</name></member>
      <member refid="classQgsLayerTreeUtils_1abccc65dd75b33e8ffa48f4a9ac9afd1d" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>updateEmbeddedGroupsProjectPath</name></member>
      <member refid="classQgsLayerTreeUtils_1a1275472da03acd3a58c8dc0fb6f23514" prot="public" virt="non-virtual"><scope>QgsLayerTreeUtils</scope><name>writeOldLegend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
