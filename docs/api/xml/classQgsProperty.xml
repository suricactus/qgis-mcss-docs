<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsProperty" kind="class" language="C++" prot="public">
    <compoundname>QgsProperty</compoundname>
    <includes refid="qgsproperty_8h" local="no">qgsproperty.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9e" prot="public" static="no">
        <name>Type</name>
        <enumvalue id="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9eaf6bc61c9c0b42cb23024b5f85046b7fd" prot="public">
          <name>InvalidProperty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9ea8146309b612ab95ee6c433b30861dc8e" prot="public">
          <name>StaticProperty</name>
          <briefdescription>
<para>Invalid (not set) property. </para>          </briefdescription>
          <detaileddescription>
<para>Static property (QgsStaticProperty) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9eaa675ad4973165378ee0640e160cb2e17" prot="public">
          <name>FieldBasedProperty</name>
          <briefdescription>
<para>Field based property (QgsFieldBasedProperty) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9ea0eca418254388cbabf4eb22ae74f8f05" prot="public">
          <name>ExpressionBasedProperty</name>
          <briefdescription>
<para>Expression based property (QgsExpressionBasedProperty) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Property types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="235" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" bodystart="234" bodyend="240"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsProperty_1ab891ec723029457150a37fadcd9873e7" prot="private" static="no" mutable="yes">
        <type>QExplicitlySharedDataPointer&lt; QgsPropertyPrivate &gt;</type>
        <definition>QExplicitlySharedDataPointer&lt;QgsPropertyPrivate&gt; QgsProperty::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="494" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsProperty_1aeab3832078ef0440a02051e54ef8afbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsProperty::QgsProperty</definition>
        <argsstring>()</argsstring>
        <name>QgsProperty</name>
        <briefdescription>
<para>Constructor for a QgsAbstractProperty. </para>        </briefdescription>
        <detaileddescription>
<para>The property will be set to an InvalidProperty type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="245" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a6fa9873adb8d9aba86e926fbefc32fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsProperty::QgsProperty</definition>
        <argsstring>(const QgsProperty &amp;other)</argsstring>
        <name>QgsProperty</name>
        <param>
          <type>const <ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="265" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1ac317f2bd4cddf040d9f8776f710c7460" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QgsProperty::~QgsProperty</definition>
        <argsstring>()=default</argsstring>
        <name>~QgsProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a29b1551fefcc07ae4acf798d8edf43cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsProperty::asExpression</definition>
        <argsstring>() const</argsstring>
        <name>asExpression</name>
        <briefdescription>
<para>Returns an expression string representing the state of the property, or an empty string if the property could not be converted to an expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="340" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="323" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a3ad0aae9ca92dc4d580dc4948ed2a3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsProperty::convertToTransformer</definition>
        <argsstring>()</argsstring>
        <name>convertToTransformer</name>
        <briefdescription>
<para>Attempts to convert an existing expression based property to a base expression with corresponding transformer. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true if conversion was successful. Note that calling this method requires multiple parsing of expressions, so it should only be called in non-performance critical code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="484" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="753" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a36dc1bc37474a96c364150c77fc32787" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsProperty::expressionString</definition>
        <argsstring>() const</argsstring>
        <name>expressionString</name>
        <briefdescription>
<para>Returns the expression used for the property value. </para>        </briefdescription>
        <detaileddescription>
<para>If the property is not a ExpressionBasedProperty this will return an empty string. <simplesect kind="see"><para><ref refid="classQgsProperty_1acc42d7292f408cb58fda599081959ae6" kindref="member">setExpressionString()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="334" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="314" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a521780982790798332527271cf45aa1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsProperty::field</definition>
        <argsstring>() const</argsstring>
        <name>field</name>
        <briefdescription>
<para>Returns the current field name the property references. </para>        </briefdescription>
        <detaileddescription>
<para>If the property is not a FieldBasedProperty this will return an empty string. <simplesect kind="see"><para><ref refid="classQgsProperty_1a998a0e9d95802211c5ca91a3d6957124" kindref="member">setField()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="320" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="292" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a895c8bda88dbad6dedc815a25bff05f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsProperty::isActive</definition>
        <argsstring>() const</argsstring>
        <name>isActive</name>
        <briefdescription>
<para>Returns whether the property is currently active. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProperty_1af623c4093b64c2622a81c83f345e2734" kindref="member">setActive()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="286" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a0e66aa2fea94ff6fa20e737d5cc2024d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsProperty::isProjectColor</definition>
        <argsstring>() const</argsstring>
        <name>isProjectColor</name>
        <briefdescription>
<para>Returns true if the property is set to a linked project color. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="360" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="421" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1ab5f34672aef2afef7a8b5eccd99ab8e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsProperty::loadVariant</definition>
        <argsstring>(const QVariant &amp;property)</argsstring>
        <name>loadVariant</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Loads this property from a QVariantMap, wrapped in a QVariant. </para>        </briefdescription>
        <detaileddescription>
<para>You can use <ref refid="classQgsXmlUtils_1a78b54d8785573d3ad51566999d7a3884" kindref="member">QgsXmlUtils::readVariant</ref> to load it from an XML document.</para><para><simplesect kind="see"><para><ref refid="classQgsProperty_1a7b4a6b298953c09ddf91320b5e963204" kindref="member">toVariant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="462" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="681" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a0ef8d276bca790b0c59a95a7f1ae7c4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsProperty::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Returns true if the property is not an invalid type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="272" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1ab5b01b70b337f16258340a05e096ed26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsProperty::operator QVariant</definition>
        <argsstring>() const</argsstring>
        <name>operator QVariant</name>
        <briefdescription>
<para>Allows direct construction of QVariants from properties. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="487" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" bodystart="487" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1ac6c4aba9a017c61350a1e59c11d0f2d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsProperty::operator!=</definition>
        <argsstring>(const QgsProperty &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="275" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1ad38334c8ac6044fc7cdf60cefa44afdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> &amp;</type>
        <definition>QgsProperty &amp; QgsProperty::operator=</definition>
        <argsstring>(const QgsProperty &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="267" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a2eaf866eb9039fe85194a60159420067" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsProperty::operator==</definition>
        <argsstring>(const QgsProperty &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="274" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="238" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1ab2264927e1b1da2d8be35eacf7e5f3da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsProperty::prepare</definition>
        <argsstring>(const QgsExpressionContext &amp;context=QgsExpressionContext()) const</argsstring>
        <name>prepare</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>()</defval>
        </param>
        <briefdescription>
<para>Prepares the property against a specified expression context. </para>        </briefdescription>
        <detaileddescription>
<para>Calling prepare before evaluating the property multiple times allows precalculation of expensive setup tasks such as parsing expressions. Returns true if preparation was successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="347" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="347" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1abcbdf3db5c442c234ee3ace6234d446f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9e" kindref="member">Type</ref></type>
        <definition>QgsProperty::Type QgsProperty::propertyType</definition>
        <argsstring>() const</argsstring>
        <name>propertyType</name>
        <briefdescription>
<para>Returns the property type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="280" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1ae6bdba86a634c9e66dd1fcfd5c3b74e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsProperty::referencedFields</definition>
        <argsstring>(const QgsExpressionContext &amp;context=QgsExpressionContext()) const</argsstring>
        <name>referencedFields</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>()</defval>
        </param>
        <briefdescription>
<para>Returns the set of any fields referenced by the property for a specified expression context. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="353" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="389" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1af623c4093b64c2622a81c83f345e2734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsProperty::setActive</definition>
        <argsstring>(bool active)</argsstring>
        <name>setActive</name>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
<para>Sets whether the property is currently active. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProperty_1a895c8bda88dbad6dedc815a25bff05f6" kindref="member">isActive()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="292" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="263" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1acc42d7292f408cb58fda599081959ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsProperty::setExpressionString</definition>
        <argsstring>(const QString &amp;expression)</argsstring>
        <name>setExpressionString</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Sets the expression to use for the property value. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this will transform the property into an ExpressionBasedProperty. <simplesect kind="see"><para><ref refid="classQgsProperty_1a36dc1bc37474a96c364150c77fc32787" kindref="member">expressionString()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="327" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="305" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a998a0e9d95802211c5ca91a3d6957124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsProperty::setField</definition>
        <argsstring>(const QString &amp;field)</argsstring>
        <name>setField</name>
        <param>
          <type>const QString &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Sets the field name the property references. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this will transform the property into an FieldBasedProperty. <simplesect kind="see"><para><ref refid="classQgsProperty_1a521780982790798332527271cf45aa1c" kindref="member">field()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="313" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="284" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a3d2a62095942d5f570bb726d2babfb35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsProperty::setStaticValue</definition>
        <argsstring>(const QVariant &amp;value)</argsstring>
        <name>setStaticValue</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the static value for the property. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this will transform the property into an StaticProperty. <simplesect kind="see"><para><ref refid="classQgsProperty_1ab9cff19cfb3a0c11cc0ae7e2e63e6f3e" kindref="member">staticValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="299" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="269" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a3b0c740b81e7ace7e77384931be29ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsProperty::setTransformer</definition>
        <argsstring>(QgsPropertyTransformer *transformer)</argsstring>
        <name>setTransformer</name>
        <param>
          <type><ref refid="classQgsPropertyTransformer" kindref="compound">QgsPropertyTransformer</ref> *</type>
          <declname>transformer</declname>
        </param>
        <briefdescription>
<para>Sets an optional transformer to use for manipulating the calculated values for the property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transformer</parametername>
</parameternamelist>
<parameterdescription>
<para>transformer to install. Ownership is transferred to the property, and any existing transformer will be deleted. Set to null to remove an existing transformer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a5bee6183a2a12b58a11045695a862eec" kindref="member">transformer()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="470" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="742" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1ab9cff19cfb3a0c11cc0ae7e2e63e6f3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsProperty::staticValue</definition>
        <argsstring>() const</argsstring>
        <name>staticValue</name>
        <briefdescription>
<para>Returns the current static value for the property. </para>        </briefdescription>
        <detaileddescription>
<para>If the property is not a StaticProperty this will return an invalid variant. <simplesect kind="see"><para><ref refid="classQgsProperty_1a3d2a62095942d5f570bb726d2babfb35" kindref="member">setStaticValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="306" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="276" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a7b4a6b298953c09ddf91320b5e963204" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsProperty::toVariant</definition>
        <argsstring>() const</argsstring>
        <name>toVariant</name>
        <briefdescription>
<para>Saves this property to a QVariantMap, wrapped in a QVariant. </para>        </briefdescription>
        <detaileddescription>
<para>You can use <ref refid="classQgsXmlUtils_1a4192d177c2475a2825cc1ba9972d97b9" kindref="member">QgsXmlUtils::writeVariant</ref> to save it to an XML document.</para><para><simplesect kind="see"><para><ref refid="classQgsProperty_1ab5f34672aef2afef7a8b5eccd99ab8e2" kindref="member">loadVariant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="454" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="643" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a5bee6183a2a12b58a11045695a862eec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classQgsPropertyTransformer" kindref="compound">QgsPropertyTransformer</ref> *</type>
        <definition>const QgsPropertyTransformer * QgsProperty::transformer</definition>
        <argsstring>() const</argsstring>
        <name>transformer</name>
        <briefdescription>
<para>Returns the existing transformer used for manipulating the calculated values for the property, if set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProperty_1a3b0c740b81e7ace7e77384931be29ea8" kindref="member">setTransformer()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="476" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="748" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a72d7a0c0a8af26e2d2e1ae1d3aa3323b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsProperty::value</definition>
        <argsstring>(const QgsExpressionContext &amp;context, const QVariant &amp;defaultValue=QVariant(), bool *ok=nullptr) const</argsstring>
        <name>value</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>defaultValue</declname>
          <defval>QVariant()</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property, including any transforms which are set for the property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. The variables and functions contained in the expression context can be used to alter the calculated value for the property, so that a property is able to respond to the current environment, layers and features within QGIS. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>default value to return if the property is not active or cannot be calculated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated value for property </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a4ae242a65bde541867144e05f67f2ac9" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a0d7bebddb990f3a5d4d8f2f266bcc833" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a8eafb17fa9a9100f9dce2c9b89d74e61" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1aa0035497759c9c57ac7323e9ecc0c94e" kindref="member">valueAsInt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1aa8cc69e8f240b0ecb6a19d42d58de2b9" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="376" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="495" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1aa8cc69e8f240b0ecb6a19d42d58de2b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsProperty::valueAsBool</definition>
        <argsstring>(const QgsExpressionContext &amp;context, bool defaultValue=false, bool *ok=nullptr) const</argsstring>
        <name>valueAsBool</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defaultValue</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property and interprets it as an boolean. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>default boolean to return if the property cannot be calculated as an boolean </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value parsed to boolean </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a72d7a0c0a8af26e2d2e1ae1d3aa3323b" kindref="member">value()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a4ae242a65bde541867144e05f67f2ac9" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a0d7bebddb990f3a5d4d8f2f266bcc833" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a8eafb17fa9a9100f9dce2c9b89d74e61" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1aa0035497759c9c57ac7323e9ecc0c94e" kindref="member">valueAsInt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="446" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="627" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a0d7bebddb990f3a5d4d8f2f266bcc833" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor QgsProperty::valueAsColor</definition>
        <argsstring>(const QgsExpressionContext &amp;context, const QColor &amp;defaultColor=QColor(), bool *ok=nullptr) const</argsstring>
        <name>valueAsColor</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>defaultColor</declname>
          <defval>QColor()</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property and interprets it as a color. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultColor</parametername>
</parameternamelist>
<parameterdescription>
<para>default color to return if the property cannot be calculated as a color </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value parsed to color </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a72d7a0c0a8af26e2d2e1ae1d3aa3323b" kindref="member">value()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a4ae242a65bde541867144e05f67f2ac9" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a8eafb17fa9a9100f9dce2c9b89d74e61" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1aa0035497759c9c57ac7323e9ecc0c94e" kindref="member">valueAsInt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1aa8cc69e8f240b0ecb6a19d42d58de2b9" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="404" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="537" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a8eafb17fa9a9100f9dce2c9b89d74e61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsProperty::valueAsDouble</definition>
        <argsstring>(const QgsExpressionContext &amp;context, double defaultValue=0.0, bool *ok=nullptr) const</argsstring>
        <name>valueAsDouble</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defaultValue</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property and interprets it as a double. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>default double to return if the property cannot be calculated as a double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value parsed to double </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a72d7a0c0a8af26e2d2e1ae1d3aa3323b" kindref="member">value()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a4ae242a65bde541867144e05f67f2ac9" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a0d7bebddb990f3a5d4d8f2f266bcc833" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1aa0035497759c9c57ac7323e9ecc0c94e" kindref="member">valueAsInt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1aa8cc69e8f240b0ecb6a19d42d58de2b9" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="418" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="568" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1aa0035497759c9c57ac7323e9ecc0c94e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsProperty::valueAsInt</definition>
        <argsstring>(const QgsExpressionContext &amp;context, int defaultValue=0, bool *ok=nullptr) const</argsstring>
        <name>valueAsInt</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property and interprets it as an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>default integer to return if the property cannot be calculated as an integer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value parsed to integer </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a72d7a0c0a8af26e2d2e1ae1d3aa3323b" kindref="member">value()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a4ae242a65bde541867144e05f67f2ac9" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a0d7bebddb990f3a5d4d8f2f266bcc833" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a8eafb17fa9a9100f9dce2c9b89d74e61" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1aa8cc69e8f240b0ecb6a19d42d58de2b9" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="432" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="591" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1a4ae242a65bde541867144e05f67f2ac9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsProperty::valueAsString</definition>
        <argsstring>(const QgsExpressionContext &amp;context, const QString &amp;defaultString=QString(), bool *ok=nullptr) const</argsstring>
        <name>valueAsString</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>defaultString</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property and interprets it as a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultString</parametername>
</parameternamelist>
<parameterdescription>
<para>default string to return if the property cannot be calculated as a string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value parsed to string </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a72d7a0c0a8af26e2d2e1ae1d3aa3323b" kindref="member">value()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a0d7bebddb990f3a5d4d8f2f266bcc833" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1a8eafb17fa9a9100f9dce2c9b89d74e61" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1aa0035497759c9c57ac7323e9ecc0c94e" kindref="member">valueAsInt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProperty_1aa8cc69e8f240b0ecb6a19d42d58de2b9" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="390" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="518" bodyend="535"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsProperty_1a79cd03353f102abd586c509be60f35d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsProperty" kindref="compound">QgsProperty</ref></type>
        <definition>QgsProperty QgsProperty::fromExpression</definition>
        <argsstring>(const QString &amp;expression, bool isActive=true)</argsstring>
        <name>fromExpression</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isActive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a new ExpressionBasedProperty created from the specified expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="252" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="204" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1ad41341d91d6098f35912cbc0de520a74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsProperty" kindref="compound">QgsProperty</ref></type>
        <definition>QgsProperty QgsProperty::fromField</definition>
        <argsstring>(const QString &amp;fieldName, bool isActive=true)</argsstring>
        <name>fromField</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fieldName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isActive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a new FieldBasedProperty created from the specified field name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="257" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="212" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProperty_1af1462dc7aaa921fb10d52c297be6fb32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsProperty" kindref="compound">QgsProperty</ref></type>
        <definition>QgsProperty QgsProperty::fromValue</definition>
        <argsstring>(const QVariant &amp;value, bool isActive=true)</argsstring>
        <name>fromValue</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isActive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a new StaticProperty created from the specified value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="262" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="220" bodyend="226"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsProperty_1a6a32336f493228c473977ca78dc6e6a8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsProperty::propertyValue</definition>
        <argsstring>(const QgsExpressionContext &amp;context, const QVariant &amp;defaultValue=QVariant(), bool *ok=nullptr) const</argsstring>
        <name>propertyValue</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>defaultValue</declname>
          <defval>QVariant()</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property, before any transformations or conversions are applied. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="500" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.cpp" bodystart="428" bodyend="492"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A store for object properties. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> objects are used for storing properties for objects, which can then be transformed to a QVariant value by evaluating them against a supplied <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>. Multiple <ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> objects can be grouped using a <ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> for easier bulk storage, retrieval and evaluation.</para><para><ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> objects are implicitly shared and can be inexpensively copied.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" line="230" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproperty.h" bodystart="229" bodyend="502"/>
    <listofallmembers>
      <member refid="classQgsProperty_1a29b1551fefcc07ae4acf798d8edf43cd" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>asExpression</name></member>
      <member refid="classQgsProperty_1a3ad0aae9ca92dc4d580dc4948ed2a3bb" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>convertToTransformer</name></member>
      <member refid="classQgsProperty_1ab891ec723029457150a37fadcd9873e7" prot="private" virt="non-virtual"><scope>QgsProperty</scope><name>d</name></member>
      <member refid="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9ea0eca418254388cbabf4eb22ae74f8f05" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>ExpressionBasedProperty</name></member>
      <member refid="classQgsProperty_1a36dc1bc37474a96c364150c77fc32787" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>expressionString</name></member>
      <member refid="classQgsProperty_1a521780982790798332527271cf45aa1c" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>field</name></member>
      <member refid="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9eaa675ad4973165378ee0640e160cb2e17" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>FieldBasedProperty</name></member>
      <member refid="classQgsProperty_1a79cd03353f102abd586c509be60f35d1" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>fromExpression</name></member>
      <member refid="classQgsProperty_1ad41341d91d6098f35912cbc0de520a74" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>fromField</name></member>
      <member refid="classQgsProperty_1af1462dc7aaa921fb10d52c297be6fb32" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>fromValue</name></member>
      <member refid="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9eaf6bc61c9c0b42cb23024b5f85046b7fd" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>InvalidProperty</name></member>
      <member refid="classQgsProperty_1a895c8bda88dbad6dedc815a25bff05f6" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>isActive</name></member>
      <member refid="classQgsProperty_1a0e66aa2fea94ff6fa20e737d5cc2024d" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>isProjectColor</name></member>
      <member refid="classQgsProperty_1ab5f34672aef2afef7a8b5eccd99ab8e2" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>loadVariant</name></member>
      <member refid="classQgsProperty_1a0ef8d276bca790b0c59a95a7f1ae7c4b" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>operator bool</name></member>
      <member refid="classQgsProperty_1ab5b01b70b337f16258340a05e096ed26" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>operator QVariant</name></member>
      <member refid="classQgsProperty_1ac6c4aba9a017c61350a1e59c11d0f2d1" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>operator!=</name></member>
      <member refid="classQgsProperty_1ad38334c8ac6044fc7cdf60cefa44afdb" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>operator=</name></member>
      <member refid="classQgsProperty_1a2eaf866eb9039fe85194a60159420067" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>operator==</name></member>
      <member refid="classQgsProperty_1ab2264927e1b1da2d8be35eacf7e5f3da" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>prepare</name></member>
      <member refid="classQgsProperty_1abcbdf3db5c442c234ee3ace6234d446f" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>propertyType</name></member>
      <member refid="classQgsProperty_1a6a32336f493228c473977ca78dc6e6a8" prot="private" virt="non-virtual"><scope>QgsProperty</scope><name>propertyValue</name></member>
      <member refid="classQgsProperty_1aeab3832078ef0440a02051e54ef8afbd" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>QgsProperty</name></member>
      <member refid="classQgsProperty_1a6fa9873adb8d9aba86e926fbefc32fc3" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>QgsProperty</name></member>
      <member refid="classQgsProperty_1ae6bdba86a634c9e66dd1fcfd5c3b74e0" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>referencedFields</name></member>
      <member refid="classQgsProperty_1af623c4093b64c2622a81c83f345e2734" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>setActive</name></member>
      <member refid="classQgsProperty_1acc42d7292f408cb58fda599081959ae6" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>setExpressionString</name></member>
      <member refid="classQgsProperty_1a998a0e9d95802211c5ca91a3d6957124" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>setField</name></member>
      <member refid="classQgsProperty_1a3d2a62095942d5f570bb726d2babfb35" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>setStaticValue</name></member>
      <member refid="classQgsProperty_1a3b0c740b81e7ace7e77384931be29ea8" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>setTransformer</name></member>
      <member refid="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9ea8146309b612ab95ee6c433b30861dc8e" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>StaticProperty</name></member>
      <member refid="classQgsProperty_1ab9cff19cfb3a0c11cc0ae7e2e63e6f3e" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>staticValue</name></member>
      <member refid="classQgsProperty_1a7b4a6b298953c09ddf91320b5e963204" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>toVariant</name></member>
      <member refid="classQgsProperty_1a5bee6183a2a12b58a11045695a862eec" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>transformer</name></member>
      <member refid="classQgsProperty_1a0ad8ca6fe891e461592aa41e67a05c9e" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>Type</name></member>
      <member refid="classQgsProperty_1a72d7a0c0a8af26e2d2e1ae1d3aa3323b" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>value</name></member>
      <member refid="classQgsProperty_1aa8cc69e8f240b0ecb6a19d42d58de2b9" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>valueAsBool</name></member>
      <member refid="classQgsProperty_1a0d7bebddb990f3a5d4d8f2f266bcc833" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>valueAsColor</name></member>
      <member refid="classQgsProperty_1a8eafb17fa9a9100f9dce2c9b89d74e61" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>valueAsDouble</name></member>
      <member refid="classQgsProperty_1aa0035497759c9c57ac7323e9ecc0c94e" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>valueAsInt</name></member>
      <member refid="classQgsProperty_1a4ae242a65bde541867144e05f67f2ac9" prot="public" virt="non-virtual"><scope>QgsProperty</scope><name>valueAsString</name></member>
      <member refid="classQgsProperty_1ac317f2bd4cddf040d9f8776f710c7460" prot="public" virt="virtual"><scope>QgsProperty</scope><name>~QgsProperty</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
