<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structQgsMimeDataUtils_1_1Uri" kind="struct" language="C++" prot="public">
    <compoundname>QgsMimeDataUtils::Uri</compoundname>
    <includes refid="qgsmimedatautils_8h" local="no">qgsmimedatautils.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structQgsMimeDataUtils_1_1Uri_1aec80b9fb74b06621392824d60cb880de" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsMimeDataUtils::Uri::layerType</definition>
        <argsstring></argsstring>
        <name>layerType</name>
        <briefdescription>
<para>Type of URI. Recognized types: &quot;vector&quot; / &quot;raster&quot; / &quot;mesh&quot; / &quot;plugin&quot; / &quot;custom&quot; / &quot;project&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="76" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structQgsMimeDataUtils_1_1Uri_1a4b21c5e2d2e0d458a4b1173026eff7f2" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsMimeDataUtils::Uri::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Human readable name to be used e.g. in layer tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="86" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structQgsMimeDataUtils_1_1Uri_1a8dd2873665ad59cceca17cc67a30e8e2" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsMimeDataUtils::Uri::providerKey</definition>
        <argsstring></argsstring>
        <name>providerKey</name>
        <briefdescription>
<para>For &quot;vector&quot; / &quot;raster&quot; type: provider id. </para>        </briefdescription>
        <detaileddescription>
<para>For &quot;plugin&quot; type: plugin layer type name. For &quot;custom&quot; type: key of its <ref refid="classQgsCustomDropHandler" kindref="compound">QgsCustomDropHandler</ref> For &quot;project&quot; type: unused </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="84" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structQgsMimeDataUtils_1_1Uri_1a34c44f391dd5d8dcc326f955ea2ff2ee" prot="public" static="no" mutable="no">
        <type>QStringList</type>
        <definition>QStringList QgsMimeDataUtils::Uri::supportedCrs</definition>
        <argsstring></argsstring>
        <name>supportedCrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="89" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structQgsMimeDataUtils_1_1Uri_1ad6cd24277d67a61a93a718f4d7a67f4d" prot="public" static="no" mutable="no">
        <type>QStringList</type>
        <definition>QStringList QgsMimeDataUtils::Uri::supportedFormats</definition>
        <argsstring></argsstring>
        <name>supportedFormats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="90" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structQgsMimeDataUtils_1_1Uri_1a377edf418aff4076f435e36790a266d7" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsMimeDataUtils::Uri::uri</definition>
        <argsstring></argsstring>
        <name>uri</name>
        <briefdescription>
<para>Identifier of the data source recognized by its providerKey. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="88" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structQgsMimeDataUtils_1_1Uri_1accbb8bef6d88e0914ed6c967fff2f24f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsMimeDataUtils::Uri::Uri</definition>
        <argsstring>()=default</argsstring>
        <name>Uri</name>
        <briefdescription>
<para>Constructs invalid URI. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structQgsMimeDataUtils_1_1Uri_1af8469c8a023d29b01939b5e59fabf4c3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsMimeDataUtils::Uri::Uri</definition>
        <argsstring>(QString &amp;encData)</argsstring>
        <name>Uri</name>
        <param>
          <type>QString &amp;</type>
          <declname>encData</declname>
        </param>
        <briefdescription>
<para>Constructs URI from encoded data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="43" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.cpp" bodystart="31" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structQgsMimeDataUtils_1_1Uri_1abe41b3b612c720a059bcb4de10694fe2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsMimeDataUtils::Uri::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Returns encoded representation of the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="52" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structQgsMimeDataUtils_1_1Uri_1af1655257d0b84bcb3719a80ad5f1cc35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsMimeDataUtils::Uri::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Returns whether the object contains valid data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="49" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structQgsMimeDataUtils_1_1Uri_1a0e77f6c84cddd00abe553119c79d4529" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsMeshLayer" kindref="compound">QgsMeshLayer</ref> *</type>
        <definition>QgsMeshLayer * QgsMimeDataUtils::Uri::meshLayer</definition>
        <argsstring>(bool &amp;owner, QString &amp;error) const</argsstring>
        <name>meshLayer</name>
        <param>
          <type>bool &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>QString &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Gets mesh layer from uri if possible, otherwise returns 0 and error is set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true if caller becomes owner </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>set to error message if cannot get raster </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="73" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.cpp" bodystart="112" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structQgsMimeDataUtils_1_1Uri_1a666e634a985a92f7fdff8276119bb87f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsRasterLayer" kindref="compound">QgsRasterLayer</ref> *</type>
        <definition>QgsRasterLayer * QgsMimeDataUtils::Uri::rasterLayer</definition>
        <argsstring>(bool &amp;owner, QString &amp;error) const</argsstring>
        <name>rasterLayer</name>
        <param>
          <type>bool &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>QString &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Gets raster layer from uri if possible, otherwise returns 0 and error is set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true if caller becomes owner </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>set to error message if cannot get raster </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.cpp" bodystart="100" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structQgsMimeDataUtils_1_1Uri_1ab28337a38b2748675b01844e59c88dd8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *</type>
        <definition>QgsVectorLayer * QgsMimeDataUtils::Uri::vectorLayer</definition>
        <argsstring>(bool &amp;owner, QString &amp;error) const</argsstring>
        <name>vectorLayer</name>
        <param>
          <type>bool &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>QString &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Gets vector layer from uri if possible, otherwise returns 0 and error is set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true if caller becomes owner </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>set to error message if cannot get vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="59" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.cpp" bodystart="65" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" line="39" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsmimedatautils.h" bodystart="38" bodyend="99"/>
    <listofallmembers>
      <member refid="structQgsMimeDataUtils_1_1Uri_1abe41b3b612c720a059bcb4de10694fe2" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>data</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1af1655257d0b84bcb3719a80ad5f1cc35" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>isValid</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1aec80b9fb74b06621392824d60cb880de" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>layerType</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1a0e77f6c84cddd00abe553119c79d4529" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>meshLayer</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1a4b21c5e2d2e0d458a4b1173026eff7f2" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>name</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1a8dd2873665ad59cceca17cc67a30e8e2" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>providerKey</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1a666e634a985a92f7fdff8276119bb87f" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>rasterLayer</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1a34c44f391dd5d8dcc326f955ea2ff2ee" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>supportedCrs</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1ad6cd24277d67a61a93a718f4d7a67f4d" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>supportedFormats</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1accbb8bef6d88e0914ed6c967fff2f24f" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>Uri</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1af8469c8a023d29b01939b5e59fabf4c3" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>Uri</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1a377edf418aff4076f435e36790a266d7" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>uri</name></member>
      <member refid="structQgsMimeDataUtils_1_1Uri_1ab28337a38b2748675b01844e59c88dd8" prot="public" virt="non-virtual"><scope>QgsMimeDataUtils::Uri</scope><name>vectorLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
