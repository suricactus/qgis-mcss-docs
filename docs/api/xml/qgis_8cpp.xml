<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="qgis_8cpp" kind="file" language="C++">
    <compoundname>qgis.cpp</compoundname>
    <includes refid="qgis_8h" local="yes">qgis.h</includes>
    <includes local="yes">qgsversion.h</includes>
    <includes local="no">QCoreApplication</includes>
    <includes local="no">QColor</includes>
    <includes local="no">QDate</includes>
    <includes local="no">QTime</includes>
    <includes local="no">QLocale</includes>
    <includes local="no">QDateTime</includes>
    <includes local="yes">qgsconfig.h</includes>
    <includes refid="qgslogger_8h" local="yes">qgslogger.h</includes>
    <includes refid="qgswkbtypes_8h" local="yes">qgswkbtypes.h</includes>
    <includes local="no">ogr_api.h</includes>
    <incdepgraph>
      <node id="111099">
        <label>QMap</label>
      </node>
      <node id="111116">
        <label>qgswkbtypes.h</label>
        <link refid="qgswkbtypes_8h"/>
        <childnode refid="111113" relation="include">
        </childnode>
        <childnode refid="111099" relation="include">
        </childnode>
        <childnode refid="111097" relation="include">
        </childnode>
        <childnode refid="111114" relation="include">
        </childnode>
      </node>
      <node id="111121">
        <label>qgsconfig.h</label>
      </node>
      <node id="111113">
        <label>QObject</label>
      </node>
      <node id="111102">
        <label>QDateTime</label>
      </node>
      <node id="111096">
        <label>QEvent</label>
      </node>
      <node id="111110">
        <label>cmath</label>
      </node>
      <node id="111098">
        <label>QMetaType</label>
      </node>
      <node id="111125">
        <label>ogr_api.h</label>
      </node>
      <node id="111117">
        <label>qgsversion.h</label>
      </node>
      <node id="111107">
        <label>cfloat</label>
      </node>
      <node id="111094">
        <label>/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp</label>
        <link refid="qgis_8cpp"/>
        <childnode refid="111095" relation="include">
        </childnode>
        <childnode refid="111117" relation="include">
        </childnode>
        <childnode refid="111118" relation="include">
        </childnode>
        <childnode refid="111119" relation="include">
        </childnode>
        <childnode refid="111103" relation="include">
        </childnode>
        <childnode refid="111104" relation="include">
        </childnode>
        <childnode refid="111120" relation="include">
        </childnode>
        <childnode refid="111102" relation="include">
        </childnode>
        <childnode refid="111121" relation="include">
        </childnode>
        <childnode refid="111122" relation="include">
        </childnode>
        <childnode refid="111116" relation="include">
        </childnode>
        <childnode refid="111125" relation="include">
        </childnode>
      </node>
      <node id="111111">
        <label>qnumeric.h</label>
      </node>
      <node id="111120">
        <label>QLocale</label>
      </node>
      <node id="111104">
        <label>QTime</label>
      </node>
      <node id="111100">
        <label>QMetaEnum</label>
      </node>
      <node id="111124">
        <label>sstream</label>
      </node>
      <node id="111103">
        <label>QDate</label>
      </node>
      <node id="111097">
        <label>QString</label>
      </node>
      <node id="111119">
        <label>QColor</label>
      </node>
      <node id="111115">
        <label>qgis_sip.h</label>
        <link refid="qgis__sip_8h"/>
      </node>
      <node id="111106">
        <label>cstdlib</label>
      </node>
      <node id="111114">
        <label>qgis_core.h</label>
      </node>
      <node id="111123">
        <label>iostream</label>
      </node>
      <node id="111122">
        <label>qgslogger.h</label>
        <link refid="qgslogger_8h"/>
        <childnode refid="111123" relation="include">
        </childnode>
        <childnode refid="111115" relation="include">
        </childnode>
        <childnode refid="111124" relation="include">
        </childnode>
        <childnode refid="111097" relation="include">
        </childnode>
        <childnode refid="111104" relation="include">
        </childnode>
        <childnode refid="111114" relation="include">
        </childnode>
        <childnode refid="111121" relation="include">
        </childnode>
      </node>
      <node id="111105">
        <label>QHash</label>
      </node>
      <node id="111109">
        <label>type_traits</label>
      </node>
      <node id="111101">
        <label>QVariant</label>
      </node>
      <node id="111095">
        <label>qgis.h</label>
        <link refid="qgis_8h"/>
        <childnode refid="111096" relation="include">
        </childnode>
        <childnode refid="111097" relation="include">
        </childnode>
        <childnode refid="111098" relation="include">
        </childnode>
        <childnode refid="111099" relation="include">
        </childnode>
        <childnode refid="111100" relation="include">
        </childnode>
        <childnode refid="111101" relation="include">
        </childnode>
        <childnode refid="111102" relation="include">
        </childnode>
        <childnode refid="111103" relation="include">
        </childnode>
        <childnode refid="111104" relation="include">
        </childnode>
        <childnode refid="111105" relation="include">
        </childnode>
        <childnode refid="111106" relation="include">
        </childnode>
        <childnode refid="111107" relation="include">
        </childnode>
        <childnode refid="111108" relation="include">
        </childnode>
        <childnode refid="111109" relation="include">
        </childnode>
        <childnode refid="111110" relation="include">
        </childnode>
        <childnode refid="111111" relation="include">
        </childnode>
        <childnode refid="111112" relation="include">
        </childnode>
        <childnode refid="111116" relation="include">
        </childnode>
        <childnode refid="111114" relation="include">
        </childnode>
        <childnode refid="111115" relation="include">
        </childnode>
      </node>
      <node id="111112">
        <label>qgstolerance.h</label>
        <link refid="qgstolerance_8h"/>
        <childnode refid="111113" relation="include">
        </childnode>
        <childnode refid="111114" relation="include">
        </childnode>
        <childnode refid="111115" relation="include">
        </childnode>
      </node>
      <node id="111108">
        <label>memory</label>
      </node>
      <node id="111118">
        <label>QCoreApplication</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="qgis_8cpp_1afe921ae99906e4b03ed85cb77eae47ae" prot="public" static="no" mutable="no">
        <type>const QString</type>
        <definition>const QString GEO_EPSG_CRS_AUTHID</definition>
        <argsstring></argsstring>
        <name>GEO_EPSG_CRS_AUTHID</name>
        <initializer>= QStringLiteral( &quot;EPSG:4326&quot; )</initializer>
        <briefdescription>
<para>Geographic coord sys from EPSG authority. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="69" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgis_8cpp_1a648b96bca87cd04878cba5b5cfb739b8" prot="public" static="no" mutable="no">
        <type>const QString</type>
        <definition>const QString GEO_NONE</definition>
        <argsstring></argsstring>
        <name>GEO_NONE</name>
        <initializer>= QStringLiteral( &quot;NONE&quot; )</initializer>
        <briefdescription>
<para>Constant that holds the string representation for &quot;No ellips/No CRS&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="71" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgis_8cpp_1acd75de979b5f4e9e5e8004566862b2ff" prot="public" static="no" mutable="no">
        <type>const QString</type>
        <definition>const QString GEOPROJ4</definition>
        <argsstring></argsstring>
        <name>GEOPROJ4</name>
        <initializer>= QStringLiteral( &quot;+proj=longlat +datum=WGS84 +no_defs&quot; )</initializer>
        <briefdescription>
<para>PROJ4 string that represents a geographic coord sys. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="50" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgis_8cpp_1a603df1cdf1e2e9ef9afc4e4e3a4c31fd" prot="public" static="no" mutable="no">
        <type>const QString</type>
        <definition>const QString GEOWKT</definition>
        <argsstring></argsstring>
        <name>GEOWKT</name>
        <initializer>=
  &quot;GEOGCS[\&quot;WGS 84\&quot;, &quot;
  &quot;  DATUM[\&quot;WGS_1984\&quot;, &quot;
  &quot;    SPHEROID[\&quot;WGS 84\&quot;,6378137,298.257223563, &quot;
  &quot;      AUTHORITY[\&quot;EPSG\&quot;,7030]], &quot;
  &quot;    TOWGS84[0,0,0,0,0,0,0], &quot;
  &quot;    AUTHORITY[\&quot;EPSG\&quot;,6326]], &quot;
  &quot;  PRIMEM[\&quot;Greenwich\&quot;,0,AUTHORITY[\&quot;EPSG\&quot;,8901]], &quot;
  &quot;  UNIT[\&quot;DMSH\&quot;,0.0174532925199433,AUTHORITY[\&quot;EPSG\&quot;,9108]], &quot;
  &quot;  AXIS[\&quot;Lat\&quot;,NORTH], &quot;
  &quot;  AXIS[\&quot;Long\&quot;,EAST], &quot;
  &quot;  AUTHORITY[\&quot;EPSG\&quot;,4326]]&quot;</initializer>
        <briefdescription>
<para>Wkt string that represents a geographic coord sys. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS GEOWkt </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="52" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgis_8cpp_1a0748fd6692a2c344a0ec81171f78fb41" prot="public" static="no" mutable="no">
        <type>const QString</type>
        <definition>const QString PROJECT_SCALES</definition>
        <argsstring></argsstring>
        <name>PROJECT_SCALES</name>
        <initializer>=
  &quot;1:1000000,1:500000,1:250000,1:100000,1:50000,1:25000,&quot;
  &quot;1:10000,1:5000,1:2500,1:1000,1:500&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="65" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="qgis_8cpp_1a96f2a56cb4c1a620a613110876af3a24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* qgsCalloc</definition>
        <argsstring>(size_t nmemb, size_t size)</argsstring>
        <name>qgsCalloc</name>
        <param>
          <type>size_t</type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocates memory for an array of nmemb elements of size bytes each and returns a pointer to the allocated memory. </para>        </briefdescription>
        <detaileddescription>
<para>Works like C calloc() but prints debug message by <ref refid="classQgsLogger" kindref="compound">QgsLogger</ref> if allocation fails. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nmemb</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of element in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="133" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="133" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="qgis_8cpp_1a75825752e3a065658a64a43b52653350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qgsFree</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>qgsFree</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Frees the memory space pointed to by ptr. </para>        </briefdescription>
        <detaileddescription>
<para>Works like C free(). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to memory space </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="148" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="qgis_8cpp_1ad879dc0686acb88edca12b8ba07f6c72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* qgsMalloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>qgsMalloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocates size bytes and returns a pointer to the allocated memory. </para>        </briefdescription>
        <detaileddescription>
<para>Works like C malloc() but prints debug message by <ref refid="classQgsLogger" kindref="compound">QgsLogger</ref> if allocation fails. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="118" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="118" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="qgis_8cpp_1a460f5466abd4c8961bf2d9c5603c00be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double qgsPermissiveToDouble</definition>
        <argsstring>(QString string, bool &amp;ok)</argsstring>
        <name>qgsPermissiveToDouble</name>
        <param>
          <type>QString</type>
          <declname>string</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>ok</declname>
        </param>
        <briefdescription>
<para>Converts a string to a double in a permissive way, e.g., allowing for incorrect numbers of digits between thousand separators. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>string to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string converted to double if possible </para></simplesect>
<simplesect kind="see"><para>permissiveToInt </para></simplesect>
<simplesect kind="since"><para>QGIS 2.9 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="97" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="qgis_8cpp_1a67583325c33fd3fc05ab8bf7c0a1ab84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int qgsPermissiveToInt</definition>
        <argsstring>(QString string, bool &amp;ok)</argsstring>
        <name>qgsPermissiveToInt</name>
        <param>
          <type>QString</type>
          <declname>string</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>ok</declname>
        </param>
        <briefdescription>
<para>Converts a string to an integer in a permissive way, e.g., allowing for incorrect numbers of digits between thousand separators. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>string to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string converted to int if possible </para></simplesect>
<simplesect kind="see"><para>permissiveToDouble </para></simplesect>
<simplesect kind="since"><para>QGIS 2.9 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="104" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="qgis_8cpp_1a3169602fd8d9ca6cfe08480fc8ebea08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qlonglong</type>
        <definition>qlonglong qgsPermissiveToLongLong</definition>
        <argsstring>(QString string, bool &amp;ok)</argsstring>
        <name>qgsPermissiveToLongLong</name>
        <param>
          <type>QString</type>
          <declname>string</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>ok</declname>
        </param>
        <briefdescription>
<para>Converts a string to an qlonglong in a permissive way, e.g., allowing for incorrect numbers of digits between thousand separators. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>string to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string converted to int if possible </para></simplesect>
<simplesect kind="see"><para>permissiveToInt </para></simplesect>
<simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="qgis_8cpp_1a3520970f48a7966b151a17e463f32fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool qgsVariantEqual</definition>
        <argsstring>(const QVariant &amp;lhs, const QVariant &amp;rhs)</argsstring>
        <name>qgsVariantEqual</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Compares two QVariant values and returns whether they are equal, NULL values are treated as equal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>first value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>second value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if values are equal </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="289" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="qgis_8cpp_1af51d8f027fedcb62dfa3518f91d3eaef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool qgsVariantGreaterThan</definition>
        <argsstring>(const QVariant &amp;lhs, const QVariant &amp;rhs)</argsstring>
        <name>qgsVariantGreaterThan</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Compares two QVariant values and returns whether the first is greater than the second. </para>        </briefdescription>
        <detaileddescription>
<para>Useful for sorting lists of variants, correctly handling sorting of the various QVariant data types (such as strings, numeric values, dates and times) <simplesect kind="see"><para><ref refid="qgis_8h_1ae81bd90c1c3877dfa4ab3aff42a4780b" kindref="member">qgsVariantLessThan()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="221" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="qgis_8cpp_1a8a8acf608c55743d9ae33864dd401a24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool qgsVariantLessThan</definition>
        <argsstring>(const QVariant &amp;lhs, const QVariant &amp;rhs)</argsstring>
        <name>qgsVariantLessThan</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Compares two QVariant values and returns whether the first is less than the second. </para>        </briefdescription>
        <detaileddescription>
<para>Useful for sorting lists of variants, correctly handling sorting of the various QVariant data types (such as strings, numeric values, dates and times)</para><para>Invalid &lt; NULL &lt; Values</para><para><simplesect kind="see"><para><ref refid="qgis_8h_1a5b73a30a7d4a29765c7f93703022ddd4" kindref="member">qgsVariantGreaterThan()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="153" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="153" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="qgis_8cpp_1a8351fb74172545de902c165beec45028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString qgsVsiPrefix</definition>
        <argsstring>(const QString &amp;path)</argsstring>
        <name>qgsVsiPrefix</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="226" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="226" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="qgis_8cpp_1a3c8afbf27630dda460fb1ad96f14c575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>uint qHash</definition>
        <argsstring>(const QVariant &amp;variant)</argsstring>
        <name>qHash</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
<para>Hash for QVariant. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" line="243" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp" bodystart="243" bodyend="287"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgis.cpp"/>
  </compounddef>
</doxygen>
