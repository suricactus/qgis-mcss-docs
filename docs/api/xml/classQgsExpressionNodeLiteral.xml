<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsExpressionNodeLiteral" kind="class" language="C++" prot="public">
    <compoundname>QgsExpressionNodeLiteral</compoundname>
    <basecompoundref refid="classQgsExpressionNode" prot="public" virt="non-virtual">QgsExpressionNode</basecompoundref>
    <includes refid="qgsexpressionnodeimpl_8h" local="no">qgsexpressionnodeimpl.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsExpressionNodeLiteral_1ac2a52df9ddd7843f174ff7b80bb489d2" prot="private" static="no" mutable="no">
        <type>QVariant</type>
        <definition>QVariant QgsExpressionNodeLiteral::mValue</definition>
        <argsstring></argsstring>
        <name>mValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="393" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1af3f5551a775f91cc61028bed4e158fd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionNodeLiteral::QgsExpressionNodeLiteral</definition>
        <argsstring>(const QVariant &amp;value)</argsstring>
        <name>QgsExpressionNodeLiteral</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsExpressionNodeLiteral" kindref="compound">QgsExpressionNodeLiteral</ref>, with the specified literal <emphasis>value</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="371" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="371" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1a9e716dca45e3452940e6c77f8aa198c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
        <definition>QgsExpressionNode * QgsExpressionNodeLiteral::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classQgsExpressionNode_1aef7cfdb7ec3109244fc357e15d0dc75b">clone</reimplements>
        <briefdescription>
<para>Generate a clone of this node. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership is transferred to the caller.</para><para><simplesect kind="return"><para>a deep copy of this node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="389" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1209" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1a3621eb310d36e0b152e860b6d195a034" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsExpressionNodeLiteral::dump</definition>
        <argsstring>() const override</argsstring>
        <name>dump</name>
        <reimplements refid="classQgsExpressionNode_1a0c72a75b7a531593d71594bfebf5f932">dump</reimplements>
        <briefdescription>
<para>Dump this node into a serialized (part) of an expression. </para>        </briefdescription>
        <detaileddescription>
<para>The returned expression does not necessarily literally match the original expression, it&apos;s just guaranteed to behave the same way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="381" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1162" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1a7520b0df02b7b933d02f5cf16e40e7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsExpressionNodeLiteral::evalNode</definition>
        <argsstring>(QgsExpression *parent, const QgsExpressionContext *context) override</argsstring>
        <name>evalNode</name>
        <reimplements refid="classQgsExpressionNode_1ab20c45f2f72c5fd5c8489449c00fdcc7">evalNode</reimplements>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Abstract virtual eval method Errors are reported to the parent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="380" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1142" bodyend="1147"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1ab1c79c2eb7de9dd7886b1237e21907c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionNodeLiteral::isStatic</definition>
        <argsstring>(QgsExpression *parent, const QgsExpressionContext *context) const override</argsstring>
        <name>isStatic</name>
        <reimplements refid="classQgsExpressionNode_1a3033cb76fe3df0170c5852c7ea024e2b">isStatic</reimplements>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns true if this node can be evaluated for a static value. </para>        </briefdescription>
        <detaileddescription>
<para>This is used during the <ref refid="classQgsExpressionNode_1a3b931e8f7aab4e96979f9f959d80a5d7" kindref="member">prepare()</ref> step and in case it returns true, the value of this node will already be evaluated and the result cached (and therefore not re-evaluated in subsequent calls to <ref refid="classQgsExpressionNode_1a1b79f6a2f67f4a1dcf7ce16bcaab72b9" kindref="member">eval()</ref>). In case this returns true, <ref refid="classQgsExpressionNodeLiteral_1a783d74a17a450e2451c00d36b4c57a23" kindref="member">prepareNode()</ref> will never be called.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="390" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1216" bodyend="1221"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1ad10220a32e39611eedb6dc92e78cbd23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionNodeLiteral::needsGeometry</definition>
        <argsstring>() const override</argsstring>
        <name>needsGeometry</name>
        <reimplements refid="classQgsExpressionNode_1ac7752e64a29acfe6b95a257b5941659c">needsGeometry</reimplements>
        <briefdescription>
<para>Abstract virtual method which returns if the geometry is required to evaluate this expression. </para>        </briefdescription>
        <detaileddescription>
<para>This needs to call <computeroutput><ref refid="classQgsExpressionNodeLiteral_1ad10220a32e39611eedb6dc92e78cbd23" kindref="member">needsGeometry()</ref></computeroutput> recursively on any child nodes.</para><para><simplesect kind="return"><para>true if a geometry is required to evaluate this expression </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="388" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1204" bodyend="1207"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1a0a175c201bcdf806bfbc9370c6672283" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QList&lt; const <ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> * &gt;</type>
        <definition>QList&lt; const QgsExpressionNode * &gt; QgsExpressionNodeLiteral::nodes</definition>
        <argsstring>() const override</argsstring>
        <name>nodes</name>
        <reimplements refid="classQgsExpressionNode_1a09383975a4b34f1520166f217b1f804e">nodes</reimplements>
        <briefdescription>
<para>Returns a list of all nodes which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="387" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1197" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1a4f645d48c972bb76b733053f768748b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3" kindref="member">QgsExpressionNode::NodeType</ref></type>
        <definition>QgsExpressionNode::NodeType QgsExpressionNodeLiteral::nodeType</definition>
        <argsstring>() const override</argsstring>
        <name>nodeType</name>
        <reimplements refid="classQgsExpressionNode_1a532476efe2a5dc3c189769de3c513b0b">nodeType</reimplements>
        <briefdescription>
<para>Gets the type of this node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of this node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="378" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1149" bodyend="1152"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1a783d74a17a450e2451c00d36b4c57a23" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionNodeLiteral::prepareNode</definition>
        <argsstring>(QgsExpression *parent, const QgsExpressionContext *context) override</argsstring>
        <name>prepareNode</name>
        <reimplements refid="classQgsExpressionNode_1a54fb196e3071b648bd72fb2eec2802a0">prepareNode</reimplements>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Abstract virtual preparation method Errors are reported to the parent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="379" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1154" bodyend="1159"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1a2ff850c1f578da2928978ec7760ac71c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpressionNodeLiteral::referencedColumns</definition>
        <argsstring>() const override</argsstring>
        <name>referencedColumns</name>
        <reimplements refid="classQgsExpressionNode_1aa4c548e3c817d09afb1e5b69273fbf15">referencedColumns</reimplements>
        <briefdescription>
<para>Abstract virtual method which returns a list of columns required to evaluate this node. </para>        </briefdescription>
        <detaileddescription>
<para>When reimplementing this, you need to return any column that is required to evaluate this node and in addition recursively collect all the columns required to evaluate child nodes.</para><para><simplesect kind="return"><para>A list of columns required to evaluate this expression </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="383" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1182" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1a71bea471296b29c167816e6162cadf07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpressionNodeLiteral::referencedFunctions</definition>
        <argsstring>() const override</argsstring>
        <name>referencedFunctions</name>
        <reimplements refid="classQgsExpressionNode_1adea974442757d76c919e34c44bc431ec">referencedFunctions</reimplements>
        <briefdescription>
<para>Returns a set of all functions which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="385" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1192" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1a737ea41b1478774c656e039a674bde54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpressionNodeLiteral::referencedVariables</definition>
        <argsstring>() const override</argsstring>
        <name>referencedVariables</name>
        <reimplements refid="classQgsExpressionNode_1ae9bf72613241511dc67c62d5e47e8bd4">referencedVariables</reimplements>
        <briefdescription>
<para>Returns a set of all variables which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="384" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1187" bodyend="1190"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeLiteral_1ae8bccc5182878e6c82fe558364556d59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsExpressionNodeLiteral::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
<para>The value of the literal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="376" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="376" bodyend="376"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An expression node for literal values. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2908">
        <label>QgsExpressionNode</label>
        <link refid="classQgsExpressionNode"/>
      </node>
      <node id="2907">
        <label>QgsExpressionNodeLiteral</label>
        <link refid="classQgsExpressionNodeLiteral"/>
        <childnode refid="2908" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2910">
        <label>QgsExpressionNode</label>
        <link refid="classQgsExpressionNode"/>
      </node>
      <node id="2909">
        <label>QgsExpressionNodeLiteral</label>
        <link refid="classQgsExpressionNodeLiteral"/>
        <childnode refid="2910" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="365" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="364" bodyend="394"/>
    <listofallmembers>
      <member refid="classQgsExpressionNodeLiteral_1a9e716dca45e3452940e6c77f8aa198c9" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>clone</name></member>
      <member refid="classQgsExpressionNode_1acfa09f97a4345faf4dbe781982dfd025" prot="protected" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>cloneTo</name></member>
      <member refid="classQgsExpressionNodeLiteral_1a3621eb310d36e0b152e860b6d195a034" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>dump</name></member>
      <member refid="classQgsExpressionNode_1a1b79f6a2f67f4a1dcf7ce16bcaab72b9" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>eval</name></member>
      <member refid="classQgsExpressionNodeLiteral_1a7520b0df02b7b933d02f5cf16e40e7cb" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>evalNode</name></member>
      <member refid="classQgsExpressionNodeLiteral_1ab1c79c2eb7de9dd7886b1237e21907c1" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>isStatic</name></member>
      <member refid="classQgsExpressionNodeLiteral_1ac2a52df9ddd7843f174ff7b80bb489d2" prot="private" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>mValue</name></member>
      <member refid="classQgsExpressionNodeLiteral_1ad10220a32e39611eedb6dc92e78cbd23" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>needsGeometry</name></member>
      <member refid="classQgsExpressionNodeLiteral_1a0a175c201bcdf806bfbc9370c6672283" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>nodes</name></member>
      <member refid="classQgsExpressionNodeLiteral_1a4f645d48c972bb76b733053f768748b1" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>nodeType</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>NodeType</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3aeacda25c3654ea68ef25f2ba10bb2725" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>ntBinaryOperator</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3ab2fd59a8c005277d0878de1ddb3a62b6" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>ntColumnRef</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3a7588318074e2a4470a29a73bd5e49277" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>ntCondition</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3a70130329d2d32daf35a359e3e869cb9b" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>ntFunction</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3aec300d86abb3213d2ca8cdbc678f8f88" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>ntIndexOperator</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3aaa86a394a0c5c995e853bb8c210c3c5f" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>ntInOperator</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3ac96e6246304179f9d468d8ec42f650c1" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>ntLiteral</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3a73b2ff34f88301e39001e90cfbaa0bdb" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>ntUnaryOperator</name></member>
      <member refid="classQgsExpressionNode_1adf5ba97236ccdf1c095103eec9f86d26" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>parserFirstColumn</name></member>
      <member refid="classQgsExpressionNode_1ac54f72bcdc4736f54a3640b7cd253cae" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>parserFirstLine</name></member>
      <member refid="classQgsExpressionNode_1acfdf4ea6895801be88b56a945243c8b8" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>parserLastColumn</name></member>
      <member refid="classQgsExpressionNode_1ac7062639325076c5118cbc8f0e124580" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>parserLastLine</name></member>
      <member refid="classQgsExpressionNode_1a3b931e8f7aab4e96979f9f959d80a5d7" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>prepare</name></member>
      <member refid="classQgsExpressionNodeLiteral_1a783d74a17a450e2451c00d36b4c57a23" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>prepareNode</name></member>
      <member refid="classQgsExpressionNodeLiteral_1af3f5551a775f91cc61028bed4e158fd9" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>QgsExpressionNodeLiteral</name></member>
      <member refid="classQgsExpressionNodeLiteral_1a2ff850c1f578da2928978ec7760ac71c" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>referencedColumns</name></member>
      <member refid="classQgsExpressionNodeLiteral_1a71bea471296b29c167816e6162cadf07" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>referencedFunctions</name></member>
      <member refid="classQgsExpressionNodeLiteral_1a737ea41b1478774c656e039a674bde54" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>referencedVariables</name></member>
      <member refid="classQgsExpressionNodeLiteral_1ae8bccc5182878e6c82fe558364556d59" prot="public" virt="non-virtual"><scope>QgsExpressionNodeLiteral</scope><name>value</name></member>
      <member refid="classQgsExpressionNode_1a8f06aaa5e0846f17de3ec9ba157c1e77" prot="public" virt="virtual"><scope>QgsExpressionNodeLiteral</scope><name>~QgsExpressionNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
