<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsGeos" kind="class" language="C++" prot="public">
    <compoundname>QgsGeos</compoundname>
    <basecompoundref refid="classQgsGeometryEngine" prot="public" virt="non-virtual">QgsGeometryEngine</basecompoundref>
    <includes refid="qgsgeos_8h" local="no">qgsgeos.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classQgsGeos_1af509aed503421b37626ab5de6debface" prot="private" static="no">
        <name>Overlay</name>
        <enumvalue id="classQgsGeos_1af509aed503421b37626ab5de6debfaceaececcd7b1bbd914823236771af1ae1f5" prot="private">
          <name>OverlayIntersection</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsGeos_1af509aed503421b37626ab5de6debfaceac839aa17b056f9919558669de1d92e96" prot="private">
          <name>OverlayDifference</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsGeos_1af509aed503421b37626ab5de6debfaceaaac33caa9fd0cdd668255c3db5f9fc40" prot="private">
          <name>OverlayUnion</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsGeos_1af509aed503421b37626ab5de6debfacea63f23bf240734ada573067b4ee1fcf28" prot="private">
          <name>OverlaySymDifference</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="368" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" bodystart="367" bodyend="373"/>
      </memberdef>
      <memberdef kind="enum" id="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0" prot="private" static="no">
        <name>Relation</name>
        <enumvalue id="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a2d0fa90c76d2dfca63e8f10545370e05" prot="private">
          <name>RelationIntersects</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a12d8cbee4d48baa9ba42cddc755f8c48" prot="private">
          <name>RelationTouches</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a953102e7d92d88bdabd80ee474410d41" prot="private">
          <name>RelationCrosses</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a7a23a4be7a645aeb9098a73b80f7df3e" prot="private">
          <name>RelationWithin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a88d96103829e10353c02d8395c0e37df" prot="private">
          <name>RelationOverlaps</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a9b734c35fa6d3fee1fa6d5cc74d3a6d1" prot="private">
          <name>RelationContains</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0ab807259ccefc1312f1499fc7066bf832" prot="private">
          <name>RelationDisjoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="376" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" bodystart="375" bodyend="384"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsGeos_1adeedabe93ab4cb5dc1edb502dfc4dfa8" prot="private" static="no" mutable="yes">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::mGeos</definition>
        <argsstring></argsstring>
        <name>mGeos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="363" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsGeos_1adc532432a5e6522e48bfe2123b095bfa" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegeos_1a33cf9dc1e2201fb633eaa3d73841a68d" kindref="member">geos::prepared_unique_ptr</ref></type>
        <definition>geos::prepared_unique_ptr QgsGeos::mGeosPrepared</definition>
        <argsstring></argsstring>
        <name>mGeosPrepared</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="364" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsGeos_1a50f7473f8525086c60d4a51b79585232" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsGeos::mPrecision</definition>
        <argsstring></argsstring>
        <name>mPrecision</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="365" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsGeos_1a646726fad099e2d772a98c82bd6d8f1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsGeos::QgsGeos</definition>
        <argsstring>(const QgsAbstractGeometry *geometry, double precision=0)</argsstring>
        <name>QgsGeos</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>GEOS geometry engine constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometry </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>precision</parametername>
</parameternamelist>
<parameterdescription>
<para>The precision of the grid to which to snap the geometry vertices. If 0, no snapping is performed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="112" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="145" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1aea57678563a80b3c581d730b71ec1fcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QgsGeos::area</definition>
        <argsstring>(QString *errorMsg=nullptr) const override</argsstring>
        <name>area</name>
        <reimplements refid="classQgsGeometryEngine_1a0135411d06d68329e278f6b02f24bf32">area</reimplements>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="219" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="586" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a26096dc90116f202d37f0b07e3bebe3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::buffer</definition>
        <argsstring>(double distance, int segments, QString *errorMsg=nullptr) const override</argsstring>
        <name>buffer</name>
        <reimplements refid="classQgsGeometryEngine_1a04ba276ee41ebfe8807494702d9d6ead">buffer</reimplements>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segments</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="165" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1514" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a0bda3bc434b367a68c13b36a5012963f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::buffer</definition>
        <argsstring>(double distance, int segments, int endCapStyle, int joinStyle, double miterLimit, QString *errorMsg=nullptr) const override</argsstring>
        <name>buffer</name>
        <reimplements refid="classQgsGeometryEngine_1ad5be15a1428322bd74605311fa458ff1">buffer</reimplements>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segments</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endCapStyle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>joinStyle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>miterLimit</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="166" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1530" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ad6307dc7e59f6557a26440a78dc9c566" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> *</type>
        <definition>QgsPoint * QgsGeos::centroid</definition>
        <argsstring>(QString *errorMsg=nullptr) const override</argsstring>
        <name>centroid</name>
        <reimplements refid="classQgsGeometryEngine_1ab5e8846763782fb2b12dce2feb3c1a54">centroid</reimplements>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the centroid of this. </para>        </briefdescription>
        <detaileddescription>
<para>May return a <computeroutput>nullptr</computeroutput>.</para><para><simplesect kind="since"><para>QGIS 3.0 the centroid is returned </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="170" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1576" bodyend="1600"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a436472b94fac91c7f385a9eeeadef0f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeos::clip</definition>
        <argsstring>(const QgsRectangle &amp;rectangle, QString *errorMsg=nullptr) const</argsstring>
        <name>clip</name>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>rectangle</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Performs a fast, non-robust intersection between the geometry and a <emphasis>rectangle</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The returned geometry may be invalid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="143" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="227" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a7bc1629ed45e41ab40c93f93816039b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref></type>
        <definition>QgsGeometry QgsGeos::closestPoint</definition>
        <argsstring>(const QgsGeometry &amp;other, QString *errorMsg=nullptr) const</argsstring>
        <name>closestPoint</name>
        <param>
          <type>const <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns the closest point on the geometry to the other geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsGeos_1a75e5f6abc3bd5a6748ac48db69c2afce" kindref="member">shortestLine()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="276" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2114" bodyend="2146"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a400f2c09cec82d9c450a792bd55b8676" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::combine</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>combine</name>
        <reimplements refid="classQgsGeometryEngine_1accd9b5f43ef4220757f180981f03eb27">combine</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculate the combination of this and <emphasis>geom</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="161" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ac9212c9220e6fc1782b44fe0ae7bb507" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::combine</definition>
        <argsstring>(const QVector&lt; QgsAbstractGeometry *&gt; &amp;geomList, QString *errorMsg) const override</argsstring>
        <name>combine</name>
        <reimplements refid="classQgsGeometryEngine_1a13948e74f38500bd8ebfea2b6d435845">combine</reimplements>
        <param>
          <type>const QVector&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *&gt; &amp;</type>
          <declname>geomList</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
        </param>
        <briefdescription>
<para>Calculate the combination of this and <emphasis>geometries</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="162" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="366" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a09aafa353d9475258bc16b81f62b0f0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::combine</definition>
        <argsstring>(const QVector&lt; QgsGeometry &gt; &amp;, QString *errorMsg=nullptr) const override</argsstring>
        <name>combine</name>
        <reimplements refid="classQgsGeometryEngine_1a813125470caa50f6cb1c55b6ca1db543">combine</reimplements>
        <param>
          <type>const QVector&lt; <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &gt; &amp;</type>
          <declname>geometries</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculate the combination of this and <emphasis>geometries</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="163" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="390" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a47d0fa87acb52a4786f9bbff04db00c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::contains</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>contains</name>
        <reimplements refid="classQgsGeometryEngine_1ac3b2a7ee1c592d4cf94b1713f5a79b36">contains</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Checks if <emphasis>geom</emphasis> contains this. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="215" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="513" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a9411287b5e1ccd51d91db47443322442" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::convexHull</definition>
        <argsstring>(QString *errorMsg=nullptr) const override</argsstring>
        <name>convexHull</name>
        <reimplements refid="classQgsGeometryEngine_1a9318efe107b51d65f63961d2ac32279e">convexHull</reimplements>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculate the convex hull of this. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="172" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1645" bodyend="1659"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a92e373b452cdf08fa0ef5e57a47a7b2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::crosses</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>crosses</name>
        <reimplements refid="classQgsGeometryEngine_1a739b8701ffc39dde11c1599b7c88d4c5">crosses</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Checks if <emphasis>geom</emphasis> crosses this. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="212" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="498" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a001d1ab27cee330e10937329ea08fe9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref></type>
        <definition>QgsGeometry QgsGeos::delaunayTriangulation</definition>
        <argsstring>(double tolerance=0.0, bool edgesOnly=false, QString *errorMsg=nullptr) const</argsstring>
        <name>delaunayTriangulation</name>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>edgesOnly</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns the Delaunay triangulation for the vertices of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>tolerance</emphasis> parameter specifies an optional snapping tolerance which can be used to improve the robustness of the triangulation. If <emphasis>edgesOnly</emphasis> is true than line string boundary geometries will be returned instead of polygons. An empty geometry will be returned if the diagram could not be calculated. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="334" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2290" bodyend="2310"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1af30072769f679773fe1d05905a26c89e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::difference</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>difference</name>
        <reimplements refid="classQgsGeometryEngine_1a0fd392f08f1fd3338e7cc4eaa8a88c7b">difference</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculate the difference of this and <emphasis>geom</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="137" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a5e991ad6be533ad900a66a37b94785da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::disjoint</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>disjoint</name>
        <reimplements refid="classQgsGeometryEngine_1afec643c1a961afa22ce1e216a695cd37">disjoint</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Checks if <emphasis>geom</emphasis> is disjoint from this. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="216" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="518" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a9715df9ff7aad2a299a5a7b282fed494" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QgsGeos::distance</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>distance</name>
        <reimplements refid="classQgsGeometryEngine_1a33edba0d367bc534e029e404a7c4e161">distance</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the distance between this and <emphasis>geom</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="173" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="419" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a8778f38d2192418266a1fe112661ca62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::envelope</definition>
        <argsstring>(QString *errorMsg=nullptr) const override</argsstring>
        <name>envelope</name>
        <reimplements refid="classQgsGeometryEngine_1a6e90c9aaa7c5c199ba8ccbd04c9a9f08">envelope</reimplements>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="169" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1602" bodyend="1615"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ae8839c8b380ba4744841d411ea3e8d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsGeos::geometryChanged</definition>
        <argsstring>() override</argsstring>
        <name>geometryChanged</name>
        <reimplements refid="classQgsGeometryEngine_1a0678bfa21ddbfe1189c40e71e05aac4e">geometryChanged</reimplements>
        <briefdescription>
<para>Should be called whenever the geometry associated with the engine has been modified and the engine must be updated to suit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="133" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="191" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a2346602bbdfc05c685214f9ee75f2286" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsGeos::hausdorffDistance</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const</argsstring>
        <name>hausdorffDistance</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns the Hausdorff distance between this geometry and <emphasis>geom</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>This is basically a measure of how similar or dissimilar 2 geometries are.</para><para>This algorithm is an approximation to the standard Hausdorff distance. This approximation is exact or close enough for a large subset of useful cases. Examples of these are:</para><para><itemizedlist>
<listitem><para>computing distance between Linestrings that are roughly parallel to each other, and roughly equal in length. This occurs in matching linear networks.</para></listitem><listitem><para>Testing similarity of geometries.</para></listitem></itemizedlist>
</para><para>If the default approximate provided by this method is insufficient, use <ref refid="classQgsGeos_1a1903fad0944617d932563ae409bdc20f" kindref="member">hausdorffDistanceDensify()</ref> instead.</para><para><simplesect kind="see"><para><ref refid="classQgsGeos_1a1903fad0944617d932563ae409bdc20f" kindref="member">hausdorffDistanceDensify()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="190" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="442" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a1903fad0944617d932563ae409bdc20f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsGeos::hausdorffDistanceDensify</definition>
        <argsstring>(const QgsAbstractGeometry *geom, double densifyFraction, QString *errorMsg=nullptr) const</argsstring>
        <name>hausdorffDistanceDensify</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>double</type>
          <declname>densifyFraction</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns the Hausdorff distance between this geometry and <emphasis>geom</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>This is basically a measure of how similar or dissimilar 2 geometries are.</para><para>This function accepts a <emphasis>densifyFraction</emphasis> argument. The function performs a segment densification before computing the discrete Hausdorff distance. The <emphasis>densifyFraction</emphasis> parameter sets the fraction by which to densify each segment. Each segment will be split into a number of equal-length subsegments, whose fraction of the total length is closest to the given fraction.</para><para>This method can be used when the default approximation provided by <ref refid="classQgsGeos_1a2346602bbdfc05c685214f9ee75f2286" kindref="member">hausdorffDistance()</ref> is not sufficient. Decreasing the <emphasis>densifyFraction</emphasis> parameter will make the distance returned approach the true Hausdorff distance for the geometries.</para><para><simplesect kind="see"><para><ref refid="classQgsGeos_1a2346602bbdfc05c685214f9ee75f2286" kindref="member">hausdorffDistance()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="208" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="465" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1aaccb95fcdf7d31824b8431c5ed9806c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::interpolate</definition>
        <argsstring>(double distance, QString *errorMsg=nullptr) const override</argsstring>
        <name>interpolate</name>
        <reimplements refid="classQgsGeometryEngine_1ac70dc295d826d1c23fccda5cc955ae00">interpolate</reimplements>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="168" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1561" bodyend="1574"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a105ef66053872951514368bbafca08a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::intersection</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>intersection</name>
        <reimplements refid="classQgsGeometryEngine_1a08d8a720149eaabea1d4633623a09727">intersection</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculate the intersection of this and <emphasis>geom</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="136" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ae51be923b783a99eac918548e1bd7913" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::intersects</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>intersects</name>
        <reimplements refid="classQgsGeometryEngine_1a0c4a9406f54829f9f5fe47539336b294">intersects</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Checks if <emphasis>geom</emphasis> intersects this. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="210" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="488" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1adb5a4264f29f2e619884b881c4c5a7ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::isEmpty</definition>
        <argsstring>(QString *errorMsg=nullptr) const override</argsstring>
        <name>isEmpty</name>
        <reimplements refid="classQgsGeometryEngine_1a678dcad05d07472ad066f85880bc6b68">isEmpty</reimplements>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="223" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1695" bodyend="1707"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1aafe8fadbd5350a1d488f431c2d030a50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::isEqual</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>isEqual</name>
        <reimplements refid="classQgsGeometryEngine_1a0032cf70b9862e7f4a31466de8956313">isEqual</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Checks if this is equal to <emphasis>geom</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>If both are Null geometries, <computeroutput>false</computeroutput> is returned.</para><para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="222" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1675" bodyend="1693"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a9c4a1ada534921a6fc2c6401da0fbc11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::isSimple</definition>
        <argsstring>(QString *errorMsg=nullptr) const override</argsstring>
        <name>isSimple</name>
        <reimplements refid="classQgsGeometryEngine_1a8a8f75496630f3d1d90190b5ef9ee2da">isSimple</reimplements>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Determines whether the geometry is simple (according to OGC definition). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="224" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1709" bodyend="1721"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ab1f1d53a0ea426c311c930143714300a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::isValid</definition>
        <argsstring>(QString *errorMsg=nullptr) const override</argsstring>
        <name>isValid</name>
        <reimplements refid="classQgsGeometryEngine_1ae0252f79df1dc6b3eaddf0d161fc540d">isValid</reimplements>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="221" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1661" bodyend="1673"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1aeb80d917ec0d070146e16c1c075330df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QgsGeos::length</definition>
        <argsstring>(QString *errorMsg=nullptr) const override</argsstring>
        <name>length</name>
        <reimplements refid="classQgsGeometryEngine_1ac62e068e42932bbbbe564ddffbc421ca">length</reimplements>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="220" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="603" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ad873841850e966bf4d78c7815d35e0c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsGeos::lineLocatePoint</definition>
        <argsstring>(const QgsPoint &amp;point, QString *errorMsg=nullptr) const</argsstring>
        <name>lineLocatePoint</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns a distance representing the location along this linestring of the closest point on this linestring geometry to the specified point. </para>        </briefdescription>
        <detaileddescription>
<para>Ie, the returned value indicates how far along this linestring you need to traverse to get to the closest location where this linestring comes to the specified point. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>point to seek proximity to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>error messages emitted, if any </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance along line, or -1 on error </para></simplesect>
<simplesect kind="note"><para>only valid for linestring geometries </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="295" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2189" bodyend="2217"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ab9250ac6440d1db50e3c8b67aedefd36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref></type>
        <definition>QgsGeometry QgsGeos::mergeLines</definition>
        <argsstring>(QString *errorMsg=nullptr) const</argsstring>
        <name>mergeLines</name>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Merges any connected lines in a LineString/MultiLineString geometry and converts them to single line strings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>errorMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to any reported GEOS errors </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a LineString or MultiLineString geometry, with any connected lines joined. An empty geometry will be returned if the input geometry was not a LineString/MultiLineString geometry. </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="269" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2095" bodyend="2112"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a776679bab5efb50e47d0a3018a842b8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::offsetCurve</definition>
        <argsstring>(double distance, int segments, int joinStyle, double miterLimit, QString *errorMsg=nullptr) const override</argsstring>
        <name>offsetCurve</name>
        <reimplements refid="classQgsGeometryEngine_1a47ce068c850efcb0f04a6bee0bd37366">offsetCurve</reimplements>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segments</declname>
        </param>
        <param>
          <type>int</type>
          <declname>joinStyle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>miterLimit</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="232" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1938" bodyend="1951"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ae8e807b9e98a582700b526a174768e23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::overlaps</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>overlaps</name>
        <reimplements refid="classQgsGeometryEngine_1aa55fbc0852ec62a2c398834f7f85b631">overlaps</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Checks if <emphasis>geom</emphasis> overlaps this. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="214" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="508" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1af765ec13aa97cd56a93907cea01a8d04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> *</type>
        <definition>QgsPoint * QgsGeos::pointOnSurface</definition>
        <argsstring>(QString *errorMsg=nullptr) const override</argsstring>
        <name>pointOnSurface</name>
        <reimplements refid="classQgsGeometryEngine_1ab3fa6ef3612f1909a6a4671c187a0e1b">pointOnSurface</reimplements>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculate a point that is guaranteed to be on the surface of this. </para>        </briefdescription>
        <detaileddescription>
<para>May return a <computeroutput>nullptr</computeroutput>.</para><para><simplesect kind="since"><para>QGIS 3.0 the centroid is returned </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="171" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1617" bodyend="1643"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1aa6a13237adcc0c05f0c184dcae72dada" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsGeos::prepareGeometry</definition>
        <argsstring>() override</argsstring>
        <name>prepareGeometry</name>
        <reimplements refid="classQgsGeometryEngine_1abafa27a8351574390c832936f318bdbf">prepareGeometry</reimplements>
        <briefdescription>
<para>Prepares the geometry, so that subsequent calls to spatial relation methods are much faster. </para>        </briefdescription>
        <detaileddescription>
<para>This should be called for any geometry which is used for multiple relation tests against other geometries.</para><para><simplesect kind="see"><para><ref refid="classQgsGeos_1ae8839c8b380ba4744841d411ea3e8d42" kindref="member">geometryChanged()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="134" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="198" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a914563b8c1b866999491686cd7b2adf7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsGeos::relate</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>relate</name>
        <reimplements refid="classQgsGeometryEngine_1a8771bb04bf8c6cdd616a35eab45f0b80">relate</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns the Dimensional Extended 9 Intersection Model (DE-9IM) representation of the relationship between the geometries. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geom</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry to relate to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>destination storage for any error message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DE-9IM string for relationship, or an empty string if an error occurred </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="217" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="523" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ac749774923bc4a3fae387e786f1690ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::relatePattern</definition>
        <argsstring>(const QgsAbstractGeometry *geom, const QString &amp;pattern, QString *errorMsg=nullptr) const override</argsstring>
        <name>relatePattern</name>
        <reimplements refid="classQgsGeometryEngine_1a892b360545cb12ea91d68a1d8c613572">relatePattern</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Tests whether two geometries are related by a specified Dimensional Extended 9 Intersection Model (DE-9IM) pattern. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geom</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry to relate to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>DE-9IM pattern for match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>destination storage for any error message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if geometry relationship matches with pattern </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="218" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="557" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a2fdd645da9c9bbeb13bfea323149c932" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeos::reshapeGeometry</definition>
        <argsstring>(const QgsLineString &amp;reshapeWithLine, EngineOperationResult *errorCode, QString *errorMsg=nullptr) const</argsstring>
        <name>reshapeGeometry</name>
        <param>
          <type>const <ref refid="classQgsLineString" kindref="compound">QgsLineString</ref> &amp;</type>
          <declname>reshapeWithLine</declname>
        </param>
        <param>
          <type><ref refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80" kindref="member">EngineOperationResult</ref> *</type>
          <declname>errorCode</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Reshapes the geometry using a line. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reshapeWithLine</parametername>
</parameternamelist>
<parameterdescription>
<para>the line used to reshape lines or polygons </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorCode</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, provides result of operation (success or reason of failure) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, provides more details about failure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the reshaped geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="258" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1979" bodyend="2093"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a75e5f6abc3bd5a6748ac48db69c2afce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref></type>
        <definition>QgsGeometry QgsGeos::shortestLine</definition>
        <argsstring>(const QgsGeometry &amp;other, QString *errorMsg=nullptr) const</argsstring>
        <name>shortestLine</name>
        <param>
          <type>const <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns the shortest line joining this geometry to the other geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsGeos_1a7bc1629ed45e41ab40c93f93816039b8" kindref="member">closestPoint()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="283" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2148" bodyend="2187"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a77a0e83fa80e084cbca62d22eb000d4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::simplify</definition>
        <argsstring>(double tolerance, QString *errorMsg=nullptr) const override</argsstring>
        <name>simplify</name>
        <reimplements refid="classQgsGeometryEngine_1acde5d38b59903092ab7d97af4e89073c">simplify</reimplements>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="167" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1546" bodyend="1559"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1aaaa7d1e308fe7951948ceba82c4d15e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeos::singleSidedBuffer</definition>
        <argsstring>(double distance, int segments, int side, int joinStyle, double miterLimit, QString *errorMsg=nullptr) const</argsstring>
        <name>singleSidedBuffer</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segments</declname>
        </param>
        <param>
          <type>int</type>
          <declname>side</declname>
        </param>
        <param>
          <type>int</type>
          <declname>joinStyle</declname>
        </param>
        <param>
          <type>double</type>
          <declname>miterLimit</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns a single sided buffer for a geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The buffer is only applied to one side of the geometry. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer distance </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segments</parametername>
</parameternamelist>
<parameterdescription>
<para>for round joins, number of segments to approximate quarter-circle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>side</parametername>
</parameternamelist>
<parameterdescription>
<para>side of geometry to buffer (0 = left, 1 = right) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>joinStyle</parametername>
</parameternamelist>
<parameterdescription>
<para>join style for corners ( Round (1) / Miter (2) / Bevel (3) ) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>miterLimit</parametername>
</parameternamelist>
<parameterdescription>
<para>limit on the miter ratio used for very sharp corners </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>error messages emitted, if any </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>buffered geometry, or an nullptr if buffer could not be calculated </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="247" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1953" bodyend="1977"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a3a51e1fc465dcfc2aa083bc147e73883" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80" kindref="member">EngineOperationResult</ref></type>
        <definition>QgsGeometryEngine::EngineOperationResult QgsGeos::splitGeometry</definition>
        <argsstring>(const QgsLineString &amp;splitLine, QVector&lt; QgsGeometry &gt; &amp;newGeometries, bool topological, QgsPointSequence &amp;topologyTestPoints, QString *errorMsg=nullptr) const override</argsstring>
        <name>splitGeometry</name>
        <reimplements refid="classQgsGeometryEngine_1a5f12c50446f5aac654269ab55d67d54e">splitGeometry</reimplements>
        <param>
          <type>const <ref refid="classQgsLineString" kindref="compound">QgsLineString</ref> &amp;</type>
          <declname>splitLine</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &gt; &amp;</type>
          <declname>newGeometries</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>topological</declname>
        </param>
        <param>
          <type><ref refid="qgsabstractgeometry_8h_1a998c0c2a807f73c4412fdab61e278f21" kindref="member">QgsPointSequence</ref> &amp;</type>
          <declname>topologyTestPoints</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Splits this geometry according to a given line. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>splitLine</parametername>
</parameternamelist>
<parameterdescription>
<para>the line that splits the geometry </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">newGeometries</parametername>
</parameternamelist>
<parameterdescription>
<para>list of new geometries that have been created with the split </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>topological</parametername>
</parameternamelist>
<parameterdescription>
<para>true if topological editing is enabled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">topologyTestPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>points that need to be tested for topological completeness in the dataset </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">errorMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>error messages emitted, if any </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 in case of success, 1 if geometry has not been split, error else </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="226" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="619" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1aded5117c423d64ceaaeb56a6b0da7778" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeos::subdivide</definition>
        <argsstring>(int maxNodes, QString *errorMsg=nullptr) const</argsstring>
        <name>subdivide</name>
        <param>
          <type>int</type>
          <declname>maxNodes</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Subdivides the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The returned geometry will be a collection containing subdivided parts from the original geometry, where no part has more then the specified maximum number of nodes (<emphasis>maxNodes</emphasis>).</para><para>This is useful for dividing a complex geometry into less complex parts, which are better able to be spatially indexed and faster to perform further operations such as intersects on. The returned geometry parts may not be valid and may contain self-intersections.</para><para>The minimum allowed value for <emphasis>maxNodes</emphasis> is 8.</para><para>Curved geometries are not supported.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="159" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="341" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a9b98e74a2ecbfaba750e8400f9deb98d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsGeos::symDifference</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>symDifference</name>
        <reimplements refid="classQgsGeometryEngine_1a1cfeb62cca1c6d0206a5b67e46c2ffca">symDifference</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculate the symmetric difference of this and <emphasis>geom</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="164" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="414" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a118f7aad7258c7004b18e36ca52da222" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::touches</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>touches</name>
        <reimplements refid="classQgsGeometryEngine_1a5aeaf7be127b1891f10e453e4c22b4c0">touches</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Checks if <emphasis>geom</emphasis> touches this. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="211" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="493" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ae45c5d6e13b0dddef0c35046376ad5bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref></type>
        <definition>QgsGeometry QgsGeos::voronoiDiagram</definition>
        <argsstring>(const QgsAbstractGeometry *extent=nullptr, double tolerance=0.0, bool edgesOnly=false, QString *errorMsg=nullptr) const</argsstring>
        <name>voronoiDiagram</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>extent</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>edgesOnly</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Creates a Voronoi diagram for the nodes contained within the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the Voronoi polygons for the nodes contained within the geometry. If <emphasis>extent</emphasis> is specified then it will be used as a clipping envelope for the diagram. If no extent is set then the clipping envelope will be automatically calculated. In either case the diagram will be clipped to the larger of the provided envelope OR the envelope surrounding all input nodes. The <emphasis>tolerance</emphasis> parameter specifies an optional snapping tolerance which can be used to improve the robustness of the diagram calculation. If <emphasis>edgesOnly</emphasis> is true than line string boundary geometries will be returned instead of polygons. An empty geometry will be returned if the diagram could not be calculated. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="323" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2258" bodyend="2288"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1aa299c9811f629c450025a76f826e1c44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsGeos::within</definition>
        <argsstring>(const QgsAbstractGeometry *geom, QString *errorMsg=nullptr) const override</argsstring>
        <name>within</name>
        <reimplements refid="classQgsGeometryEngine_1aba56370115c5eb247a1f75e2b01b241e">within</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Checks if <emphasis>geom</emphasis> is within this. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 <emphasis>geom</emphasis> is a pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="213" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="503" bodyend="506"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsGeos_1a6c7ea987ad4bc2dbdaf55a90e9dbb986" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometry_1a8baf383b737d73cafeabe09f5b0d7ef7" kindref="member">QgsGeometry::OperationResult</ref></type>
        <definition>QgsGeometry::OperationResult QgsGeos::addPart</definition>
        <argsstring>(QgsGeometry &amp;geometry, GEOSGeometry *newPart)</argsstring>
        <name>addPart</name>
        <param>
          <type><ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>GEOSGeometry *</type>
          <declname>newPart</declname>
        </param>
        <briefdescription>
<para>Adds a new island polygon to a multipolygon feature. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry to add part to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newPart</parametername>
</parameternamelist>
<parameterdescription>
<para>part to add. Ownership is NOT transferred. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OperationResult a result code: success or reason of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="131" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="176" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a255593eba0c5a46b6a759ac0fa6cc966" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::asGeos</definition>
        <argsstring>(const QgsGeometry &amp;geometry, double precision=0)</argsstring>
        <name>asGeos</name>
        <param>
          <type>const <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns a geos geometry - caller takes ownership of the object (should be deleted with GEOSGeom_destroy_r) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry to convert to GEOS representation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>precision</parametername>
</parameternamelist>
<parameterdescription>
<para>The precision of the grid to which to snap the geometry vertices. If 0, no snapping is performed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="349" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="166" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a80f573bf197987f527275c4c5a4c122f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::asGeos</definition>
        <argsstring>(const QgsAbstractGeometry *geometry, double precision=0)</argsstring>
        <name>asGeos</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns a geos geometry - caller takes ownership of the object (should be deleted with GEOSGeom_destroy_r) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry to convert to GEOS representation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>precision</parametername>
</parameternamelist>
<parameterdescription>
<para>The precision of the grid to which to snap the geometry vertices. If 0, no snapping is performed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="356" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1290" bodyend="1368"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1af731e594abf21fb354529c7649356c58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsGeos::coordSeqPoint</definition>
        <argsstring>(const GEOSCoordSequence *cs, int i, bool hasZ, bool hasM)</argsstring>
        <name>coordSeqPoint</name>
        <param>
          <type>const GEOSCoordSequence *</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasZ</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasM</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="357" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1253" bodyend="1288"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1aacb2fcf80805a51ccd4b73bea5cd330f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeos::fromGeos</definition>
        <argsstring>(const GEOSGeometry *geos)</argsstring>
        <name>fromGeos</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>geos</declname>
        </param>
        <briefdescription>
<para>Create a geometry from a GEOSGeometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geos</parametername>
</parameternamelist>
<parameterdescription>
<para>GEOSGeometry. Ownership is NOT transferred. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="340" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1081" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a7dae5355b147af17065e1f790e880cae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsPolygon" kindref="compound">QgsPolygon</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsPolygon &gt; QgsGeos::fromGeosPolygon</definition>
        <argsstring>(const GEOSGeometry *geos)</argsstring>
        <name>fromGeosPolygon</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>geos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="341" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1169" bodyend="1203"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1afc8ccbd6a79e17d4005e9264f513a912" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref></type>
        <definition>QgsGeometry QgsGeos::geometryFromGeos</definition>
        <argsstring>(GEOSGeometry *geos)</argsstring>
        <name>geometryFromGeos</name>
        <param>
          <type>GEOSGeometry *</type>
          <declname>geos</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> object, feeding in a geometry in GEOS format. </para>        </briefdescription>
        <detaileddescription>
<para>This class will take ownership of the buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="118" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="153" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a6e0074034a620dfb645e38934ca6952e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref></type>
        <definition>QgsGeometry QgsGeos::geometryFromGeos</definition>
        <argsstring>(const geos::unique_ptr &amp;geos)</argsstring>
        <name>geometryFromGeos</name>
        <param>
          <type>const <ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref> &amp;</type>
          <declname>geos</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> object, feeding in a geometry in GEOS format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="123" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ad27e442461f92958538128501f0fcb57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GEOSContextHandle_t</type>
        <definition>GEOSContextHandle_t QgsGeos::getGEOSHandler</definition>
        <argsstring>()</argsstring>
        <name>getGEOSHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="359" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2777" bodyend="2780"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1aaffcfd62663971a1893aab8990369b4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref></type>
        <definition>QgsGeometry QgsGeos::polygonize</definition>
        <argsstring>(const QVector&lt; const QgsAbstractGeometry *&gt; &amp;geometries, QString *errorMsg=nullptr)</argsstring>
        <name>polygonize</name>
        <param>
          <type>const QVector&lt; const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *&gt; &amp;</type>
          <declname>geometries</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Creates a GeometryCollection geometry containing possible polygons formed from the constituent linework of a set of <emphasis>geometries</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The input geometries must be fully noded (i.e. nodes exist at every common intersection of the geometries). The easiest way to ensure this is to first unary union these geometries by calling <ref refid="classQgsGeos_1a400f2c09cec82d9c450a792bd55b8676" kindref="member">combine()</ref> on the set of input geometries and then pass the result to <ref refid="classQgsGeos_1aaffcfd62663971a1893aab8990369b4a" kindref="member">polygonize()</ref>. An empty geometry will be returned in the case of errors. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="306" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2219" bodyend="2256"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsGeos_1a1d585351d4ce4554efc7bd1bc53a611b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeos::cacheGeos</definition>
        <argsstring>() const</argsstring>
        <name>cacheGeos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="387" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="207" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1abcf5a4f98c59bcfaf9ad27e12b35c8bb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::linePointDifference</definition>
        <argsstring>(GEOSGeometry *GEOSsplitPoint) const</argsstring>
        <name>linePointDifference</name>
        <param>
          <type>GEOSGeometry *</type>
          <declname>GEOSsplitPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="408" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="757" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a1dfd9b32ff1434b96137e814c104ef35" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsGeos::mergeGeometriesMultiTypeSplit</definition>
        <argsstring>(QVector&lt; GEOSGeometry *&gt; &amp;splitResult) const</argsstring>
        <name>mergeGeometriesMultiTypeSplit</name>
        <param>
          <type>QVector&lt; GEOSGeometry *&gt; &amp;</type>
          <declname>splitResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="394" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="979" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a1a48bfab898b3f41a020c29a61804514" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeos::overlay</definition>
        <argsstring>(const QgsAbstractGeometry *geom, Overlay op, QString *errorMsg=nullptr) const</argsstring>
        <name>overlay</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>Overlay</type>
          <declname>op</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="388" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1370" bodyend="1426"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a4290990738364d5f92b482d03751e745" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsGeos::relation</definition>
        <argsstring>(const QgsAbstractGeometry *geom, Relation r, QString *errorMsg=nullptr) const</argsstring>
        <name>relation</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>Relation</type>
          <declname>r</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="389" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1428" bodyend="1512"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1af38dc0b0b374d125e3531dbe9e813fd9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80" kindref="member">EngineOperationResult</ref></type>
        <definition>QgsGeometryEngine::EngineOperationResult QgsGeos::splitLinearGeometry</definition>
        <argsstring>(GEOSGeometry *splitLine, QVector&lt; QgsGeometry &gt; &amp;newGeometries) const</argsstring>
        <name>splitLinearGeometry</name>
        <param>
          <type>GEOSGeometry *</type>
          <declname>splitLine</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &gt; &amp;</type>
          <declname>newGeometries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="409" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="820" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a29cdc858dc705a44efbdd973407a25f8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80" kindref="member">EngineOperationResult</ref></type>
        <definition>QgsGeometryEngine::EngineOperationResult QgsGeos::splitPolygonGeometry</definition>
        <argsstring>(GEOSGeometry *splitLine, QVector&lt; QgsGeometry &gt; &amp;newGeometries) const</argsstring>
        <name>splitPolygonGeometry</name>
        <param>
          <type>GEOSGeometry *</type>
          <declname>splitLine</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &gt; &amp;</type>
          <declname>newGeometries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="410" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="875" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a212712e031b7c5e4341ea3d6b82bd4bc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGeos::subdivideRecursive</definition>
        <argsstring>(const GEOSGeometry *currentPart, int maxNodes, int depth, QgsGeometryCollection *parts, const QgsRectangle &amp;clipRect) const</argsstring>
        <name>subdivideRecursive</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>currentPart</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxNodes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type><ref refid="classQgsGeometryCollection" kindref="compound">QgsGeometryCollection</ref> *</type>
          <declname>parts</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>clipRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="418" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="252" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ada51575346471581f1a912ae15a1ba8c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsGeos::topologicalTestPointsSplit</definition>
        <argsstring>(const GEOSGeometry *splitLine, QgsPointSequence &amp;testPoints, QString *errorMsg=nullptr) const</argsstring>
        <name>topologicalTestPointsSplit</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>splitLine</declname>
        </param>
        <param>
          <type><ref refid="qgsabstractgeometry_8h_1a998c0c2a807f73c4412fdab61e278f21" kindref="member">QgsPointSequence</ref> &amp;</type>
          <declname>testPoints</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>errorMsg</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="407" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="699" bodyend="755"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classQgsGeos_1a58e065e61a03b13986c44a0da2b2eada" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GEOSCoordSequence *</type>
        <definition>GEOSCoordSequence * QgsGeos::createCoordinateSequence</definition>
        <argsstring>(const QgsCurve *curve, double precision, bool forceClose=false)</argsstring>
        <name>createCoordinateSequence</name>
        <param>
          <type>const <ref refid="classQgsCurve" kindref="compound">QgsCurve</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceClose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="390" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1723" bodyend="1826"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a6ca07daaef1ab69644103ebccf6d3fe2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::createGeosCollection</definition>
        <argsstring>(int typeId, const QVector&lt; GEOSGeometry *&gt; &amp;geoms)</argsstring>
        <name>createGeosCollection</name>
        <param>
          <type>int</type>
          <declname>typeId</declname>
        </param>
        <param>
          <type>const QVector&lt; GEOSGeometry *&gt; &amp;</type>
          <declname>geoms</declname>
        </param>
        <briefdescription>
<para>Ownership of geoms is transferred. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="399" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1045" bodyend="1079"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a2031f7afe7cc5e8c9309e12e52b4b692" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::createGeosLinestring</definition>
        <argsstring>(const QgsAbstractGeometry *curve, double precision)</argsstring>
        <name>createGeosLinestring</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>curve</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="403" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1882" bodyend="1899"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a955553bd8db13aafca1dfc0ac056d477" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::createGeosPoint</definition>
        <argsstring>(const QgsAbstractGeometry *point, int coordDims, double precision)</argsstring>
        <name>createGeosPoint</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>point</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coordDims</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="402" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1828" bodyend="1835"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a6f6e45354a059488aa6598d3ac52e2cd" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::createGeosPointXY</definition>
        <argsstring>(double x, double y, bool hasZ, double z, bool hasM, double m, int coordDims, double precision)</argsstring>
        <name>createGeosPointXY</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasZ</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasM</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coordDims</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="401" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1837" bodyend="1880"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1ac7ec91468504f71c3e9453864808023a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::createGeosPolygon</definition>
        <argsstring>(const QgsAbstractGeometry *poly, double precision)</argsstring>
        <name>createGeosPolygon</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>poly</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="404" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1901" bodyend="1936"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a8fdc920d845e3923d29fe4272f81b3ad" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsGeos::geomDigits</definition>
        <argsstring>(const GEOSGeometry *geom)</argsstring>
        <name>geomDigits</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="417" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2738" bodyend="2775"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a858c2b0060268c296b5c207fbbc385a3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsGeos::lineContainedInLine</definition>
        <argsstring>(const GEOSGeometry *line1, const GEOSGeometry *line2)</argsstring>
        <name>lineContainedInLine</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>line1</declname>
        </param>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>line2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="415" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2691" bodyend="2718"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a8b1227b1f7e81c92d5e4bd6930004699" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::nodeGeometries</definition>
        <argsstring>(const GEOSGeometry *splitLine, const GEOSGeometry *geom)</argsstring>
        <name>nodeGeometries</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>splitLine</declname>
        </param>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="393" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="962" bodyend="977"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a7b05517edc606afd126e0c82ca54388a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsGeos::numberOfGeometries</definition>
        <argsstring>(GEOSGeometry *g)</argsstring>
        <name>numberOfGeometries</name>
        <param>
          <type>GEOSGeometry *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="392" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1239" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a8588bb07141e7a7b92fae94fc7feff2d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsGeos::pointContainedInLine</definition>
        <argsstring>(const GEOSGeometry *point, const GEOSGeometry *line)</argsstring>
        <name>pointContainedInLine</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="416" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2720" bodyend="2736"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1af24510d31f3f5caa628491ac985604dd" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::reshapeLine</definition>
        <argsstring>(const GEOSGeometry *line, const GEOSGeometry *reshapeLineGeos, double precision)</argsstring>
        <name>reshapeLine</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>reshapeLineGeos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="413" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2368" bodyend="2577"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a6b2ad944753f0e166bcdd3f791496e3f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegeos_1a5beb2c1de65352c5506008b398393eb5" kindref="member">geos::unique_ptr</ref></type>
        <definition>geos::unique_ptr QgsGeos::reshapePolygon</definition>
        <argsstring>(const GEOSGeometry *polygon, const GEOSGeometry *reshapeLineGeos, double precision)</argsstring>
        <name>reshapePolygon</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>reshapeLineGeos</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="414" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="2579" bodyend="2689"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeos_1a55df810d983f36eae74ff8192930b3c5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsLineString" kindref="compound">QgsLineString</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsLineString &gt; QgsGeos::sequenceToLinestring</definition>
        <argsstring>(const GEOSGeometry *geos, bool hasZ, bool hasM)</argsstring>
        <name>sequenceToLinestring</name>
        <param>
          <type>const GEOSGeometry *</type>
          <declname>geos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasZ</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasM</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="391" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.cpp" bodystart="1205" bodyend="1237"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Does vector analysis using the geos library and handles import, export, exception handling*. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3714">
        <label>QgsGeos</label>
        <link refid="classQgsGeos"/>
        <childnode refid="3715" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3715">
        <label>QgsGeometryEngine</label>
        <link refid="classQgsGeometryEngine"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3718">
        <label>QgsAbstractGeometry</label>
        <link refid="classQgsAbstractGeometry"/>
      </node>
      <node id="3716">
        <label>QgsGeos</label>
        <link refid="classQgsGeos"/>
        <childnode refid="3717" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3717">
        <label>QgsGeometryEngine</label>
        <link refid="classQgsGeometryEngine"/>
        <childnode refid="3718" relation="usage">
          <edgelabel>mGeometry</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" line="104" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeos.h" bodystart="103" bodyend="419"/>
    <listofallmembers>
      <member refid="classQgsGeos_1a6c7ea987ad4bc2dbdaf55a90e9dbb986" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>addPart</name></member>
      <member refid="classQgsGeos_1aea57678563a80b3c581d730b71ec1fcd" prot="public" virt="virtual"><scope>QgsGeos</scope><name>area</name></member>
      <member refid="classQgsGeos_1a255593eba0c5a46b6a759ac0fa6cc966" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>asGeos</name></member>
      <member refid="classQgsGeos_1a80f573bf197987f527275c4c5a4c122f" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>asGeos</name></member>
      <member refid="classQgsGeos_1a26096dc90116f202d37f0b07e3bebe3b" prot="public" virt="virtual"><scope>QgsGeos</scope><name>buffer</name></member>
      <member refid="classQgsGeos_1a0bda3bc434b367a68c13b36a5012963f" prot="public" virt="virtual"><scope>QgsGeos</scope><name>buffer</name></member>
      <member refid="classQgsGeos_1a1d585351d4ce4554efc7bd1bc53a611b" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>cacheGeos</name></member>
      <member refid="classQgsGeos_1ad6307dc7e59f6557a26440a78dc9c566" prot="public" virt="virtual"><scope>QgsGeos</scope><name>centroid</name></member>
      <member refid="classQgsGeos_1a436472b94fac91c7f385a9eeeadef0f1" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>clip</name></member>
      <member refid="classQgsGeos_1a7bc1629ed45e41ab40c93f93816039b8" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>closestPoint</name></member>
      <member refid="classQgsGeos_1a400f2c09cec82d9c450a792bd55b8676" prot="public" virt="virtual"><scope>QgsGeos</scope><name>combine</name></member>
      <member refid="classQgsGeos_1ac9212c9220e6fc1782b44fe0ae7bb507" prot="public" virt="virtual"><scope>QgsGeos</scope><name>combine</name></member>
      <member refid="classQgsGeos_1a09aafa353d9475258bc16b81f62b0f0b" prot="public" virt="virtual"><scope>QgsGeos</scope><name>combine</name></member>
      <member refid="classQgsGeos_1a47d0fa87acb52a4786f9bbff04db00c8" prot="public" virt="virtual"><scope>QgsGeos</scope><name>contains</name></member>
      <member refid="classQgsGeos_1a9411287b5e1ccd51d91db47443322442" prot="public" virt="virtual"><scope>QgsGeos</scope><name>convexHull</name></member>
      <member refid="classQgsGeos_1af731e594abf21fb354529c7649356c58" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>coordSeqPoint</name></member>
      <member refid="classQgsGeos_1a58e065e61a03b13986c44a0da2b2eada" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>createCoordinateSequence</name></member>
      <member refid="classQgsGeos_1a6ca07daaef1ab69644103ebccf6d3fe2" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>createGeosCollection</name></member>
      <member refid="classQgsGeos_1a2031f7afe7cc5e8c9309e12e52b4b692" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>createGeosLinestring</name></member>
      <member refid="classQgsGeos_1a955553bd8db13aafca1dfc0ac056d477" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>createGeosPoint</name></member>
      <member refid="classQgsGeos_1a6f6e45354a059488aa6598d3ac52e2cd" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>createGeosPointXY</name></member>
      <member refid="classQgsGeos_1ac7ec91468504f71c3e9453864808023a" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>createGeosPolygon</name></member>
      <member refid="classQgsGeos_1a92e373b452cdf08fa0ef5e57a47a7b2a" prot="public" virt="virtual"><scope>QgsGeos</scope><name>crosses</name></member>
      <member refid="classQgsGeos_1a001d1ab27cee330e10937329ea08fe9d" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>delaunayTriangulation</name></member>
      <member refid="classQgsGeos_1af30072769f679773fe1d05905a26c89e" prot="public" virt="virtual"><scope>QgsGeos</scope><name>difference</name></member>
      <member refid="classQgsGeos_1a5e991ad6be533ad900a66a37b94785da" prot="public" virt="virtual"><scope>QgsGeos</scope><name>disjoint</name></member>
      <member refid="classQgsGeos_1a9715df9ff7aad2a299a5a7b282fed494" prot="public" virt="virtual"><scope>QgsGeos</scope><name>distance</name></member>
      <member refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80a8f85a71a7d58ffa7a0068d17d44f42b6" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>EngineError</name></member>
      <member refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>EngineOperationResult</name></member>
      <member refid="classQgsGeos_1a8778f38d2192418266a1fe112661ca62" prot="public" virt="virtual"><scope>QgsGeos</scope><name>envelope</name></member>
      <member refid="classQgsGeos_1aacb2fcf80805a51ccd4b73bea5cd330f" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>fromGeos</name></member>
      <member refid="classQgsGeos_1a7dae5355b147af17065e1f790e880cae" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>fromGeosPolygon</name></member>
      <member refid="classQgsGeos_1a8fdc920d845e3923d29fe4272f81b3ad" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>geomDigits</name></member>
      <member refid="classQgsGeos_1ae8839c8b380ba4744841d411ea3e8d42" prot="public" virt="virtual"><scope>QgsGeos</scope><name>geometryChanged</name></member>
      <member refid="classQgsGeos_1afc8ccbd6a79e17d4005e9264f513a912" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>geometryFromGeos</name></member>
      <member refid="classQgsGeos_1a6e0074034a620dfb645e38934ca6952e" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>geometryFromGeos</name></member>
      <member refid="classQgsGeos_1ad27e442461f92958538128501f0fcb57" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>getGEOSHandler</name></member>
      <member refid="classQgsGeos_1a2346602bbdfc05c685214f9ee75f2286" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>hausdorffDistance</name></member>
      <member refid="classQgsGeos_1a1903fad0944617d932563ae409bdc20f" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>hausdorffDistanceDensify</name></member>
      <member refid="classQgsGeos_1aaccb95fcdf7d31824b8431c5ed9806c8" prot="public" virt="virtual"><scope>QgsGeos</scope><name>interpolate</name></member>
      <member refid="classQgsGeos_1a105ef66053872951514368bbafca08a5" prot="public" virt="virtual"><scope>QgsGeos</scope><name>intersection</name></member>
      <member refid="classQgsGeos_1ae51be923b783a99eac918548e1bd7913" prot="public" virt="virtual"><scope>QgsGeos</scope><name>intersects</name></member>
      <member refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80a4da6feb591df0009b0656403f4e24007" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>InvalidBaseGeometry</name></member>
      <member refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80a577a6897d56a1bda15a3cc2e112270b5" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>InvalidInput</name></member>
      <member refid="classQgsGeos_1adb5a4264f29f2e619884b881c4c5a7ca" prot="public" virt="virtual"><scope>QgsGeos</scope><name>isEmpty</name></member>
      <member refid="classQgsGeos_1aafe8fadbd5350a1d488f431c2d030a50" prot="public" virt="virtual"><scope>QgsGeos</scope><name>isEqual</name></member>
      <member refid="classQgsGeos_1a9c4a1ada534921a6fc2c6401da0fbc11" prot="public" virt="virtual"><scope>QgsGeos</scope><name>isSimple</name></member>
      <member refid="classQgsGeos_1ab1f1d53a0ea426c311c930143714300a" prot="public" virt="virtual"><scope>QgsGeos</scope><name>isValid</name></member>
      <member refid="classQgsGeos_1aeb80d917ec0d070146e16c1c075330df" prot="public" virt="virtual"><scope>QgsGeos</scope><name>length</name></member>
      <member refid="classQgsGeos_1a858c2b0060268c296b5c207fbbc385a3" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>lineContainedInLine</name></member>
      <member refid="classQgsGeos_1ad873841850e966bf4d78c7815d35e0c2" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>lineLocatePoint</name></member>
      <member refid="classQgsGeos_1abcf5a4f98c59bcfaf9ad27e12b35c8bb" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>linePointDifference</name></member>
      <member refid="classQgsGeos_1a1dfd9b32ff1434b96137e814c104ef35" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>mergeGeometriesMultiTypeSplit</name></member>
      <member refid="classQgsGeos_1ab9250ac6440d1db50e3c8b67aedefd36" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>mergeLines</name></member>
      <member refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80aef6b59ebf0b90c0e1723866c818e9ad1" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>MethodNotImplemented</name></member>
      <member refid="classQgsGeometryEngine_1a249de97355c4850ee0f638e4b2eb3771" prot="protected" virt="non-virtual"><scope>QgsGeos</scope><name>mGeometry</name></member>
      <member refid="classQgsGeos_1adeedabe93ab4cb5dc1edb502dfc4dfa8" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>mGeos</name></member>
      <member refid="classQgsGeos_1adc532432a5e6522e48bfe2123b095bfa" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>mGeosPrepared</name></member>
      <member refid="classQgsGeos_1a50f7473f8525086c60d4a51b79585232" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>mPrecision</name></member>
      <member refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80a6fe6b44b18ce371f3b48acf744f17276" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>NodedGeometryError</name></member>
      <member refid="classQgsGeos_1a8b1227b1f7e81c92d5e4bd6930004699" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>nodeGeometries</name></member>
      <member refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80a056a508e11adf46db9b6f414ea4308a6" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>NothingHappened</name></member>
      <member refid="classQgsGeos_1a7b05517edc606afd126e0c82ca54388a" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>numberOfGeometries</name></member>
      <member refid="classQgsGeos_1a776679bab5efb50e47d0a3018a842b8a" prot="public" virt="virtual"><scope>QgsGeos</scope><name>offsetCurve</name></member>
      <member refid="classQgsGeos_1ae8e807b9e98a582700b526a174768e23" prot="public" virt="virtual"><scope>QgsGeos</scope><name>overlaps</name></member>
      <member refid="classQgsGeos_1a1a48bfab898b3f41a020c29a61804514" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>overlay</name></member>
      <member refid="classQgsGeos_1af509aed503421b37626ab5de6debface" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>Overlay</name></member>
      <member refid="classQgsGeos_1af509aed503421b37626ab5de6debfaceac839aa17b056f9919558669de1d92e96" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>OverlayDifference</name></member>
      <member refid="classQgsGeos_1af509aed503421b37626ab5de6debfaceaececcd7b1bbd914823236771af1ae1f5" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>OverlayIntersection</name></member>
      <member refid="classQgsGeos_1af509aed503421b37626ab5de6debfacea63f23bf240734ada573067b4ee1fcf28" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>OverlaySymDifference</name></member>
      <member refid="classQgsGeos_1af509aed503421b37626ab5de6debfaceaaac33caa9fd0cdd668255c3db5f9fc40" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>OverlayUnion</name></member>
      <member refid="classQgsGeos_1a8588bb07141e7a7b92fae94fc7feff2d" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>pointContainedInLine</name></member>
      <member refid="classQgsGeos_1af765ec13aa97cd56a93907cea01a8d04" prot="public" virt="virtual"><scope>QgsGeos</scope><name>pointOnSurface</name></member>
      <member refid="classQgsGeos_1aaffcfd62663971a1893aab8990369b4a" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>polygonize</name></member>
      <member refid="classQgsGeos_1aa6a13237adcc0c05f0c184dcae72dada" prot="public" virt="virtual"><scope>QgsGeos</scope><name>prepareGeometry</name></member>
      <member refid="classQgsGeometryEngine_1a876076a063b2018d3bc9058bf6816b37" prot="protected" virt="non-virtual"><scope>QgsGeos</scope><name>QgsGeometryEngine</name></member>
      <member refid="classQgsGeos_1a646726fad099e2d772a98c82bd6d8f1a" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>QgsGeos</name></member>
      <member refid="classQgsGeos_1a914563b8c1b866999491686cd7b2adf7" prot="public" virt="virtual"><scope>QgsGeos</scope><name>relate</name></member>
      <member refid="classQgsGeos_1ac749774923bc4a3fae387e786f1690ae" prot="public" virt="virtual"><scope>QgsGeos</scope><name>relatePattern</name></member>
      <member refid="classQgsGeos_1a4290990738364d5f92b482d03751e745" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>relation</name></member>
      <member refid="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>Relation</name></member>
      <member refid="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a9b734c35fa6d3fee1fa6d5cc74d3a6d1" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>RelationContains</name></member>
      <member refid="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a953102e7d92d88bdabd80ee474410d41" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>RelationCrosses</name></member>
      <member refid="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0ab807259ccefc1312f1499fc7066bf832" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>RelationDisjoint</name></member>
      <member refid="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a2d0fa90c76d2dfca63e8f10545370e05" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>RelationIntersects</name></member>
      <member refid="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a88d96103829e10353c02d8395c0e37df" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>RelationOverlaps</name></member>
      <member refid="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a12d8cbee4d48baa9ba42cddc755f8c48" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>RelationTouches</name></member>
      <member refid="classQgsGeos_1a28a4e94df5a505e9d40640e4976326b0a7a23a4be7a645aeb9098a73b80f7df3e" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>RelationWithin</name></member>
      <member refid="classQgsGeos_1a2fdd645da9c9bbeb13bfea323149c932" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>reshapeGeometry</name></member>
      <member refid="classQgsGeos_1af24510d31f3f5caa628491ac985604dd" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>reshapeLine</name></member>
      <member refid="classQgsGeos_1a6b2ad944753f0e166bcdd3f791496e3f" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>reshapePolygon</name></member>
      <member refid="classQgsGeos_1a55df810d983f36eae74ff8192930b3c5" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>sequenceToLinestring</name></member>
      <member refid="classQgsGeos_1a75e5f6abc3bd5a6748ac48db69c2afce" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>shortestLine</name></member>
      <member refid="classQgsGeos_1a77a0e83fa80e084cbca62d22eb000d4a" prot="public" virt="virtual"><scope>QgsGeos</scope><name>simplify</name></member>
      <member refid="classQgsGeos_1aaaa7d1e308fe7951948ceba82c4d15e1" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>singleSidedBuffer</name></member>
      <member refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80aaacfeb0900c4af5fe012208b192851fc" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>SplitCannotSplitPoint</name></member>
      <member refid="classQgsGeos_1a3a51e1fc465dcfc2aa083bc147e73883" prot="public" virt="virtual"><scope>QgsGeos</scope><name>splitGeometry</name></member>
      <member refid="classQgsGeos_1af38dc0b0b374d125e3531dbe9e813fd9" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>splitLinearGeometry</name></member>
      <member refid="classQgsGeos_1a29cdc858dc705a44efbdd973407a25f8" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>splitPolygonGeometry</name></member>
      <member refid="classQgsGeos_1aded5117c423d64ceaaeb56a6b0da7778" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>subdivide</name></member>
      <member refid="classQgsGeos_1a212712e031b7c5e4341ea3d6b82bd4bc" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>subdivideRecursive</name></member>
      <member refid="classQgsGeometryEngine_1a604583645275033658b0c4adce6ebb80aeecbd3f42fc256346504fb2c156af320" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>Success</name></member>
      <member refid="classQgsGeos_1a9b98e74a2ecbfaba750e8400f9deb98d" prot="public" virt="virtual"><scope>QgsGeos</scope><name>symDifference</name></member>
      <member refid="classQgsGeos_1ada51575346471581f1a912ae15a1ba8c" prot="private" virt="non-virtual"><scope>QgsGeos</scope><name>topologicalTestPointsSplit</name></member>
      <member refid="classQgsGeos_1a118f7aad7258c7004b18e36ca52da222" prot="public" virt="virtual"><scope>QgsGeos</scope><name>touches</name></member>
      <member refid="classQgsGeos_1ae45c5d6e13b0dddef0c35046376ad5bb" prot="public" virt="non-virtual"><scope>QgsGeos</scope><name>voronoiDiagram</name></member>
      <member refid="classQgsGeos_1aa299c9811f629c450025a76f826e1c44" prot="public" virt="virtual"><scope>QgsGeos</scope><name>within</name></member>
      <member refid="classQgsGeometryEngine_1a02af3d1fa569c8655874afe5a49d7fb0" prot="public" virt="virtual"><scope>QgsGeos</scope><name>~QgsGeometryEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
