<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsExpressionContext" kind="class" language="C++" prot="public">
    <compoundname>QgsExpressionContext</compoundname>
    <includes refid="qgsexpressioncontext_8h" local="no">qgsexpressioncontext.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classQgsExpressionContext_1ae28b690c36097a1cf051e2c7f858a88b" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsExpressionContext::EXPR_CLUSTER_COLOR</definition>
        <argsstring></argsstring>
        <name>EXPR_CLUSTER_COLOR</name>
        <briefdescription>
<para>Inbuilt variable name for cluster color variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="735" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="735" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1a0d2246beeb5f14f539fff912e820225f" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsExpressionContext::EXPR_CLUSTER_SIZE</definition>
        <argsstring></argsstring>
        <name>EXPR_CLUSTER_SIZE</name>
        <briefdescription>
<para>Inbuilt variable name for cluster size variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="733" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1a42b0704e9b7abc58a75967f83f8237e3" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsExpressionContext::EXPR_FIELDS</definition>
        <argsstring></argsstring>
        <name>EXPR_FIELDS</name>
        <briefdescription>
<para>Inbuilt variable name for fields storage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="717" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1a0061740aa2c9bbc88a2a3e3a68f082a3" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsExpressionContext::EXPR_GEOMETRY_PART_COUNT</definition>
        <argsstring></argsstring>
        <name>EXPR_GEOMETRY_PART_COUNT</name>
        <briefdescription>
<para>Inbuilt variable name for geometry part count variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="725" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1a5d0e58040803fded280a64fac881545e" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsExpressionContext::EXPR_GEOMETRY_PART_NUM</definition>
        <argsstring></argsstring>
        <name>EXPR_GEOMETRY_PART_NUM</name>
        <briefdescription>
<para>Inbuilt variable name for geometry part number variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="727" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1a0558aa150d6d9ad4ebc40be54f88b051" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsExpressionContext::EXPR_GEOMETRY_POINT_COUNT</definition>
        <argsstring></argsstring>
        <name>EXPR_GEOMETRY_POINT_COUNT</name>
        <briefdescription>
<para>Inbuilt variable name for point count variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="729" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="729" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1a11cd85ed1e3276a53aea4d5d4cfc2899" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsExpressionContext::EXPR_GEOMETRY_POINT_NUM</definition>
        <argsstring></argsstring>
        <name>EXPR_GEOMETRY_POINT_NUM</name>
        <briefdescription>
<para>Inbuilt variable name for point number variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="731" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1adedbaf735924a5be1102251a47c0e0ad" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsExpressionContext::EXPR_ORIGINAL_VALUE</definition>
        <argsstring></argsstring>
        <name>EXPR_ORIGINAL_VALUE</name>
        <briefdescription>
<para>Inbuilt variable name for value original value variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="719" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1aa3093e2813b44988493bd644d7f226b5" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsExpressionContext::EXPR_SYMBOL_ANGLE</definition>
        <argsstring></argsstring>
        <name>EXPR_SYMBOL_ANGLE</name>
        <briefdescription>
<para>Inbuilt variable name for symbol angle variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="723" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1a7574f63fed04010e6bba4efb369865c5" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsExpressionContext::EXPR_SYMBOL_COLOR</definition>
        <argsstring></argsstring>
        <name>EXPR_SYMBOL_COLOR</name>
        <briefdescription>
<para>Inbuilt variable name for symbol color variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="721" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsExpressionContext_1a425ab28e1dbc93a091d8a43bf5dd3705" prot="private" static="no" mutable="yes">
        <type>QMap&lt; QString, QVariant &gt;</type>
        <definition>QMap&lt; QString, QVariant &gt; QgsExpressionContext::mCachedValues</definition>
        <argsstring></argsstring>
        <name>mCachedValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="744" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1a1b50f2059866f29f9e8e64edd7bcf98f" prot="private" static="no" mutable="no">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionContext::mHighlightedFunctions</definition>
        <argsstring></argsstring>
        <name>mHighlightedFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="741" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="741" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1a9be4b78df4e059d10518bc82b9dc1f73" prot="private" static="no" mutable="no">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionContext::mHighlightedVariables</definition>
        <argsstring></argsstring>
        <name>mHighlightedVariables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="740" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContext_1aa4e8764ef0393eeaafaa82d043894c1d" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *&gt;</type>
        <definition>QList&lt; QgsExpressionContextScope * &gt; QgsExpressionContext::mStack</definition>
        <argsstring></argsstring>
        <name>mStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="739" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="739" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsExpressionContext_1a3ed6b33dbaf8960bf0132ee40234e5c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionContext::QgsExpressionContext</definition>
        <argsstring>()=default</argsstring>
        <name>QgsExpressionContext</name>
        <briefdescription>
<para>Constructor for <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1aef64131d41b82edbaa1405f88b64ceb1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionContext::QgsExpressionContext</definition>
        <argsstring>(const QList&lt; QgsExpressionContextScope *&gt; &amp;scopes)</argsstring>
        <name>QgsExpressionContext</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *&gt; &amp;</type>
          <declname>scopes</declname>
        </param>
        <briefdescription>
<para>Initializes the context with given list of scopes. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the scopes is transferred to the stack. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="387" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1acb9e6316da8318ae52f79c66db11614b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionContext::QgsExpressionContext</definition>
        <argsstring>(const QgsExpressionContext &amp;other)</argsstring>
        <name>QgsExpressionContext</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="392" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="235" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1ad4410549290bbce6cf62e8415f96ec6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionContext::~QgsExpressionContext</definition>
        <argsstring>()</argsstring>
        <name>~QgsExpressionContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="398" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="276" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a5aaed2cbbb807fdecd5238f1273b1a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *</type>
        <definition>QgsExpressionContextScope * QgsExpressionContext::activeScopeForVariable</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>activeScopeForVariable</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the currently active scope from the context for a specified variable name. </para>        </briefdescription>
        <detaileddescription>
<para>As scopes later in the stack override earlier contexts, this will be the last matching scope which contains a matching variable. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>variable name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching scope containing variable, or null if none found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="475" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="342" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a2271eb1e93755f4ea9721d3d3803e4e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *</type>
        <definition>const QgsExpressionContextScope * QgsExpressionContext::activeScopeForVariable</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>activeScopeForVariable</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the currently active scope from the context for a specified variable name. </para>        </briefdescription>
        <detaileddescription>
<para>As scopes later in the stack override earlier contexts, this will be the last matching scope which contains a matching variable. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>variable name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching scope containing variable, or null if none found </para></simplesect>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="485" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="329" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a7f52d87dd7d7fa3148c7b46b22a4af2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContext::appendScope</definition>
        <argsstring>(QgsExpressionContextScope *scope)</argsstring>
        <name>appendScope</name>
        <param>
          <type><ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
<para>Appends a scope to the end of the context. </para>        </briefdescription>
        <detaileddescription>
<para>This scope will override any matching variables or functions provided by existing scopes within the context. Ownership of the scope is transferred to the stack. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scope</parametername>
</parameternamelist>
<parameterdescription>
<para>expression context to append to context </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="594" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="474" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a98d9ba9b48cf165fca04cdfcc214debc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContext::appendScopes</definition>
        <argsstring>(const QList&lt; QgsExpressionContextScope *&gt; &amp;scopes)</argsstring>
        <name>appendScopes</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *&gt; &amp;</type>
          <declname>scopes</declname>
        </param>
        <briefdescription>
<para>Appends a list of scopes to the end of the context. </para>        </briefdescription>
        <detaileddescription>
<para>This scopes will override any matching variables or functions provided by existing scopes within the context. Ownership of the scopes is transferred to the stack. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scopes</parametername>
</parameternamelist>
<parameterdescription>
<para>scopes to append to context </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="603" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="479" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1aedee253501cfe351a8c105df46af9db9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsExpressionContext::cachedValue</definition>
        <argsstring>(const QString &amp;key) const</argsstring>
        <name>cachedValue</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns the matching cached value, if set. </para>        </briefdescription>
        <detaileddescription>
<para>This can be used to retrieve the previously stored results of an expensive expression sub-calculation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key used to store cached value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching cached value, or invalid QVariant if not set </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a150c133833cb77f7c0fab590d0f64cbb" kindref="member">setCachedValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1ac465a5001e0389802ae9e86ef2152050" kindref="member">hasCachedValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a195478aab248154e362251c410bde190" kindref="member">clearCachedValues()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="705" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="568" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a195478aab248154e362251c410bde190" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContext::clearCachedValues</definition>
        <argsstring>() const</argsstring>
        <name>clearCachedValues</name>
        <briefdescription>
<para>Clears all cached values from the context. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a150c133833cb77f7c0fab590d0f64cbb" kindref="member">setCachedValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1ac465a5001e0389802ae9e86ef2152050" kindref="member">hasCachedValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1aedee253501cfe351a8c105df46af9db9" kindref="member">cachedValue()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="714" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="573" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a049e1539045a9dc2b62246bb4870b1e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpressionContext::description</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>description</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns a translated description string for the variable with specified <emphasis>name</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>If no specific description has been provided for the variable, the value from <ref refid="classQgsExpression_1a3976fd1aaa7537bd091b46fab972149b" kindref="member">QgsExpression::variableHelpText()</ref> will be returned.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="556" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="428" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a2b566d09b66e8ee79ebdfa8dc95e59d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeature" kindref="compound">QgsFeature</ref></type>
        <definition>QgsFeature QgsExpressionContext::feature</definition>
        <argsstring>() const</argsstring>
        <name>feature</name>
        <briefdescription>
<para>Convenience function for retrieving the feature for the context, if set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a99a92e3956573acfc28f7199ba13948d" kindref="member">setFeature</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="647" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="523" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1af94ae6fe63a30c389eb1de8ac5ee2014" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFields" kindref="compound">QgsFields</ref></type>
        <definition>QgsFields QgsExpressionContext::fields</definition>
        <argsstring>() const</argsstring>
        <name>fields</name>
        <briefdescription>
<para>Convenience function for retrieving the fields for the context, if set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContext_1aba1a8ba2e07af5f1c67deb2e2f419a7f" kindref="member">setFields</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="662" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="544" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a445ef1701fe18cb2943f0e18594453d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionContext::filteredVariableNames</definition>
        <argsstring>() const</argsstring>
        <name>filteredVariableNames</name>
        <briefdescription>
<para>Returns a filtered list of variables names set by all scopes in the context. </para>        </briefdescription>
        <detaileddescription>
<para>The included variables are those which should be seen by users. <simplesect kind="return"><para>filtered list of unique variable names </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1ae471f014da87c2d93d32ffa980663b1f" kindref="member">variableNames</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="538" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="402" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1aab398db52faa0d1d2ef41c9e38fa78ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpressionFunction" kindref="compound">QgsExpressionFunction</ref> *</type>
        <definition>QgsExpressionFunction * QgsExpressionContext::function</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>function</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Fetches a matching function from the context. </para>        </briefdescription>
        <detaileddescription>
<para>The function will be fetched from the last scope contained within the context which has a matching function set. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>function name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>function if contained by the context, otherwise null. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a01d17757b5282006feb3a6cc6b8e3c5f" kindref="member">hasFunction</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="581" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="456" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a0f7ab3ccd0220972d6aa57994fe61305" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionContext::functionNames</definition>
        <argsstring>() const</argsstring>
        <name>functionNames</name>
        <briefdescription>
<para>Retrieves a list of function names contained in the context. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContext_1aab398db52faa0d1d2ef41c9e38fa78ca" kindref="member">function()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1ae471f014da87c2d93d32ffa980663b1f" kindref="member">variableNames()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="571" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="444" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1ac465a5001e0389802ae9e86ef2152050" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContext::hasCachedValue</definition>
        <argsstring>(const QString &amp;key) const</argsstring>
        <name>hasCachedValue</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns true if the expression context contains a cached value with a matching key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key used to store cached value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a150c133833cb77f7c0fab590d0f64cbb" kindref="member">setCachedValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1aedee253501cfe351a8c105df46af9db9" kindref="member">cachedValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a195478aab248154e362251c410bde190" kindref="member">clearCachedValues()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="693" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1af7d4310259bd17e7e9857e6bb261351f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContext::hasFeature</definition>
        <argsstring>() const</argsstring>
        <name>hasFeature</name>
        <briefdescription>
<para>Returns true if the context has a feature associated with it. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a2b566d09b66e8ee79ebdfa8dc95e59d7" kindref="member">feature()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="641" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="513" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a01d17757b5282006feb3a6cc6b8e3c5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContext::hasFunction</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>hasFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Checks whether a specified function is contained in the context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>function name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if context provides a matching function </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1aab398db52faa0d1d2ef41c9e38fa78ca" kindref="member">function</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="564" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="434" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a8bbb345070dc112c10c187999ced4bec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContext::hasVariable</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>hasVariable</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Check whether a variable is specified by any scope within the context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>variable name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if variable is set </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1ae805e766bee826d1345ac8e2b977eda1" kindref="member">variable()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1ae471f014da87c2d93d32ffa980663b1f" kindref="member">variableNames()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="407" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="282" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a14c12c94299611d9548dca7c46248062" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsExpressionContext::indexOfScope</definition>
        <argsstring>(QgsExpressionContextScope *scope) const</argsstring>
        <name>indexOfScope</name>
        <param>
          <type><ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
<para>Returns the index of the specified scope if it exists within the context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scope</parametername>
</parameternamelist>
<parameterdescription>
<para>scope to find </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index of scope, or -1 if scope was not found within the context. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="512" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="371" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a5ee05d7f516200f652742df0b292ced1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsExpressionContext::indexOfScope</definition>
        <argsstring>(const QString &amp;scopeName) const</argsstring>
        <name>indexOfScope</name>
        <param>
          <type>const QString &amp;</type>
          <declname>scopeName</declname>
        </param>
        <briefdescription>
<para>Returns the index of the first scope with a matching name within the context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scopeName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of scope to find </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index of scope, or -1 if scope was not found within the context. </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="520" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="379" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a28c216e86fda75f2b945fcaccd03a248" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContext::isHighlightedFunction</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>isHighlightedFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns true if the specified function <emphasis>name</emphasis> is intended to be highlighted to the user. </para>        </briefdescription>
        <detaileddescription>
<para>This is used by the expression builder to more prominently display the function. <simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a19e07045196e0c52f0afd9b7465c0013" kindref="member">setHighlightedFunctions()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a5a7a96f71dc630543e6373992fda4215" kindref="member">isHighlightedVariable()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="453" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="319" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a5a7a96f71dc630543e6373992fda4215" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContext::isHighlightedVariable</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>isHighlightedVariable</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns true if the specified variable <emphasis>name</emphasis> is intended to be highlighted to the user. </para>        </briefdescription>
        <detaileddescription>
<para>This is used by the expression builder to more prominently display the variable. <simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a9df671f33a16ac63398a5051ce51b641" kindref="member">setHighlightedVariables()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a28c216e86fda75f2b945fcaccd03a248" kindref="member">isHighlightedFunction()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="434" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1aa3b1fb20c01c045ea8eeb0666d2d8e69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContext::isReadOnly</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>isReadOnly</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns whether a variable is read only, and should not be modifiable by users. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>variable name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if variable is read only. Read only status will be taken from last matching scope which contains a matching variable. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="546" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="418" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a7969d8cb48b2d3ca8207f4350d45b67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *</type>
        <definition>QgsExpressionContextScope * QgsExpressionContext::lastScope</definition>
        <argsstring>()</argsstring>
        <name>lastScope</name>
        <briefdescription>
<para>Returns the last scope added to the context. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContext_1ae978a7d9d4c727043ca1700f67a828f9" kindref="member">scope()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="499" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="363" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1adad2e33ba2d05f9248b2d48d1979daba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
        <definition>QgsExpressionContext &amp; QgsExpressionContext::operator&lt;&lt;</definition>
        <argsstring>(QgsExpressionContextScope *scope)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
<para>Appends a scope to the end of the context. </para>        </briefdescription>
        <detaileddescription>
<para>This scope will override any matching variables or functions provided by existing scopes within the context. Ownership of the scope is transferred to the stack. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="625" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="499" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a385cabc7da06c7222938c35f6124a540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
        <definition>QgsExpressionContext &amp; QgsExpressionContext::operator=</definition>
        <argsstring>(const QgsExpressionContext &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="394" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="262" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1acb2c2815551e730f24a0dd24034b0930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
        <definition>QgsExpressionContext &amp; QgsExpressionContext::operator=</definition>
        <argsstring>(QgsExpressionContext &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="396" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="246" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a0573996d97031c58a4541a72710a88ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *</type>
        <definition>QgsExpressionContextScope * QgsExpressionContext::popScope</definition>
        <argsstring>()</argsstring>
        <name>popScope</name>
        <briefdescription>
<para>Removes the last scope from the expression context and return it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="608" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="484" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1ae978a7d9d4c727043ca1700f67a828f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *</type>
        <definition>QgsExpressionContextScope * QgsExpressionContext::scope</definition>
        <argsstring>(int index)</argsstring>
        <name>scope</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the scope at the specified index within the context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of scope </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching scope, or null if none found </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a7969d8cb48b2d3ca8207f4350d45b67a" kindref="member">lastScope()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="493" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="355" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a979a5012ba60d53f49a14551ef9ff7e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsExpressionContext::scopeCount</definition>
        <argsstring>() const</argsstring>
        <name>scopeCount</name>
        <briefdescription>
<para>Returns the number of scopes contained in the context. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="586" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="469" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a7ca055c86c46bd187e81125337bcd17a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> *&gt;</type>
        <definition>QList&lt; QgsExpressionContextScope * &gt; QgsExpressionContext::scopes</definition>
        <argsstring>()</argsstring>
        <name>scopes</name>
        <briefdescription>
<para>Returns a list of scopes contained within the stack. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of pointers to scopes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="505" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="505" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a150c133833cb77f7c0fab590d0f64cbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContext::setCachedValue</definition>
        <argsstring>(const QString &amp;key, const QVariant &amp;value) const</argsstring>
        <name>setCachedValue</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a value to cache within the expression context. </para>        </briefdescription>
        <detaileddescription>
<para>This can be used to cache the results of expensive expression sub-calculations, to speed up future evaluations using the same expression context. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>unique key for retrieving cached value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to cache </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1ac465a5001e0389802ae9e86ef2152050" kindref="member">hasCachedValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1aedee253501cfe351a8c105df46af9db9" kindref="member">cachedValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a195478aab248154e362251c410bde190" kindref="member">clearCachedValues()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="683" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="558" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a99a92e3956573acfc28f7199ba13948d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContext::setFeature</definition>
        <argsstring>(const QgsFeature &amp;feature)</argsstring>
        <name>setFeature</name>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Convenience function for setting a feature for the context. </para>        </briefdescription>
        <detaileddescription>
<para>The feature will be set within the last scope of the context, so will override any existing features within the context. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feature</parametername>
</parameternamelist>
<parameterdescription>
<para>feature for context </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a2b566d09b66e8ee79ebdfa8dc95e59d7" kindref="member">feature()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="634" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="505" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1aba1a8ba2e07af5f1c67deb2e2f419a7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContext::setFields</definition>
        <argsstring>(const QgsFields &amp;fields)</argsstring>
        <name>setFields</name>
        <param>
          <type>const <ref refid="classQgsFields" kindref="compound">QgsFields</ref> &amp;</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
<para>Convenience function for setting a fields for the context. </para>        </briefdescription>
        <detaileddescription>
<para>The fields will be set within the last scope of the context, so will override any existing fields within the context. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fields</parametername>
</parameternamelist>
<parameterdescription>
<para>fields for context </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1af94ae6fe63a30c389eb1de8ac5ee2014" kindref="member">fields()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="656" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="536" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a19e07045196e0c52f0afd9b7465c0013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContext::setHighlightedFunctions</definition>
        <argsstring>(const QStringList &amp;names)</argsstring>
        <name>setHighlightedFunctions</name>
        <param>
          <type>const QStringList &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
<para>Sets the list of function <emphasis>names</emphasis> intended to be highlighted to the user. </para>        </briefdescription>
        <detaileddescription>
<para>This is used by the expression builder to more prominently display these functions.</para><para>Note that these function names may include standard functions which are not functions specific to this context, and these standard functions will also be highlighted to users.</para><para><simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a28c216e86fda75f2b945fcaccd03a248" kindref="member">isHighlightedFunction()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a9df671f33a16ac63398a5051ce51b641" kindref="member">setHighlightedVariables()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="466" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="324" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a9df671f33a16ac63398a5051ce51b641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContext::setHighlightedVariables</definition>
        <argsstring>(const QStringList &amp;variableNames)</argsstring>
        <name>setHighlightedVariables</name>
        <param>
          <type>const QStringList &amp;</type>
          <declname>variableNames</declname>
        </param>
        <briefdescription>
<para>Sets the list of variable names within the context intended to be highlighted to the user. </para>        </briefdescription>
        <detaileddescription>
<para>This is used by the expression builder to more prominently display these variables. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variableNames</parametername>
</parameternamelist>
<parameterdescription>
<para>variable names to highlight </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a5a7a96f71dc630543e6373992fda4215" kindref="member">isHighlightedVariable()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a19e07045196e0c52f0afd9b7465c0013" kindref="member">setHighlightedFunctions()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="443" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a375097584a8f28a3b5bdba58efeb93c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContext::setOriginalValueVariable</definition>
        <argsstring>(const QVariant &amp;value)</argsstring>
        <name>setOriginalValueVariable</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the original value variable value for the context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value for original value variable. This usually represents the an original widget value before any data defined overrides have been applied. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="670" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="549" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1a8db004b232bcda2bedb2f792fcb3ea68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> * &gt;</type>
        <definition>QList&lt; QgsExpressionContextScope * &gt; QgsExpressionContext::takeScopes</definition>
        <argsstring>()</argsstring>
        <name>takeScopes</name>
        <briefdescription>
<para>Returns all scopes from this context and remove them, leaving this context without any context. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership is transferred to the caller.</para><para><simplesect kind="note"><para>Not available in Python </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="618" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="492" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1ae805e766bee826d1345ac8e2b977eda1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsExpressionContext::variable</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>variable</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Fetches a matching variable from the context. </para>        </briefdescription>
        <detaileddescription>
<para>The variable will be fetched from the last scope contained within the context which has a matching variable set. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>variable name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>variable value if matching variable exists in the context, otherwise an invalid QVariant </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a8bbb345070dc112c10c187999ced4bec" kindref="member">hasVariable()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1ae471f014da87c2d93d32ffa980663b1f" kindref="member">variableNames()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="418" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="292" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1ae471f014da87c2d93d32ffa980663b1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionContext::variableNames</definition>
        <argsstring>() const</argsstring>
        <name>variableNames</name>
        <briefdescription>
<para>Returns a list of variables names set by all scopes in the context. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of unique variable names </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a445ef1701fe18cb2943f0e18594453d0" kindref="member">filteredVariableNames</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a0f7ab3ccd0220972d6aa57994fe61305" kindref="member">functionNames</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1a8bbb345070dc112c10c187999ced4bec" kindref="member">hasVariable</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContext_1ae805e766bee826d1345ac8e2b977eda1" kindref="member">variable</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="530" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="392" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContext_1abd76c81a6755f8eedf7f522aae90293d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariantMap</type>
        <definition>QVariantMap QgsExpressionContext::variablesToMap</definition>
        <argsstring>() const</argsstring>
        <name>variablesToMap</name>
        <briefdescription>
<para>Returns a map of variable name to value representing all the expression variables contained by the context. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="425" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="298" bodyend="307"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Expression contexts are used to encapsulate the parameters around which a <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> should be evaluated. </para>    </briefdescription>
    <detaileddescription>
<para>QgsExpressions can then utilize the information stored within a context to contextualise their evaluated result. A <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> consists of a stack of <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> objects, where scopes added later to the stack will override conflicting variables and functions from scopes lower in the stack.</para><para>See <ref refid="classQgsExpressionContextUtils" kindref="compound">QgsExpressionContextUtils</ref> for helper methods for working with <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> objects.</para><para><simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="376" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="375" bodyend="746"/>
    <listofallmembers>
      <member refid="classQgsExpressionContext_1a5aaed2cbbb807fdecd5238f1273b1a4a" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>activeScopeForVariable</name></member>
      <member refid="classQgsExpressionContext_1a2271eb1e93755f4ea9721d3d3803e4e2" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>activeScopeForVariable</name></member>
      <member refid="classQgsExpressionContext_1a7f52d87dd7d7fa3148c7b46b22a4af2f" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>appendScope</name></member>
      <member refid="classQgsExpressionContext_1a98d9ba9b48cf165fca04cdfcc214debc" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>appendScopes</name></member>
      <member refid="classQgsExpressionContext_1aedee253501cfe351a8c105df46af9db9" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>cachedValue</name></member>
      <member refid="classQgsExpressionContext_1a195478aab248154e362251c410bde190" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>clearCachedValues</name></member>
      <member refid="classQgsExpressionContext_1a049e1539045a9dc2b62246bb4870b1e0" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>description</name></member>
      <member refid="classQgsExpressionContext_1ae28b690c36097a1cf051e2c7f858a88b" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>EXPR_CLUSTER_COLOR</name></member>
      <member refid="classQgsExpressionContext_1a0d2246beeb5f14f539fff912e820225f" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>EXPR_CLUSTER_SIZE</name></member>
      <member refid="classQgsExpressionContext_1a42b0704e9b7abc58a75967f83f8237e3" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>EXPR_FIELDS</name></member>
      <member refid="classQgsExpressionContext_1a0061740aa2c9bbc88a2a3e3a68f082a3" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>EXPR_GEOMETRY_PART_COUNT</name></member>
      <member refid="classQgsExpressionContext_1a5d0e58040803fded280a64fac881545e" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>EXPR_GEOMETRY_PART_NUM</name></member>
      <member refid="classQgsExpressionContext_1a0558aa150d6d9ad4ebc40be54f88b051" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>EXPR_GEOMETRY_POINT_COUNT</name></member>
      <member refid="classQgsExpressionContext_1a11cd85ed1e3276a53aea4d5d4cfc2899" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>EXPR_GEOMETRY_POINT_NUM</name></member>
      <member refid="classQgsExpressionContext_1adedbaf735924a5be1102251a47c0e0ad" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>EXPR_ORIGINAL_VALUE</name></member>
      <member refid="classQgsExpressionContext_1aa3093e2813b44988493bd644d7f226b5" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>EXPR_SYMBOL_ANGLE</name></member>
      <member refid="classQgsExpressionContext_1a7574f63fed04010e6bba4efb369865c5" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>EXPR_SYMBOL_COLOR</name></member>
      <member refid="classQgsExpressionContext_1a2b566d09b66e8ee79ebdfa8dc95e59d7" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>feature</name></member>
      <member refid="classQgsExpressionContext_1af94ae6fe63a30c389eb1de8ac5ee2014" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>fields</name></member>
      <member refid="classQgsExpressionContext_1a445ef1701fe18cb2943f0e18594453d0" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>filteredVariableNames</name></member>
      <member refid="classQgsExpressionContext_1aab398db52faa0d1d2ef41c9e38fa78ca" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>function</name></member>
      <member refid="classQgsExpressionContext_1a0f7ab3ccd0220972d6aa57994fe61305" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>functionNames</name></member>
      <member refid="classQgsExpressionContext_1ac465a5001e0389802ae9e86ef2152050" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>hasCachedValue</name></member>
      <member refid="classQgsExpressionContext_1af7d4310259bd17e7e9857e6bb261351f" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>hasFeature</name></member>
      <member refid="classQgsExpressionContext_1a01d17757b5282006feb3a6cc6b8e3c5f" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>hasFunction</name></member>
      <member refid="classQgsExpressionContext_1a8bbb345070dc112c10c187999ced4bec" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>hasVariable</name></member>
      <member refid="classQgsExpressionContext_1a14c12c94299611d9548dca7c46248062" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>indexOfScope</name></member>
      <member refid="classQgsExpressionContext_1a5ee05d7f516200f652742df0b292ced1" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>indexOfScope</name></member>
      <member refid="classQgsExpressionContext_1a28c216e86fda75f2b945fcaccd03a248" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>isHighlightedFunction</name></member>
      <member refid="classQgsExpressionContext_1a5a7a96f71dc630543e6373992fda4215" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>isHighlightedVariable</name></member>
      <member refid="classQgsExpressionContext_1aa3b1fb20c01c045ea8eeb0666d2d8e69" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>isReadOnly</name></member>
      <member refid="classQgsExpressionContext_1a7969d8cb48b2d3ca8207f4350d45b67a" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>lastScope</name></member>
      <member refid="classQgsExpressionContext_1a425ab28e1dbc93a091d8a43bf5dd3705" prot="private" virt="non-virtual"><scope>QgsExpressionContext</scope><name>mCachedValues</name></member>
      <member refid="classQgsExpressionContext_1a1b50f2059866f29f9e8e64edd7bcf98f" prot="private" virt="non-virtual"><scope>QgsExpressionContext</scope><name>mHighlightedFunctions</name></member>
      <member refid="classQgsExpressionContext_1a9be4b78df4e059d10518bc82b9dc1f73" prot="private" virt="non-virtual"><scope>QgsExpressionContext</scope><name>mHighlightedVariables</name></member>
      <member refid="classQgsExpressionContext_1aa4e8764ef0393eeaafaa82d043894c1d" prot="private" virt="non-virtual"><scope>QgsExpressionContext</scope><name>mStack</name></member>
      <member refid="classQgsExpressionContext_1adad2e33ba2d05f9248b2d48d1979daba" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>operator&lt;&lt;</name></member>
      <member refid="classQgsExpressionContext_1a385cabc7da06c7222938c35f6124a540" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>operator=</name></member>
      <member refid="classQgsExpressionContext_1acb2c2815551e730f24a0dd24034b0930" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>operator=</name></member>
      <member refid="classQgsExpressionContext_1a0573996d97031c58a4541a72710a88ec" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>popScope</name></member>
      <member refid="classQgsExpressionContext_1a3ed6b33dbaf8960bf0132ee40234e5c8" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>QgsExpressionContext</name></member>
      <member refid="classQgsExpressionContext_1aef64131d41b82edbaa1405f88b64ceb1" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>QgsExpressionContext</name></member>
      <member refid="classQgsExpressionContext_1acb9e6316da8318ae52f79c66db11614b" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>QgsExpressionContext</name></member>
      <member refid="classQgsExpressionContext_1ae978a7d9d4c727043ca1700f67a828f9" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>scope</name></member>
      <member refid="classQgsExpressionContext_1a979a5012ba60d53f49a14551ef9ff7e5" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>scopeCount</name></member>
      <member refid="classQgsExpressionContext_1a7ca055c86c46bd187e81125337bcd17a" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>scopes</name></member>
      <member refid="classQgsExpressionContext_1a150c133833cb77f7c0fab590d0f64cbb" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>setCachedValue</name></member>
      <member refid="classQgsExpressionContext_1a99a92e3956573acfc28f7199ba13948d" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>setFeature</name></member>
      <member refid="classQgsExpressionContext_1aba1a8ba2e07af5f1c67deb2e2f419a7f" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>setFields</name></member>
      <member refid="classQgsExpressionContext_1a19e07045196e0c52f0afd9b7465c0013" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>setHighlightedFunctions</name></member>
      <member refid="classQgsExpressionContext_1a9df671f33a16ac63398a5051ce51b641" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>setHighlightedVariables</name></member>
      <member refid="classQgsExpressionContext_1a375097584a8f28a3b5bdba58efeb93c6" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>setOriginalValueVariable</name></member>
      <member refid="classQgsExpressionContext_1a8db004b232bcda2bedb2f792fcb3ea68" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>takeScopes</name></member>
      <member refid="classQgsExpressionContext_1ae805e766bee826d1345ac8e2b977eda1" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>variable</name></member>
      <member refid="classQgsExpressionContext_1ae471f014da87c2d93d32ffa980663b1f" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>variableNames</name></member>
      <member refid="classQgsExpressionContext_1abd76c81a6755f8eedf7f522aae90293d" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>variablesToMap</name></member>
      <member refid="classQgsExpressionContext_1ad4410549290bbce6cf62e8415f96ec6c" prot="public" virt="non-virtual"><scope>QgsExpressionContext</scope><name>~QgsExpressionContext</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
