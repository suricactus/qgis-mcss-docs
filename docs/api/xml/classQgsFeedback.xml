<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsFeedback" kind="class" language="C++" prot="public">
    <compoundname>QgsFeedback</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="classQgsProcessingFeedback" prot="public" virt="non-virtual">QgsProcessingFeedback</derivedcompoundref>
    <derivedcompoundref refid="classQgsRasterBlockFeedback" prot="public" virt="non-virtual">QgsRasterBlockFeedback</derivedcompoundref>
    <derivedcompoundref refid="classQgsVectorLayerRendererInterruptionChecker" prot="public" virt="non-virtual">QgsVectorLayerRendererInterruptionChecker</derivedcompoundref>
    <includes refid="qgsfeedback_8h" local="no">qgsfeedback.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsFeedback_1a2caf331f4c0530a9b13c0233d413435d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsFeedback::mCanceled</definition>
        <argsstring></argsstring>
        <name>mCanceled</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether the operation has been canceled already. False by default. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" line="109" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeedback_1adf034f22967b822bda79916f2b459feb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsFeedback::mProgress</definition>
        <argsstring></argsstring>
        <name>mProgress</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsFeedback_1a48d9aaa513ce947801888c305ed9193f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsFeedback::QgsFeedback</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>QgsFeedback</name>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Construct a feedback object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" line="49" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeedback_1a166e5fb87ddb57e86de791b14b6a6ce4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFeedback::isCanceled</definition>
        <argsstring>() const</argsstring>
        <name>isCanceled</name>
        <briefdescription>
<para>Tells whether the operation has been canceled already. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" line="54" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeedback_1ac89a451cb0f2a6eaf7a005bc6641c626" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsFeedback::progress</definition>
        <argsstring>() const</argsstring>
        <name>progress</name>
        <briefdescription>
<para>Returns the current progress reported by the feedback object. </para>        </briefdescription>
        <detaileddescription>
<para>Depending on how the feedback object is used progress reporting may not be supported. The returned value is in percentage and ranges from 0-100. <simplesect kind="see"><para><ref refid="classQgsFeedback_1abfb13daa74f37584e57a351a94969c09" kindref="member">setProgress()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeedback_1a2fbb514fad78e9036671353bcbb49e9e" kindref="member">progressChanged()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" line="80" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeedback_1abfb13daa74f37584e57a351a94969c09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsFeedback::setProgress</definition>
        <argsstring>(double progress)</argsstring>
        <name>setProgress</name>
        <param>
          <type>double</type>
          <declname>progress</declname>
        </param>
        <briefdescription>
<para>Sets the current progress for the feedback object. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>progress</emphasis> argument is in percentage and valid values range from 0-100. <simplesect kind="see"><para><ref refid="classQgsFeedback_1ac89a451cb0f2a6eaf7a005bc6641c626" kindref="member">progress()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeedback_1a2fbb514fad78e9036671353bcbb49e9e" kindref="member">progressChanged()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" line="63" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" bodystart="63" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="classQgsFeedback_1a986460374cab1cbffb3bcb2a5590aa1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsFeedback::cancel</definition>
        <argsstring>()</argsstring>
        <name>cancel</name>
        <briefdescription>
<para>Tells the internal routines that the current operation should be canceled. This should be run by the main thread. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" line="85" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" bodystart="85" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classQgsFeedback_1a432483af8ef1ed21c1acfdd23f32b5c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsFeedback::canceled</definition>
        <argsstring>()</argsstring>
        <name>canceled</name>
        <briefdescription>
<para>Internal routines can connect to this signal if they use event loop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsFeedback_1a2fbb514fad78e9036671353bcbb49e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsFeedback::progressChanged</definition>
        <argsstring>(double progress)</argsstring>
        <name>progressChanged</name>
        <param>
          <type>double</type>
          <declname>progress</declname>
        </param>
        <briefdescription>
<para>Emitted when the feedback object reports a progress change. </para>        </briefdescription>
        <detaileddescription>
<para>Depending on how the feedback object is used progress reporting may not be supported. The <emphasis>progress</emphasis> argument is in percentage and ranges from 0-100. <simplesect kind="see"><para><ref refid="classQgsFeedback_1abfb13daa74f37584e57a351a94969c09" kindref="member">setProgress()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFeedback_1ac89a451cb0f2a6eaf7a005bc6641c626" kindref="member">progress()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" line="105" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for feedback objects to be used for cancelation of something running in a worker thread. </para>    </briefdescription>
    <detaileddescription>
<para>The class may be used as is or it may be subclassed for extended functionality for a particular operation (e.g. report progress or pass some data for preview).</para><para>When <ref refid="classQgsFeedback_1a986460374cab1cbffb3bcb2a5590aa1f" kindref="member">cancel()</ref> is called, the internal code has two options to check for cancelation state:<itemizedlist>
<listitem><para>if the worker thread uses an event loop (e.g. for network communication), the code can make a queued connection to <ref refid="classQgsFeedback_1a432483af8ef1ed21c1acfdd23f32b5c0" kindref="member">canceled()</ref> signal and handle the cancelation in its slot.</para></listitem><listitem><para>if the worker thread does not use an event loop, it can poll <ref refid="classQgsFeedback_1a166e5fb87ddb57e86de791b14b6a6ce4" kindref="member">isCanceled()</ref> method regularly to see if the operation should be canceled.</para></listitem></itemizedlist>
</para><para>The class is meant to be created and destroyed in the main thread.</para><para>For map rendering, the object may be created in constructor of a <ref refid="classQgsMapLayerRenderer" kindref="compound">QgsMapLayerRenderer</ref> subclass and available with <ref refid="classQgsMapLayerRenderer_1a6a67de71d77bb71bde407d80c9b6b787" kindref="member">QgsMapLayerRenderer::feedback()</ref> method. When a map rendering job gets canceled, the <ref refid="classQgsFeedback_1a986460374cab1cbffb3bcb2a5590aa1f" kindref="member">cancel()</ref> method is called on the feedback object of all layers.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3092">
        <label>QgsVectorLayerRendererInterruptionChecker</label>
        <link refid="classQgsVectorLayerRendererInterruptionChecker"/>
        <childnode refid="3087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3091">
        <label>QgsRasterBlockFeedback</label>
        <link refid="classQgsRasterBlockFeedback"/>
        <childnode refid="3087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3088">
        <label>QObject</label>
      </node>
      <node id="3087">
        <label>QgsFeedback</label>
        <link refid="classQgsFeedback"/>
        <childnode refid="3088" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3090">
        <label>QgsProcessingMultiStepFeedback</label>
        <link refid="classQgsProcessingMultiStepFeedback"/>
        <childnode refid="3089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3089">
        <label>QgsProcessingFeedback</label>
        <link refid="classQgsProcessingFeedback"/>
        <childnode refid="3087" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3094">
        <label>QObject</label>
      </node>
      <node id="3093">
        <label>QgsFeedback</label>
        <link refid="classQgsFeedback"/>
        <childnode refid="3094" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" line="45" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeedback.h" bodystart="44" bodyend="112"/>
    <listofallmembers>
      <member refid="classQgsFeedback_1a986460374cab1cbffb3bcb2a5590aa1f" prot="public" virt="non-virtual"><scope>QgsFeedback</scope><name>cancel</name></member>
      <member refid="classQgsFeedback_1a432483af8ef1ed21c1acfdd23f32b5c0" prot="public" virt="non-virtual"><scope>QgsFeedback</scope><name>canceled</name></member>
      <member refid="classQgsFeedback_1a166e5fb87ddb57e86de791b14b6a6ce4" prot="public" virt="non-virtual"><scope>QgsFeedback</scope><name>isCanceled</name></member>
      <member refid="classQgsFeedback_1a2caf331f4c0530a9b13c0233d413435d" prot="private" virt="non-virtual"><scope>QgsFeedback</scope><name>mCanceled</name></member>
      <member refid="classQgsFeedback_1adf034f22967b822bda79916f2b459feb" prot="private" virt="non-virtual"><scope>QgsFeedback</scope><name>mProgress</name></member>
      <member refid="classQgsFeedback_1ac89a451cb0f2a6eaf7a005bc6641c626" prot="public" virt="non-virtual"><scope>QgsFeedback</scope><name>progress</name></member>
      <member refid="classQgsFeedback_1a2fbb514fad78e9036671353bcbb49e9e" prot="public" virt="non-virtual"><scope>QgsFeedback</scope><name>progressChanged</name></member>
      <member refid="classQgsFeedback_1a48d9aaa513ce947801888c305ed9193f" prot="public" virt="non-virtual"><scope>QgsFeedback</scope><name>QgsFeedback</name></member>
      <member refid="classQgsFeedback_1abfb13daa74f37584e57a351a94969c09" prot="public" virt="non-virtual"><scope>QgsFeedback</scope><name>setProgress</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
