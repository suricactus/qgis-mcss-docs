<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsPropertyCollection" kind="class" language="C++" prot="public">
    <compoundname>QgsPropertyCollection</compoundname>
    <basecompoundref refid="classQgsAbstractPropertyCollection" prot="public" virt="non-virtual">QgsAbstractPropertyCollection</basecompoundref>
    <includes refid="qgspropertycollection_8h" local="no">qgspropertycollection.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsPropertyCollection_1a8a70d6091e55bb002fc7b8336e0de062" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int QgsPropertyCollection::mCount</definition>
        <argsstring></argsstring>
        <name>mCount</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="352" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPropertyCollection_1a31d189ae5f5cb2c1b1771cc83f17e75c" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool QgsPropertyCollection::mDirty</definition>
        <argsstring></argsstring>
        <name>mDirty</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="349" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPropertyCollection_1a004a1151326822a786bcc78ef6f48d9b" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool QgsPropertyCollection::mHasActiveProperties</definition>
        <argsstring></argsstring>
        <name>mHasActiveProperties</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="350" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPropertyCollection_1a1baabea2b92d56b3f00a504b6497cbe9" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool QgsPropertyCollection::mHasDynamicProperties</definition>
        <argsstring></argsstring>
        <name>mHasDynamicProperties</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="351" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPropertyCollection_1a28d0f38ccb0f50ec985c25f30bc94704" prot="private" static="no" mutable="no">
        <type>QHash&lt; int, <ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> &gt;</type>
        <definition>QHash&lt;int, QgsProperty&gt; QgsPropertyCollection::mProperties</definition>
        <argsstring></argsstring>
        <name>mProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="347" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsPropertyCollection_1af9595eda379a74d6ee26e70b87d8178c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPropertyCollection::QgsPropertyCollection</definition>
        <argsstring>(const QString &amp;name=QString())</argsstring>
        <name>QgsPropertyCollection</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>collection name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="288" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a5837d88d933aa8e3fbcfab42d0aebf89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPropertyCollection::QgsPropertyCollection</definition>
        <argsstring>(const QgsPropertyCollection &amp;other)</argsstring>
        <name>QgsPropertyCollection</name>
        <param>
          <type>const <ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="293" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="112" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1ad68fa5fa4842292d98b37d5c3f6060cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPropertyCollection::clear</definition>
        <argsstring>() override</argsstring>
        <name>clear</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a84cf4043db5b88bc0008d7c19c194639">clear</reimplements>
        <briefdescription>
<para>Removes all properties from the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="303" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="156" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1aacbbbfab7ca0b7db9deadf283223da10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsPropertyCollection::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <briefdescription>
<para>Returns the number of properties contained within the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="300" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="135" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1af41839c81a3aae1113a5a3c160be9a2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollection::hasActiveProperties</definition>
        <argsstring>() const override</argsstring>
        <name>hasActiveProperties</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1aac16f8363300a66598266fdc550711d9">hasActiveProperties</reimplements>
        <briefdescription>
<para>Returns true if the collection has any active properties, or false if all properties within the collection are deactivated. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPropertyCollection_1a848ed12e50f7743adc87be8e51d7cf28" kindref="member">hasDynamicProperties()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="320" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="276" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a848ed12e50f7743adc87be8e51d7cf28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollection::hasDynamicProperties</definition>
        <argsstring>() const override</argsstring>
        <name>hasDynamicProperties</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1ad63932a119c9161052949f80e4aa9b72">hasDynamicProperties</reimplements>
        <briefdescription>
<para>Returns true if the collection has any active, non-static properties, or false if either all non-static properties within the collection are deactivated or if the collection only contains static properties. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPropertyCollection_1af41839c81a3aae1113a5a3c160be9a2c" kindref="member">hasActiveProperties()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="321" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="284" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a0ea22aa8a2ce1e18a36c803f35c05755" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollection::hasProperty</definition>
        <argsstring>(int key) const override</argsstring>
        <name>hasProperty</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a2dd48b0c0fc917034fbe85cfb42cb8f9">hasProperty</reimplements>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns true if the collection contains a property with the specified key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsPropertyCollection_1a179bafc5f2636dde1fd4f6058727c903" kindref="member">property()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="304" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="181" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1af187605ecb23d984e40cc7fe06563bd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollection::isActive</definition>
        <argsstring>(int key) const override</argsstring>
        <name>isActive</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a39c5569f5ed2905f4ae9e62b1cd5a97c">isActive</reimplements>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns true if the collection contains an active property with the specified key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to test. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="319" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="243" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a64d425f32a0d637b2e7970cde274bb6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollection::loadVariant</definition>
        <argsstring>(const QVariant &amp;configuration, const QgsPropertiesDefinition &amp;definitions) override</argsstring>
        <name>loadVariant</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1aa147e983f4c75fd920bd42d2828603e9">loadVariant</reimplements>
        <param>
          <type>const QVariant &amp;</type>
          <declname>configuration</declname>
        </param>
        <param>
          <type>const <ref refid="qgspropertycollection_8h_1a55b05677f78795114fa12c8fe7356db6" kindref="member">QgsPropertiesDefinition</ref> &amp;</type>
          <declname>definitions</declname>
        </param>
        <briefdescription>
<para>Loads this property collection from a QVariantMap, wrapped in a QVariant. </para>        </briefdescription>
        <detaileddescription>
<para>You can use <ref refid="classQgsXmlUtils_1a78b54d8785573d3ad51566999d7a3884" kindref="member">QgsXmlUtils::readVariant</ref> to save it to an XML document.</para><para><simplesect kind="see"><para><ref refid="classQgsPropertyCollection_1a82afdcf57961ec77d8a9237e410c57b2" kindref="member">toVariant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="324" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="313" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a1b72fc653563c9a9068de831b005ff46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> &amp;</type>
        <definition>QgsPropertyCollection &amp; QgsPropertyCollection::operator=</definition>
        <argsstring>(const QgsPropertyCollection &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="295" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="123" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1af418882f603822c8373f54d5eb8af03b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyCollection::prepare</definition>
        <argsstring>(const QgsExpressionContext &amp;context=QgsExpressionContext()) const override</argsstring>
        <name>prepare</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a920cb81a5b99cfa6237c86402bb14b4c">prepare</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>()</defval>
        </param>
        <briefdescription>
<para>Prepares the collection against a specified expression context. </para>        </briefdescription>
        <detaileddescription>
<para>Calling prepare before evaluating the collection&apos;s properties multiple times allows precalculation of expensive setup tasks such as parsing expressions. Returns true if preparation was successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="317" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="215" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a179bafc5f2636dde1fd4f6058727c903" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsProperty" kindref="compound">QgsProperty</ref></type>
        <definition>QgsProperty QgsPropertyCollection::property</definition>
        <argsstring>(int key) const override</argsstring>
        <name>property</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a50d7627921b3cdc734708ff471ba46b2">property</reimplements>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns a matching property from the collection, if one exists. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching property, or null if no matching, active property found. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPropertyCollection_1a0ea22aa8a2ce1e18a36c803f35c05755" kindref="member">hasProperty()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="305" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="189" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a39fe3d3e8edd6462b26e7cd8eb1f47b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> &amp;</type>
        <definition>QgsProperty &amp; QgsPropertyCollection::property</definition>
        <argsstring>(int key)</argsstring>
        <name>property</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns a reference to a matching property from the collection, if one exists. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching property, or null if no matching, active property found. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPropertyCollection_1a0ea22aa8a2ce1e18a36c803f35c05755" kindref="member">hasProperty()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="314" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1aec6922d45431a7c5536f3152a27d2490" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; int &gt;</type>
        <definition>QSet&lt; int &gt; QgsPropertyCollection::propertyKeys</definition>
        <argsstring>() const override</argsstring>
        <name>propertyKeys</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1aabba89a7b870a6dfd690188d6853f2ac">propertyKeys</reimplements>
        <briefdescription>
<para>Returns a list of property keys contained within the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="302" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="144" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1ae9274bd16e6793ba3a1bd056133631a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsPropertyCollection::referencedFields</definition>
        <argsstring>(const QgsExpressionContext &amp;context=QgsExpressionContext()) const override</argsstring>
        <name>referencedFields</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a4627b3aa0a221b112e0dd8c735a63f5e">referencedFields</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>()</defval>
        </param>
        <briefdescription>
<para>Returns the set of any fields referenced by the active properties from the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>expression context the properties will be evaluated against. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="318" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="229" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a6197a3265529fc2093594933fcbfbd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPropertyCollection::setProperty</definition>
        <argsstring>(int key, const QgsProperty &amp;property)</argsstring>
        <name>setProperty</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Adds a property to the collection and takes ownership of it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property. Any existing property with the same key will be removed and replaced by this property. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>property to add. Ownership is transferred to the collection. Setting an invalid property will remove the property from the collection. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="334" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="165" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a6ff9fad22458c53615588581723111dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPropertyCollection::setProperty</definition>
        <argsstring>(int key, const QVariant &amp;value)</argsstring>
        <name>setProperty</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convenience method, creates a QgsStaticProperty and stores it within the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property. Any existing property with the same key will be deleted and replaced by this property. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>static value for property </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="343" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a82afdcf57961ec77d8a9237e410c57b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsPropertyCollection::toVariant</definition>
        <argsstring>(const QgsPropertiesDefinition &amp;definitions) const override</argsstring>
        <name>toVariant</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1aeb3800ad6eb6f4bb842831b14c7f02fa">toVariant</reimplements>
        <param>
          <type>const <ref refid="qgspropertycollection_8h_1a55b05677f78795114fa12c8fe7356db6" kindref="member">QgsPropertiesDefinition</ref> &amp;</type>
          <declname>definitions</declname>
        </param>
        <briefdescription>
<para>Saves this property collection to a QVariantMap, wrapped in a QVariant. </para>        </briefdescription>
        <detaileddescription>
<para>You can use <ref refid="classQgsXmlUtils_1a4192d177c2475a2825cc1ba9972d97b9" kindref="member">QgsXmlUtils::writeVariant</ref> to save it to an XML document.</para><para><simplesect kind="see"><para><ref refid="classQgsPropertyCollection_1a64d425f32a0d637b2e7970cde274bb6d" kindref="member">loadVariant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="323" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="292" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyCollection_1a279a2483752abbe19740e7143f294f89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsPropertyCollection::value</definition>
        <argsstring>(int key, const QgsExpressionContext &amp;context, const QVariant &amp;defaultValue=QVariant()) const override</argsstring>
        <name>value</name>
        <reimplements refid="classQgsAbstractPropertyCollection_1a019335a5ad374d375c5c6d40dce06c94">value</reimplements>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>defaultValue</declname>
          <defval>QVariant()</defval>
        </param>
        <briefdescription>
<para>Returns the calculated value of the property with the specified key from within the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>expression context to evaluate property against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>default value to return if no matching, active property found or if the property value cannot be calculated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated property value, or default value if property could not be evaluated </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1aceb66fd899863e2f94ddea8685f47945" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a26635d5d39d88cad06a644656c90fce5" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a8f7248ffb2b0645ec589f5a3d7d7ea89" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a4fe8018df9c685a0ceb400f990eb29b1" kindref="member">valueAsInt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a57efefb4c0dad49de9854fc7476955b2" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="316" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="203" bodyend="213"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsPropertyCollection_1a817d3df41315cb81b490e21a5ae27771" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPropertyCollection::rescan</definition>
        <argsstring>() const</argsstring>
        <name>rescan</name>
        <briefdescription>
<para>Scans through properties and updates cached values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="355" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="251" bodyend="274"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A grouped map of multiple <ref refid="classQgsProperty" kindref="compound">QgsProperty</ref> objects, each referenced by a integer key value. </para>    </briefdescription>
    <detaileddescription>
<para>Properties within a collection are referenced by an integer key. This is done to avoid the cost of string creation and comparisons which would be required by a string key. The intended use case is that a context specific enum is cast to int and used for the key value. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7314">
        <label>QgsAbstractPropertyCollection</label>
        <link refid="classQgsAbstractPropertyCollection"/>
      </node>
      <node id="7313">
        <label>QgsPropertyCollection</label>
        <link refid="classQgsPropertyCollection"/>
        <childnode refid="7314" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7316">
        <label>QgsAbstractPropertyCollection</label>
        <link refid="classQgsAbstractPropertyCollection"/>
      </node>
      <node id="7315">
        <label>QgsPropertyCollection</label>
        <link refid="classQgsPropertyCollection"/>
        <childnode refid="7316" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="281" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="280" bodyend="356"/>
    <listofallmembers>
      <member refid="classQgsPropertyCollection_1ad68fa5fa4842292d98b37d5c3f6060cc" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>clear</name></member>
      <member refid="classQgsPropertyCollection_1aacbbbfab7ca0b7db9deadf283223da10" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>count</name></member>
      <member refid="classQgsPropertyCollection_1af41839c81a3aae1113a5a3c160be9a2c" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>hasActiveProperties</name></member>
      <member refid="classQgsPropertyCollection_1a848ed12e50f7743adc87be8e51d7cf28" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>hasDynamicProperties</name></member>
      <member refid="classQgsPropertyCollection_1a0ea22aa8a2ce1e18a36c803f35c05755" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>hasProperty</name></member>
      <member refid="classQgsPropertyCollection_1af187605ecb23d984e40cc7fe06563bd7" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>isActive</name></member>
      <member refid="classQgsPropertyCollection_1a64d425f32a0d637b2e7970cde274bb6d" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>loadVariant</name></member>
      <member refid="classQgsPropertyCollection_1a8a70d6091e55bb002fc7b8336e0de062" prot="private" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>mCount</name></member>
      <member refid="classQgsPropertyCollection_1a31d189ae5f5cb2c1b1771cc83f17e75c" prot="private" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>mDirty</name></member>
      <member refid="classQgsPropertyCollection_1a004a1151326822a786bcc78ef6f48d9b" prot="private" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>mHasActiveProperties</name></member>
      <member refid="classQgsPropertyCollection_1a1baabea2b92d56b3f00a504b6497cbe9" prot="private" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>mHasDynamicProperties</name></member>
      <member refid="classQgsPropertyCollection_1a28d0f38ccb0f50ec985c25f30bc94704" prot="private" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>mProperties</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aae99df08fe5b8d30cd1309fb6fe6f47f" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>name</name></member>
      <member refid="classQgsPropertyCollection_1a1b72fc653563c9a9068de831b005ff46" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>operator=</name></member>
      <member refid="classQgsPropertyCollection_1af418882f603822c8373f54d5eb8af03b" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>prepare</name></member>
      <member refid="classQgsPropertyCollection_1a179bafc5f2636dde1fd4f6058727c903" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>property</name></member>
      <member refid="classQgsPropertyCollection_1a39fe3d3e8edd6462b26e7cd8eb1f47b1" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>property</name></member>
      <member refid="classQgsPropertyCollection_1aec6922d45431a7c5536f3152a27d2490" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>propertyKeys</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a9ac950d71aba3faca73df84d27d17445" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>QgsAbstractPropertyCollection</name></member>
      <member refid="classQgsPropertyCollection_1af9595eda379a74d6ee26e70b87d8178c" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>QgsPropertyCollection</name></member>
      <member refid="classQgsPropertyCollection_1a5837d88d933aa8e3fbcfab42d0aebf89" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>QgsPropertyCollection</name></member>
      <member refid="classQgsAbstractPropertyCollection_1ab3df675b6cb01963b82dd84f26417ae1" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>readXml</name></member>
      <member refid="classQgsPropertyCollection_1ae9274bd16e6793ba3a1bd056133631a3" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>referencedFields</name></member>
      <member refid="classQgsPropertyCollection_1a817d3df41315cb81b490e21a5ae27771" prot="private" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>rescan</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a1c01a41cc99b48d2a1150bfbf661cc56" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>setName</name></member>
      <member refid="classQgsPropertyCollection_1a6197a3265529fc2093594933fcbfbd4e" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>setProperty</name></member>
      <member refid="classQgsPropertyCollection_1a6ff9fad22458c53615588581723111dd" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>setProperty</name></member>
      <member refid="classQgsPropertyCollection_1a82afdcf57961ec77d8a9237e410c57b2" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>toVariant</name></member>
      <member refid="classQgsPropertyCollection_1a279a2483752abbe19740e7143f294f89" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>value</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a57efefb4c0dad49de9854fc7476955b2" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>valueAsBool</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a26635d5d39d88cad06a644656c90fce5" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>valueAsColor</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a8f7248ffb2b0645ec589f5a3d7d7ea89" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>valueAsDouble</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a4fe8018df9c685a0ceb400f990eb29b1" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>valueAsInt</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aceb66fd899863e2f94ddea8685f47945" prot="public" virt="non-virtual"><scope>QgsPropertyCollection</scope><name>valueAsString</name></member>
      <member refid="classQgsAbstractPropertyCollection_1ae5dc589ec5b5f4864e5f52e7114f9372" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>writeXml</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aeb2b834ea10c36bbf91eff05b4f5d167" prot="public" virt="virtual"><scope>QgsPropertyCollection</scope><name>~QgsAbstractPropertyCollection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
