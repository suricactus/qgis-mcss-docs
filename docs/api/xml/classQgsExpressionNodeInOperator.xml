<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsExpressionNodeInOperator" kind="class" language="C++" prot="public">
    <compoundname>QgsExpressionNodeInOperator</compoundname>
    <basecompoundref refid="classQgsExpressionNode" prot="public" virt="non-virtual">QgsExpressionNode</basecompoundref>
    <includes refid="qgsexpressionnodeimpl_8h" local="no">qgsexpressionnodeimpl.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsExpressionNodeInOperator_1a59e0c4cf74a85fa515c3a9e8209385e8" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsExpressionNode_1_1NodeList" kindref="compound">QgsExpressionNodeInOperator::NodeList</ref> *</type>
        <definition>QgsExpressionNodeInOperator::NodeList* QgsExpressionNodeInOperator::mList</definition>
        <argsstring></argsstring>
        <name>mList</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="308" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionNodeInOperator_1a6334118e46f0cb036c58f4a073ef9fa8" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
        <definition>QgsExpressionNode* QgsExpressionNodeInOperator::mNode</definition>
        <argsstring></argsstring>
        <name>mNode</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="307" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionNodeInOperator_1acc8cec20c42f7b6b74e7f823d94cfa8e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsExpressionNodeInOperator::mNotIn</definition>
        <argsstring></argsstring>
        <name>mNotIn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="309" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1a7cdb99505df3046d4717dee4bb967ee2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionNodeInOperator::QgsExpressionNodeInOperator</definition>
        <argsstring>(QgsExpressionNode *node, QgsExpressionNode::NodeList *list, bool notin=false)</argsstring>
        <name>QgsExpressionNodeInOperator</name>
        <param>
          <type><ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpressionNode_1_1NodeList" kindref="compound">QgsExpressionNode::NodeList</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>notin</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This node tests if the result of <emphasis>node</emphasis> is in the result of <emphasis>list</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Optionally it can be inverted with <emphasis>notin</emphasis> which by default is false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="271" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="271" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1a88165a7f5223793a5574023fcac249ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionNodeInOperator::~QgsExpressionNodeInOperator</definition>
        <argsstring>() override</argsstring>
        <name>~QgsExpressionNodeInOperator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="276" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="819" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1af063e687421ebcd4e1a2d37b194a25c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
        <definition>QgsExpressionNode * QgsExpressionNodeInOperator::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classQgsExpressionNode_1aef7cfdb7ec3109244fc357e15d0dc75b">clone</reimplements>
        <briefdescription>
<para>Generate a clone of this node. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership is transferred to the caller.</para><para><simplesect kind="return"><para>a deep copy of this node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="303" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="846" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1ab0ddfe0a3c9bc117515b4f13bf1b3e64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsExpressionNodeInOperator::dump</definition>
        <argsstring>() const override</argsstring>
        <name>dump</name>
        <reimplements refid="classQgsExpressionNode_1a0c72a75b7a531593d71594bfebf5f932">dump</reimplements>
        <briefdescription>
<para>Dump this node into a serialized (part) of an expression. </para>        </briefdescription>
        <detaileddescription>
<para>The returned expression does not necessarily literally match the original expression, it&apos;s just guaranteed to behave the same way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="296" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="841" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1a9c3287cfdb67a15370cba208d6232fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsExpressionNodeInOperator::evalNode</definition>
        <argsstring>(QgsExpression *parent, const QgsExpressionContext *context) override</argsstring>
        <name>evalNode</name>
        <reimplements refid="classQgsExpressionNode_1ab20c45f2f72c5fd5c8489449c00fdcc7">evalNode</reimplements>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Abstract virtual eval method Errors are reported to the parent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="295" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="768" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1afd4a9ac93530252cca25b587efe5257b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionNodeInOperator::isNotIn</definition>
        <argsstring>() const</argsstring>
        <name>isNotIn</name>
        <briefdescription>
<para>Returns true if this node is a &quot;NOT IN&quot; operator, or false if the node is a normal &quot;IN&quot; operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="286" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1aa9fc21326478565da3815f28d2342ec3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionNodeInOperator::isStatic</definition>
        <argsstring>(QgsExpression *parent, const QgsExpressionContext *context) const override</argsstring>
        <name>isStatic</name>
        <reimplements refid="classQgsExpressionNode_1a3033cb76fe3df0170c5852c7ea024e2b">isStatic</reimplements>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns true if this node can be evaluated for a static value. </para>        </briefdescription>
        <detaileddescription>
<para>This is used during the <ref refid="classQgsExpressionNode_1a3b931e8f7aab4e96979f9f959d80a5d7" kindref="member">prepare()</ref> step and in case it returns true, the value of this node will already be evaluated and the result cached (and therefore not re-evaluated in subsequent calls to <ref refid="classQgsExpressionNode_1a1b79f6a2f67f4a1dcf7ce16bcaab72b9" kindref="member">eval()</ref>). In case this returns true, <ref refid="classQgsExpressionNodeInOperator_1a9c2c0c6796018b274b3fa050068b2b1b" kindref="member">prepareNode()</ref> will never be called.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="304" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="853" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1a790e6b431a12790bbb1e8a6e8be6a006" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsExpressionNode_1_1NodeList" kindref="compound">QgsExpressionNode::NodeList</ref> *</type>
        <definition>QgsExpressionNode::NodeList* QgsExpressionNodeInOperator::list</definition>
        <argsstring>() const</argsstring>
        <name>list</name>
        <briefdescription>
<para>Returns the list of nodes to search for matching values within. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="291" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1a2ba425f67fb4b92fd4c972370472cd70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionNodeInOperator::needsGeometry</definition>
        <argsstring>() const override</argsstring>
        <name>needsGeometry</name>
        <reimplements refid="classQgsExpressionNode_1ac7752e64a29acfe6b95a257b5941659c">needsGeometry</reimplements>
        <briefdescription>
<para>Abstract virtual method which returns if the geometry is required to evaluate this expression. </para>        </briefdescription>
        <detaileddescription>
<para>This needs to call <computeroutput><ref refid="classQgsExpressionNodeInOperator_1a2ba425f67fb4b92fd4c972370472cd70" kindref="member">needsGeometry()</ref></computeroutput> recursively on any child nodes.</para><para><simplesect kind="return"><para>true if a geometry is required to evaluate this expression </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="302" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="38" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1a361d4083f031692cfbe2ab1265b04a1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
        <definition>QgsExpressionNode* QgsExpressionNodeInOperator::node</definition>
        <argsstring>() const</argsstring>
        <name>node</name>
        <briefdescription>
<para>Returns the expression node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="281" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1a3e910dca4a1471e185e06f522d2338c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QList&lt; const <ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> * &gt;</type>
        <definition>QList&lt; const QgsExpressionNode * &gt; QgsExpressionNodeInOperator::nodes</definition>
        <argsstring>() const override</argsstring>
        <name>nodes</name>
        <reimplements refid="classQgsExpressionNode_1a09383975a4b34f1520166f217b1f804e">nodes</reimplements>
        <briefdescription>
<para>Returns a list of all nodes which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="301" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1519" bodyend="1527"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1aefb1a6c610425b4a060a8cb38bda56b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3" kindref="member">QgsExpressionNode::NodeType</ref></type>
        <definition>QgsExpressionNode::NodeType QgsExpressionNodeInOperator::nodeType</definition>
        <argsstring>() const override</argsstring>
        <name>nodeType</name>
        <reimplements refid="classQgsExpressionNode_1a532476efe2a5dc3c189769de3c513b0b">nodeType</reimplements>
        <briefdescription>
<para>Gets the type of this node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of this node </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="293" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="825" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1a9c2c0c6796018b274b3fa050068b2b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsExpressionNodeInOperator::prepareNode</definition>
        <argsstring>(QgsExpression *parent, const QgsExpressionContext *context) override</argsstring>
        <name>prepareNode</name>
        <reimplements refid="classQgsExpressionNode_1a54fb196e3071b648bd72fb2eec2802a0">prepareNode</reimplements>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Abstract virtual preparation method Errors are reported to the parent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="294" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="830" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1a33f24c1a0af036298b8ec54c1a803d6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpressionNodeInOperator::referencedColumns</definition>
        <argsstring>() const override</argsstring>
        <name>referencedColumns</name>
        <reimplements refid="classQgsExpressionNode_1aa4c548e3c817d09afb1e5b69273fbf15">referencedColumns</reimplements>
        <briefdescription>
<para>Abstract virtual method which returns a list of columns required to evaluate this node. </para>        </briefdescription>
        <detaileddescription>
<para>When reimplementing this, you need to return any column that is required to evaluate this node and in addition recursively collect all the columns required to evaluate child nodes.</para><para><simplesect kind="return"><para>A list of columns required to evaluate this expression </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="298" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1492" bodyend="1499"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1ac9e4be3e44c4072af1fb3783d39b9b94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpressionNodeInOperator::referencedFunctions</definition>
        <argsstring>() const override</argsstring>
        <name>referencedFunctions</name>
        <reimplements refid="classQgsExpressionNode_1adea974442757d76c919e34c44bc431ec">referencedFunctions</reimplements>
        <briefdescription>
<para>Returns a set of all functions which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="300" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1510" bodyend="1517"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionNodeInOperator_1ac4a0edd3895362bcba47c98f1355180e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpressionNodeInOperator::referencedVariables</definition>
        <argsstring>() const override</argsstring>
        <name>referencedVariables</name>
        <reimplements refid="classQgsExpressionNode_1ae9bf72613241511dc67c62d5e47e8bd4">referencedVariables</reimplements>
        <briefdescription>
<para>Returns a set of all variables which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="299" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.cpp" bodystart="1501" bodyend="1508"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An expression node for value IN or NOT IN clauses. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2904">
        <label>QgsExpressionNode</label>
        <link refid="classQgsExpressionNode"/>
      </node>
      <node id="2903">
        <label>QgsExpressionNodeInOperator</label>
        <link refid="classQgsExpressionNodeInOperator"/>
        <childnode refid="2904" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2906">
        <label>QgsExpressionNode</label>
        <link refid="classQgsExpressionNode"/>
      </node>
      <node id="2905">
        <label>QgsExpressionNodeInOperator</label>
        <link refid="classQgsExpressionNodeInOperator"/>
        <childnode refid="2906" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" line="265" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionnodeimpl.h" bodystart="264" bodyend="310"/>
    <listofallmembers>
      <member refid="classQgsExpressionNodeInOperator_1af063e687421ebcd4e1a2d37b194a25c1" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>clone</name></member>
      <member refid="classQgsExpressionNode_1acfa09f97a4345faf4dbe781982dfd025" prot="protected" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>cloneTo</name></member>
      <member refid="classQgsExpressionNodeInOperator_1ab0ddfe0a3c9bc117515b4f13bf1b3e64" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>dump</name></member>
      <member refid="classQgsExpressionNode_1a1b79f6a2f67f4a1dcf7ce16bcaab72b9" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>eval</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a9c3287cfdb67a15370cba208d6232fed" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>evalNode</name></member>
      <member refid="classQgsExpressionNodeInOperator_1afd4a9ac93530252cca25b587efe5257b" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>isNotIn</name></member>
      <member refid="classQgsExpressionNodeInOperator_1aa9fc21326478565da3815f28d2342ec3" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>isStatic</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a790e6b431a12790bbb1e8a6e8be6a006" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>list</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a59e0c4cf74a85fa515c3a9e8209385e8" prot="private" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>mList</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a6334118e46f0cb036c58f4a073ef9fa8" prot="private" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>mNode</name></member>
      <member refid="classQgsExpressionNodeInOperator_1acc8cec20c42f7b6b74e7f823d94cfa8e" prot="private" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>mNotIn</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a2ba425f67fb4b92fd4c972370472cd70" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>needsGeometry</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a361d4083f031692cfbe2ab1265b04a1c" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>node</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a3e910dca4a1471e185e06f522d2338c4" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>nodes</name></member>
      <member refid="classQgsExpressionNodeInOperator_1aefb1a6c610425b4a060a8cb38bda56b3" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>nodeType</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>NodeType</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3aeacda25c3654ea68ef25f2ba10bb2725" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>ntBinaryOperator</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3ab2fd59a8c005277d0878de1ddb3a62b6" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>ntColumnRef</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3a7588318074e2a4470a29a73bd5e49277" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>ntCondition</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3a70130329d2d32daf35a359e3e869cb9b" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>ntFunction</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3aec300d86abb3213d2ca8cdbc678f8f88" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>ntIndexOperator</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3aaa86a394a0c5c995e853bb8c210c3c5f" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>ntInOperator</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3ac96e6246304179f9d468d8ec42f650c1" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>ntLiteral</name></member>
      <member refid="classQgsExpressionNode_1aba22dc9a84984cd3436d3b563641f1d3a73b2ff34f88301e39001e90cfbaa0bdb" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>ntUnaryOperator</name></member>
      <member refid="classQgsExpressionNode_1adf5ba97236ccdf1c095103eec9f86d26" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>parserFirstColumn</name></member>
      <member refid="classQgsExpressionNode_1ac54f72bcdc4736f54a3640b7cd253cae" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>parserFirstLine</name></member>
      <member refid="classQgsExpressionNode_1acfdf4ea6895801be88b56a945243c8b8" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>parserLastColumn</name></member>
      <member refid="classQgsExpressionNode_1ac7062639325076c5118cbc8f0e124580" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>parserLastLine</name></member>
      <member refid="classQgsExpressionNode_1a3b931e8f7aab4e96979f9f959d80a5d7" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>prepare</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a9c2c0c6796018b274b3fa050068b2b1b" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>prepareNode</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a7cdb99505df3046d4717dee4bb967ee2" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>QgsExpressionNodeInOperator</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a33f24c1a0af036298b8ec54c1a803d6e" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>referencedColumns</name></member>
      <member refid="classQgsExpressionNodeInOperator_1ac9e4be3e44c4072af1fb3783d39b9b94" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>referencedFunctions</name></member>
      <member refid="classQgsExpressionNodeInOperator_1ac4a0edd3895362bcba47c98f1355180e" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>referencedVariables</name></member>
      <member refid="classQgsExpressionNode_1a8f06aaa5e0846f17de3ec9ba157c1e77" prot="public" virt="virtual"><scope>QgsExpressionNodeInOperator</scope><name>~QgsExpressionNode</name></member>
      <member refid="classQgsExpressionNodeInOperator_1a88165a7f5223793a5574023fcac249ba" prot="public" virt="non-virtual"><scope>QgsExpressionNodeInOperator</scope><name>~QgsExpressionNodeInOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
