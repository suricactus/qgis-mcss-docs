<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsPanelWidget" kind="class" language="C++" prot="public">
    <compoundname>QgsPanelWidget</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QWidget</basecompoundref>
    <derivedcompoundref refid="classQgsColorBrewerColorRampWidget" prot="public" virt="non-virtual">QgsColorBrewerColorRampWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsCompoundColorWidget" prot="public" virt="non-virtual">QgsCompoundColorWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsDataDefinedSizeLegendWidget" prot="public" virt="non-virtual">QgsDataDefinedSizeLegendWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsEffectStackCompactWidget" prot="public" virt="non-virtual">QgsEffectStackCompactWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsEffectStackPropertiesWidget" prot="public" virt="non-virtual">QgsEffectStackPropertiesWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsLayerPropertiesWidget" prot="public" virt="non-virtual">QgsLayerPropertiesWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsLayoutItemBaseWidget" prot="public" virt="non-virtual">QgsLayoutItemBaseWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsLimitedRandomColorRampWidget" prot="public" virt="non-virtual">QgsLimitedRandomColorRampWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsMapLayerConfigWidget" prot="public" virt="non-virtual">QgsMapLayerConfigWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsMapUnitScaleWidget" prot="public" virt="non-virtual">QgsMapUnitScaleWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsPanelWidgetWrapper" prot="public" virt="non-virtual">QgsPanelWidgetWrapper</derivedcompoundref>
    <derivedcompoundref refid="classQgsPresetColorRampWidget" prot="public" virt="non-virtual">QgsPresetColorRampWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsPropertyAssistantWidget" prot="public" virt="non-virtual">QgsPropertyAssistantWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsRendererRulePropsWidget" prot="public" virt="non-virtual">QgsRendererRulePropsWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsRendererWidget" prot="public" virt="non-virtual">QgsRendererWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsSubstitutionListWidget" prot="public" virt="non-virtual">QgsSubstitutionListWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsSymbolLevelsWidget" prot="public" virt="non-virtual">QgsSymbolLevelsWidget</derivedcompoundref>
    <derivedcompoundref refid="classQgsSymbolSelectorWidget" prot="public" virt="non-virtual">QgsSymbolSelectorWidget</derivedcompoundref>
    <includes refid="qgspanelwidget_8h" local="no">qgspanelwidget.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsPanelWidget_1aa9fbf2347fb4d8928263f422bd005389" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsPanelWidget::mAutoDelete</definition>
        <argsstring></argsstring>
        <name>mAutoDelete</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="166" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPanelWidget_1ad9fa3edf3ffb0cf16e78d0283921af4d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsPanelWidget::mDockMode</definition>
        <argsstring></argsstring>
        <name>mDockMode</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="168" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPanelWidget_1a0f69d9728006fb2b53d039b644084953" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsPanelWidget::mPanelTitle</definition>
        <argsstring></argsstring>
        <name>mPanelTitle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="167" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsPanelWidget_1a74f12761729444c4831b2ddb1cc502bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPanelWidget::QgsPanelWidget</definition>
        <argsstring>(QWidget *parent=nullptr)</argsstring>
        <name>QgsPanelWidget</name>
        <param>
          <type>QWidget *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Base class for any widget that can be shown as a inline panel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent widget. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="36" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPanelWidget_1a76d9dedea6f70262d4fba9aa530d3347" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsPanelWidget::autoDelete</definition>
        <argsstring>()</argsstring>
        <name>autoDelete</name>
        <briefdescription>
<para>The the auto delete property on the widget. </para>        </briefdescription>
        <detaileddescription>
<para>True by default. When auto delete is enabled when a panel is removed from the stack it will be deleted. <simplesect kind="return"><para>The auto delete value for the widget. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="97" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPanelWidget_1a73e43b791edcbca78336311cf5daa219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::connectChildPanel</definition>
        <argsstring>(QgsPanelWidget *panel)</argsstring>
        <name>connectChildPanel</name>
        <param>
          <type><ref refid="classQgsPanelWidget" kindref="compound">QgsPanelWidget</ref> *</type>
          <declname>panel</declname>
        </param>
        <briefdescription>
<para>Connect the given sub panel widgets showPanel signals to this current panels main showPanel event to bubble up to the user. </para>        </briefdescription>
        <detaileddescription>
<para>Use this method if you have children widgets that need to show a panel to the user. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>panel</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel to connect. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.cpp" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPanelWidget_1a1d2a35bc6bb5ef7b98fadc55204c6e3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::connectChildPanels</definition>
        <argsstring>(const QList&lt; QgsPanelWidget *&gt; &amp;panels)</argsstring>
        <name>connectChildPanels</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsPanelWidget" kindref="compound">QgsPanelWidget</ref> *&gt; &amp;</type>
          <declname>panels</declname>
        </param>
        <briefdescription>
<para>Connect the given sub panel widgets showPanel signals to this current panels main showPanel event to bubble up to the user. </para>        </briefdescription>
        <detaileddescription>
<para>Use this method if you have children widgets that need to show a panel to the user. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>panels</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of panel widgets to connect. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="57" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.cpp" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPanelWidget_1af40ce6adf280c5829d3de1884d15e181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsPanelWidget::dockMode</definition>
        <argsstring>()</argsstring>
        <name>dockMode</name>
        <briefdescription>
<para>Returns the dock mode state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if in dock mode. If in dock mode the widget will emit the showPanel signal to handle panel opening If false it will open dialogs when openPanel is called. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="81" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPanelWidget_1a5e42d47702df0037245892aa2edd14fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsPanelWidget::panelTitle</definition>
        <argsstring>()</argsstring>
        <name>panelTitle</name>
        <briefdescription>
<para>The title of the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The title pf the panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="48" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPanelWidget_1a7f1bc1c49a8005eb13b188d8b3ae43b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::setAutoDelete</definition>
        <argsstring>(bool autoDelete)</argsstring>
        <name>setAutoDelete</name>
        <param>
          <type>bool</type>
          <declname>autoDelete</declname>
        </param>
        <briefdescription>
<para>The the auto delete property on the widget. </para>        </briefdescription>
        <detaileddescription>
<para>True by default. When auto delete is enabled when a panel is removed from the stack it will be deleted. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>autoDelete</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable or disable auto delete on the panel. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="89" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPanelWidget_1ae9ca52cb9df83742acb13cb50d46cea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::setDockMode</definition>
        <argsstring>(bool dockMode)</argsstring>
        <name>setDockMode</name>
        <reimplementedby refid="classQgsSingleSymbolRendererWidget_1ae8acf42a89716d7b1f99afe166f4cf78">setDockMode</reimplementedby>
        <reimplementedby refid="classQgsLayerPropertiesWidget_1a1655f6080e544875016da221afb22677">setDockMode</reimplementedby>
        <reimplementedby refid="classQgsPropertyAssistantWidget_1a3dc531761644f9717eb5eebfc62c8bba">setDockMode</reimplementedby>
        <reimplementedby refid="classQgsTextFormatPanelWidget_1a6ec5fc6921a08b13f3fa061c28494f99">setDockMode</reimplementedby>
        <param>
          <type>bool</type>
          <declname>dockMode</declname>
        </param>
        <briefdescription>
<para>Set the widget in dock mode which tells the widget to emit panel widgets and not open dialogs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dockMode</parametername>
</parameternamelist>
<parameterdescription>
<para>True to enable dock mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="73" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPanelWidget_1ae2964a7d82945344241000dcd1247c4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::setPanelTitle</definition>
        <argsstring>(const QString &amp;panelTitle)</argsstring>
        <name>setPanelTitle</name>
        <param>
          <type>const QString &amp;</type>
          <declname>panelTitle</declname>
        </param>
        <briefdescription>
<para>Set the title of the panel when shown in the interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>panelTitle</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel title. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="42" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsPanelWidget_1ac4455225777b8a1d0c2dd2ac4fdafaec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPanelWidget" kindref="compound">QgsPanelWidget</ref> *</type>
        <definition>QgsPanelWidget * QgsPanelWidget::findParentPanel</definition>
        <argsstring>(QWidget *widget)</argsstring>
        <name>findParentPanel</name>
        <param>
          <type>QWidget *</type>
          <declname>widget</declname>
        </param>
        <briefdescription>
<para>Traces through the parents of a widget to find if it is contained within a <ref refid="classQgsPanelWidget" kindref="compound">QgsPanelWidget</ref> widget. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>widget which may be contained within a panel widget </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>parent panel widget if found, otherwise nullptr </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="106" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.cpp" bodystart="48" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classQgsPanelWidget_1a5fe74b0b66726769b229b06df7058e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::panelAccepted</definition>
        <argsstring>(QgsPanelWidget *panel)</argsstring>
        <name>panelAccepted</name>
        <param>
          <type><ref refid="classQgsPanelWidget" kindref="compound">QgsPanelWidget</ref> *</type>
          <declname>panel</declname>
        </param>
        <briefdescription>
<para>Emitted when the panel is accepted by the user. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>panel</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel widget that was accepted. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This argument is normally raised with emit panelAccepted(this) so that callers can retrieve the widget easier in calling code. </para></simplesect>
<simplesect kind="note"><para>this is emitted only when this panel is accepted, and is not emitted for child panels. For example, if this panel opens a second stacked panel, then this panel will not emit panelAccepted when the second panel is accepted. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsPanelWidget_1a3fcc8120830e30256129f3dc9d106428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::showPanel</definition>
        <argsstring>(QgsPanelWidget *panel)</argsstring>
        <name>showPanel</name>
        <param>
          <type><ref refid="classQgsPanelWidget" kindref="compound">QgsPanelWidget</ref> *</type>
          <declname>panel</declname>
        </param>
        <briefdescription>
<para>Emit when you require a panel to be show in the interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>panel</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel widget to show. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If you are connected to this signal you should also connect given panels showPanel signal as they can be nested. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsPanelWidget_1a819e73578d551faa980c77d7bace8c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::widgetChanged</definition>
        <argsstring>()</argsstring>
        <name>widgetChanged</name>
        <briefdescription>
<para>Emitted when the widget state changes. </para>        </briefdescription>
        <detaileddescription>
<para>Connect to this to pull any changes off the widget when needed. As panels are non blocking &quot;dialogs&quot; you should listen to this signal to give the user feedback when something changes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="classQgsPanelWidget_1a83f4a0ab2d465ea31acd283d14b46b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::acceptPanel</definition>
        <argsstring>()</argsstring>
        <name>acceptPanel</name>
        <briefdescription>
<para>Accept the panel. </para>        </briefdescription>
        <detaileddescription>
<para>Causes panelAccepted to be emitted. Widgets are normally removed form the interface using the panel manager or the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="155" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="slot" id="classQgsPanelWidget_1a45437566f78c5754c5eab81f976ba045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::openPanel</definition>
        <argsstring>(QgsPanelWidget *panel)</argsstring>
        <name>openPanel</name>
        <param>
          <type><ref refid="classQgsPanelWidget" kindref="compound">QgsPanelWidget</ref> *</type>
          <declname>panel</declname>
        </param>
        <briefdescription>
<para>Open a panel or dialog depending on dock mode setting If dock mode is true this method will emit the showPanel signal for connected slots to handle the open event. </para>        </briefdescription>
        <detaileddescription>
<para>If dock mode is false this method will open a dialog and block the user.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>panel</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel widget to open. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="149" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.cpp" bodystart="68" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsPanelWidget_1ab0939465f722003e70937f6266e6eaae" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPanelWidget::keyPressEvent</definition>
        <argsstring>(QKeyEvent *event) override</argsstring>
        <name>keyPressEvent</name>
        <param>
          <type>QKeyEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Overridden key press event to handle the esc event on the widget. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The key event </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="163" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.cpp" bodystart="101" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for any widget that can be shown as a inline panel. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6416">
        <label>QgsEffectStackPropertiesWidget</label>
        <link refid="classQgsEffectStackPropertiesWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6441">
        <label>QgsSingleSymbolRendererWidget</label>
        <link refid="classQgsSingleSymbolRendererWidget"/>
        <childnode refid="6431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6421">
        <label>QgsMapLayerStyleManagerWidget</label>
        <link refid="classQgsMapLayerStyleManagerWidget"/>
        <childnode refid="6420" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6417">
        <label>QgsLayerPropertiesWidget</label>
        <link refid="classQgsLayerPropertiesWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6434">
        <label>QgsGraduatedSymbolRendererWidget</label>
        <link refid="classQgsGraduatedSymbolRendererWidget"/>
        <childnode refid="6431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6437">
        <label>QgsNullSymbolRendererWidget</label>
        <link refid="classQgsNullSymbolRendererWidget"/>
        <childnode refid="6431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6433">
        <label>QgsCategorizedSymbolRendererWidget</label>
        <link refid="classQgsCategorizedSymbolRendererWidget"/>
        <childnode refid="6431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6413">
        <label>QgsCompoundColorWidget</label>
        <link refid="classQgsCompoundColorWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6430">
        <label>QgsRendererRulePropsWidget</label>
        <link refid="classQgsRendererRulePropsWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6435">
        <label>QgsHeatmapRendererWidget</label>
        <link refid="classQgsHeatmapRendererWidget"/>
        <childnode refid="6431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6436">
        <label>QgsInvertedPolygonRendererWidget</label>
        <link refid="classQgsInvertedPolygonRendererWidget"/>
        <childnode refid="6431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6432">
        <label>Qgs25DRendererWidget</label>
        <link refid="classQgs25DRendererWidget"/>
        <childnode refid="6431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6438">
        <label>QgsPointClusterRendererWidget</label>
        <link refid="classQgsPointClusterRendererWidget"/>
        <childnode refid="6431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6429">
        <label>QgsPropertyAssistantWidget</label>
        <link refid="classQgsPropertyAssistantWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6427">
        <label>QgsTextFormatPanelWidget</label>
        <link refid="classQgsTextFormatPanelWidget"/>
        <childnode refid="6426" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6410">
        <label>QgsPanelWidget</label>
        <link refid="classQgsPanelWidget"/>
        <childnode refid="6411" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6439">
        <label>QgsPointDisplacementRendererWidget</label>
        <link refid="classQgsPointDisplacementRendererWidget"/>
        <childnode refid="6431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6442">
        <label>QgsSubstitutionListWidget</label>
        <link refid="classQgsSubstitutionListWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6426">
        <label>QgsPanelWidgetWrapper</label>
        <link refid="classQgsPanelWidgetWrapper"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6411">
        <label>QWidget</label>
      </node>
      <node id="6418">
        <label>QgsLayoutItemBaseWidget</label>
        <link refid="classQgsLayoutItemBaseWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6414">
        <label>QgsDataDefinedSizeLegendWidget</label>
        <link refid="classQgsDataDefinedSizeLegendWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6419">
        <label>QgsLimitedRandomColorRampWidget</label>
        <link refid="classQgsLimitedRandomColorRampWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6443">
        <label>QgsSymbolLevelsWidget</label>
        <link refid="classQgsSymbolLevelsWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6431">
        <label>QgsRendererWidget</label>
        <link refid="classQgsRendererWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6412">
        <label>QgsColorBrewerColorRampWidget</label>
        <link refid="classQgsColorBrewerColorRampWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6425">
        <label>QgsMapUnitScaleWidget</label>
        <link refid="classQgsMapUnitScaleWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6440">
        <label>QgsRuleBasedRendererWidget</label>
        <link refid="classQgsRuleBasedRendererWidget"/>
        <childnode refid="6431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6422">
        <label>QgsRasterHistogramWidget</label>
        <link refid="classQgsRasterHistogramWidget"/>
        <childnode refid="6420" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6415">
        <label>QgsEffectStackCompactWidget</label>
        <link refid="classQgsEffectStackCompactWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6420">
        <label>QgsMapLayerConfigWidget</label>
        <link refid="classQgsMapLayerConfigWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6424">
        <label>QgsRendererRasterPropertiesWidget</label>
        <link refid="classQgsRendererRasterPropertiesWidget"/>
        <childnode refid="6420" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6444">
        <label>QgsSymbolSelectorWidget</label>
        <link refid="classQgsSymbolSelectorWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6428">
        <label>QgsPresetColorRampWidget</label>
        <link refid="classQgsPresetColorRampWidget"/>
        <childnode refid="6410" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6423">
        <label>QgsRasterTransparencyWidget</label>
        <link refid="classQgsRasterTransparencyWidget"/>
        <childnode refid="6420" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6445">
        <label>QgsPanelWidget</label>
        <link refid="classQgsPanelWidget"/>
        <childnode refid="6446" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6446">
        <label>QWidget</label>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" line="28" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/gui/qgspanelwidget.h" bodystart="27" bodyend="170"/>
    <listofallmembers>
      <member refid="classQgsPanelWidget_1a83f4a0ab2d465ea31acd283d14b46b6b" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>acceptPanel</name></member>
      <member refid="classQgsPanelWidget_1a76d9dedea6f70262d4fba9aa530d3347" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>autoDelete</name></member>
      <member refid="classQgsPanelWidget_1a73e43b791edcbca78336311cf5daa219" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>connectChildPanel</name></member>
      <member refid="classQgsPanelWidget_1a1d2a35bc6bb5ef7b98fadc55204c6e3a" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>connectChildPanels</name></member>
      <member refid="classQgsPanelWidget_1af40ce6adf280c5829d3de1884d15e181" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>dockMode</name></member>
      <member refid="classQgsPanelWidget_1ac4455225777b8a1d0c2dd2ac4fdafaec" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>findParentPanel</name></member>
      <member refid="classQgsPanelWidget_1ab0939465f722003e70937f6266e6eaae" prot="protected" virt="non-virtual"><scope>QgsPanelWidget</scope><name>keyPressEvent</name></member>
      <member refid="classQgsPanelWidget_1aa9fbf2347fb4d8928263f422bd005389" prot="private" virt="non-virtual"><scope>QgsPanelWidget</scope><name>mAutoDelete</name></member>
      <member refid="classQgsPanelWidget_1ad9fa3edf3ffb0cf16e78d0283921af4d" prot="private" virt="non-virtual"><scope>QgsPanelWidget</scope><name>mDockMode</name></member>
      <member refid="classQgsPanelWidget_1a0f69d9728006fb2b53d039b644084953" prot="private" virt="non-virtual"><scope>QgsPanelWidget</scope><name>mPanelTitle</name></member>
      <member refid="classQgsPanelWidget_1a45437566f78c5754c5eab81f976ba045" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>openPanel</name></member>
      <member refid="classQgsPanelWidget_1a5fe74b0b66726769b229b06df7058e36" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>panelAccepted</name></member>
      <member refid="classQgsPanelWidget_1a5e42d47702df0037245892aa2edd14fc" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>panelTitle</name></member>
      <member refid="classQgsPanelWidget_1a74f12761729444c4831b2ddb1cc502bf" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>QgsPanelWidget</name></member>
      <member refid="classQgsPanelWidget_1a7f1bc1c49a8005eb13b188d8b3ae43b5" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>setAutoDelete</name></member>
      <member refid="classQgsPanelWidget_1ae9ca52cb9df83742acb13cb50d46cea1" prot="public" virt="virtual"><scope>QgsPanelWidget</scope><name>setDockMode</name></member>
      <member refid="classQgsPanelWidget_1ae2964a7d82945344241000dcd1247c4d" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>setPanelTitle</name></member>
      <member refid="classQgsPanelWidget_1a3fcc8120830e30256129f3dc9d106428" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>showPanel</name></member>
      <member refid="classQgsPanelWidget_1a819e73578d551faa980c77d7bace8c52" prot="public" virt="non-virtual"><scope>QgsPanelWidget</scope><name>widgetChanged</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
