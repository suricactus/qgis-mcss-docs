<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsNetworkContentFetcherRegistry" kind="class" language="C++" prot="public">
    <compoundname>QgsNetworkContentFetcherRegistry</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="qgsnetworkcontentfetcherregistry_8h" local="no">qgsnetworkcontentfetcherregistry.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsNetworkContentFetcherRegistry_1aeffb9013f28b156221021c1f6defb6c4" prot="public" static="no">
        <name>FetchingMode</name>
        <enumvalue id="classQgsNetworkContentFetcherRegistry_1aeffb9013f28b156221021c1f6defb6c4ac791bfaff6818eeb9842d767755520a6" prot="public">
          <name>DownloadLater</name>
          <briefdescription>
<para>Do not start immediately the download to properly connect the fetched signal. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsNetworkContentFetcherRegistry_1aeffb9013f28b156221021c1f6defb6c4acbd7bfcb1662ae9bb4fda093c73f542c" prot="public">
          <name>DownloadImmediately</name>
          <briefdescription>
<para>The download will start immediately, not need to run QgsFecthedContent::download() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum to determine when the download should start. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" line="132" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" bodystart="131" bodyend="135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsNetworkContentFetcherRegistry_1a64cfee4cfd269572f836ea53f21b7a9f" prot="private" static="no" mutable="no">
        <type>QMap&lt; QString, <ref refid="classQgsFetchedContent" kindref="compound">QgsFetchedContent</ref> * &gt;</type>
        <definition>QMap&lt;QString, QgsFetchedContent *&gt; QgsNetworkContentFetcherRegistry::mFileRegistry</definition>
        <argsstring></argsstring>
        <name>mFileRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" line="167" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsNetworkContentFetcherRegistry_1a7a64bec4420f80fa270a01137aa3cc17" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsNetworkContentFetcherRegistry::QgsNetworkContentFetcherRegistry</definition>
        <argsstring>()=default</argsstring>
        <name>QgsNetworkContentFetcherRegistry</name>
        <briefdescription>
<para>Create the registry for temporary downloaded files. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkContentFetcherRegistry_1a9c31ddcc38d828147cacd1b9f0f9c01c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsNetworkContentFetcherRegistry::~QgsNetworkContentFetcherRegistry</definition>
        <argsstring>() override</argsstring>
        <name>~QgsNetworkContentFetcherRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" line="141" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.cpp" bodystart="23" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkContentFetcherRegistry_1ab203bed8670dcd5ab0ae5cf4491620f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classQgsFetchedContent" kindref="compound">QgsFetchedContent</ref> *</type>
        <definition>const QgsFetchedContent * QgsNetworkContentFetcherRegistry::fetch</definition>
        <argsstring>(const QString &amp;url, FetchingMode fetchingMode=DownloadLater)</argsstring>
        <name>fetch</name>
        <param>
          <type>const QString &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type><ref refid="classQgsNetworkContentFetcherRegistry_1aeffb9013f28b156221021c1f6defb6c4" kindref="member">FetchingMode</ref></type>
          <declname>fetchingMode</declname>
          <defval><ref refid="classQgsNetworkContentFetcherRegistry_1aeffb9013f28b156221021c1f6defb6c4ac791bfaff6818eeb9842d767755520a6" kindref="member">DownloadLater</ref></defval>
        </param>
        <briefdescription>
<para>Initialize a download for the given URL. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>the URL to be fetched </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fetchingMode</parametername>
</parameternamelist>
<parameterdescription>
<para>defines if the download will start immediately or shall be manually triggered </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If the download starts immediately, it will not redownload any already fetched or currently fetching file. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" line="149" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.cpp" bodystart="33" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkContentFetcherRegistry_1a39474160ac8d0545499dbe0174d6acd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QFile *</type>
        <definition>QFile * QgsNetworkContentFetcherRegistry::localFile</definition>
        <argsstring>(const QString &amp;filePathOrUrl)</argsstring>
        <name>localFile</name>
        <param>
          <type>const QString &amp;</type>
          <declname>filePathOrUrl</declname>
        </param>
        <briefdescription>
<para>Returns a QFile from a local file or to a temporary file previously fetched by the registry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePathOrUrl</parametername>
</parameternamelist>
<parameterdescription>
<para>can either be a local file path or a remote content which has previously been fetched </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" line="157" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.cpp" bodystart="52" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classQgsNetworkContentFetcherRegistry_1a16328eb1b329ff630fa57a286b8cdbc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsNetworkContentFetcherRegistry::localPath</definition>
        <argsstring>(const QString &amp;filePathOrUrl)</argsstring>
        <name>localPath</name>
        <param>
          <type>const QString &amp;</type>
          <declname>filePathOrUrl</declname>
        </param>
        <briefdescription>
<para>Returns the path to a local file or to a temporary file previously fetched by the registry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePathOrUrl</parametername>
</parameternamelist>
<parameterdescription>
<para>can either be a local file path or a remote content which has previously been fetched </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" line="164" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.cpp" bodystart="83" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Registry for temporary fetched files. </para>    </briefdescription>
    <detaileddescription>
<para>This provides a simple way of downloading and accessing remote files during QGIS application running.</para><para><simplesect kind="see"><para><ref refid="classQgsFetchedContent" kindref="compound">QgsFetchedContent</ref></para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6054">
        <label>QObject</label>
      </node>
      <node id="6053">
        <label>QgsNetworkContentFetcherRegistry</label>
        <link refid="classQgsNetworkContentFetcherRegistry"/>
        <childnode refid="6054" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6056">
        <label>QObject</label>
      </node>
      <node id="6055">
        <label>QgsNetworkContentFetcherRegistry</label>
        <link refid="classQgsNetworkContentFetcherRegistry"/>
        <childnode refid="6056" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" line="127" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsnetworkcontentfetcherregistry.h" bodystart="126" bodyend="169"/>
    <listofallmembers>
      <member refid="classQgsNetworkContentFetcherRegistry_1aeffb9013f28b156221021c1f6defb6c4acbd7bfcb1662ae9bb4fda093c73f542c" prot="public" virt="non-virtual"><scope>QgsNetworkContentFetcherRegistry</scope><name>DownloadImmediately</name></member>
      <member refid="classQgsNetworkContentFetcherRegistry_1aeffb9013f28b156221021c1f6defb6c4ac791bfaff6818eeb9842d767755520a6" prot="public" virt="non-virtual"><scope>QgsNetworkContentFetcherRegistry</scope><name>DownloadLater</name></member>
      <member refid="classQgsNetworkContentFetcherRegistry_1ab203bed8670dcd5ab0ae5cf4491620f5" prot="public" virt="non-virtual"><scope>QgsNetworkContentFetcherRegistry</scope><name>fetch</name></member>
      <member refid="classQgsNetworkContentFetcherRegistry_1aeffb9013f28b156221021c1f6defb6c4" prot="public" virt="non-virtual"><scope>QgsNetworkContentFetcherRegistry</scope><name>FetchingMode</name></member>
      <member refid="classQgsNetworkContentFetcherRegistry_1a39474160ac8d0545499dbe0174d6acd1" prot="public" virt="non-virtual"><scope>QgsNetworkContentFetcherRegistry</scope><name>localFile</name></member>
      <member refid="classQgsNetworkContentFetcherRegistry_1a16328eb1b329ff630fa57a286b8cdbc5" prot="public" virt="non-virtual"><scope>QgsNetworkContentFetcherRegistry</scope><name>localPath</name></member>
      <member refid="classQgsNetworkContentFetcherRegistry_1a64cfee4cfd269572f836ea53f21b7a9f" prot="private" virt="non-virtual"><scope>QgsNetworkContentFetcherRegistry</scope><name>mFileRegistry</name></member>
      <member refid="classQgsNetworkContentFetcherRegistry_1a7a64bec4420f80fa270a01137aa3cc17" prot="public" virt="non-virtual"><scope>QgsNetworkContentFetcherRegistry</scope><name>QgsNetworkContentFetcherRegistry</name></member>
      <member refid="classQgsNetworkContentFetcherRegistry_1a9c31ddcc38d828147cacd1b9f0f9c01c" prot="public" virt="non-virtual"><scope>QgsNetworkContentFetcherRegistry</scope><name>~QgsNetworkContentFetcherRegistry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
