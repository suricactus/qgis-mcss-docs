<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsReadWriteLocker" kind="class" language="C++" prot="public">
    <compoundname>QgsReadWriteLocker</compoundname>
    <includes refid="qgsreadwritelocker_8h" local="no">qgsreadwritelocker.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37" prot="public" static="no">
        <name>Mode</name>
        <enumvalue id="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37af5b9267604375d43fba95a1ac8d9bfde" prot="public">
          <name>Read</name>
          <briefdescription>
<para>Lock for read. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37a94cf53817c772fbb42a4837a06c69e23" prot="public">
          <name>Write</name>
          <briefdescription>
<para>Lock for write. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37a4da27976f4fe80e8f90f0a5192b8b839" prot="public">
          <name>Unlocked</name>
          <briefdescription>
<para>Unlocked. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>A QReadWriteLock can be in 3 different modes, read, write or unlocked. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" line="48" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" bodystart="47" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsReadWriteLocker_1ae2aa3bed3de40a9cd916aa764d9fba8d" prot="private" static="no" mutable="no">
        <type>QReadWriteLock &amp;</type>
        <definition>QReadWriteLock&amp; QgsReadWriteLocker::mLock</definition>
        <argsstring></argsstring>
        <name>mLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" line="74" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsReadWriteLocker_1a6a29d61523a3d32aef0866553a8d8eb1" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37" kindref="member">Mode</ref></type>
        <definition>Mode QgsReadWriteLocker::mMode</definition>
        <argsstring></argsstring>
        <name>mMode</name>
        <initializer>= <ref refid="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37a4da27976f4fe80e8f90f0a5192b8b839" kindref="member">Unlocked</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" line="75" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsReadWriteLocker_1abc17520a47112345b86db281d75ab0a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsReadWriteLocker::QgsReadWriteLocker</definition>
        <argsstring>(QReadWriteLock &amp;lock, Mode mode)</argsstring>
        <name>QgsReadWriteLocker</name>
        <param>
          <type>QReadWriteLock &amp;</type>
          <declname>lock</declname>
        </param>
        <param>
          <type><ref refid="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37" kindref="member">Mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Create a new <ref refid="classQgsReadWriteLocker" kindref="compound">QgsReadWriteLocker</ref> for <emphasis>lock</emphasis> and initialize in <emphasis>mode</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" line="57" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.cpp" bodystart="20" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classQgsReadWriteLocker_1a970dd7f2777da0455d2b0a86fb7c85f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsReadWriteLocker::~QgsReadWriteLocker</definition>
        <argsstring>()</argsstring>
        <name>~QgsReadWriteLocker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" line="71" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classQgsReadWriteLocker_1ab42e8d44a50fc441c177b15b3ed7a57a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsReadWriteLocker::changeMode</definition>
        <argsstring>(Mode mode)</argsstring>
        <name>changeMode</name>
        <param>
          <type><ref refid="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37" kindref="member">Mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Change the mode of the lock to <emphasis>mode</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The lock will be unlocked and relocked as required. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" line="63" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.cpp" bodystart="30" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classQgsReadWriteLocker_1aa8efa31f80b1c10542b2536afcfccb2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsReadWriteLocker::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <briefdescription>
<para>Unlocks the lock. </para>        </briefdescription>
        <detaileddescription>
<para>Equivalent to doing <computeroutput>changeMode( QgsReadWriteLocker::Unlock );</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" line="69" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.cpp" bodystart="45" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classQgsReadWriteLocker" kindref="compound">QgsReadWriteLocker</ref> class is a convenience class that simplifies locking and unlocking QReadWriteLocks. </para>    </briefdescription>
    <detaileddescription>
<para>Locking and unlocking a QReadWriteLocks in complex functions and statements or in exception handling code is error-prone and difficult to debug. <ref refid="classQgsReadWriteLocker" kindref="compound">QgsReadWriteLocker</ref> can be used in such situations to ensure that the state of the lock is always well-defined.</para><para><ref refid="classQgsReadWriteLocker" kindref="compound">QgsReadWriteLocker</ref> should be created within a function where a QReadWriteLock needs to be locked. The lock may be locked when <ref refid="classQgsReadWriteLocker" kindref="compound">QgsReadWriteLocker</ref> is created or when changeMode is called. You can unlock and relock the lock with <ref refid="classQgsReadWriteLocker_1aa8efa31f80b1c10542b2536afcfccb2c" kindref="member">unlock()</ref> and <ref refid="classQgsReadWriteLocker_1ab42e8d44a50fc441c177b15b3ed7a57a" kindref="member">changeMode()</ref>. If locked, the lock will be unlocked when the <ref refid="classQgsReadWriteLocker" kindref="compound">QgsReadWriteLocker</ref> is destroyed.</para><para><simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" line="41" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsreadwritelocker.h" bodystart="40" bodyend="76"/>
    <listofallmembers>
      <member refid="classQgsReadWriteLocker_1ab42e8d44a50fc441c177b15b3ed7a57a" prot="public" virt="non-virtual"><scope>QgsReadWriteLocker</scope><name>changeMode</name></member>
      <member refid="classQgsReadWriteLocker_1ae2aa3bed3de40a9cd916aa764d9fba8d" prot="private" virt="non-virtual"><scope>QgsReadWriteLocker</scope><name>mLock</name></member>
      <member refid="classQgsReadWriteLocker_1a6a29d61523a3d32aef0866553a8d8eb1" prot="private" virt="non-virtual"><scope>QgsReadWriteLocker</scope><name>mMode</name></member>
      <member refid="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37" prot="public" virt="non-virtual"><scope>QgsReadWriteLocker</scope><name>Mode</name></member>
      <member refid="classQgsReadWriteLocker_1abc17520a47112345b86db281d75ab0a0" prot="public" virt="non-virtual"><scope>QgsReadWriteLocker</scope><name>QgsReadWriteLocker</name></member>
      <member refid="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37af5b9267604375d43fba95a1ac8d9bfde" prot="public" virt="non-virtual"><scope>QgsReadWriteLocker</scope><name>Read</name></member>
      <member refid="classQgsReadWriteLocker_1aa8efa31f80b1c10542b2536afcfccb2c" prot="public" virt="non-virtual"><scope>QgsReadWriteLocker</scope><name>unlock</name></member>
      <member refid="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37a4da27976f4fe80e8f90f0a5192b8b839" prot="public" virt="non-virtual"><scope>QgsReadWriteLocker</scope><name>Unlocked</name></member>
      <member refid="classQgsReadWriteLocker_1a7c62de4d5ea64e7cf84a060195dc3e37a94cf53817c772fbb42a4837a06c69e23" prot="public" virt="non-virtual"><scope>QgsReadWriteLocker</scope><name>Write</name></member>
      <member refid="classQgsReadWriteLocker_1a970dd7f2777da0455d2b0a86fb7c85f6" prot="public" virt="non-virtual"><scope>QgsReadWriteLocker</scope><name>~QgsReadWriteLocker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
