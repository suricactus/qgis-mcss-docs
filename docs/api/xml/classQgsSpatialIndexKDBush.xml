<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsSpatialIndexKDBush" kind="class" language="C++" prot="public">
    <compoundname>QgsSpatialIndexKDBush</compoundname>
    <includes refid="qgsspatialindexkdbush_8h" local="no">qgsspatialindexkdbush.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsSpatialIndexKDBush_1a543fb2323fc15f01b90c541f6262a892" prot="private" static="no" mutable="no">
        <type>QgsSpatialIndexKDBushPrivate *</type>
        <definition>QgsSpatialIndexKDBushPrivate* QgsSpatialIndexKDBush::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Implicitly shared data pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="121" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classQgsSpatialIndexKDBush_1af9141ced7e560c155db189f1276a9be1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TestQgsSpatialIndexKdBush</definition>
        <argsstring></argsstring>
        <name>TestQgsSpatialIndexKdBush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="123" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsSpatialIndexKDBush_1a5a0256388a3589cbe3c74c62fabcc211" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSpatialIndexKDBush::QgsSpatialIndexKDBush</definition>
        <argsstring>(QgsFeatureIterator &amp;fi, QgsFeedback *feedback=nullptr)</argsstring>
        <name>QgsSpatialIndexKDBush</name>
        <param>
          <type><ref refid="classQgsFeatureIterator" kindref="compound">QgsFeatureIterator</ref> &amp;</type>
          <declname>fi</declname>
        </param>
        <param>
          <type><ref refid="classQgsFeedback" kindref="compound">QgsFeedback</ref> *</type>
          <declname>feedback</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructor - creates KDBush index and bulk loads it with features from the iterator. </para>        </briefdescription>
        <detaileddescription>
<para>The optional <emphasis>feedback</emphasis> object can be used to allow cancelation of bulk feature loading. Ownership of <emphasis>feedback</emphasis> is not transferred, and callers must take care that the lifetime of feedback exceeds that of the spatial index construction.</para><para>Any non-single point features encountered during iteration will be ignored and not included in the index. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.cpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndexKDBush_1a9ef2e793183c285e71383efeb7132973" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSpatialIndexKDBush::QgsSpatialIndexKDBush</definition>
        <argsstring>(const QgsFeatureSource &amp;source, QgsFeedback *feedback=nullptr)</argsstring>
        <name>QgsSpatialIndexKDBush</name>
        <param>
          <type>const <ref refid="classQgsFeatureSource" kindref="compound">QgsFeatureSource</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classQgsFeedback" kindref="compound">QgsFeedback</ref> *</type>
          <declname>feedback</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructor - creates KDBush index and bulk loads it with features from the source. </para>        </briefdescription>
        <detaileddescription>
<para>The optional <emphasis>feedback</emphasis> object can be used to allow cancelation of bulk feature loading. Ownership of <emphasis>feedback</emphasis> is not transferred, and callers must take care that the lifetime of feedback exceeds that of the spatial index construction.</para><para>Any non-single point features encountered during iteration will be ignored and not included in the index. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="77" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndexKDBush_1abc06ddecd5f463ef2ad56871496de3fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSpatialIndexKDBush::QgsSpatialIndexKDBush</definition>
        <argsstring>(const QgsSpatialIndexKDBush &amp;other)</argsstring>
        <name>QgsSpatialIndexKDBush</name>
        <param>
          <type>const <ref refid="classQgsSpatialIndexKDBush" kindref="compound">QgsSpatialIndexKDBush</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="80" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.cpp" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndexKDBush_1a37eaba98e9de69c7f99274f083aa534c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSpatialIndexKDBush::~QgsSpatialIndexKDBush</definition>
        <argsstring>()</argsstring>
        <name>~QgsSpatialIndexKDBush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="85" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndexKDBush_1a991d29fb92137c6329cdf39bb9d9fc6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsSpatialIndexKDBushData" kindref="compound">QgsSpatialIndexKDBushData</ref> &gt;</type>
        <definition>QList&lt; QgsSpatialIndexKDBushData &gt; QgsSpatialIndexKDBush::intersects</definition>
        <argsstring>(const QgsRectangle &amp;rectangle) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>rectangle</declname>
        </param>
        <briefdescription>
<para>Returns the list of features which fall within the specified <emphasis>rectangle</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="90" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.cpp" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndexKDBush_1a51bdbecc4a276dbc5e3f929af963fddb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSpatialIndexKDBush::intersects</definition>
        <argsstring>(const QgsRectangle &amp;rectangle, const std::function&lt; void(QgsSpatialIndexKDBushData)&gt; &amp;visitor) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>rectangle</declname>
        </param>
        <param>
          <type>const std::function&lt; void(<ref refid="classQgsSpatialIndexKDBushData" kindref="compound">QgsSpatialIndexKDBushData</ref>)&gt; &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Calls a <emphasis>visitor</emphasis> function for all features which fall within the specified <emphasis>rectangle</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="97" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.cpp" bodystart="86" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndexKDBush_1af10323168486ad8bebd6a814b5c758da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsSpatialIndexKDBush" kindref="compound">QgsSpatialIndexKDBush</ref> &amp;</type>
        <definition>QgsSpatialIndexKDBush &amp; QgsSpatialIndexKDBush::operator=</definition>
        <argsstring>(const QgsSpatialIndexKDBush &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsSpatialIndexKDBush" kindref="compound">QgsSpatialIndexKDBush</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="83" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.cpp" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndexKDBush_1a8248d2a54d9101d56bba5bafb900355b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="qgis_8h_1a5c6bee998e17d0cafeff24eb7953750e" kindref="member">qgssize</ref></type>
        <definition>qgssize QgsSpatialIndexKDBush::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the size of the index, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>the number of points contained within the index. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="116" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndexKDBush_1af2d2678f8028b9b06e1370155182b1ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsSpatialIndexKDBushData" kindref="compound">QgsSpatialIndexKDBushData</ref> &gt;</type>
        <definition>QList&lt; QgsSpatialIndexKDBushData &gt; QgsSpatialIndexKDBush::within</definition>
        <argsstring>(const QgsPointXY &amp;point, double radius) const</argsstring>
        <name>within</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Returns the list of features which are within the given search <emphasis>radius</emphasis> of <emphasis>point</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="103" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.cpp" bodystart="59" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndexKDBush_1ad3eda90760a4a57a9354461bfca979ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSpatialIndexKDBush::within</definition>
        <argsstring>(const QgsPointXY &amp;point, double radius, const std::function&lt; void(QgsSpatialIndexKDBushData)&gt; &amp;visitor)</argsstring>
        <name>within</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const std::function&lt; void(<ref refid="classQgsSpatialIndexKDBushData" kindref="compound">QgsSpatialIndexKDBushData</ref>)&gt; &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Calls a <emphasis>visitor</emphasis> function for all features which are within the given search <emphasis>radius</emphasis> of <emphasis>point</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A very fast static spatial index for 2D points based on a flat KD-tree. </para>    </briefdescription>
    <detaileddescription>
<para>Compared to <ref refid="classQgsSpatialIndex" kindref="compound">QgsSpatialIndex</ref>, this index:<itemizedlist>
<listitem><para>supports single point features only (no multipoints)</para></listitem><listitem><para>is static (features cannot be added or removed from the index after construction)</para></listitem><listitem><para>is much faster!</para></listitem><listitem><para>allows direct retrieval of the original feature&apos;s points, without requiring additional feature requests</para></listitem><listitem><para>supports true &quot;distance based&quot; searches, i.e. return all points within a radius from a search point</para></listitem></itemizedlist>
</para><para><ref refid="classQgsSpatialIndexKDBush" kindref="compound">QgsSpatialIndexKDBush</ref> objects are implicitly shared and can be inexpensively copied.</para><para><simplesect kind="see"><para><ref refid="classQgsSpatialIndex" kindref="compound">QgsSpatialIndex</ref>, which is an general, mutable index for geometry bounding boxes. </para></simplesect>
<simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" line="54" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindexkdbush.h" bodystart="53" bodyend="124"/>
    <listofallmembers>
      <member refid="classQgsSpatialIndexKDBush_1a543fb2323fc15f01b90c541f6262a892" prot="private" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>d</name></member>
      <member refid="classQgsSpatialIndexKDBush_1a991d29fb92137c6329cdf39bb9d9fc6d" prot="public" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>intersects</name></member>
      <member refid="classQgsSpatialIndexKDBush_1a51bdbecc4a276dbc5e3f929af963fddb" prot="public" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>intersects</name></member>
      <member refid="classQgsSpatialIndexKDBush_1af10323168486ad8bebd6a814b5c758da" prot="public" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>operator=</name></member>
      <member refid="classQgsSpatialIndexKDBush_1a5a0256388a3589cbe3c74c62fabcc211" prot="public" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>QgsSpatialIndexKDBush</name></member>
      <member refid="classQgsSpatialIndexKDBush_1a9ef2e793183c285e71383efeb7132973" prot="public" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>QgsSpatialIndexKDBush</name></member>
      <member refid="classQgsSpatialIndexKDBush_1abc06ddecd5f463ef2ad56871496de3fa" prot="public" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>QgsSpatialIndexKDBush</name></member>
      <member refid="classQgsSpatialIndexKDBush_1a8248d2a54d9101d56bba5bafb900355b" prot="public" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>size</name></member>
      <member refid="classQgsSpatialIndexKDBush_1af9141ced7e560c155db189f1276a9be1" prot="private" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>TestQgsSpatialIndexKdBush</name></member>
      <member refid="classQgsSpatialIndexKDBush_1af2d2678f8028b9b06e1370155182b1ba" prot="public" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>within</name></member>
      <member refid="classQgsSpatialIndexKDBush_1ad3eda90760a4a57a9354461bfca979ab" prot="public" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>within</name></member>
      <member refid="classQgsSpatialIndexKDBush_1a37eaba98e9de69c7f99274f083aa534c" prot="public" virt="non-virtual"><scope>QgsSpatialIndexKDBush</scope><name>~QgsSpatialIndexKDBush</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
