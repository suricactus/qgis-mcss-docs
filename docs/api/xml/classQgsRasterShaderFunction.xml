<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsRasterShaderFunction" kind="class" language="C++" prot="public">
    <compoundname>QgsRasterShaderFunction</compoundname>
    <derivedcompoundref refid="classQgsColorRampShader" prot="public" virt="non-virtual">QgsColorRampShader</derivedcompoundref>
    <includes refid="qgsrastershaderfunction_8h" local="no">qgsrastershaderfunction.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQgsRasterShaderFunction_1a634c3b57d9eeb49e47fae5317ea2ba54" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsRasterShaderFunction::mMaximumValue</definition>
        <argsstring></argsstring>
        <name>mMaximumValue</name>
        <briefdescription>
<para>User defineable maximum value for the shading function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="128" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsRasterShaderFunction_1a252d4ed204670fe6d80ab5ddc491abe7" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsRasterShaderFunction::mMinimumMaximumRange</definition>
        <argsstring></argsstring>
        <name>mMinimumMaximumRange</name>
        <briefdescription>
<para>Minimum maximum range for the shading function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="134" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsRasterShaderFunction_1a115adee676b4637f216b591edefd6aab" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsRasterShaderFunction::mMinimumValue</definition>
        <argsstring></argsstring>
        <name>mMinimumValue</name>
        <briefdescription>
<para>User defineable minimum value for the shading function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="131" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsRasterShaderFunction_1a122d7f564382e1f26e153ecd49ce0403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsRasterShaderFunction::QgsRasterShaderFunction</definition>
        <argsstring>(double minimumValue=0.0, double maximumValue=255.0)</argsstring>
        <name>QgsRasterShaderFunction</name>
        <param>
          <type>double</type>
          <declname>minimumValue</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>maximumValue</declname>
          <defval>255.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="51" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.cpp" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShaderFunction_1ad1583a8c48bb296c1b1bf0e779dc3b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QgsRasterShaderFunction::~QgsRasterShaderFunction</definition>
        <argsstring>()=default</argsstring>
        <name>~QgsRasterShaderFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShaderFunction_1a37ead03fc863530ada40cd238ebedba8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QgsRasterShaderFunction::legendSymbologyItems</definition>
        <argsstring>(QList&lt; QPair&lt; QString, QColor &gt; &gt; &amp;symbolItems) const</argsstring>
        <name>legendSymbologyItems</name>
        <reimplementedby refid="classQgsColorRampShader_1a1591538b98c3b403724f51f6f5a78ee2">legendSymbologyItems</reimplementedby>
        <param>
          <type>QList&lt; QPair&lt; QString, QColor &gt; &gt; &amp;</type>
          <declname>symbolItems</declname>
        </param>
        <briefdescription>
<para>Returns legend symbology items if provided by renderer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="124" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShaderFunction_1a3efb286a94250791d9092c716a927d75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsRasterShaderFunction::maximumValue</definition>
        <argsstring>() const</argsstring>
        <name>maximumValue</name>
        <briefdescription>
<para>Returns the minimum value for the raster shader. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterShaderFunction_1ae30432e25dcb253b93b787bd204d7225" kindref="member">setMinimumValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsRasterShaderFunction_1a3efb286a94250791d9092c716a927d75" kindref="member">maximumValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="119" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShaderFunction_1afc93b0b2cb8acc5957978650bdc5c6d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsRasterShaderFunction::minimumMaximumRange</definition>
        <argsstring>() const</argsstring>
        <name>minimumMaximumRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="105" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShaderFunction_1afba0eca2b7ef7f16529a1f46564e5fe0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsRasterShaderFunction::minimumValue</definition>
        <argsstring>() const</argsstring>
        <name>minimumValue</name>
        <briefdescription>
<para>Returns the maximum value for the raster shader. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterShaderFunction_1ac77d214d226b75c0b86782a96bda2fdf" kindref="member">setMaximumValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsRasterShaderFunction_1afba0eca2b7ef7f16529a1f46564e5fe0" kindref="member">minimumValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="112" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShaderFunction_1ac77d214d226b75c0b86782a96bda2fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsRasterShaderFunction::setMaximumValue</definition>
        <argsstring>(double value)</argsstring>
        <name>setMaximumValue</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the maximum <emphasis>value</emphasis> for the raster shader. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterShaderFunction_1ae30432e25dcb253b93b787bd204d7225" kindref="member">setMinimumValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsRasterShaderFunction_1a3efb286a94250791d9092c716a927d75" kindref="member">maximumValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="59" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.cpp" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShaderFunction_1ae30432e25dcb253b93b787bd204d7225" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsRasterShaderFunction::setMinimumValue</definition>
        <argsstring>(double value)</argsstring>
        <name>setMinimumValue</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the minimum <emphasis>value</emphasis> for the raster shader. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterShaderFunction_1ac77d214d226b75c0b86782a96bda2fdf" kindref="member">setMaximumValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsRasterShaderFunction_1afba0eca2b7ef7f16529a1f46564e5fe0" kindref="member">minimumValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.cpp" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShaderFunction_1a8cc801029d1a9cbd7aacc5a312abcd10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsRasterShaderFunction::shade</definition>
        <argsstring>(double value, int *returnRedValue, int *returnGreenValue, int *returnBlueValue, int *returnAlpha) const</argsstring>
        <name>shade</name>
        <reimplementedby refid="classQgsColorRampShader_1a7664f9e211a028d60d361eff9467f994">shade</reimplementedby>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnRedValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnGreenValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnBlueValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnAlpha</declname>
        </param>
        <briefdescription>
<para>Generates an new RGBA value based on one input <emphasis>value</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The original value to base a new RGBA value on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnRedValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The red component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnGreenValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The green component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnBlueValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnAlpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha component of the new RGBA value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the return values are valid otherwise false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="77" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.cpp" bodystart="46" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShaderFunction_1ab877a4037a627099f770757d6af4c837" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsRasterShaderFunction::shade</definition>
        <argsstring>(double redValue, double greenValue, double blueValue, double alphaValue, int *returnRedValue, int *returnGreenValue, int *returnBlueValue, int *returnAlpha) const</argsstring>
        <name>shade</name>
        <reimplementedby refid="classQgsColorRampShader_1a3c2df2fac9bfa5cdd7493a49e5f491aa">shade</reimplementedby>
        <param>
          <type>double</type>
          <declname>redValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>greenValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>blueValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnRedValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnGreenValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnBlueValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnAlpha</declname>
        </param>
        <briefdescription>
<para>Generates an new RGBA value based on an original RGBA value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>redValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The red component of the original value to base a new RGBA value on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>greenValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The green component of the original value to base a new RGBA value on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blueValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue component of the original value to base a new RGBA value on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alphaValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha component of the original value to base a new RGBA value on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnRedValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The red component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnGreenValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The green component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnBlueValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnAlpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha component of the new RGBA value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the return values are valid otherwise false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="96" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.cpp" bodystart="58" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The raster shade function applies a shader to a pixel at render time - typically used to render grayscale images as false color. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7720">
        <label>QgsRasterShaderFunction</label>
        <link refid="classQgsRasterShaderFunction"/>
      </node>
      <node id="7721">
        <label>QgsColorRampShader</label>
        <link refid="classQgsColorRampShader"/>
        <childnode refid="7720" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" line="35" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershaderfunction.h" bodystart="34" bodyend="135"/>
    <listofallmembers>
      <member refid="classQgsRasterShaderFunction_1a37ead03fc863530ada40cd238ebedba8" prot="public" virt="virtual"><scope>QgsRasterShaderFunction</scope><name>legendSymbologyItems</name></member>
      <member refid="classQgsRasterShaderFunction_1a3efb286a94250791d9092c716a927d75" prot="public" virt="non-virtual"><scope>QgsRasterShaderFunction</scope><name>maximumValue</name></member>
      <member refid="classQgsRasterShaderFunction_1afc93b0b2cb8acc5957978650bdc5c6d8" prot="public" virt="non-virtual"><scope>QgsRasterShaderFunction</scope><name>minimumMaximumRange</name></member>
      <member refid="classQgsRasterShaderFunction_1afba0eca2b7ef7f16529a1f46564e5fe0" prot="public" virt="non-virtual"><scope>QgsRasterShaderFunction</scope><name>minimumValue</name></member>
      <member refid="classQgsRasterShaderFunction_1a634c3b57d9eeb49e47fae5317ea2ba54" prot="protected" virt="non-virtual"><scope>QgsRasterShaderFunction</scope><name>mMaximumValue</name></member>
      <member refid="classQgsRasterShaderFunction_1a252d4ed204670fe6d80ab5ddc491abe7" prot="protected" virt="non-virtual"><scope>QgsRasterShaderFunction</scope><name>mMinimumMaximumRange</name></member>
      <member refid="classQgsRasterShaderFunction_1a115adee676b4637f216b591edefd6aab" prot="protected" virt="non-virtual"><scope>QgsRasterShaderFunction</scope><name>mMinimumValue</name></member>
      <member refid="classQgsRasterShaderFunction_1a122d7f564382e1f26e153ecd49ce0403" prot="public" virt="non-virtual"><scope>QgsRasterShaderFunction</scope><name>QgsRasterShaderFunction</name></member>
      <member refid="classQgsRasterShaderFunction_1ac77d214d226b75c0b86782a96bda2fdf" prot="public" virt="virtual"><scope>QgsRasterShaderFunction</scope><name>setMaximumValue</name></member>
      <member refid="classQgsRasterShaderFunction_1ae30432e25dcb253b93b787bd204d7225" prot="public" virt="virtual"><scope>QgsRasterShaderFunction</scope><name>setMinimumValue</name></member>
      <member refid="classQgsRasterShaderFunction_1a8cc801029d1a9cbd7aacc5a312abcd10" prot="public" virt="virtual"><scope>QgsRasterShaderFunction</scope><name>shade</name></member>
      <member refid="classQgsRasterShaderFunction_1ab877a4037a627099f770757d6af4c837" prot="public" virt="virtual"><scope>QgsRasterShaderFunction</scope><name>shade</name></member>
      <member refid="classQgsRasterShaderFunction_1ad1583a8c48bb296c1b1bf0e779dc3b11" prot="public" virt="virtual"><scope>QgsRasterShaderFunction</scope><name>~QgsRasterShaderFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
