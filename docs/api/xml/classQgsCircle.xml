<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsCircle" kind="class" language="C++" prot="public">
    <compoundname>QgsCircle</compoundname>
    <basecompoundref refid="classQgsEllipse" prot="public" virt="non-virtual">QgsEllipse</basecompoundref>
    <includes refid="qgscircle_8h" local="no">qgscircle.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsCircle_1a22507bb31de5895ddef9227081673656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsCircle::QgsCircle</definition>
        <argsstring>()</argsstring>
        <name>QgsCircle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="46" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1abbfdbe021c907b6b773f422fbcc52e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsCircle::QgsCircle</definition>
        <argsstring>(const QgsPoint &amp;center, double radius, double azimuth=0)</argsstring>
        <name>QgsCircle</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>double</type>
          <declname>azimuth</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructs a circle by defining all the members. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>The center of the circle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the circle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>azimuth</parametername>
</parameternamelist>
<parameterdescription>
<para>Angle in degrees started from the North to the first quadrant. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="54" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a885001137d7913e0dfd44c3567c0fe69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QgsCircle::area</definition>
        <argsstring>() const override</argsstring>
        <name>area</name>
        <reimplements refid="classQgsEllipse_1ac4249661b9b99a0b346cbf66639fdc29">area</reimplements>
        <briefdescription>
<para>The area of the ellipse. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="224" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a616203c342429b67f813da207c617155" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref></type>
        <definition>QgsRectangle QgsCircle::boundingBox</definition>
        <argsstring>() const override</argsstring>
        <name>boundingBox</name>
        <reimplements refid="classQgsEllipse_1af635fff8e8efb717cd5f2f4fa86b9478">boundingBox</reimplements>
        <briefdescription>
<para>Returns the minimal bounding box for the ellipse. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="272" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a6ca93a2ad1fed1d0b11a1dde5f4ef2b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCircle::contains</definition>
        <argsstring>(const QgsPoint &amp;point, double epsilon=1E-8) const</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>1E-8</defval>
        </param>
        <briefdescription>
<para>Returns true if the circle contains the <emphasis>point</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="270" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a1b7f5887241465b039341ae13c70b30c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsCircle::innerTangents</definition>
        <argsstring>(const QgsCircle &amp;other, QgsPointXY &amp;line1P1, QgsPointXY &amp;line1P2, QgsPointXY &amp;line2P1, QgsPointXY &amp;line2P2) const</argsstring>
        <name>innerTangents</name>
        <param>
          <type>const <ref refid="classQgsCircle" kindref="compound">QgsCircle</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>line1P1</declname>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>line1P2</declname>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>line2P1</declname>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>line2P2</declname>
        </param>
        <briefdescription>
<para>Calculates the inner tangent points between this circle and an <emphasis>other</emphasis> circle. </para>        </briefdescription>
        <detaileddescription>
<para>The inner tangent points correspond to the points at which the two lines which are drawn so that they are tangential to both circles but on different sides, touching the circles and crossing each other.</para><para>The first tangent line is described by the points stored in <emphasis>line1P1</emphasis> and <emphasis>line1P2</emphasis>, and the second line is described by the points stored in <emphasis>line2P1</emphasis> and <emphasis>line2P2</emphasis>.</para><para>Returns the number of tangents (either 0 or 2).</para><para>Note that this method is 2D only and does not consider the z-value of the circle.</para><para><simplesect kind="see"><para><ref refid="classQgsCircle_1ac53fa1468896a03f258dd7790cbd6e46" kindref="member">tangentToPoint()</ref> and <ref refid="classQgsCircle_1a317cdaa032d3ebc9304703900d680bdb" kindref="member">outerTangents()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="220" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="273" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a14cf43648dd0bbc83be2e81bad1eabdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsCircle::intersections</definition>
        <argsstring>(const QgsCircle &amp;other, QgsPoint &amp;intersection1, QgsPoint &amp;intersection2, bool useZ=false) const</argsstring>
        <name>intersections</name>
        <param>
          <type>const <ref refid="classQgsCircle" kindref="compound">QgsCircle</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>intersection1</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>intersection2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useZ</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Calculates the intersections points between this circle and an <emphasis>other</emphasis> circle. </para>        </briefdescription>
        <detaileddescription>
<para>If found, the intersection points will be stored in <emphasis>intersection1</emphasis> and <emphasis>intersection2</emphasis>.</para><para>By default this method does not consider any z values and instead treats the circles as 2-dimensional. If <emphasis>useZ</emphasis> is set to true, then an intersection will only occur if the z values of both circles are equal. In this case the points returned for <emphasis>intersection1</emphasis> and <emphasis>intersection2</emphasis> will contain the z value of the circle intersections.</para><para><simplesect kind="return"><para>number of intersection points found.</para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="157" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="239" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1ae09edcd6f1572caf03a924d47b302e61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &gt;</type>
        <definition>QVector&lt; QgsPoint &gt; QgsCircle::northQuadrant</definition>
        <argsstring>() const</argsstring>
        <name>northQuadrant</name>
        <briefdescription>
<para>The four quadrants of the ellipse. </para>        </briefdescription>
        <detaileddescription>
<para>They are oriented and started from North. <simplesect kind="return"><para>quadrants defined by four points. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsEllipse_1aaa4c9fd3a956aa7ddc35c7e6804c7faa" kindref="member">quadrant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="261" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="316" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a317cdaa032d3ebc9304703900d680bdb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsCircle::outerTangents</definition>
        <argsstring>(const QgsCircle &amp;other, QgsPointXY &amp;line1P1, QgsPointXY &amp;line1P2, QgsPointXY &amp;line2P1, QgsPointXY &amp;line2P2) const</argsstring>
        <name>outerTangents</name>
        <param>
          <type>const <ref refid="classQgsCircle" kindref="compound">QgsCircle</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>line1P1</declname>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>line1P2</declname>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>line2P1</declname>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>line2P2</declname>
        </param>
        <briefdescription>
<para>Calculates the outer tangent points between this circle and an <emphasis>other</emphasis> circle. </para>        </briefdescription>
        <detaileddescription>
<para>The outer tangent points correspond to the points at which the two lines which are drawn so that they are tangential to both circles touch the circles.</para><para>The first tangent line is described by the points stored in <emphasis>line1P1</emphasis> and <emphasis>line1P2</emphasis>, and the second line is described by the points stored in <emphasis>line2P1</emphasis> and <emphasis>line2P2</emphasis>.</para><para>Returns the number of tangents (either 0 or 2).</para><para>Note that this method is 2D only and does not consider the z-value of the circle.</para><para><simplesect kind="see"><para><ref refid="classQgsCircle_1ac53fa1468896a03f258dd7790cbd6e46" kindref="member">tangentToPoint()</ref> and <ref refid="classQgsCircle_1a1b7f5887241465b039341ae13c70b30c" kindref="member">innerTangents()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="195" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="267" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1ac0dea4ca4dc3dda79af565cef31fe8ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QgsCircle::perimeter</definition>
        <argsstring>() const override</argsstring>
        <name>perimeter</name>
        <reimplements refid="classQgsEllipse_1aab67a93c51735492193cbb16f06ff318">perimeter</reimplements>
        <briefdescription>
<para>The circumference of the ellipse using first approximation of Ramanujan. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="225" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a15cc65b4291081a99c3148a783ef30a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsCircle::radius</definition>
        <argsstring>() const</argsstring>
        <name>radius</name>
        <briefdescription>
<para>Returns the radius of the circle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="247" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" bodystart="247" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a40bd738d2bd82f787fe75362cef92c88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsCircle::setRadius</definition>
        <argsstring>(double radius)</argsstring>
        <name>setRadius</name>
        <param>
          <type>double</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Sets the radius of the circle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="249" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" bodystart="249" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a4470c8b366f5ed94c1172f7dddaf33a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsCircle::setSemiMajorAxis</definition>
        <argsstring>(double semiMajorAxis) override</argsstring>
        <name>setSemiMajorAxis</name>
        <reimplements refid="classQgsEllipse_1af891bfd99c672fea97e86f0210f121de">setSemiMajorAxis</reimplements>
        <param>
          <type>double</type>
          <declname>semiMajorAxis</declname>
        </param>
        <briefdescription>
<para>Inherited method. </para>        </briefdescription>
        <detaileddescription>
<para>Use setRadius instead. <simplesect kind="see"><para><ref refid="classQgsCircle_1a15cc65b4291081a99c3148a783ef30a9" kindref="member">radius()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCircle_1a40bd738d2bd82f787fe75362cef92c88" kindref="member">setRadius()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="237" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="304" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a1d847439f7656f6ba15d2cdda174d215" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsCircle::setSemiMinorAxis</definition>
        <argsstring>(double semiMinorAxis) override</argsstring>
        <name>setSemiMinorAxis</name>
        <reimplements refid="classQgsEllipse_1abf0fb97675027a90bd545b4664aa6b5a">setSemiMinorAxis</reimplements>
        <param>
          <type>double</type>
          <declname>semiMinorAxis</declname>
        </param>
        <briefdescription>
<para>Inherited method. </para>        </briefdescription>
        <detaileddescription>
<para>Use setRadius instead. <simplesect kind="see"><para><ref refid="classQgsCircle_1a15cc65b4291081a99c3148a783ef30a9" kindref="member">radius()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCircle_1a40bd738d2bd82f787fe75362cef92c88" kindref="member">setRadius()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="244" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="310" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1ac53fa1468896a03f258dd7790cbd6e46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsCircle::tangentToPoint</definition>
        <argsstring>(const QgsPointXY &amp;p, QgsPointXY &amp;pt1, QgsPointXY &amp;pt2) const</argsstring>
        <name>tangentToPoint</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>pt1</declname>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>pt2</declname>
        </param>
        <briefdescription>
<para>Calculates the tangent points between this circle and the point <emphasis>p</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>If found, the tangent points will be stored in <emphasis>pt1</emphasis> and <emphasis>pt2</emphasis>.</para><para>Note that this method is 2D only and does not consider the z-value of the circle.</para><para><simplesect kind="return"><para>true if tangent was found.</para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCircle_1a317cdaa032d3ebc9304703900d680bdb" kindref="member">outerTangents()</ref> and <ref refid="classQgsCircle_1a1b7f5887241465b039341ae13c70b30c" kindref="member">innerTangents()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="172" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1abf566f9dd23566a74a062c2fdf922af3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCircularString" kindref="compound">QgsCircularString</ref> *</type>
        <definition>QgsCircularString * QgsCircle::toCircularString</definition>
        <argsstring>(bool oriented=false) const</argsstring>
        <name>toCircularString</name>
        <param>
          <type>bool</type>
          <declname>oriented</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns a circular string from the circle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oriented</parametername>
</parameternamelist>
<parameterdescription>
<para>If oriented is true the start point is from azimuth instead from north. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="267" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="327" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a4a8a9aa48e819b2cebc730f9d466689a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsCircle::toString</definition>
        <argsstring>(int pointPrecision=17, int radiusPrecision=17, int azimuthPrecision=2) const override</argsstring>
        <name>toString</name>
        <reimplements refid="classQgsEllipse_1a66ecd899cfab54664c4480fdf0fa7fd5">toString</reimplements>
        <param>
          <type>int</type>
          <declname>pointPrecision</declname>
          <defval>17</defval>
        </param>
        <param>
          <type>int</type>
          <declname>axisPrecision</declname>
          <defval>17</defval>
        </param>
        <param>
          <type>int</type>
          <declname>azimuthPrecision</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>returns a string representation of the ellipse. </para>        </briefdescription>
        <detaileddescription>
<para>Members will be truncated to the specified precision. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="274" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="360" bodyend="373"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsCircle_1a0feea1fae6783ac4775ef508f82c4b85" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCircle" kindref="compound">QgsCircle</ref></type>
        <definition>QgsCircle QgsCircle::from2Points</definition>
        <argsstring>(const QgsPoint &amp;pt1, const QgsPoint &amp;pt2)</argsstring>
        <name>from2Points</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt2</declname>
        </param>
        <briefdescription>
<para>Constructs a circle by 2 points on the circle. </para>        </briefdescription>
        <detaileddescription>
<para>The center point can have m value which is the result from the midpoint operation between <emphasis>pt1</emphasis> and <emphasis>pt2</emphasis>. Z dimension is also supported and is retrieved from the first 3D point amongst <emphasis>pt1</emphasis> and <emphasis>pt2</emphasis>. The radius is calculated from the 2D distance between <emphasis>pt1</emphasis> and <emphasis>pt2</emphasis>. The azimuth is the angle between <emphasis>pt1</emphasis> and <emphasis>pt2</emphasis>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt1</parametername>
</parameternamelist>
<parameterdescription>
<para>First point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="37" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1ada1964f652592174a76c351f57ee73b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCircle" kindref="compound">QgsCircle</ref></type>
        <definition>QgsCircle QgsCircle::from3Points</definition>
        <argsstring>(const QgsPoint &amp;pt1, const QgsPoint &amp;pt2, const QgsPoint &amp;pt3, double epsilon=1E-8)</argsstring>
        <name>from3Points</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt2</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt3</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>1E-8</defval>
        </param>
        <briefdescription>
<para>Constructs a circle by 3 points on the circle. </para>        </briefdescription>
        <detaileddescription>
<para>M value is dropped for the center point. Z dimension is supported and is retrieved from the first 3D point amongst <emphasis>pt1</emphasis>, <emphasis>pt2</emphasis> and <emphasis>pt3</emphasis>. The azimuth always takes the default value. If the points are colinear an empty circle is returned. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt1</parametername>
</parameternamelist>
<parameterdescription>
<para>First point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt3</parametername>
</parameternamelist>
<parameterdescription>
<para>Third point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>Value used to compare point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="80" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="83" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a2fac1e667445b1bd32f4719feabb2782" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCircle" kindref="compound">QgsCircle</ref></type>
        <definition>QgsCircle QgsCircle::from3Tangents</definition>
        <argsstring>(const QgsPoint &amp;pt1_tg1, const QgsPoint &amp;pt2_tg1, const QgsPoint &amp;pt1_tg2, const QgsPoint &amp;pt2_tg2, const QgsPoint &amp;pt1_tg3, const QgsPoint &amp;pt2_tg3, double epsilon=1E-8)</argsstring>
        <name>from3Tangents</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt1_tg1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt2_tg1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt1_tg2</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt2_tg2</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt1_tg3</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt2_tg3</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>1E-8</defval>
        </param>
        <briefdescription>
<para>Constructs a circle by 3 tangents on the circle (aka inscribed circle of a triangle). </para>        </briefdescription>
        <detaileddescription>
<para>Z and m values are dropped for the center point. The azimuth always takes the default value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt1_tg1</parametername>
</parameternamelist>
<parameterdescription>
<para>First point of the first tangent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt2_tg1</parametername>
</parameternamelist>
<parameterdescription>
<para>Second point of the first tangent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt1_tg2</parametername>
</parameternamelist>
<parameterdescription>
<para>First point of the second tangent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt2_tg2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second point of the second tangent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt1_tg3</parametername>
</parameternamelist>
<parameterdescription>
<para>First point of the third tangent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt2_tg3</parametername>
</parameternamelist>
<parameterdescription>
<para>Second point of the third tangent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>Value used to compare point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="115" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="191" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a8ed0bc027c31b809f205d161fc7a9202" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCircle" kindref="compound">QgsCircle</ref></type>
        <definition>QgsCircle QgsCircle::fromCenterDiameter</definition>
        <argsstring>(const QgsPoint &amp;center, double diameter, double azimuth=0)</argsstring>
        <name>fromCenterDiameter</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>double</type>
          <declname>diameter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>azimuth</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructs a circle by a center point and a diameter. </para>        </briefdescription>
        <detaileddescription>
<para>The center point keeps z and m values from <emphasis>center</emphasis>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Diameter of the circle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>azimuth</parametername>
</parameternamelist>
<parameterdescription>
<para>Azimuth of the circle. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="89" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a9fec4c94f6aa62dfc50af6f7f0f00f8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCircle" kindref="compound">QgsCircle</ref></type>
        <definition>QgsCircle QgsCircle::fromCenterPoint</definition>
        <argsstring>(const QgsPoint &amp;center, const QgsPoint &amp;pt1)</argsstring>
        <name>fromCenterPoint</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt1</declname>
        </param>
        <briefdescription>
<para>Constructs a circle by a center point and another point. </para>        </briefdescription>
        <detaileddescription>
<para>The center point keeps z and m values from <emphasis>center</emphasis>. Axes are calculated from the 2D distance between <emphasis>center</emphasis> and <emphasis>pt1</emphasis>. The azimuth is the angle between <emphasis>center</emphasis> and <emphasis>pt1</emphasis>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt1</parametername>
</parameternamelist>
<parameterdescription>
<para>A point on the circle. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="100" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="181" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1a7f9e07218fd028eeb1c5c6291b65ab26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCircle" kindref="compound">QgsCircle</ref></type>
        <definition>QgsCircle QgsCircle::fromExtent</definition>
        <argsstring>(const QgsPoint &amp;pt1, const QgsPoint &amp;pt2)</argsstring>
        <name>fromExtent</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt2</declname>
        </param>
        <briefdescription>
<para>Constructs a circle by an extent (aka bounding box / <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref>). </para>        </briefdescription>
        <detaileddescription>
<para>The center point can have m value which is the result from the midpoint operation between <emphasis>pt1</emphasis> and <emphasis>pt2</emphasis>. Z dimension is also supported and is retrieved from the first 3D point amongst <emphasis>pt1</emphasis> and <emphasis>pt2</emphasis>. Axes are calculated from the 2D distance between <emphasis>pt1</emphasis> and <emphasis>pt2</emphasis>. The azimuth always takes the default value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt1</parametername>
</parameternamelist>
<parameterdescription>
<para>First corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second corner. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="129" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="279" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCircle_1ae3c8542f1cc102839a576cfc997be756" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCircle" kindref="compound">QgsCircle</ref></type>
        <definition>QgsCircle QgsCircle::minimalCircleFrom3Points</definition>
        <argsstring>(const QgsPoint &amp;pt1, const QgsPoint &amp;pt2, const QgsPoint &amp;pt3, double epsilon=1E-8)</argsstring>
        <name>minimalCircleFrom3Points</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt2</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt3</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>1E-8</defval>
        </param>
        <briefdescription>
<para>Constructs the smallest circle from 3 points. </para>        </briefdescription>
        <detaileddescription>
<para>Z and m values are dropped for the center point. The azimuth always takes the default value. If the points are colinear an empty circle is returned. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt1</parametername>
</parameternamelist>
<parameterdescription>
<para>First point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pt3</parametername>
</parameternamelist>
<parameterdescription>
<para>Third point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>Value used to compare point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="141" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.cpp" bodystart="223" bodyend="237"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Circle geometry type. </para>    </briefdescription>
    <detaileddescription>
<para>A circle is defined by a center point with a radius and an azimuth. The azimuth is the north angle to the semi-major axis, in degrees. By default, the semi-major axis is oriented to the north (0 degrees). <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1689">
        <label>QgsEllipse</label>
        <link refid="classQgsEllipse"/>
      </node>
      <node id="1688">
        <label>QgsCircle</label>
        <link refid="classQgsCircle"/>
        <childnode refid="1689" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1691">
        <label>QgsEllipse</label>
        <link refid="classQgsEllipse"/>
        <childnode refid="1692" relation="usage">
          <edgelabel>mCenter</edgelabel>
        </childnode>
      </node>
      <node id="1693">
        <label>QgsAbstractGeometry</label>
        <link refid="classQgsAbstractGeometry"/>
      </node>
      <node id="1692">
        <label>QgsPoint</label>
        <link refid="classQgsPoint"/>
        <childnode refid="1693" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1690">
        <label>QgsCircle</label>
        <link refid="classQgsCircle"/>
        <childnode refid="1691" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" line="44" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgscircle.h" bodystart="43" bodyend="283"/>
    <listofallmembers>
      <member refid="classQgsCircle_1a885001137d7913e0dfd44c3567c0fe69" prot="public" virt="virtual"><scope>QgsCircle</scope><name>area</name></member>
      <member refid="classQgsEllipse_1aa83bd804ff2eeeab268eb84bc520d6a1" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>azimuth</name></member>
      <member refid="classQgsCircle_1a616203c342429b67f813da207c617155" prot="public" virt="virtual"><scope>QgsCircle</scope><name>boundingBox</name></member>
      <member refid="classQgsEllipse_1a4fe397de487dceb68ee34f49fa261da0" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>center</name></member>
      <member refid="classQgsCircle_1a6ca93a2ad1fed1d0b11a1dde5f4ef2b3" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>contains</name></member>
      <member refid="classQgsEllipse_1a066241b8c08ac16e8a2e43a6bdd8a217" prot="public" virt="virtual"><scope>QgsCircle</scope><name>eccentricity</name></member>
      <member refid="classQgsEllipse_1a548f2c3414c13635e97f16c5a9a12a66" prot="public" virt="virtual"><scope>QgsCircle</scope><name>foci</name></member>
      <member refid="classQgsEllipse_1a97455068304359b42cf7ea4d0213592c" prot="public" virt="virtual"><scope>QgsCircle</scope><name>focusDistance</name></member>
      <member refid="classQgsCircle_1a0feea1fae6783ac4775ef508f82c4b85" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>from2Points</name></member>
      <member refid="classQgsCircle_1ada1964f652592174a76c351f57ee73b7" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>from3Points</name></member>
      <member refid="classQgsCircle_1a2fac1e667445b1bd32f4719feabb2782" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>from3Tangents</name></member>
      <member refid="classQgsEllipse_1afd7c62ac0fa03f3c2189228fc193df89" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>fromCenter2Points</name></member>
      <member refid="classQgsCircle_1a8ed0bc027c31b809f205d161fc7a9202" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>fromCenterDiameter</name></member>
      <member refid="classQgsCircle_1a9fec4c94f6aa62dfc50af6f7f0f00f8e" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>fromCenterPoint</name></member>
      <member refid="classQgsCircle_1a7f9e07218fd028eeb1c5c6291b65ab26" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>fromExtent</name></member>
      <member refid="classQgsEllipse_1adffa84b7ad8f956d3e46e491f13d4362" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>fromFoci</name></member>
      <member refid="classQgsCircle_1a1b7f5887241465b039341ae13c70b30c" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>innerTangents</name></member>
      <member refid="classQgsCircle_1a14cf43648dd0bbc83be2e81bad1eabdf" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>intersections</name></member>
      <member refid="classQgsEllipse_1ac43a7b8ec376b3e94c5875bc7fbade00" prot="public" virt="virtual"><scope>QgsCircle</scope><name>isEmpty</name></member>
      <member refid="classQgsEllipse_1a8bc3b73aa1bc08b9bd03f429037d883e" prot="protected" virt="non-virtual"><scope>QgsCircle</scope><name>mAzimuth</name></member>
      <member refid="classQgsEllipse_1a089a788e36aeebb0184b1f61f7e4f1ae" prot="protected" virt="non-virtual"><scope>QgsCircle</scope><name>mCenter</name></member>
      <member refid="classQgsCircle_1ae3c8542f1cc102839a576cfc997be756" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>minimalCircleFrom3Points</name></member>
      <member refid="classQgsEllipse_1a8ecc474ec68b90817be1f36c5799ee1c" prot="protected" virt="non-virtual"><scope>QgsCircle</scope><name>mSemiMajorAxis</name></member>
      <member refid="classQgsEllipse_1ac5b5b0381e0603a00a55fd2b70e45128" prot="protected" virt="non-virtual"><scope>QgsCircle</scope><name>mSemiMinorAxis</name></member>
      <member refid="classQgsCircle_1ae09edcd6f1572caf03a924d47b302e61" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>northQuadrant</name></member>
      <member refid="classQgsEllipse_1aa6ab62cdc9616fef7efbdcfb46bc05cb" prot="public" virt="virtual"><scope>QgsCircle</scope><name>operator!=</name></member>
      <member refid="classQgsEllipse_1a49765629e446c5107b9646edb998f185" prot="public" virt="virtual"><scope>QgsCircle</scope><name>operator==</name></member>
      <member refid="classQgsEllipse_1ab448a9ed59fcd8bfcb1b98874ac5ca1a" prot="public" virt="virtual"><scope>QgsCircle</scope><name>orientedBoundingBox</name></member>
      <member refid="classQgsCircle_1a317cdaa032d3ebc9304703900d680bdb" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>outerTangents</name></member>
      <member refid="classQgsCircle_1ac0dea4ca4dc3dda79af565cef31fe8ca" prot="public" virt="virtual"><scope>QgsCircle</scope><name>perimeter</name></member>
      <member refid="classQgsEllipse_1a8e7a722883646eec89cc37de9a10e712" prot="public" virt="virtual"><scope>QgsCircle</scope><name>points</name></member>
      <member refid="classQgsCircle_1a22507bb31de5895ddef9227081673656" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>QgsCircle</name></member>
      <member refid="classQgsCircle_1abbfdbe021c907b6b773f422fbcc52e28" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>QgsCircle</name></member>
      <member refid="classQgsEllipse_1aaadb6846022003df83b33eba6d406a4b" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>QgsEllipse</name></member>
      <member refid="classQgsEllipse_1afec100d9f22d037701a33ad7f8fdb8e1" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>QgsEllipse</name></member>
      <member refid="classQgsEllipse_1aaa4c9fd3a956aa7ddc35c7e6804c7faa" prot="public" virt="virtual"><scope>QgsCircle</scope><name>quadrant</name></member>
      <member refid="classQgsCircle_1a15cc65b4291081a99c3148a783ef30a9" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>radius</name></member>
      <member refid="classQgsEllipse_1ae50ca30bdfd0f937e1be9ec81e0f1f40" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>rcenter</name></member>
      <member refid="classQgsEllipse_1a62fb4b87d2f2606e919df4ee85090188" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>semiMajorAxis</name></member>
      <member refid="classQgsEllipse_1ae17d01b130a38de225262a78b354183c" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>semiMinorAxis</name></member>
      <member refid="classQgsEllipse_1ab1ade6d793038d50e7531c56da4d0972" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>setAzimuth</name></member>
      <member refid="classQgsEllipse_1a78f92c4bbcfe7348f51d7be6d242a14e" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>setCenter</name></member>
      <member refid="classQgsCircle_1a40bd738d2bd82f787fe75362cef92c88" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>setRadius</name></member>
      <member refid="classQgsCircle_1a4470c8b366f5ed94c1172f7dddaf33a0" prot="public" virt="virtual"><scope>QgsCircle</scope><name>setSemiMajorAxis</name></member>
      <member refid="classQgsCircle_1a1d847439f7656f6ba15d2cdda174d215" prot="public" virt="virtual"><scope>QgsCircle</scope><name>setSemiMinorAxis</name></member>
      <member refid="classQgsCircle_1ac53fa1468896a03f258dd7790cbd6e46" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>tangentToPoint</name></member>
      <member refid="classQgsCircle_1abf566f9dd23566a74a062c2fdf922af3" prot="public" virt="non-virtual"><scope>QgsCircle</scope><name>toCircularString</name></member>
      <member refid="classQgsEllipse_1a96cee186b0c0a81e898b2329ac38689c" prot="public" virt="virtual"><scope>QgsCircle</scope><name>toLineString</name></member>
      <member refid="classQgsEllipse_1a26ac6c5443ef0a78451dc25e5a22724b" prot="public" virt="virtual"><scope>QgsCircle</scope><name>toPolygon</name></member>
      <member refid="classQgsCircle_1a4a8a9aa48e819b2cebc730f9d466689a" prot="public" virt="virtual"><scope>QgsCircle</scope><name>toString</name></member>
      <member refid="classQgsEllipse_1a196a98f8c96265956046e77fa7622b3a" prot="public" virt="virtual"><scope>QgsCircle</scope><name>~QgsEllipse</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
