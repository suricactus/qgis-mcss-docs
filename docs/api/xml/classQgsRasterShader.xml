<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsRasterShader" kind="class" language="C++" prot="public">
    <compoundname>QgsRasterShader</compoundname>
    <includes refid="qgsrastershader_8h" local="no">qgsrastershader.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsRasterShader_1ae62a004ed7bbb2754916733e42b0f024" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsRasterShader::mMaximumValue</definition>
        <argsstring></argsstring>
        <name>mMaximumValue</name>
        <briefdescription>
<para>user defineable maximum value for the raster shader </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="150" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsRasterShader_1a5e051740369a0b290f87ee6085e67871" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsRasterShader::mMinimumValue</definition>
        <argsstring></argsstring>
        <name>mMinimumValue</name>
        <briefdescription>
<para>User defineable minimum value for the raster shader. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="147" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsRasterShader_1a2dfd35717ccb1d8d17c7836799903615" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classQgsRasterShaderFunction" kindref="compound">QgsRasterShaderFunction</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsRasterShaderFunction &gt; QgsRasterShader::mRasterShaderFunction</definition>
        <argsstring></argsstring>
        <name>mRasterShaderFunction</name>
        <briefdescription>
<para>Pointer to the shader function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="153" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsRasterShader_1a613db00b943be9dc04a40ab648e16ed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsRasterShader::QgsRasterShader</definition>
        <argsstring>(double minimumValue=0.0, double maximumValue=255.0)</argsstring>
        <name>QgsRasterShader</name>
        <param>
          <type>double</type>
          <declname>minimumValue</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>maximumValue</declname>
          <defval>255.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="38" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.cpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1a44299dc06218461dbb03209f738ba339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsRasterShader::QgsRasterShader</definition>
        <argsstring>(const QgsRasterShader &amp;rh)=delete</argsstring>
        <name>QgsRasterShader</name>
        <param>
          <type>const <ref refid="classQgsRasterShader" kindref="compound">QgsRasterShader</ref> &amp;</type>
          <declname>rh</declname>
        </param>
        <briefdescription>
<para><ref refid="classQgsRasterShader" kindref="compound">QgsRasterShader</ref> cannot be copied. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1a0247e08fe5eea75a2131982cd3518bbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsRasterShader::maximumValue</definition>
        <argsstring>() const</argsstring>
        <name>maximumValue</name>
        <briefdescription>
<para>Returns the maximum value for the raster shader. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterShader_1ae9e633f320a7e306a54553d0940c2b08" kindref="member">setMaximumValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsRasterShader_1ac77b3984cead0dbcf37ab601cadf5fa7" kindref="member">minimumValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="56" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1ac77b3984cead0dbcf37ab601cadf5fa7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsRasterShader::minimumValue</definition>
        <argsstring>() const</argsstring>
        <name>minimumValue</name>
        <briefdescription>
<para>Returns the minimum value for the raster shader. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterShader_1a21fce073fa38f947b8a7f3b05ec39541" kindref="member">setMinimumValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsRasterShader_1a0247e08fe5eea75a2131982cd3518bbe" kindref="member">maximumValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="63" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1abab72d9c2ad0940fce705fe3e21d01d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsRasterShader" kindref="compound">QgsRasterShader</ref> &amp;</type>
        <definition>QgsRasterShader&amp; QgsRasterShader::operator=</definition>
        <argsstring>(const QgsRasterShader &amp;rh)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsRasterShader" kindref="compound">QgsRasterShader</ref> &amp;</type>
          <declname>rh</declname>
        </param>
        <briefdescription>
<para><ref refid="classQgsRasterShader" kindref="compound">QgsRasterShader</ref> cannot be copied. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1a38d70b2336cad799a1b422c32a45a692" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsRasterShaderFunction" kindref="compound">QgsRasterShaderFunction</ref> *</type>
        <definition>QgsRasterShaderFunction* QgsRasterShader::rasterShaderFunction</definition>
        <argsstring>()</argsstring>
        <name>rasterShaderFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="65" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1a0afaebc4e180cd7548f4369b23af9ce4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classQgsRasterShaderFunction" kindref="compound">QgsRasterShaderFunction</ref> *</type>
        <definition>const QgsRasterShaderFunction* QgsRasterShader::rasterShaderFunction</definition>
        <argsstring>() const</argsstring>
        <name>rasterShaderFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1a70dd4eb57bece77fb3473cd75d80db5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsRasterShader::readXml</definition>
        <argsstring>(const QDomElement &amp;elem)</argsstring>
        <name>readXml</name>
        <param>
          <type>const QDomElement &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Reads shader state from an XML element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="139" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.cpp" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1ae9e633f320a7e306a54553d0940c2b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsRasterShader::setMaximumValue</definition>
        <argsstring>(double value)</argsstring>
        <name>setMaximumValue</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the maximum <emphasis>value</emphasis> for the raster shader. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterShader_1a21fce073fa38f947b8a7f3b05ec39541" kindref="member">setMinimumValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsRasterShader_1a0247e08fe5eea75a2131982cd3518bbe" kindref="member">maximumValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="122" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.cpp" bodystart="69" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1a21fce073fa38f947b8a7f3b05ec39541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsRasterShader::setMinimumValue</definition>
        <argsstring>(double value)</argsstring>
        <name>setMinimumValue</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the minimum <emphasis>value</emphasis> for the raster shader. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterShader_1ae9e633f320a7e306a54553d0940c2b08" kindref="member">setMaximumValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsRasterShader_1ac77b3984cead0dbcf37ab601cadf5fa7" kindref="member">minimumValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="129" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.cpp" bodystart="80" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1aaab873ad98e3a214069cafae58d2f751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsRasterShader::setRasterShaderFunction</definition>
        <argsstring>(QgsRasterShaderFunction *function)</argsstring>
        <name>setRasterShaderFunction</name>
        <param>
          <type><ref refid="classQgsRasterShaderFunction" kindref="compound">QgsRasterShaderFunction</ref> *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>A public method that allows the user to set their own shader <emphasis>function</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Raster shader takes ownership of the shader function instance </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="115" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.cpp" bodystart="56" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1a7abeacfda523a4a555cbecfc4db3c402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsRasterShader::shade</definition>
        <argsstring>(double value, int *returnRedValue, int *returnGreenValue, int *returnBlueValue, int *returnAlpha)</argsstring>
        <name>shade</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnRedValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnGreenValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnBlueValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnAlpha</declname>
        </param>
        <briefdescription>
<para>Generates a new RGBA value based on one input <emphasis>value</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The original value to base a new RGBA value on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnRedValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The red component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnGreenValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The green component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnBlueValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnAlpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha component of the new RGBA value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the return values are valid otherwise false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="84" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.cpp" bodystart="36" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1a225440903d7678d146b26a33a48b7ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsRasterShader::shade</definition>
        <argsstring>(double redValue, double greenValue, double blueValue, double alphaValue, int *returnRedValue, int *returnGreenValue, int *returnBlueValue, int *returnAlpha)</argsstring>
        <name>shade</name>
        <param>
          <type>double</type>
          <declname>redValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>greenValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>blueValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnRedValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnGreenValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnBlueValue</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>returnAlpha</declname>
        </param>
        <briefdescription>
<para>Generates a new RGBA value based on an original RGBA value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>redValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The red component of the original value to base a new RGBA value on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>greenValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The green component of the original value to base a new RGBA value on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blueValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue component of the original value to base a new RGBA value on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alphaValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha component of the original value to base a new RGBA value on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnRedValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The red component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnGreenValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The green component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnBlueValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue component of the new RGBA value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnAlpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha component of the new RGBA value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the return values are valid otherwise false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="102" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.cpp" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterShader_1adcb14d321633edb0c683833ffca9e55a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsRasterShader::writeXml</definition>
        <argsstring>(QDomDocument &amp;doc, QDomElement &amp;parent) const</argsstring>
        <name>writeXml</name>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>QDomElement &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Writes shader state to an XML element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="134" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.cpp" bodystart="91" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for all raster shaders. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" line="35" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrastershader.h" bodystart="34" bodyend="155"/>
    <listofallmembers>
      <member refid="classQgsRasterShader_1a0247e08fe5eea75a2131982cd3518bbe" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>maximumValue</name></member>
      <member refid="classQgsRasterShader_1ac77b3984cead0dbcf37ab601cadf5fa7" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>minimumValue</name></member>
      <member refid="classQgsRasterShader_1ae62a004ed7bbb2754916733e42b0f024" prot="private" virt="non-virtual"><scope>QgsRasterShader</scope><name>mMaximumValue</name></member>
      <member refid="classQgsRasterShader_1a5e051740369a0b290f87ee6085e67871" prot="private" virt="non-virtual"><scope>QgsRasterShader</scope><name>mMinimumValue</name></member>
      <member refid="classQgsRasterShader_1a2dfd35717ccb1d8d17c7836799903615" prot="private" virt="non-virtual"><scope>QgsRasterShader</scope><name>mRasterShaderFunction</name></member>
      <member refid="classQgsRasterShader_1abab72d9c2ad0940fce705fe3e21d01d2" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>operator=</name></member>
      <member refid="classQgsRasterShader_1a613db00b943be9dc04a40ab648e16ed6" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>QgsRasterShader</name></member>
      <member refid="classQgsRasterShader_1a44299dc06218461dbb03209f738ba339" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>QgsRasterShader</name></member>
      <member refid="classQgsRasterShader_1a38d70b2336cad799a1b422c32a45a692" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>rasterShaderFunction</name></member>
      <member refid="classQgsRasterShader_1a0afaebc4e180cd7548f4369b23af9ce4" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>rasterShaderFunction</name></member>
      <member refid="classQgsRasterShader_1a70dd4eb57bece77fb3473cd75d80db5b" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>readXml</name></member>
      <member refid="classQgsRasterShader_1ae9e633f320a7e306a54553d0940c2b08" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>setMaximumValue</name></member>
      <member refid="classQgsRasterShader_1a21fce073fa38f947b8a7f3b05ec39541" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>setMinimumValue</name></member>
      <member refid="classQgsRasterShader_1aaab873ad98e3a214069cafae58d2f751" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>setRasterShaderFunction</name></member>
      <member refid="classQgsRasterShader_1a7abeacfda523a4a555cbecfc4db3c402" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>shade</name></member>
      <member refid="classQgsRasterShader_1a225440903d7678d146b26a33a48b7ea4" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>shade</name></member>
      <member refid="classQgsRasterShader_1adcb14d321633edb0c683833ffca9e55a" prot="public" virt="non-virtual"><scope>QgsRasterShader</scope><name>writeXml</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
