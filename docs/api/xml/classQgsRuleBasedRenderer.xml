<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsRuleBasedRenderer" kind="class" language="C++" prot="public">
    <compoundname>QgsRuleBasedRenderer</compoundname>
    <basecompoundref refid="classQgsFeatureRenderer" prot="public" virt="non-virtual">QgsFeatureRenderer</basecompoundref>
    <includes refid="qgsrulebasedrenderer_8h" local="no">qgsrulebasedrenderer.h</includes>
    <innerclass refid="structQgsRuleBasedRenderer_1_1FeatureToRender" prot="public">QgsRuleBasedRenderer::FeatureToRender</innerclass>
    <innerclass refid="structQgsRuleBasedRenderer_1_1RenderJob" prot="public">QgsRuleBasedRenderer::RenderJob</innerclass>
    <innerclass refid="structQgsRuleBasedRenderer_1_1RenderLevel" prot="public">QgsRuleBasedRenderer::RenderLevel</innerclass>
    <innerclass refid="classQgsRuleBasedRenderer_1_1Rule" prot="public">QgsRuleBasedRenderer::Rule</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsRuleBasedRenderer_1a3d3b43ab92a5d8cee117bfb50ef65299" prot="public" static="no">
        <name>FeatureFlags</name>
        <enumvalue id="classQgsRuleBasedRenderer_1a3d3b43ab92a5d8cee117bfb50ef65299aa58bfc0f62f615e6ce90d7326a9e2075" prot="public">
          <name>FeatIsSelected</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsRuleBasedRenderer_1a3d3b43ab92a5d8cee117bfb50ef65299a8d21ae1f13df5f5fc83ad63737d8fc6d" prot="public">
          <name>FeatDrawMarkers</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="43" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="typedef" id="classQgsRuleBasedRenderer_1a383d7c7f3cc41b8f4bd02378e37923b9" prot="public" static="no">
        <type>QList&lt; <ref refid="structQgsRuleBasedRenderer_1_1RenderLevel" kindref="compound">QgsRuleBasedRenderer::RenderLevel</ref> &gt;</type>
        <definition>typedef QList&lt;QgsRuleBasedRenderer::RenderLevel&gt; QgsRuleBasedRenderer::RenderQueue</definition>
        <argsstring></argsstring>
        <name>RenderQueue</name>
        <briefdescription>
<para>Rendering queue: a list of rendering levels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="117" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classQgsRuleBasedRenderer_1aa4daf942c11dabea777abdc3cd27bbf9" prot="public" static="no">
        <type>QList&lt; <ref refid="classQgsRuleBasedRenderer_1_1Rule" kindref="compound">QgsRuleBasedRenderer::Rule</ref> * &gt;</type>
        <definition>typedef QList&lt;QgsRuleBasedRenderer::Rule *&gt; QgsRuleBasedRenderer::RuleList</definition>
        <argsstring></argsstring>
        <name>RuleList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="120" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQgsRuleBasedRenderer_1ae594f309d444d2ab190d69793c18775e" prot="protected" static="no" mutable="no">
        <type>QList&lt; <ref refid="structQgsRuleBasedRenderer_1_1FeatureToRender" kindref="compound">FeatureToRender</ref> &gt;</type>
        <definition>QList&lt;FeatureToRender&gt; QgsRuleBasedRenderer::mCurrentFeatures</definition>
        <argsstring></argsstring>
        <name>mCurrentFeatures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="542" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsRuleBasedRenderer_1af1209df5338601f45283f522750706c6" prot="protected" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsRuleBasedRenderer::mFilter</definition>
        <argsstring></argsstring>
        <name>mFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="544" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsRuleBasedRenderer_1adbcf08c99386290bad32ccf172b8e615" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsRuleBasedRenderer_1a383d7c7f3cc41b8f4bd02378e37923b9" kindref="member">RenderQueue</ref></type>
        <definition>RenderQueue QgsRuleBasedRenderer::mRenderQueue</definition>
        <argsstring></argsstring>
        <name>mRenderQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="541" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsRuleBasedRenderer_1aa7b641982e264801ec1b58917a8f1cb1" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsRuleBasedRenderer_1_1Rule" kindref="compound">Rule</ref> *</type>
        <definition>Rule* QgsRuleBasedRenderer::mRootRule</definition>
        <argsstring></argsstring>
        <name>mRootRule</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>the root node with hierarchical list of rules </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="538" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" bodystart="538" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a0736586214ee64d220fc6943e4624d26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsRuleBasedRenderer" kindref="compound">QgsRuleBasedRenderer</ref> *</type>
        <definition>QgsRuleBasedRenderer * QgsRuleBasedRenderer::convertFromRenderer</definition>
        <argsstring>(const QgsFeatureRenderer *renderer)</argsstring>
        <name>convertFromRenderer</name>
        <param>
          <type>const <ref refid="classQgsFeatureRenderer" kindref="compound">QgsFeatureRenderer</ref> *</type>
          <declname>renderer</declname>
        </param>
        <briefdescription>
<para>creates a <ref refid="classQgsRuleBasedRenderer" kindref="compound">QgsRuleBasedRenderer</ref> from an existing renderer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a new renderer if the conversion was possible, otherwise 0. </para></simplesect>
<simplesect kind="since"><para>QGIS 2.5 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="531" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1240" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a036c9df499bf2c305384e21277e22a81" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsRuleBasedRenderer::convertToDataDefinedSymbology</definition>
        <argsstring>(QgsSymbol *symbol, const QString &amp;sizeScaleField, const QString &amp;rotationField=QString())</argsstring>
        <name>convertToDataDefinedSymbology</name>
        <param>
          <type><ref refid="classQgsSymbol" kindref="compound">QgsSymbol</ref> *</type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>sizeScaleField</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>rotationField</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>helper function to convert the size scale and rotation fields present in some other renderers to data defined symbology </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="534" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1422" bodyend="1469"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1aca8ddf60f02758c51e377247df666d62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRenderer" kindref="compound">QgsFeatureRenderer</ref> *</type>
        <definition>QgsFeatureRenderer * QgsRuleBasedRenderer::create</definition>
        <argsstring>(QDomElement &amp;element, const QgsReadWriteContext &amp;context)</argsstring>
        <name>create</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Creates a new rule-based renderer instance from XML. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="467" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1076" bodyend="1097"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1aea98629c4a22d755ce0be0021402149e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFeatureRenderer" kindref="compound">QgsFeatureRenderer</ref> *</type>
        <definition>QgsFeatureRenderer * QgsRuleBasedRenderer::createFromSld</definition>
        <argsstring>(QDomElement &amp;element, QgsWkbTypes::GeometryType geomType)</argsstring>
        <name>createFromSld</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="classQgsWkbTypes_1a60e72c2f73cb07fdbcdbc2d5068b5d9c" kindref="member">QgsWkbTypes::GeometryType</ref></type>
          <declname>geomType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="495" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1099" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a03169689bd52d9e81bae605e2b748d9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsRuleBasedRenderer::refineRuleCategories</definition>
        <argsstring>(QgsRuleBasedRenderer::Rule *initialRule, QgsCategorizedSymbolRenderer *r)</argsstring>
        <name>refineRuleCategories</name>
        <param>
          <type><ref refid="classQgsRuleBasedRenderer_1_1Rule" kindref="compound">QgsRuleBasedRenderer::Rule</ref> *</type>
          <declname>initialRule</declname>
        </param>
        <param>
          <type><ref refid="classQgsCategorizedSymbolRenderer" kindref="compound">QgsCategorizedSymbolRenderer</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>take a rule and create a list of new rules based on the categories from categorized symbol renderer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="520" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1133" bodyend="1161"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a4f3fff8193bbc98cee27cd4d5f2beae1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsRuleBasedRenderer::refineRuleRanges</definition>
        <argsstring>(QgsRuleBasedRenderer::Rule *initialRule, QgsGraduatedSymbolRenderer *r)</argsstring>
        <name>refineRuleRanges</name>
        <param>
          <type><ref refid="classQgsRuleBasedRenderer_1_1Rule" kindref="compound">QgsRuleBasedRenderer::Rule</ref> *</type>
          <declname>initialRule</declname>
        </param>
        <param>
          <type><ref refid="classQgsGraduatedSymbolRenderer" kindref="compound">QgsGraduatedSymbolRenderer</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>take a rule and create a list of new rules based on the ranges from graduated symbol renderer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="522" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1163" bodyend="1192"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a8e87771fd7f913cd2f1a13fa04d7f959" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsRuleBasedRenderer::refineRuleScales</definition>
        <argsstring>(QgsRuleBasedRenderer::Rule *initialRule, QList&lt; int &gt; scales)</argsstring>
        <name>refineRuleScales</name>
        <param>
          <type><ref refid="classQgsRuleBasedRenderer_1_1Rule" kindref="compound">QgsRuleBasedRenderer::Rule</ref> *</type>
          <declname>initialRule</declname>
        </param>
        <param>
          <type>QList&lt; int &gt;</type>
          <declname>scales</declname>
        </param>
        <briefdescription>
<para>take a rule and create a list of new rules with intervals of scales given by the passed scale denominators </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="524" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1194" bodyend="1211"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1af3c9091ee567b082ac31e45308a4ce1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsRuleBasedRenderer::QgsRuleBasedRenderer</definition>
        <argsstring>(QgsRuleBasedRenderer::Rule *root)</argsstring>
        <name>QgsRuleBasedRenderer</name>
        <param>
          <type><ref refid="classQgsRuleBasedRenderer_1_1Rule" kindref="compound">QgsRuleBasedRenderer::Rule</ref> *</type>
          <declname>root</declname>
        </param>
        <briefdescription>
<para>Constructs the renderer from given tree of rules (takes ownership) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="470" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="857" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a71f44fe9595e827d8cf773f4dbfd7be8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsRuleBasedRenderer::QgsRuleBasedRenderer</definition>
        <argsstring>(QgsSymbol *defaultSymbol)</argsstring>
        <name>QgsRuleBasedRenderer</name>
        <param>
          <type><ref refid="classQgsSymbol" kindref="compound">QgsSymbol</ref> *</type>
          <declname>defaultSymbol</declname>
        </param>
        <briefdescription>
<para>Constructor for convenience. Creates a root rule and adds a default rule with symbol (takes ownership) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="472" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="863" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1aa8c68e3b4510f4b7b6d175f05fcb8a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsRuleBasedRenderer::~QgsRuleBasedRenderer</definition>
        <argsstring>() override</argsstring>
        <name>~QgsRuleBasedRenderer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="474" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="870" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a1576aa5317eb1d9276f403313db68823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>QgsFeatureRenderer::Capabilities</type>
        <definition>QgsFeatureRenderer::Capabilities QgsRuleBasedRenderer::capabilities</definition>
        <argsstring>() override</argsstring>
        <name>capabilities</name>
        <reimplements refid="classQgsFeatureRenderer_1a981b574dd6813bcc3cd849822af8929b">capabilities</reimplements>
        <briefdescription>
<para>Returns details about internals of this renderer. </para>        </briefdescription>
        <detaileddescription>
<para>E.g. if you only want to deal with visible features:</para><para><programlisting><codeline><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>renderer.capabilities().testFlag(QgsFeatureRenderer.Filter)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>renderer.willRenderFeature(feature,<sp/>context):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>deal_with_my_feature()</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>skip_the_curren_feature()</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="511" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" bodystart="511" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a27f540560feae36f892291cadc284b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsRuleBasedRenderer::checkLegendSymbolItem</definition>
        <argsstring>(const QString &amp;key, bool state=true) override</argsstring>
        <name>checkLegendSymbolItem</name>
        <reimplements refid="classQgsFeatureRenderer_1aa007f92400dd9dbbc5766e1101e48851">checkLegendSymbolItem</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>item in symbology was checked </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.5 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="502" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1054" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1ac907894485fabd2dfbd8995953bcda0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsRuleBasedRenderer" kindref="compound">QgsRuleBasedRenderer</ref> *</type>
        <definition>QgsRuleBasedRenderer * QgsRuleBasedRenderer::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classQgsFeatureRenderer_1a1dc475663007d2a26f8e4480fd51ba9b">clone</reimplements>
        <briefdescription>
<para>Create a deep copy of this renderer. </para>        </briefdescription>
        <detaileddescription>
<para>Should be implemented by all subclasses and generate a proper subclass.</para><para><simplesect kind="return"><para>A copy of this renderer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="491" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="982" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a5b7cd6b84e861c0eea30a415c4bc22c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsRuleBasedRenderer::dump</definition>
        <argsstring>() const override</argsstring>
        <name>dump</name>
        <reimplements refid="classQgsFeatureRenderer_1a905c0574eb38e9be79210d9ffb5001d9">dump</reimplements>
        <briefdescription>
<para>Returns debug information about this renderer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="506" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1213" bodyend="1218"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a802089170b9e98ebc2611eca8347e441" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsRuleBasedRenderer::filter</definition>
        <argsstring>(const QgsFields &amp;fields=QgsFields()) override</argsstring>
        <name>filter</name>
        <reimplements refid="classQgsFeatureRenderer_1a3d293f3099396715ec4b0c3773ac9ed9">filter</reimplements>
        <param>
          <type>const <ref refid="classQgsFields" kindref="compound">QgsFields</ref> &amp;</type>
          <declname>fields</declname>
          <defval><ref refid="classQgsFields" kindref="compound">QgsFields</ref>()</defval>
        </param>
        <briefdescription>
<para>If a renderer does not require all the features this method may be overridden and return an expression used as where clause. </para>        </briefdescription>
        <detaileddescription>
<para>This will be called once after <ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref> and before the first call to <ref refid="classQgsRuleBasedRenderer_1af38e20b0f1878963223c02fe69006a07" kindref="member">renderFeature()</ref>. By default this returns a null string and all features will be requested. You do not need to specify the extent in here, this is taken care of separately and will be combined with a filter returned from this method.</para><para><simplesect kind="return"><para>An expression used as where clause </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="485" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="967" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1abc707db7aa28a747c31682f82032e513" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsRuleBasedRenderer::filterNeedsGeometry</definition>
        <argsstring>() const override</argsstring>
        <name>filterNeedsGeometry</name>
        <reimplements refid="classQgsFeatureRenderer_1aad2474510673bc573a8f15517d9d0ce7">filterNeedsGeometry</reimplements>
        <briefdescription>
<para>Returns true if this renderer requires the geometry to apply the filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="489" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="977" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a43225775baf0970cf2c805c1566cd192" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsRuleBasedRenderer::legendKeysForFeature</definition>
        <argsstring>(const QgsFeature &amp;feature, QgsRenderContext &amp;context) const override</argsstring>
        <name>legendKeysForFeature</name>
        <reimplements refid="classQgsFeatureRenderer_1a717c6d365c6e22402d6d95df1b56c25a">legendKeysForFeature</reimplements>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns legend keys matching a specified feature. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="510" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1235" bodyend="1238"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a082909c24517f5387d9c15cadd7b4e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsRuleBasedRenderer::legendSymbolItemChecked</definition>
        <argsstring>(const QString &amp;key) override</argsstring>
        <name>legendSymbolItemChecked</name>
        <reimplements refid="classQgsFeatureRenderer_1a39211a310945623959640a0c7d16b4bc">legendSymbolItemChecked</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>items of symbology items in legend is checked </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.5 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="501" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1048" bodyend="1052"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1ad0d4fa403dff49beee59d5f75080926b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="qgslegendsymbolitem_8h_1a407af583ecc2cfb135af16d9596bdaee" kindref="member">QgsLegendSymbolList</ref></type>
        <definition>QgsLegendSymbolList QgsRuleBasedRenderer::legendSymbolItems</definition>
        <argsstring>() const override</argsstring>
        <name>legendSymbolItems</name>
        <reimplements refid="classQgsFeatureRenderer_1a21cbef5245fd485a2e2a4a79f4f12fb6">legendSymbolItems</reimplements>
        <briefdescription>
<para>Returns a list of symbology items for the legend. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="505" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1070" bodyend="1073"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a72d4482bdd3940abbbc4ccd9a5c1b506" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsRuleBasedRenderer::legendSymbolItemsCheckable</definition>
        <argsstring>() const override</argsstring>
        <name>legendSymbolItemsCheckable</name>
        <reimplements refid="classQgsFeatureRenderer_1a31a44087be8b1cfc8e494879442dfb41">legendSymbolItemsCheckable</reimplements>
        <briefdescription>
<para>items of symbology items in legend should be checkable </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.5 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="500" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1043" bodyend="1046"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a694bc38d3df702d339350af0b389e05c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="qgsrenderer_8h_1a9e5c0f5f88a8fd455ad8ef92c3e96f1f" kindref="member">QgsSymbolList</ref></type>
        <definition>QgsSymbolList QgsRuleBasedRenderer::originalSymbolsForFeature</definition>
        <argsstring>(const QgsFeature &amp;feature, QgsRenderContext &amp;context) const override</argsstring>
        <name>originalSymbolsForFeature</name>
        <reimplements refid="classQgsFeatureRenderer_1afe8da3c1fe313d782f8c7164df01aec9">originalSymbolsForFeature</reimplements>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Equivalent of <ref refid="classQgsRuleBasedRenderer_1a694bc38d3df702d339350af0b389e05c" kindref="member">originalSymbolsForFeature()</ref> call extended to support renderers that may use more symbols per feature - similar to <ref refid="classQgsRuleBasedRenderer_1a59b2a6c80beac5c73a50c5f989391cc3" kindref="member">symbolsForFeature()</ref> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="509" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1230" bodyend="1233"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1af38e20b0f1878963223c02fe69006a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsRuleBasedRenderer::renderFeature</definition>
        <argsstring>(const QgsFeature &amp;feature, QgsRenderContext &amp;context, int layer=-1, bool selected=false, bool drawVertexMarker=false) override</argsstring>
        <name>renderFeature</name>
        <reimplements refid="classQgsFeatureRenderer_1a7f3398e1ba6247bf642eeb8d21a8acf3">renderFeature</reimplements>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>layer</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>selected</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>drawVertexMarker</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Render a feature using this renderer in the given context. </para>        </briefdescription>
        <detaileddescription>
<para>Must be called between <ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref> and <ref refid="classQgsRuleBasedRenderer_1aa65fdcbddc98ae7640e2ba05841db3cc" kindref="member">stopRender()</ref> calls. Default implementation renders a symbol as determined by <ref refid="classQgsRuleBasedRenderer_1a33a02c0c3468832b715c178e95f75bb5" kindref="member">symbolForFeature()</ref> call. Returns true if the feature has been returned (this is used for example to determine whether the feature may be labelled).</para><para>If layer is not -1, the renderer should draw only a particula layer from symbols (in order to support symbol level rendering).</para><para><simplesect kind="see"><para><ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsRuleBasedRenderer_1aa65fdcbddc98ae7640e2ba05841db3cc" kindref="member">stopRender()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="479" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="882" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a4fb549757b93a2694b686e8d6f8baa11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsRuleBasedRenderer_1_1Rule" kindref="compound">QgsRuleBasedRenderer::Rule</ref> *</type>
        <definition>QgsRuleBasedRenderer::Rule* QgsRuleBasedRenderer::rootRule</definition>
        <argsstring>()</argsstring>
        <name>rootRule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="515" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" bodystart="515" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a0e060d8f4e8818808b012e030ea160cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QDomElement</type>
        <definition>QDomElement QgsRuleBasedRenderer::save</definition>
        <argsstring>(QDomDocument &amp;doc, const QgsReadWriteContext &amp;context) override</argsstring>
        <name>save</name>
        <reimplements refid="classQgsFeatureRenderer_1a840dd8edae9546c287254ae97c137ac6">save</reimplements>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>store renderer info to XML element </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="499" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1013" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a0f30436cd365a511f81f543c433b4f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsRuleBasedRenderer::setLegendSymbolItem</definition>
        <argsstring>(const QString &amp;key, QgsSymbol *symbol) override</argsstring>
        <name>setLegendSymbolItem</name>
        <reimplements refid="classQgsFeatureRenderer_1a499bf07e27cb21cd9b6340daa686fa59">setLegendSymbolItem</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classQgsSymbol" kindref="compound">QgsSymbol</ref> *</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>Sets the symbol to be used for a legend symbol item. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>rule key for legend symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>new symbol for legend item. Ownership is transferred to renderer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="504" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1061" bodyend="1068"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsRuleBasedRenderer::startRender</definition>
        <argsstring>(QgsRenderContext &amp;context, const QgsFields &amp;fields) override</argsstring>
        <name>startRender</name>
        <reimplements refid="classQgsFeatureRenderer_1af01839c584bf5fc58e259adaa318c0bd">startRender</reimplements>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsFields" kindref="compound">QgsFields</ref> &amp;</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
<para>Must be called when a new render cycle is started. </para>        </briefdescription>
        <detaileddescription>
<para>A call to <ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref> must always be followed by a corresponding call to <ref refid="classQgsRuleBasedRenderer_1aa65fdcbddc98ae7640e2ba05841db3cc" kindref="member">stopRender()</ref> after all features have been rendered.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional information passed to the renderer about the job which will be rendered </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fields</parametername>
</parameternamelist>
<parameterdescription>
<para>The fields available for rendering</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsRuleBasedRenderer_1aa65fdcbddc98ae7640e2ba05841db3cc" kindref="member">stopRender()</ref></para></simplesect>
<simplesect kind="warning"><para>This method is not thread safe. Before calling <ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref> in a non-main thread, the renderer should instead be cloned and <ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref>/stopRender() called on the clone. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="481" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="898" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1aa65fdcbddc98ae7640e2ba05841db3cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsRuleBasedRenderer::stopRender</definition>
        <argsstring>(QgsRenderContext &amp;context) override</argsstring>
        <name>stopRender</name>
        <reimplements refid="classQgsFeatureRenderer_1a61ff1d057f11ca5e260e913dc37fe85f">stopRender</reimplements>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Must be called when a render cycle has finished, to allow the renderer to clean up. </para>        </briefdescription>
        <detaileddescription>
<para>Calls to <ref refid="classQgsRuleBasedRenderer_1aa65fdcbddc98ae7640e2ba05841db3cc" kindref="member">stopRender()</ref> must always be preceded by a call to <ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref>.</para><para><simplesect kind="warning"><para>This method is not thread safe. Before calling <ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref> in a non-main thread, the renderer should instead be cloned and <ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref>/stopRender() called on the clone.</para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="483" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="923" bodyend="965"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a33a02c0c3468832b715c178e95f75bb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsSymbol" kindref="compound">QgsSymbol</ref> *</type>
        <definition>QgsSymbol * QgsRuleBasedRenderer::symbolForFeature</definition>
        <argsstring>(const QgsFeature &amp;feature, QgsRenderContext &amp;context) const override</argsstring>
        <name>symbolForFeature</name>
        <reimplements refid="classQgsFeatureRenderer_1a79919f0fef618d71973ac3d4ff8c6525">symbolForFeature</reimplements>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns symbol for current feature. Should not be used individually: there could be more symbols for a feature. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="477" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="876" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1afa0160d037c18336499ec1d06b4215ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="qgsrenderer_8h_1a9e5c0f5f88a8fd455ad8ef92c3e96f1f" kindref="member">QgsSymbolList</ref></type>
        <definition>QgsSymbolList QgsRuleBasedRenderer::symbols</definition>
        <argsstring>(QgsRenderContext &amp;context) const override</argsstring>
        <name>symbols</name>
        <reimplements refid="classQgsFeatureRenderer_1a5f3e784718999bba182e46d2bff4d6c1">symbols</reimplements>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns list of symbols used by the renderer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>render context </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="497" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1008" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a59b2a6c80beac5c73a50c5f989391cc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="qgsrenderer_8h_1a9e5c0f5f88a8fd455ad8ef92c3e96f1f" kindref="member">QgsSymbolList</ref></type>
        <definition>QgsSymbolList QgsRuleBasedRenderer::symbolsForFeature</definition>
        <argsstring>(const QgsFeature &amp;feature, QgsRenderContext &amp;context) const override</argsstring>
        <name>symbolsForFeature</name>
        <reimplements refid="classQgsFeatureRenderer_1a5933b6c08051c983cf65d874ac7b4b69">symbolsForFeature</reimplements>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns list of symbols used for rendering the feature. </para>        </briefdescription>
        <detaileddescription>
<para>For renderers that do not support MoreSymbolsPerFeature it is more efficient to use <ref refid="classQgsRuleBasedRenderer_1a33a02c0c3468832b715c178e95f75bb5" kindref="member">symbolForFeature()</ref> <simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="508" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1225" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a7772de975275b4e8d32ae43455c5518b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsRuleBasedRenderer::toSld</definition>
        <argsstring>(QDomDocument &amp;doc, QDomElement &amp;element, const QgsStringMap &amp;props=QgsStringMap()) const override</argsstring>
        <name>toSld</name>
        <reimplements refid="classQgsFeatureRenderer_1a84d6afd0e56bbca290789d726bb05117">toSld</reimplements>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="qgis_8h_1ab13d4e9821da606b92748097c691b9dd" kindref="member">QgsStringMap</ref> &amp;</type>
          <declname>props</declname>
          <defval><ref refid="qgis_8h_1ab13d4e9821da606b92748097c691b9dd" kindref="member">QgsStringMap</ref>()</defval>
        </param>
        <briefdescription>
<para>used from subclasses to create SLD <ref refid="classQgsRuleBasedRenderer_1_1Rule" kindref="compound">Rule</ref> elements following SLD v1.1 specs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="493" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1002" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a7bb019ffb42ecd2a547375726bb0ba08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsRuleBasedRenderer::usedAttributes</definition>
        <argsstring>(const QgsRenderContext &amp;context) const override</argsstring>
        <name>usedAttributes</name>
        <reimplements refid="classQgsFeatureRenderer_1aaf8af921f929ad0ac9c947d87ec70ca6">usedAttributes</reimplements>
        <param>
          <type>const <ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns a list of attributes required by this renderer. </para>        </briefdescription>
        <detaileddescription>
<para>Attributes not listed in here may not have been requested from the provider at rendering time.</para><para><simplesect kind="return"><para>A set of attributes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="487" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="972" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRuleBasedRenderer_1a86ee043692ddfc8c933c885b8892ac51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsRuleBasedRenderer::willRenderFeature</definition>
        <argsstring>(const QgsFeature &amp;feature, QgsRenderContext &amp;context) const override</argsstring>
        <name>willRenderFeature</name>
        <reimplements refid="classQgsFeatureRenderer_1aceb8a0f58f803a6a535f8998588600da">willRenderFeature</reimplements>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns whether the renderer will render a feature or not. </para>        </briefdescription>
        <detaileddescription>
<para>Must be called between <ref refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" kindref="member">startRender()</ref> and <ref refid="classQgsRuleBasedRenderer_1aa65fdcbddc98ae7640e2ba05841db3cc" kindref="member">stopRender()</ref> calls. Default implementation uses <ref refid="classQgsRuleBasedRenderer_1a33a02c0c3468832b715c178e95f75bb5" kindref="member">symbolForFeature()</ref>. <simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="507" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.cpp" bodystart="1220" bodyend="1223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>When drawing a vector layer with rule-based renderer, it goes through the rules and draws features with symbols from rules that match. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="8058">
        <label>QgsFeatureRenderer</label>
        <link refid="classQgsFeatureRenderer"/>
      </node>
      <node id="8057">
        <label>QgsRuleBasedRenderer</label>
        <link refid="classQgsRuleBasedRenderer"/>
        <childnode refid="8058" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8062">
        <label>QList&lt; QgsFeatureRequest::OrderByClause &gt;</label>
      </node>
      <node id="8060">
        <label>QgsFeatureRenderer</label>
        <link refid="classQgsFeatureRenderer"/>
        <childnode refid="8061" relation="usage">
          <edgelabel>mOrderBy</edgelabel>
        </childnode>
        <childnode refid="8063" relation="usage">
          <edgelabel>mPaintEffect</edgelabel>
        </childnode>
      </node>
      <node id="8063">
        <label>QgsPaintEffect</label>
        <link refid="classQgsPaintEffect"/>
      </node>
      <node id="8059">
        <label>QgsRuleBasedRenderer</label>
        <link refid="classQgsRuleBasedRenderer"/>
        <childnode refid="8060" relation="public-inheritance">
        </childnode>
        <childnode refid="8064" relation="usage">
          <edgelabel>mRootRule</edgelabel>
        </childnode>
      </node>
      <node id="8061">
        <label>QgsFeatureRequest::OrderBy</label>
        <link refid="classQgsFeatureRequest_1_1OrderBy"/>
        <childnode refid="8062" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8064">
        <label>QgsRuleBasedRenderer::Rule</label>
        <link refid="classQgsRuleBasedRenderer_1_1Rule"/>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" line="38" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgsrulebasedrenderer.h" bodystart="37" bodyend="551"/>
    <listofallmembers>
      <member refid="classQgsFeatureRenderer_1a201626990c3b54690dad2de7e6401d2f" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>_getPoint</name></member>
      <member refid="classQgsRuleBasedRenderer_1a1576aa5317eb1d9276f403313db68823" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>capabilities</name></member>
      <member refid="classQgsFeatureRenderer_1aa33cca89be2cf805acfe309f491b7151" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>Capability</name></member>
      <member refid="classQgsRuleBasedRenderer_1a27f540560feae36f892291cadc284b47" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>checkLegendSymbolItem</name></member>
      <member refid="classQgsRuleBasedRenderer_1ac907894485fabd2dfbd8995953bcda0a" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>clone</name></member>
      <member refid="classQgsRuleBasedRenderer_1a0736586214ee64d220fc6943e4624d26" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>convertFromRenderer</name></member>
      <member refid="classQgsFeatureRenderer_1ab25638a4e46eeb34e063d8199c762d47" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>convertSymbolRotation</name></member>
      <member refid="classQgsFeatureRenderer_1a396b23d7a9678c90c31bd5173eb70132" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>convertSymbolSizeScale</name></member>
      <member refid="classQgsRuleBasedRenderer_1a036c9df499bf2c305384e21277e22a81" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>convertToDataDefinedSymbology</name></member>
      <member refid="classQgsFeatureRenderer_1a7f2f02e0303669da209392112b5c6494" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>copyRendererData</name></member>
      <member refid="classQgsRuleBasedRenderer_1aca8ddf60f02758c51e377247df666d62" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>create</name></member>
      <member refid="classQgsRuleBasedRenderer_1aea98629c4a22d755ce0be0021402149e" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>createFromSld</name></member>
      <member refid="classQgsFeatureRenderer_1a23ae7f4634cbd7df5e3cd06080b40119" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>defaultRenderer</name></member>
      <member refid="classQgsRuleBasedRenderer_1a5b7cd6b84e861c0eea30a415c4bc22c5" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>dump</name></member>
      <member refid="classQgsFeatureRenderer_1ae6e208c5af06c7ac126b512d607574c4" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>embeddedRenderer</name></member>
      <member refid="classQgsRuleBasedRenderer_1a3d3b43ab92a5d8cee117bfb50ef65299a8d21ae1f13df5f5fc83ad63737d8fc6d" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>FeatDrawMarkers</name></member>
      <member refid="classQgsRuleBasedRenderer_1a3d3b43ab92a5d8cee117bfb50ef65299aa58bfc0f62f615e6ce90d7326a9e2075" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>FeatIsSelected</name></member>
      <member refid="classQgsRuleBasedRenderer_1a3d3b43ab92a5d8cee117bfb50ef65299" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>FeatureFlags</name></member>
      <member refid="classQgsRuleBasedRenderer_1a802089170b9e98ebc2611eca8347e441" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>filter</name></member>
      <member refid="classQgsFeatureRenderer_1aa33cca89be2cf805acfe309f491b7151ac421b4212b3fe37ac685edf9cc92110f" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>Filter</name></member>
      <member refid="classQgsRuleBasedRenderer_1abc707db7aa28a747c31682f82032e513" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>filterNeedsGeometry</name></member>
      <member refid="classQgsFeatureRenderer_1a4d4d81f72e6866366a1acdcce8ead139" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>forceRasterRender</name></member>
      <member refid="classQgsFeatureRenderer_1a6d9ba0a28df86dc5917bc8627117a7c0" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>legendClassificationAttribute</name></member>
      <member refid="classQgsRuleBasedRenderer_1a43225775baf0970cf2c805c1566cd192" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>legendKeysForFeature</name></member>
      <member refid="classQgsRuleBasedRenderer_1a082909c24517f5387d9c15cadd7b4e2b" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>legendSymbolItemChecked</name></member>
      <member refid="classQgsRuleBasedRenderer_1ad0d4fa403dff49beee59d5f75080926b" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>legendSymbolItems</name></member>
      <member refid="classQgsRuleBasedRenderer_1a72d4482bdd3940abbbc4ccd9a5c1b506" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>legendSymbolItemsCheckable</name></member>
      <member refid="classQgsFeatureRenderer_1ab9dd42567b1f71b19a276133e5ec5f01" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>load</name></member>
      <member refid="classQgsFeatureRenderer_1a86927ac5c7b347c9cf62e8fa9464e8af" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>loadSld</name></member>
      <member refid="classQgsRuleBasedRenderer_1ae594f309d444d2ab190d69793c18775e" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mCurrentFeatures</name></member>
      <member refid="classQgsFeatureRenderer_1a461119578a07fb73cd8e90bd50cca94e" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mCurrentVertexMarkerSize</name></member>
      <member refid="classQgsFeatureRenderer_1ac3a0c2c2f0eb0f9c04abb44d9cce7c85" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mCurrentVertexMarkerType</name></member>
      <member refid="classQgsRuleBasedRenderer_1af1209df5338601f45283f522750706c6" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mFilter</name></member>
      <member refid="classQgsFeatureRenderer_1a2a274f78941c4f6110c9a798928029ac" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mForceRaster</name></member>
      <member refid="classQgsFeatureRenderer_1a32974686f90c5010a197ff8b9b544975" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>modifyRequestExtent</name></member>
      <member refid="classQgsFeatureRenderer_1ac3c95f48b0233a3b56643c4602b0c43c" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mOrderBy</name></member>
      <member refid="classQgsFeatureRenderer_1ad77073a562a38dd4868124a83d9df065" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mOrderByEnabled</name></member>
      <member refid="classQgsFeatureRenderer_1aa33cca89be2cf805acfe309f491b7151a032dbbe9c457924a27f1f2ae4c6c6531" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>MoreSymbolsPerFeature</name></member>
      <member refid="classQgsFeatureRenderer_1a71a42b5fb97eeda8b4604e4a3e59f5e3" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mPaintEffect</name></member>
      <member refid="classQgsRuleBasedRenderer_1adbcf08c99386290bad32ccf172b8e615" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mRenderQueue</name></member>
      <member refid="classQgsRuleBasedRenderer_1aa7b641982e264801ec1b58917a8f1cb1" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mRootRule</name></member>
      <member refid="classQgsFeatureRenderer_1ad320f00920e002ede32001884ce15b00" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mType</name></member>
      <member refid="classQgsFeatureRenderer_1ab8931a4c40fb66fb9f2017591d3a59fd" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>mUsingSymbolLevels</name></member>
      <member refid="classQgsFeatureRenderer_1afb510f7efd25a4d9bf6c1a5f5efda23f" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>orderBy</name></member>
      <member refid="classQgsFeatureRenderer_1aabdeeb957a7b269701440929f5b26c2b" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>orderByEnabled</name></member>
      <member refid="classQgsFeatureRenderer_1ac6d0b1c48d738ee4f072fba72d546c0c" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>originalSymbolForFeature</name></member>
      <member refid="classQgsRuleBasedRenderer_1a694bc38d3df702d339350af0b389e05c" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>originalSymbolsForFeature</name></member>
      <member refid="classQgsFeatureRenderer_1a40ea35ba46863f1d1d17054a1ef9f0fc" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>paintEffect</name></member>
      <member refid="classQgsFeatureRenderer_1a5641de1f5e0cdc08003fa2d0a52be2f9" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>QgsFeatureRenderer</name></member>
      <member refid="classQgsRuleBasedRenderer_1af3c9091ee567b082ac31e45308a4ce1e" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>QgsRuleBasedRenderer</name></member>
      <member refid="classQgsRuleBasedRenderer_1a71f44fe9595e827d8cf773f4dbfd7be8" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>QgsRuleBasedRenderer</name></member>
      <member refid="classQgsRuleBasedRenderer_1a03169689bd52d9e81bae605e2b748d9d" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>refineRuleCategories</name></member>
      <member refid="classQgsRuleBasedRenderer_1a4f3fff8193bbc98cee27cd4d5f2beae1" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>refineRuleRanges</name></member>
      <member refid="classQgsRuleBasedRenderer_1a8e87771fd7f913cd2f1a13fa04d7f959" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>refineRuleScales</name></member>
      <member refid="classQgsRuleBasedRenderer_1af38e20b0f1878963223c02fe69006a07" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>renderFeature</name></member>
      <member refid="classQgsFeatureRenderer_1adaadfad7ce3b5d772dddcd0aabd9272c" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>renderFeatureWithSymbol</name></member>
      <member refid="classQgsRuleBasedRenderer_1a383d7c7f3cc41b8f4bd02378e37923b9" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>RenderQueue</name></member>
      <member refid="classQgsFeatureRenderer_1ae47fb7698b274d144822bbab7b4e7847" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>renderVertexMarker</name></member>
      <member refid="classQgsFeatureRenderer_1ae6440861a23b16f61a725e10fc44a771" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>renderVertexMarkerPolygon</name></member>
      <member refid="classQgsFeatureRenderer_1a0532e04a04464ebe4f5ef0fc71023da6" prot="protected" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>renderVertexMarkerPolyline</name></member>
      <member refid="classQgsRuleBasedRenderer_1a4fb549757b93a2694b686e8d6f8baa11" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>rootRule</name></member>
      <member refid="classQgsRuleBasedRenderer_1aa4daf942c11dabea777abdc3cd27bbf9" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>RuleList</name></member>
      <member refid="classQgsRuleBasedRenderer_1a0e060d8f4e8818808b012e030ea160cd" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>save</name></member>
      <member refid="classQgsFeatureRenderer_1aa33cca89be2cf805acfe309f491b7151a9570a82adc24b246ae40596fdc8af6d2" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>ScaleDependent</name></member>
      <member refid="classQgsFeatureRenderer_1a49bf7257e9e5639e46f83c25d99d653e" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>setEmbeddedRenderer</name></member>
      <member refid="classQgsFeatureRenderer_1a5ca82668c01b2377dfd09b54b3020793" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>setForceRasterRender</name></member>
      <member refid="classQgsRuleBasedRenderer_1a0f30436cd365a511f81f543c433b4f83" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>setLegendSymbolItem</name></member>
      <member refid="classQgsFeatureRenderer_1a006eebdce2c5758fe82b44d1fc4537e2" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>setOrderBy</name></member>
      <member refid="classQgsFeatureRenderer_1a2f822400abdbabda8d3297a12928677e" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>setOrderByEnabled</name></member>
      <member refid="classQgsFeatureRenderer_1a46afb1e8bf35166215d61475860e910d" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>setPaintEffect</name></member>
      <member refid="classQgsFeatureRenderer_1a99e2476044ca7ba7dafdf2798c9edfd0" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>setUsingSymbolLevels</name></member>
      <member refid="classQgsFeatureRenderer_1a708c80d56d903e447dbef31838f78ad6" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>setVertexMarkerAppearance</name></member>
      <member refid="classQgsRuleBasedRenderer_1a090f68ffa388bdbe72f12a772bc5bcb8" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>startRender</name></member>
      <member refid="classQgsRuleBasedRenderer_1aa65fdcbddc98ae7640e2ba05841db3cc" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>stopRender</name></member>
      <member refid="classQgsRuleBasedRenderer_1a33a02c0c3468832b715c178e95f75bb5" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>symbolForFeature</name></member>
      <member refid="classQgsFeatureRenderer_1aa33cca89be2cf805acfe309f491b7151a9c0b2e9b38c8cfa909e20f9aa241da26" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>SymbolLevels</name></member>
      <member refid="classQgsRuleBasedRenderer_1afa0160d037c18336499ec1d06b4215ba" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>symbols</name></member>
      <member refid="classQgsRuleBasedRenderer_1a59b2a6c80beac5c73a50c5f989391cc3" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>symbolsForFeature</name></member>
      <member refid="classQgsRuleBasedRenderer_1a7772de975275b4e8d32ae43455c5518b" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>toSld</name></member>
      <member refid="classQgsFeatureRenderer_1a7a3f1cbc41fce537ebdbbe93ce25af2d" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>type</name></member>
      <member refid="classQgsRuleBasedRenderer_1a7bb019ffb42ecd2a547375726bb0ba08" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>usedAttributes</name></member>
      <member refid="classQgsFeatureRenderer_1a903fb339ff145d9345fa54fafa2c50e2" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>usingSymbolLevels</name></member>
      <member refid="classQgsRuleBasedRenderer_1a86ee043692ddfc8c933c885b8892ac51" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>willRenderFeature</name></member>
      <member refid="classQgsFeatureRenderer_1a09711cbff0ad082a5bd1617bf504db3f" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>writeSld</name></member>
      <member refid="classQgsFeatureRenderer_1a99e8aa22931295440692221602e50ac6" prot="public" virt="virtual"><scope>QgsRuleBasedRenderer</scope><name>~QgsFeatureRenderer</name></member>
      <member refid="classQgsRuleBasedRenderer_1aa8c68e3b4510f4b7b6d175f05fcb8a96" prot="public" virt="non-virtual"><scope>QgsRuleBasedRenderer</scope><name>~QgsRuleBasedRenderer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
