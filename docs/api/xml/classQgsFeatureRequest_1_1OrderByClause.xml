<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsFeatureRequest_1_1OrderByClause" kind="class" language="C++" prot="public">
    <compoundname>QgsFeatureRequest::OrderByClause</compoundname>
    <includes refid="qgsfeaturerequest_8h" local="no">qgsfeaturerequest.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsFeatureRequest_1_1OrderByClause_1a56eb46d0628efdcf3d84218339a564e9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsFeatureRequest::OrderByClause::mAscending</definition>
        <argsstring></argsstring>
        <name>mAscending</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="214" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1_1OrderByClause_1a0f75d037110905b7f291382c6c4f192d" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref></type>
        <definition>QgsExpression QgsFeatureRequest::OrderByClause::mExpression</definition>
        <argsstring></argsstring>
        <name>mExpression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="213" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsFeatureRequest_1_1OrderByClause_1aa9d14ce9f21c228d841de4ccaad2cf96" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsFeatureRequest::OrderByClause::mNullsFirst</definition>
        <argsstring></argsstring>
        <name>mNullsFirst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="215" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1a12550907e8e5cd60b4dc04a17e031538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsFeatureRequest::OrderByClause::OrderByClause</definition>
        <argsstring>(const QString &amp;expression, bool ascending=true)</argsstring>
        <name>OrderByClause</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascending</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classQgsFeatureRequest_1_1OrderByClause" kindref="compound">OrderByClause</ref> for a <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>The expression to use for ordering </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascending</parametername>
</parameternamelist>
<parameterdescription>
<para>If the order should be ascending (1,2,3) or descending (3,2,1) If the order is ascending, by default nulls are last If the order is descending, by default nulls are first </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="138" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="356" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1a095c12671f7192118f1a8a35a8598a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsFeatureRequest::OrderByClause::OrderByClause</definition>
        <argsstring>(const QString &amp;expression, bool ascending, bool nullsfirst)</argsstring>
        <name>OrderByClause</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascending</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nullsfirst</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classQgsFeatureRequest_1_1OrderByClause" kindref="compound">OrderByClause</ref> for a <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>The expression to use for ordering </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascending</parametername>
</parameternamelist>
<parameterdescription>
<para>If the order should be ascending (1,2,3) or descending (3,2,1) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nullsfirst</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, NULLS are at the beginning, if false, NULLS are at the end </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="147" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="364" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1a7dca824098ab18828a9949083e171790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsFeatureRequest::OrderByClause::OrderByClause</definition>
        <argsstring>(const QgsExpression &amp;expression, bool ascending=true)</argsstring>
        <name>OrderByClause</name>
        <param>
          <type>const <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascending</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classQgsFeatureRequest_1_1OrderByClause" kindref="compound">OrderByClause</ref> for a <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>The expression to use for ordering </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascending</parametername>
</parameternamelist>
<parameterdescription>
<para>If the order should be ascending (1,2,3) or descending (3,2,1) If the order is ascending, by default nulls are last If the order is descending, by default nulls are first </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="157" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="371" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1a3e528769009cd3ae2d7a1c9ba31831ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsFeatureRequest::OrderByClause::OrderByClause</definition>
        <argsstring>(const QgsExpression &amp;expression, bool ascending, bool nullsfirst)</argsstring>
        <name>OrderByClause</name>
        <param>
          <type>const <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascending</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nullsfirst</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="classQgsFeatureRequest_1_1OrderByClause" kindref="compound">OrderByClause</ref> for a <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>The expression to use for ordering </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascending</parametername>
</parameternamelist>
<parameterdescription>
<para>If the order should be ascending (1,2,3) or descending (3,2,1) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nullsfirst</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, NULLS are at the beginning, if false, NULLS are at the end </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="166" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="379" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1a6f0921a15b79316a63540ec7d8afd3cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFeatureRequest::OrderByClause::ascending</definition>
        <argsstring>() const</argsstring>
        <name>ascending</name>
        <briefdescription>
<para>Order ascending. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>If ascending order is requested </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="187" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="387" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1a32a80e93c2a15861015a709079a81a7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsFeatureRequest::OrderByClause::dump</definition>
        <argsstring>() const</argsstring>
        <name>dump</name>
        <briefdescription>
<para>Dumps the content to an SQL equivalent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="208" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="407" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1a5865d70bea0e7732677e9227907b13f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref></type>
        <definition>QgsExpression QgsFeatureRequest::OrderByClause::expression</definition>
        <argsstring>() const</argsstring>
        <name>expression</name>
        <briefdescription>
<para>The expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the expression </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="172" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="415" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1a80c9f795dcc5941ddcd875a4f16cc738" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFeatureRequest::OrderByClause::nullsFirst</definition>
        <argsstring>() const</argsstring>
        <name>nullsFirst</name>
        <briefdescription>
<para>Set if NULLS should be returned first. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>if NULLS should be returned first </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="198" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="397" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1aca34319c18860623d04b5c00a800c582" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFeatureRequest::OrderByClause::prepare</definition>
        <argsstring>(QgsExpressionContext *context)</argsstring>
        <name>prepare</name>
        <param>
          <type><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Prepare the expression with the given context. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpression_1a0285763c2bc4a7202878e7723b9c5ce2" kindref="member">QgsExpression::prepare</ref></para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="181" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="420" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1ac6a4dcdbdf251fea8c9fa048cc42e513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsFeatureRequest::OrderByClause::setAscending</definition>
        <argsstring>(bool ascending)</argsstring>
        <name>setAscending</name>
        <param>
          <type>bool</type>
          <declname>ascending</declname>
        </param>
        <briefdescription>
<para>Set if ascending order is requested. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="192" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFeatureRequest_1_1OrderByClause_1ad126303acdcc48d0341b7c9a37073ac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsFeatureRequest::OrderByClause::setNullsFirst</definition>
        <argsstring>(bool nullsFirst)</argsstring>
        <name>setNullsFirst</name>
        <param>
          <type>bool</type>
          <declname>nullsFirst</declname>
        </param>
        <briefdescription>
<para>Set if NULLS should be returned first. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="203" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.cpp" bodystart="402" bodyend="405"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classQgsFeatureRequest_1_1OrderByClause" kindref="compound">OrderByClause</ref> class represents an order by clause for a <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>It can be a simple field or an expression. Multiple order by clauses can be added to a <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> to fine tune the behavior if a single field or expression is not enough to completely specify the required behavior.</para><para>If expression compilation is activated in the settings and the expression can be translated for the provider in question, it will be evaluated on provider side. If one of these two premises does not apply, the ordering will take place locally which results in increased memory and CPU usage.</para><para>If the ordering is done on strings, the order depends on the system&apos;s locale if the local fallback implementation is used. The order depends on the server system&apos;s locale and implementation if ordering is done on the server.</para><para>In case the fallback code needs to be used, a limit set on the request will be respected for the features returned by the iterator but internally all features will be requested from the provider.</para><para><simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" line="127" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfeaturerequest.h" bodystart="126" bodyend="216"/>
    <listofallmembers>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1a6f0921a15b79316a63540ec7d8afd3cc" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>ascending</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1a32a80e93c2a15861015a709079a81a7e" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>dump</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1a5865d70bea0e7732677e9227907b13f4" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>expression</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1a56eb46d0628efdcf3d84218339a564e9" prot="private" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>mAscending</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1a0f75d037110905b7f291382c6c4f192d" prot="private" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>mExpression</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1aa9d14ce9f21c228d841de4ccaad2cf96" prot="private" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>mNullsFirst</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1a80c9f795dcc5941ddcd875a4f16cc738" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>nullsFirst</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1a12550907e8e5cd60b4dc04a17e031538" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>OrderByClause</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1a095c12671f7192118f1a8a35a8598a1c" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>OrderByClause</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1a7dca824098ab18828a9949083e171790" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>OrderByClause</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1a3e528769009cd3ae2d7a1c9ba31831ad" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>OrderByClause</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1aca34319c18860623d04b5c00a800c582" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>prepare</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1ac6a4dcdbdf251fea8c9fa048cc42e513" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>setAscending</name></member>
      <member refid="classQgsFeatureRequest_1_1OrderByClause_1ad126303acdcc48d0341b7c9a37073ac6" prot="public" virt="non-virtual"><scope>QgsFeatureRequest::OrderByClause</scope><name>setNullsFirst</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
