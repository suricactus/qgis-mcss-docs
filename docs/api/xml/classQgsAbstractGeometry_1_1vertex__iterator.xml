<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsAbstractGeometry_1_1vertex__iterator" kind="class" language="C++" prot="public">
    <compoundname>QgsAbstractGeometry::vertex_iterator</compoundname>
    <includes refid="qgsabstractgeometry_8h" local="no">qgsabstractgeometry.h</includes>
    <innerclass refid="structQgsAbstractGeometry_1_1vertex__iterator_1_1Level" prot="private">QgsAbstractGeometry::vertex_iterator::Level</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsAbstractGeometry_1_1vertex__iterator_1a2759ec8e05bfcc4bdaa8226ca8591c06" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int QgsAbstractGeometry::vertex_iterator::depth</definition>
        <argsstring></argsstring>
        <name>depth</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para>At what depth level are we right now. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="760" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAbstractGeometry_1_1vertex__iterator_1a9b5fcc2400eafb25d4d595258b9044a4" prot="private" static="no" mutable="no">
        <type>Level</type>
        <definition>Level QgsAbstractGeometry::vertex_iterator::levels[3]</definition>
        <argsstring>[3]</argsstring>
        <name>levels</name>
        <briefdescription>
<para>Stack of levels - three levels should be sufficient (e.g. part index, ring index, vertex index) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="759" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" bodystart="759" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsAbstractGeometry_1_1vertex__iterator_1abe3d3214ba56b85f238acbc8ef2c34d2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAbstractGeometry::vertex_iterator::digDown</definition>
        <argsstring>()</argsstring>
        <name>digDown</name>
        <briefdescription>
<para>Prepare the stack of levels so that it points to a leaf child geometry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="762" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.cpp" bodystart="395" bodyend="408"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsAbstractGeometry_1_1vertex__iterator_1a29d47644b0e8d3142786f560be7a3231" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsAbstractGeometry::vertex_iterator::vertex_iterator</definition>
        <argsstring>()=default</argsstring>
        <name>vertex_iterator</name>
        <briefdescription>
<para>Create invalid iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="766" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractGeometry_1_1vertex__iterator_1ad721150ef15c1a29857b2a55a2841430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsAbstractGeometry::vertex_iterator::vertex_iterator</definition>
        <argsstring>(const QgsAbstractGeometry *g, int index)</argsstring>
        <name>vertex_iterator</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Create vertex iterator for a geometry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="769" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.cpp" bodystart="307" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractGeometry_1_1vertex__iterator_1a99913b7f6304ecba2e4eee057276c6f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAbstractGeometry::vertex_iterator::operator!=</definition>
        <argsstring>(const vertex_iterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry_1_1vertex__iterator" kindref="compound">vertex_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="787" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" bodystart="787" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractGeometry_1_1vertex__iterator_1a5685dcc69f64bf7b09ea4432e5a3301b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsAbstractGeometry::vertex_iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Returns the current item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="781" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.cpp" bodystart="345" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractGeometry_1_1vertex__iterator_1a9a05bc4daec6af5f33b5470a524ab479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsAbstractGeometry_1_1vertex__iterator" kindref="compound">vertex_iterator</ref> &amp;</type>
        <definition>QgsAbstractGeometry::vertex_iterator &amp; QgsAbstractGeometry::vertex_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>The prefix ++ operator (++it) advances the iterator to the next vertex and returns an iterator to the new current vertex. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this function on iterator that is already past the last item leads to undefined results. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="775" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.cpp" bodystart="317" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractGeometry_1_1vertex__iterator_1ad204df50eaa372c62ce00d4f2f2e204a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsAbstractGeometry_1_1vertex__iterator" kindref="compound">vertex_iterator</ref></type>
        <definition>QgsAbstractGeometry::vertex_iterator QgsAbstractGeometry::vertex_iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>The postfix ++ operator (it++) advances the iterator to the next vertex and returns an iterator to the previously current vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="778" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.cpp" bodystart="338" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractGeometry_1_1vertex__iterator_1a434fb5f2b46046f02f278d8ff9a0bba0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAbstractGeometry::vertex_iterator::operator==</definition>
        <argsstring>(const vertex_iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry_1_1vertex__iterator" kindref="compound">vertex_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="786" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.cpp" bodystart="387" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractGeometry_1_1vertex__iterator_1aab0917023ce71da11f030adcc9b1e9fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref></type>
        <definition>QgsVertexId QgsAbstractGeometry::vertex_iterator::vertexId</definition>
        <argsstring>() const</argsstring>
        <name>vertexId</name>
        <briefdescription>
<para>Returns vertex ID of the current item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="784" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.cpp" bodystart="351" bodyend="385"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classQgsAbstractGeometry_1_1vertex__iterator" kindref="compound">vertex_iterator</ref> class provides STL-style iterator for vertices. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" line="745" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsabstractgeometry.h" bodystart="744" bodyend="788"/>
    <listofallmembers>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1a2759ec8e05bfcc4bdaa8226ca8591c06" prot="private" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>depth</name></member>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1abe3d3214ba56b85f238acbc8ef2c34d2" prot="private" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>digDown</name></member>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1a9b5fcc2400eafb25d4d595258b9044a4" prot="private" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>levels</name></member>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1a99913b7f6304ecba2e4eee057276c6f6" prot="public" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>operator!=</name></member>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1a5685dcc69f64bf7b09ea4432e5a3301b" prot="public" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>operator*</name></member>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1a9a05bc4daec6af5f33b5470a524ab479" prot="public" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>operator++</name></member>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1ad204df50eaa372c62ce00d4f2f2e204a" prot="public" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>operator++</name></member>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1a434fb5f2b46046f02f278d8ff9a0bba0" prot="public" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>operator==</name></member>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1a29d47644b0e8d3142786f560be7a3231" prot="public" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>vertex_iterator</name></member>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1ad721150ef15c1a29857b2a55a2841430" prot="public" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>vertex_iterator</name></member>
      <member refid="classQgsAbstractGeometry_1_1vertex__iterator_1aab0917023ce71da11f030adcc9b1e9fd" prot="public" virt="non-virtual"><scope>QgsAbstractGeometry::vertex_iterator</scope><name>vertexId</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
