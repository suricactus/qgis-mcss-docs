<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsProjectProperty" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QgsProjectProperty</compoundname>
    <derivedcompoundref refid="classQgsProjectPropertyKey" prot="public" virt="non-virtual">QgsProjectPropertyKey</derivedcompoundref>
    <derivedcompoundref refid="classQgsProjectPropertyValue" prot="public" virt="non-virtual">QgsProjectPropertyValue</derivedcompoundref>
    <includes refid="qgsprojectproperty_8h" local="no">qgsprojectproperty.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsProjectProperty_1a4797e8685a23c16a47bd023d19e027b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsProjectProperty::QgsProjectProperty</definition>
        <argsstring>()</argsstring>
        <name>QgsProjectProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" line="52" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectProperty_1acbaa5d5198cb51eaebf3e4cd7e021852" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QgsProjectProperty::~QgsProjectProperty</definition>
        <argsstring>()=default</argsstring>
        <name>~QgsProjectProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectProperty_1a2da8f7350c40358036be5469f45049fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QgsProjectProperty::dump</definition>
        <argsstring>(int tabs=0) const =0</argsstring>
        <name>dump</name>
        <reimplementedby refid="classQgsProjectPropertyValue_1a53b0ea1540c51eb78008e1aad5951e73">dump</reimplementedby>
        <reimplementedby refid="classQgsProjectPropertyKey_1a639fa1420d30d23e8618d5de38c921c2">dump</reimplementedby>
        <param>
          <type>int</type>
          <declname>tabs</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Dumps out the keys and values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tabs</parametername>
</parameternamelist>
<parameterdescription>
<para>is number of tabs to print; used for pretty-printing hierarchy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectProperty_1a749358ed8c0ed573c6641b5788c9dfd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsProjectProperty::isKey</definition>
        <argsstring>() const =0</argsstring>
        <name>isKey</name>
        <reimplementedby refid="classQgsProjectPropertyValue_1ac8b82e79da9b3a069800b23bd2c78e65">isKey</reimplementedby>
        <reimplementedby refid="classQgsProjectPropertyKey_1a6b1a44d751a40ae3610e955dfd825091">isKey</reimplementedby>
        <briefdescription>
<para>Returns true if the property is a <ref refid="classQgsProjectPropertyKey" kindref="compound">QgsProjectPropertyKey</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProjectProperty_1a9c6101e0d2af15293fd242845debe85b" kindref="member">isValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProjectProperty_1a163eb9d3b54e113d41ec734d525d332c" kindref="member">isLeaf()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectProperty_1a163eb9d3b54e113d41ec734d525d332c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsProjectProperty::isLeaf</definition>
        <argsstring>() const =0</argsstring>
        <name>isLeaf</name>
        <reimplementedby refid="classQgsProjectPropertyValue_1ae78b5e33455c9cc9ca91a7da029f1a2b">isLeaf</reimplementedby>
        <reimplementedby refid="classQgsProjectPropertyKey_1a0fa723624c75c70aee31329a9b31bc95">isLeaf</reimplementedby>
        <briefdescription>
<para>Returns true if property is a leaf node. </para>        </briefdescription>
        <detaileddescription>
<para>A leaf node is a key node that has either no value or only a single value. A non-leaf node would be a key node with key sub-nodes.</para><para>This is used for entryList() and subkeyList() implementation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectProperty_1a9c6101e0d2af15293fd242845debe85b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsProjectProperty::isValue</definition>
        <argsstring>() const =0</argsstring>
        <name>isValue</name>
        <reimplementedby refid="classQgsProjectPropertyValue_1a7d7030fecbdce6295bb13afc8b0c5bf5">isValue</reimplementedby>
        <reimplementedby refid="classQgsProjectPropertyKey_1aa415d3ed9d88bb5e981e5e963992fa34">isValue</reimplementedby>
        <briefdescription>
<para>Returns true if the property is a <ref refid="classQgsProjectPropertyValue" kindref="compound">QgsProjectPropertyValue</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProjectProperty_1a749358ed8c0ed573c6641b5788c9dfd6" kindref="member">isKey()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProjectProperty_1a163eb9d3b54e113d41ec734d525d332c" kindref="member">isLeaf()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectProperty_1a2db1fbd0190c733905cc61a1772516ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsProjectProperty::readXml</definition>
        <argsstring>(const QDomNode &amp;keyNode)=0</argsstring>
        <name>readXml</name>
        <reimplementedby refid="classQgsProjectPropertyValue_1a8bdfcd81c52daf765c8bf42ab2044d7e">readXml</reimplementedby>
        <reimplementedby refid="classQgsProjectPropertyKey_1aff750b8698c125def4a4f01d70572918">readXml</reimplementedby>
        <param>
          <type>const QDomNode &amp;</type>
          <declname>keyNode</declname>
        </param>
        <briefdescription>
<para>Restores the property hierarchy from a specified DOM node. </para>        </briefdescription>
        <detaileddescription>
<para>Used for restoring properties from project file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectProperty_1a8eb85f0e4be19cb03af691014e210122" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QVariant</type>
        <definition>virtual QVariant QgsProjectProperty::value</definition>
        <argsstring>() const =0</argsstring>
        <name>value</name>
        <reimplementedby refid="classQgsProjectPropertyValue_1a4eab202e8de40d79c086527843eee2b7">value</reimplementedby>
        <reimplementedby refid="classQgsProjectPropertyKey_1ab96a3a0e3546993d11ea6c11b577dbbf">value</reimplementedby>
        <briefdescription>
<para>Returns the node&apos;s value. </para>        </briefdescription>
        <detaileddescription>
<para>For <ref refid="classQgsProjectPropertyValue" kindref="compound">QgsProjectPropertyValue</ref> nodes, this is straightforward <ndash/> just return the embedded QVariant, _value. For <ref refid="classQgsProjectPropertyKey" kindref="compound">QgsProjectPropertyKey</ref>, this means returning the <ref refid="classQgsProjectPropertyValue" kindref="compound">QgsProjectPropertyValue</ref> _value that is keyed by its name, if it exists; i.e., <ref refid="classQgsProjectPropertyKey" kindref="compound">QgsProjectPropertyKey</ref> &quot;foo&quot; will return the property value mapped to its name, &quot;foo&quot;, in its QHash of QProperties. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectProperty_1a7b7db8f59fe5d611bd3f2dbbc24cd970" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsProjectProperty::writeXml</definition>
        <argsstring>(const QString &amp;nodeName, QDomElement &amp;element, QDomDocument &amp;document)=0</argsstring>
        <name>writeXml</name>
        <reimplementedby refid="classQgsProjectPropertyValue_1a24312ef798ed382cc542ba4f7319bf13">writeXml</reimplementedby>
        <reimplementedby refid="classQgsProjectPropertyKey_1a7f2d099e2e3cf77ba6ef16407acb8e5d">writeXml</reimplementedby>
        <param>
          <type>const QString &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>document</declname>
        </param>
        <briefdescription>
<para>Writes the property hierarchy to a specified DOM element. </para>        </briefdescription>
        <detaileddescription>
<para>Used for saving properties to project file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nodeName</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag name associated with this element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>the parent (or encompassing) property element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>document</parametername>
</parameternamelist>
<parameterdescription>
<para>the overall project file Dom document </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" line="102" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An Abstract Base Class for QGIS project property hierarchys. </para>    </briefdescription>
    <detaileddescription>
<para>Each sub-class is either a <ref refid="classQgsProjectPropertyKey" kindref="compound">QgsProjectPropertyKey</ref> or <ref refid="classQgsProjectPropertyValue" kindref="compound">QgsProjectPropertyValue</ref>. <ref refid="classQgsProjectPropertyKey" kindref="compound">QgsProjectPropertyKey</ref> can contain either <ref refid="classQgsProjectPropertyKey" kindref="compound">QgsProjectPropertyKey</ref> or QgsProjectPropertyValues, thus describing an hierarchy. QgsProjectPropertyValues are always graph leaves.</para><para><simplesect kind="note"><para>This class is used internally by <ref refid="classQgsProject" kindref="compound">QgsProject</ref>. It&apos;s generally recommended that the methods in <ref refid="classQgsProject" kindref="compound">QgsProject</ref> are used to modify project properties rather than using these low-level classes. </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7282">
        <label>QgsProjectProperty</label>
        <link refid="classQgsProjectProperty"/>
      </node>
      <node id="7284">
        <label>QgsProjectPropertyValue</label>
        <link refid="classQgsProjectPropertyValue"/>
        <childnode refid="7282" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7283">
        <label>QgsProjectPropertyKey</label>
        <link refid="classQgsProjectPropertyKey"/>
        <childnode refid="7282" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" line="50" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsprojectproperty.h" bodystart="49" bodyend="118"/>
    <listofallmembers>
      <member refid="classQgsProjectProperty_1a2da8f7350c40358036be5469f45049fb" prot="public" virt="pure-virtual"><scope>QgsProjectProperty</scope><name>dump</name></member>
      <member refid="classQgsProjectProperty_1a749358ed8c0ed573c6641b5788c9dfd6" prot="public" virt="pure-virtual"><scope>QgsProjectProperty</scope><name>isKey</name></member>
      <member refid="classQgsProjectProperty_1a163eb9d3b54e113d41ec734d525d332c" prot="public" virt="pure-virtual"><scope>QgsProjectProperty</scope><name>isLeaf</name></member>
      <member refid="classQgsProjectProperty_1a9c6101e0d2af15293fd242845debe85b" prot="public" virt="pure-virtual"><scope>QgsProjectProperty</scope><name>isValue</name></member>
      <member refid="classQgsProjectProperty_1a4797e8685a23c16a47bd023d19e027b1" prot="public" virt="non-virtual"><scope>QgsProjectProperty</scope><name>QgsProjectProperty</name></member>
      <member refid="classQgsProjectProperty_1a2db1fbd0190c733905cc61a1772516ad" prot="public" virt="pure-virtual"><scope>QgsProjectProperty</scope><name>readXml</name></member>
      <member refid="classQgsProjectProperty_1a8eb85f0e4be19cb03af691014e210122" prot="public" virt="pure-virtual"><scope>QgsProjectProperty</scope><name>value</name></member>
      <member refid="classQgsProjectProperty_1a7b7db8f59fe5d611bd3f2dbbc24cd970" prot="public" virt="pure-virtual"><scope>QgsProjectProperty</scope><name>writeXml</name></member>
      <member refid="classQgsProjectProperty_1acbaa5d5198cb51eaebf3e4cd7e021852" prot="public" virt="virtual"><scope>QgsProjectProperty</scope><name>~QgsProjectProperty</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
