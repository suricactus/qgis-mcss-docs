<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsAbstractValidityCheck" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QgsAbstractValidityCheck</compoundname>
    <includes refid="qgsabstractvaliditycheck_8h" local="no">qgsabstractvaliditycheck.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsAbstractValidityCheck_1ac64df453e36a9ff10dcd4a98354aa1e4" prot="public" static="no">
        <name>Type</name>
        <enumvalue id="classQgsAbstractValidityCheck_1ac64df453e36a9ff10dcd4a98354aa1e4acd2328652f488f38c9c396104e97b2b0" prot="public">
          <name>TypeLayoutCheck</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Print layout validity check, triggered on exporting a print layout. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAbstractValidityCheck_1ac64df453e36a9ff10dcd4a98354aa1e4aa2682dce37523ad70159714334683913" prot="public">
          <name>TypeUserCheck</name>
          <initializer>= 10000</initializer>
          <briefdescription>
<para>Starting point for custom user types. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Check types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" line="99" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" bodystart="98" bodyend="102"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsAbstractValidityCheck_1afec6e8bc7c7e960ac4e44950d6287609" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QgsAbstractValidityCheck::~QgsAbstractValidityCheck</definition>
        <argsstring>()=default</argsstring>
        <name>~QgsAbstractValidityCheck</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractValidityCheck_1aa2ce347b514635116b93fc4638597565" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int QgsAbstractValidityCheck::checkType</definition>
        <argsstring>() const =0</argsstring>
        <name>checkType</name>
        <briefdescription>
<para>Returns the type of the check. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractValidityCheck_1a491ddb7904afcb7baeb8200f188a0078" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classQgsAbstractValidityCheck" kindref="compound">QgsAbstractValidityCheck</ref> *</type>
        <definition>virtual QgsAbstractValidityCheck* QgsAbstractValidityCheck::create</definition>
        <argsstring>() const =0</argsstring>
        <name>create</name>
        <briefdescription>
<para>Creates a new instance of the check and returns it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractValidityCheck_1a92de3c14d17fc4a6920624ebd741e5be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString QgsAbstractValidityCheck::id</definition>
        <argsstring>() const =0</argsstring>
        <name>id</name>
        <briefdescription>
<para>Returns the unique ID of the check. </para>        </briefdescription>
        <detaileddescription>
<para>This is a non-translated, non-user visible string identifying the check. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractValidityCheck_1a2d811b1cd02c85e0a55f29129d5c2606" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QgsAbstractValidityCheck::prepareCheck</definition>
        <argsstring>(const QgsValidityCheckContext *context, QgsFeedback *feedback)</argsstring>
        <name>prepareCheck</name>
        <param>
          <type>const <ref refid="classQgsValidityCheckContext" kindref="compound">QgsValidityCheckContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classQgsFeedback" kindref="compound">QgsFeedback</ref> *</type>
          <declname>feedback</declname>
        </param>
        <briefdescription>
<para>Prepares the check for execution, and returns true if the check can be run. </para>        </briefdescription>
        <detaileddescription>
<para>This method is always called from the main thread, and subclasses can implement it to do preparatory steps which are not thread safe (e.g. obtaining feature sources from vector layers). It is followed by a call to <ref refid="classQgsAbstractValidityCheck_1af4918654d7d3b90a7dbf2ffa33408b8d" kindref="member">runCheck()</ref>, which may be performed in a background thread.</para><para>Individual calls to <ref refid="classQgsAbstractValidityCheck_1a2d811b1cd02c85e0a55f29129d5c2606" kindref="member">prepareCheck()</ref>/runCheck() are run on a new instance of the check (see <ref refid="classQgsAbstractValidityCheck_1a491ddb7904afcb7baeb8200f188a0078" kindref="member">create()</ref>), so subclasses can safely store state from the <ref refid="classQgsAbstractValidityCheck_1a2d811b1cd02c85e0a55f29129d5c2606" kindref="member">prepareCheck()</ref> method ready for the subsequent <ref refid="classQgsAbstractValidityCheck_1af4918654d7d3b90a7dbf2ffa33408b8d" kindref="member">runCheck()</ref> method.</para><para>The <emphasis>context</emphasis> argument gives the wider in which the check is being run. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" line="137" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractValidityCheck_1af4918654d7d3b90a7dbf2ffa33408b8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>QList&lt; <ref refid="classQgsValidityCheckResult" kindref="compound">QgsValidityCheckResult</ref> &gt;</type>
        <definition>virtual QList&lt; QgsValidityCheckResult &gt; QgsAbstractValidityCheck::runCheck</definition>
        <argsstring>(const QgsValidityCheckContext *context, QgsFeedback *feedback)=0</argsstring>
        <name>runCheck</name>
        <param>
          <type>const <ref refid="classQgsValidityCheckContext" kindref="compound">QgsValidityCheckContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classQgsFeedback" kindref="compound">QgsFeedback</ref> *</type>
          <declname>feedback</declname>
        </param>
        <briefdescription>
<para>Runs the check and returns a list of results. </para>        </briefdescription>
        <detaileddescription>
<para>If the check is &quot;passed&quot; and no warnings or errors are generated, then an empty list should be returned.</para><para>This method may be called in a background thread, so subclasses should take care to ensure that only thread-safe methods are used. It is always preceded by a call to <ref refid="classQgsAbstractValidityCheck_1a2d811b1cd02c85e0a55f29129d5c2606" kindref="member">prepareCheck()</ref>.</para><para>If a check needs to perform non-thread-safe tests, these should be implemented within <ref refid="classQgsAbstractValidityCheck_1a2d811b1cd02c85e0a55f29129d5c2606" kindref="member">prepareCheck()</ref> and stored in the subclass instance to be returned by this method.</para><para>The <emphasis>context</emphasis> argument gives the wider in which the check is being run. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" line="156" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract base class for individual validity checks. </para>    </briefdescription>
    <detaileddescription>
<para>Validity checks represent objects which can run a test using a <ref refid="classQgsValidityCheckContext" kindref="compound">QgsValidityCheckContext</ref>, and return the results of the check via <ref refid="classQgsValidityCheckResult" kindref="compound">QgsValidityCheckResult</ref> objects.</para><para>Checks can be used for many different use cases, e.g. validating a layout&apos;s contents before allowing an export to occur, or validating the contents of a Processing model (and warning if required plugin based providers are not available or if compulsory algorithm parameters have not been populated).</para><para>Subclasses must indicate the type of check they represent via the <ref refid="classQgsAbstractValidityCheck_1aa2ce347b514635116b93fc4638597565" kindref="member">checkType()</ref> method. When checks are performed, all the registered checks with a matching check type are performed sequentially. The check type also dictates the subclass of the <ref refid="classQgsValidityCheckContext" kindref="compound">QgsValidityCheckContext</ref> which is given to the subclass&apos; runCheck method.</para><para>Checks must be registered in the application&apos;s <ref refid="classQgsValidityCheckRegistry" kindref="compound">QgsValidityCheckRegistry</ref>, which is accessible via <ref refid="classQgsApplication_1a20c3fb984500cafc85bcff8799aaebb3" kindref="member">QgsApplication::validityCheckRegistry()</ref>.</para><para><simplesect kind="see"><para><ref refid="classQgsValidityCheckRegistry" kindref="compound">QgsValidityCheckRegistry</ref></para></simplesect>
<simplesect kind="since"><para>QGIS 3.6 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" line="93" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/validity/qgsabstractvaliditycheck.h" bodystart="92" bodyend="158"/>
    <listofallmembers>
      <member refid="classQgsAbstractValidityCheck_1aa2ce347b514635116b93fc4638597565" prot="public" virt="pure-virtual"><scope>QgsAbstractValidityCheck</scope><name>checkType</name></member>
      <member refid="classQgsAbstractValidityCheck_1a491ddb7904afcb7baeb8200f188a0078" prot="public" virt="pure-virtual"><scope>QgsAbstractValidityCheck</scope><name>create</name></member>
      <member refid="classQgsAbstractValidityCheck_1a92de3c14d17fc4a6920624ebd741e5be" prot="public" virt="pure-virtual"><scope>QgsAbstractValidityCheck</scope><name>id</name></member>
      <member refid="classQgsAbstractValidityCheck_1a2d811b1cd02c85e0a55f29129d5c2606" prot="public" virt="virtual"><scope>QgsAbstractValidityCheck</scope><name>prepareCheck</name></member>
      <member refid="classQgsAbstractValidityCheck_1af4918654d7d3b90a7dbf2ffa33408b8d" prot="public" virt="pure-virtual"><scope>QgsAbstractValidityCheck</scope><name>runCheck</name></member>
      <member refid="classQgsAbstractValidityCheck_1ac64df453e36a9ff10dcd4a98354aa1e4" prot="public" virt="non-virtual"><scope>QgsAbstractValidityCheck</scope><name>Type</name></member>
      <member refid="classQgsAbstractValidityCheck_1ac64df453e36a9ff10dcd4a98354aa1e4acd2328652f488f38c9c396104e97b2b0" prot="public" virt="non-virtual"><scope>QgsAbstractValidityCheck</scope><name>TypeLayoutCheck</name></member>
      <member refid="classQgsAbstractValidityCheck_1ac64df453e36a9ff10dcd4a98354aa1e4aa2682dce37523ad70159714334683913" prot="public" virt="non-virtual"><scope>QgsAbstractValidityCheck</scope><name>TypeUserCheck</name></member>
      <member refid="classQgsAbstractValidityCheck_1afec6e8bc7c7e960ac4e44950d6287609" prot="public" virt="virtual"><scope>QgsAbstractValidityCheck</scope><name>~QgsAbstractValidityCheck</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
