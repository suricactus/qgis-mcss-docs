<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsAuthCertUtils" kind="class" language="C++" prot="public">
    <compoundname>QgsAuthCertUtils</compoundname>
    <includes refid="qgsauthcertutils_8h" local="no">qgsauthcertutils.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375dd" prot="public" static="no">
        <name>CaCertSource</name>
        <enumvalue id="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375ddad49c8b852dcd6bbec85e73466f91766f" prot="public">
          <name>SystemRoot</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375ddaf93573fbac9d47ce86174add2d629d5e" prot="public">
          <name>FromFile</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375dda52c86bb5a8080b0c9263e473b7d9a888" prot="public">
          <name>InDatabase</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375dda03a78a0213b569f008f3ba913a6c9194" prot="public">
          <name>Connection</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of CA certificate source. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="45" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371" prot="public" static="no">
        <name>CertTrustPolicy</name>
        <enumvalue id="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371acdfae79e764aa28175aba1af1c813a44" prot="public">
          <name>DefaultTrust</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371a61ab01103aee838ab3df35b0d56f547c" prot="public">
          <name>Trusted</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371a1eb7b3429862d0c79080d69445b30acb" prot="public">
          <name>Untrusted</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371a7b2701924cf6c9d1754629942902d320" prot="public">
          <name>NoPolicy</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of certificate trust policy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="54" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441d" prot="public" static="no">
        <name>CertUsageType</name>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441da56e9bc3bd8ccd5fb3f8d82723db7d70b" prot="public">
          <name>UndeterminedUsage</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441da28003122de2a6d9f2ab3fa241d6efc8d" prot="public">
          <name>AnyOrUnspecifiedUsage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441dadb1d63565a06e7b6f9b2fa0937ccca75" prot="public">
          <name>CertAuthorityUsage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441dadfaf0a4a3f1deeb262adcdd5ecec5803" prot="public">
          <name>CertIssuerUsage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441dacccda0119f3eca7ba3966e8ac47a5eda" prot="public">
          <name>TlsServerUsage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441dab7bbc9be6a6c9e785bfa0be0faf43c7e" prot="public">
          <name>TlsServerEvUsage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441da63936dc3cdd57dc5bcf47a12033d9cd1" prot="public">
          <name>TlsClientUsage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441daa9496f8f2dedcbb74775b35f08a275bb" prot="public">
          <name>CodeSigningUsage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441da2b9fa844681a557b0bc0e90ba7bc97bb" prot="public">
          <name>EmailProtectionUsage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441dad6867785394257d9bb37fe33e0dd8aee" prot="public">
          <name>TimeStampingUsage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441daf922d8831822db3011daa12d3b8bef7e" prot="public">
          <name>CRLSigningUsage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of certificate usage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="63" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" bodystart="62" bodyend="75"/>
      </memberdef>
      <memberdef kind="enum" id="classQgsAuthCertUtils_1a70b01a1834c9ce9d5b549ee9f1fb12cf" prot="public" static="no">
        <name>ConstraintGroup</name>
        <enumvalue id="classQgsAuthCertUtils_1a70b01a1834c9ce9d5b549ee9f1fb12cfa555a8a7526965c3e47c25c26e271850a" prot="public">
          <name>KeyUsage</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthCertUtils_1a70b01a1834c9ce9d5b549ee9f1fb12cfa3291a7e4696933958bb6e544813ac5fc" prot="public">
          <name>ExtendedKeyUsage</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of certificate key group. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="79" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" bodystart="78" bodyend="82"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsAuthCertUtils_1a9b60d458a0085eb7d3be49e891a28de7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QSslCertificate &gt;</type>
        <definition>QList&lt; QSslCertificate &gt; QgsAuthCertUtils::casFromFile</definition>
        <argsstring>(const QString &amp;certspath)</argsstring>
        <name>casFromFile</name>
        <param>
          <type>const QString &amp;</type>
          <declname>certspath</declname>
        </param>
        <briefdescription>
<para>Returns a list of concatenated CAs from a PEM or DER formatted file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="119" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="137" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a4aaa3f19c881ed1ee82428b9c2ca6952" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QSslCertificate &gt;</type>
        <definition>QList&lt; QSslCertificate &gt; QgsAuthCertUtils::casMerge</definition>
        <argsstring>(const QList&lt; QSslCertificate &gt; &amp;bundle1, const QList&lt; QSslCertificate &gt; &amp;bundle2)</argsstring>
        <name>casMerge</name>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>bundle1</declname>
        </param>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>bundle2</declname>
        </param>
        <briefdescription>
<para>casMerge merges two certificate bundles in a single one removing duplicates, the certificates from the <emphasis>bundle2</emphasis> are appended to <emphasis>bundle1</emphasis> if not already there </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bundle1</parametername>
</parameternamelist>
<parameterdescription>
<para>first bundle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bundle2</parametername>
</parameternamelist>
<parameterdescription>
<para>second bundle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a list of unique certificates </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="131" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="151" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a80db11dd909408dac031a3e6db84cca9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QSslCertificate &gt;</type>
        <definition>QList&lt; QSslCertificate &gt; QgsAuthCertUtils::casRemoveSelfSigned</definition>
        <argsstring>(const QList&lt; QSslCertificate &gt; &amp;caList)</argsstring>
        <name>casRemoveSelfSigned</name>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>caList</declname>
        </param>
        <briefdescription>
<para>casRemoveSelfSigned remove self-signed CA certificates from <emphasis>caList</emphasis> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>caList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of CA certificates </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a list of non self-signed certificates </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="153" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="250" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a2781a4ccfc51cbb78353405dc838e344" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSslCertificate</type>
        <definition>QSslCertificate QgsAuthCertUtils::certFromFile</definition>
        <argsstring>(const QString &amp;certpath)</argsstring>
        <name>certFromFile</name>
        <param>
          <type>const QString &amp;</type>
          <declname>certpath</declname>
        </param>
        <briefdescription>
<para>Returns the first cert from a PEM or DER formatted file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="122" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="173" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a61f6a45ac9651f157bd80bb1fe1e2a4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthCertUtils::certificateIsAuthority</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certificateIsAuthority</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Gets whether a certificate is an Authority. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="309" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1006" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a804e7ef202efaba3d411f9367f5b4008" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthCertUtils::certificateIsAuthorityOrIssuer</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certificateIsAuthorityOrIssuer</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Gets whether a certificate is an Authority or can at least sign other certificates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="315" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1016" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a825f5bf88b68a43f8b9203faa6d14920" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthCertUtils::certificateIsIssuer</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certificateIsIssuer</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Gets whether a certificate can sign other certificates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="312" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1011" bodyend="1014"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a93804e12c26c578824074732840856d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthCertUtils::certificateIsSslClient</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certificateIsSslClient</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Gets whether a certificate is probably used for a client identity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="321" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1143" bodyend="1146"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a972bf42397ede51bf0d82a8e2ca21ea2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthCertUtils::certificateIsSslServer</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certificateIsSslServer</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Gets whether a certificate is probably used for a SSL server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="318" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1022" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a0fdc4b741e51733b29ff60054b8cc125" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441d" kindref="member">QgsAuthCertUtils::CertUsageType</ref> &gt;</type>
        <definition>QList&lt; QgsAuthCertUtils::CertUsageType &gt; QgsAuthCertUtils::certificateUsageTypes</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certificateUsageTypes</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Try to determine the certificates usage types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="306" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="931" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a16620dbd0cce1f5376bda70e3aa579fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::certificateUsageTypeString</definition>
        <argsstring>(QgsAuthCertUtils::CertUsageType usagetype)</argsstring>
        <name>certificateUsageTypeString</name>
        <param>
          <type><ref refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441d" kindref="member">QgsAuthCertUtils::CertUsageType</ref></type>
          <declname>usagetype</declname>
        </param>
        <briefdescription>
<para>Certificate usage type strings per enum. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="303" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="901" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1aa9c721886de725572019df6ec482d993" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthCertUtils::certIsCurrent</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certIsCurrent</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>certIsCurrent checks if <emphasis>cert</emphasis> is viable for its not before and not after dates </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cert</parametername>
</parameternamelist>
<parameterdescription>
<para>certificate to be checked </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="336" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1263" bodyend="1269"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a5d80a3c4e51240d12e7b30cd4f0890a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthCertUtils::certIsViable</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certIsViable</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>certIsViable checks for viability errors of <emphasis>cert</emphasis> and whether it is NULL </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cert</parametername>
</parameternamelist>
<parameterdescription>
<para>certificate to be checked </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if cert is NULL or has viability errors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="350" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1295" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a6006a28b31c4ae2f2f58a8727dea79d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsAuthCertUtils::certKeyBundleToPem</definition>
        <argsstring>(const QString &amp;certpath, const QString &amp;keypath, const QString &amp;keypass=QString(), bool reencrypt=true)</argsstring>
        <name>certKeyBundleToPem</name>
        <param>
          <type>const QString &amp;</type>
          <declname>certpath</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>keypath</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>keypass</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>reencrypt</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns list of certificate, private key and algorithm (as PEM text) from file path components. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>certpath</parametername>
</parameternamelist>
<parameterdescription>
<para>File path to certificate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keypath</parametername>
</parameternamelist>
<parameterdescription>
<para>File path to private key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keypass</parametername>
</parameternamelist>
<parameterdescription>
<para>Passphrase for private key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reencrypt</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to re-encrypt the private key with the passphrase </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>certificate, private key, key&apos;s algorithm type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="163" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="263" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a7a419d79cf4d21caf313a1892c64f74d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QSslCertificate &gt;</type>
        <definition>QList&lt; QSslCertificate &gt; QgsAuthCertUtils::certsFromFile</definition>
        <argsstring>(const QString &amp;certspath)</argsstring>
        <name>certsFromFile</name>
        <param>
          <type>const QString &amp;</type>
          <declname>certspath</declname>
        </param>
        <briefdescription>
<para>Returns a list of concatenated certs from a PEM or DER formatted file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="116" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="125" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a9c3cbaccac44ffd7883a500ebf7c845b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QSslCertificate &gt;</type>
        <definition>QList&lt; QSslCertificate &gt; QgsAuthCertUtils::certsFromString</definition>
        <argsstring>(const QString &amp;pemtext)</argsstring>
        <name>certsFromString</name>
        <param>
          <type>const QString &amp;</type>
          <declname>pemtext</declname>
        </param>
        <briefdescription>
<para>Returns a list of concatenated certs from a PEM Base64 text block. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="145" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="239" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a152a1d7f76e61d9e9caee9dbe646f107" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QMap&lt; QString, QList&lt; QSslCertificate &gt; &gt;</type>
        <definition>QMap&lt; QString, QList&lt; QSslCertificate &gt; &gt; QgsAuthCertUtils::certsGroupedByOrg</definition>
        <argsstring>(const QList&lt; QSslCertificate &gt; &amp;certs)</argsstring>
        <name>certsGroupedByOrg</name>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>certs</declname>
        </param>
        <briefdescription>
<para>Map certificates to their oraganization. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="95" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="65" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a5a9589a5cfc3f8578a5c5ed10a6e30e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray QgsAuthCertUtils::certsToPemText</definition>
        <argsstring>(const QList&lt; QSslCertificate &gt; &amp;certs)</argsstring>
        <name>certsToPemText</name>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>certs</declname>
        </param>
        <briefdescription>
<para>certsToPemText dump a list of QSslCertificates to PEM text </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>certs</parametername>
</parameternamelist>
<parameterdescription>
<para>list of certs </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a byte array of concatenated certificates as PEM text </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="219" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="554" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1affa1f6b8954b67f407f8cd78ab25fb76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QSslError &gt;</type>
        <definition>QList&lt; QSslError &gt; QgsAuthCertUtils::certViabilityErrors</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certViabilityErrors</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>certViabilityErrors checks basic characteristics (validity dates, blacklisting, etc.) of given <emphasis>cert</emphasis> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cert</parametername>
</parameternamelist>
<parameterdescription>
<para>certificate to be checked </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>list of QSslError (will return NO ERRORS if a null QSslCertificate is passed) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="343" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1271" bodyend="1293"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a084547c0569b050312bff9f72844034f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray QgsAuthCertUtils::fileData</definition>
        <argsstring>(const QString &amp;path)</argsstring>
        <name>fileData</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Returns data from a local file via a read-only operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to file to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>All data contained in file or empty contents if file does not exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="113" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="104" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1accfcb812574b479ee8f20cb0c8fbe009" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::getCaSourceName</definition>
        <argsstring>(QgsAuthCertUtils::CaCertSource source, bool single=false)</argsstring>
        <name>getCaSourceName</name>
        <param>
          <type><ref refid="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375dd" kindref="member">QgsAuthCertUtils::CaCertSource</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>single</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets the general name for CA source enum type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The enum source type for the CA </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>single</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to return singular or plural description </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="234" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="598" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1af489448758b237628cf0a67c427ed03c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::getCertDistinguishedName</definition>
        <argsstring>(const QSslCertificate &amp;qcert, const QCA::Certificate &amp;acert=QCA::Certificate(), bool issuer=false)</argsstring>
        <name>getCertDistinguishedName</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>qcert</declname>
        </param>
        <param>
          <type>const QCA::Certificate &amp;</type>
          <declname>acert</declname>
          <defval>QCA::Certificate()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>issuer</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets combined distinguished name for certificate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>qcert</parametername>
</parameternamelist>
<parameterdescription>
<para>Qt SSL cert object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acert</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespaceQCA" kindref="compound">QCA</ref> SSL cert object to add more info to the output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>issuer</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to return cert&apos;s subject or issuer combined name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="246" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="660" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a1ea0bce656b5c6e5978a967ed201c765" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::getCertTrustName</definition>
        <argsstring>(QgsAuthCertUtils::CertTrustPolicy trust)</argsstring>
        <name>getCertTrustName</name>
        <param>
          <type><ref refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371" kindref="member">QgsAuthCertUtils::CertTrustPolicy</ref></type>
          <declname>trust</declname>
        </param>
        <briefdescription>
<para>Gets the general name for certificate trust. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="251" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="710" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a61767370e1d5d5a2e87193aecc16d9aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::getColonDelimited</definition>
        <argsstring>(const QString &amp;txt)</argsstring>
        <name>getColonDelimited</name>
        <param>
          <type>const QString &amp;</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
<para>Gets string with colon delimiters every 2 characters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="254" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="725" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a5cd9c87c780de657dd72ed2886e380e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::getSslProtocolName</definition>
        <argsstring>(QSsl::SslProtocol protocol)</argsstring>
        <name>getSslProtocolName</name>
        <param>
          <type>QSsl::SslProtocol</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
<para>SSL Protocol name strings per enum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="86" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="36" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a95a831125902ad0426a60ca9c2e0cb59" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSslKey</type>
        <definition>QSslKey QgsAuthCertUtils::keyFromFile</definition>
        <argsstring>(const QString &amp;keypath, const QString &amp;keypass=QString(), QString *algtype=nullptr)</argsstring>
        <name>keyFromFile</name>
        <param>
          <type>const QString &amp;</type>
          <declname>keypath</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>keypass</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>QString *</type>
          <declname>algtype</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns non-encrypted key from a PEM or DER formatted file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keypath</parametername>
</parameternamelist>
<parameterdescription>
<para>File path to private key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keypass</parametername>
</parameternamelist>
<parameterdescription>
<para>Passphrase for private key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>algtype</parametername>
</parameternamelist>
<parameterdescription>
<para>QString to set with resolved algorithm type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="140" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="188" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a3c8a249d8342929ac22985e3e844f9c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QMap&lt; QString, QSslCertificate &gt;</type>
        <definition>QMap&lt; QString, QSslCertificate &gt; QgsAuthCertUtils::mapDigestToCerts</definition>
        <argsstring>(const QList&lt; QSslCertificate &gt; &amp;certs)</argsstring>
        <name>mapDigestToCerts</name>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>certs</declname>
        </param>
        <briefdescription>
<para>Map certificate sha1 to certificate as simple cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="89" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1ad50f8df6822e222b43f71cae741b7a85" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QMap&lt; QString, <ref refid="classQgsAuthConfigSslServer" kindref="compound">QgsAuthConfigSslServer</ref> &gt;</type>
        <definition>QMap&lt; QString, QgsAuthConfigSslServer &gt; QgsAuthCertUtils::mapDigestToSslConfigs</definition>
        <argsstring>(const QList&lt; QgsAuthConfigSslServer &gt; &amp;configs)</argsstring>
        <name>mapDigestToSslConfigs</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsAuthConfigSslServer" kindref="compound">QgsAuthConfigSslServer</ref> &gt; &amp;</type>
          <declname>configs</declname>
        </param>
        <briefdescription>
<para>Map SSL custom configs&apos; certificate sha1 to custom config as simple cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="100" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1acf87e6e1bf6812600bf2e7041a7cb96e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthCertUtils::pemIsPkcs8</definition>
        <argsstring>(const QString &amp;keyPemTxt)</argsstring>
        <name>pemIsPkcs8</name>
        <param>
          <type>const QString &amp;</type>
          <declname>keyPemTxt</declname>
        </param>
        <briefdescription>
<para>Determine if the PEM-encoded text of a key is PKCS#8 format. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyPemTxt</parametername>
</parameternamelist>
<parameterdescription>
<para>PEM-encoded text </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if PKCS#8, otherwise false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="173" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="288" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1ace4ce0331465828e8eb0e8099affb06c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::pemTextToTempFile</definition>
        <argsstring>(const QString &amp;name, const QByteArray &amp;pemtext)</argsstring>
        <name>pemTextToTempFile</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const QByteArray &amp;</type>
          <declname>pemtext</declname>
        </param>
        <briefdescription>
<para>Write a temporary file for a PEM text of cert/key/CAs bundle component. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pemtext</parametername>
</parameternamelist>
<parameterdescription>
<para>Component content as PEM text </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of file </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>File path to temporary file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="227" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="569" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1ac1d183ba837ef614b379985f0dde7d88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QSslCertificate &gt;</type>
        <definition>QList&lt; QSslCertificate &gt; QgsAuthCertUtils::pkcs12BundleCas</definition>
        <argsstring>(const QString &amp;bundlepath, const QString &amp;bundlepass=QString())</argsstring>
        <name>pkcs12BundleCas</name>
        <param>
          <type>const QString &amp;</type>
          <declname>bundlepath</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>bundlepass</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Returns list of CA certificates (as QSslCertificate) for a PKCS#12 bundle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bundlepath</parametername>
</parameternamelist>
<parameterdescription>
<para>File path to the PKCS bundle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bundlepass</parametername>
</parameternamelist>
<parameterdescription>
<para>Passphrase for bundle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>list of certificate </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="210" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="533" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a72937c0e1b2bcb20e04c6a9ec49a4366" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsAuthCertUtils::pkcs12BundleToPem</definition>
        <argsstring>(const QString &amp;bundlepath, const QString &amp;bundlepass=QString(), bool reencrypt=true)</argsstring>
        <name>pkcs12BundleToPem</name>
        <param>
          <type>const QString &amp;</type>
          <declname>bundlepath</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>bundlepass</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>reencrypt</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns list of certificate, private key and algorithm (as PEM text) for a PKCS#12 bundle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bundlepath</parametername>
</parameternamelist>
<parameterdescription>
<para>File path to the PKCS bundle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bundlepass</parametername>
</parameternamelist>
<parameterdescription>
<para>Passphrase for bundle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reencrypt</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to re-encrypt the private key with the passphrase </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>certificate, private key, key&apos;s algorithm type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="200" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="438" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1acb480f364903aba53ecee7f17571defc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCA::KeyBundle</type>
        <definition>QCA::KeyBundle QgsAuthCertUtils::qcaKeyBundle</definition>
        <argsstring>(const QString &amp;path, const QString &amp;pass)</argsstring>
        <name>qcaKeyBundle</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
<para>PKI key/cert bundle from file path, e.g. </para>        </briefdescription>
        <detaileddescription>
<para>from .p12 or pfx files. <simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="279" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="780" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a2962d18262cda4b823d2643002460c7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::qcaKnownConstraint</definition>
        <argsstring>(QCA::ConstraintTypeKnown constraint)</argsstring>
        <name>qcaKnownConstraint</name>
        <param>
          <type>QCA::ConstraintTypeKnown</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
<para>Certificate well-known constraint strings per enum. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="297" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="856" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a11d4fbb80afe731d222e7184a8b61015" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::qcaSignatureAlgorithm</definition>
        <argsstring>(QCA::SignatureAlgorithm algorithm)</argsstring>
        <name>qcaSignatureAlgorithm</name>
        <param>
          <type>QCA::SignatureAlgorithm</type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
<para>Certificate signature algorithm strings per enum. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="291" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="825" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a0368f502332634f4b27e0967738a0705" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::qcaValidityMessage</definition>
        <argsstring>(QCA::Validity validity)</argsstring>
        <name>qcaValidityMessage</name>
        <param>
          <type>QCA::Validity</type>
          <declname>validity</declname>
        </param>
        <briefdescription>
<para>Certificate validity check messages per enum. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="285" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="792" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a21dca118cb02e62a12ea6dd06e5f7d77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCA::CertificateCollection</type>
        <definition>QCA::CertificateCollection QgsAuthCertUtils::qtCertsToQcaCollection</definition>
        <argsstring>(const QList&lt; QSslCertificate &gt; &amp;certs)</argsstring>
        <name>qtCertsToQcaCollection</name>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>certs</declname>
        </param>
        <briefdescription>
<para>Convert a QList of QSslCertificate to a QCA::CertificateCollection. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="273" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="763" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a12b78fe6f22c96790e3b20c357d46168" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCA::Certificate</type>
        <definition>QCA::Certificate QgsAuthCertUtils::qtCertToQcaCert</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>qtCertToQcaCert</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Convert a QSslCertificate to a QCA::Certificate. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="267" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="748" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a11e1b2b2c9538948503b70a23bc313dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::resolvedCertName</definition>
        <argsstring>(const QSslCertificate &amp;cert, bool issuer=false)</argsstring>
        <name>resolvedCertName</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>issuer</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets the general name via RFC 5280 resolution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="237" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="615" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a21a2226262fa5b14de308a5a40b750d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::shaHexForCert</definition>
        <argsstring>(const QSslCertificate &amp;cert, bool formatted=false)</argsstring>
        <name>shaHexForCert</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>formatted</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets the sha1 hash for certificate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cert</parametername>
</parameternamelist>
<parameterdescription>
<para>Qt SSL certificate to generate hash from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>formatted</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to colon-delimit the hash </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="261" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="738" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a7808536527d2af8e162da8c6c382c647" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QMap&lt; QString, QList&lt; <ref refid="classQgsAuthConfigSslServer" kindref="compound">QgsAuthConfigSslServer</ref> &gt; &gt;</type>
        <definition>QMap&lt; QString, QList&lt; QgsAuthConfigSslServer &gt; &gt; QgsAuthCertUtils::sslConfigsGroupedByOrg</definition>
        <argsstring>(const QList&lt; QgsAuthConfigSslServer &gt; &amp;configs)</argsstring>
        <name>sslConfigsGroupedByOrg</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsAuthConfigSslServer" kindref="compound">QgsAuthConfigSslServer</ref> &gt; &amp;</type>
          <declname>configs</declname>
        </param>
        <briefdescription>
<para>Map SSL custom configs&apos; certificates to their oraganization. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="106" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="89" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a02e114e5382af5cfd5dd7e9a93810abd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthCertUtils::sslErrorEnumString</definition>
        <argsstring>(QSslError::SslError errenum)</argsstring>
        <name>sslErrorEnumString</name>
        <param>
          <type>QSslError::SslError</type>
          <declname>errenum</declname>
        </param>
        <briefdescription>
<para>Gets short strings describing an SSL error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="324" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1148" bodyend="1207"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1aded924e7f75d6e374b5a9de81238d478" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QPair&lt; QSslError::SslError, QString &gt; &gt;</type>
        <definition>QList&lt; QPair&lt; QSslError::SslError, QString &gt; &gt; QgsAuthCertUtils::sslErrorEnumStrings</definition>
        <argsstring>()</argsstring>
        <name>sslErrorEnumStrings</name>
        <briefdescription>
<para>Gets short strings describing SSL errors. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="330" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1209" bodyend="1261"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1ad87fa6f35b409b3bedb3833819d43dec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; QSslError &gt;</type>
        <definition>QList&lt; QSslError &gt; QgsAuthCertUtils::validateCertChain</definition>
        <argsstring>(const QList&lt; QSslCertificate &gt; &amp;certificateChain, const QString &amp;hostName=QString(), bool trustRootCa=false)</argsstring>
        <name>validateCertChain</name>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>certificateChain</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>hostName</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>trustRootCa</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>validateCertChain validates the given <emphasis>certificateChain</emphasis> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>certificateChain</parametername>
</parameternamelist>
<parameterdescription>
<para>list of certificates to be checked, with leaf first and with optional root CA last </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostName</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) name of the host to be verified </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trustRootCa</parametername>
</parameternamelist>
<parameterdescription>
<para>if true the CA will be added to the trusted CAs for this validation check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>list of QSslError, if the list is empty then the cert chain is valid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="359" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1300" bodyend="1348"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1afa9cc61136ec0cebe5cb7e9fbcfc5650" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsAuthCertUtils::validatePKIBundle</definition>
        <argsstring>(QgsPkiBundle &amp;bundle, bool useIntermediates=true, bool trustRootCa=false)</argsstring>
        <name>validatePKIBundle</name>
        <param>
          <type><ref refid="classQgsPkiBundle" kindref="compound">QgsPkiBundle</ref> &amp;</type>
          <declname>bundle</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useIntermediates</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>trustRootCa</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>validatePKIBundle validate the PKI bundle by checking the certificate chain, the expiration and effective dates, optionally trusts the root CA </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bundle</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useIntermediates</parametername>
</parameternamelist>
<parameterdescription>
<para>if true the intermediate certs are also checked </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trustRootCa</parametername>
</parameternamelist>
<parameterdescription>
<para>if true the CA will be added to the trusted CAs for this validation check (if useIntermediates is false) this option is ignored and set to false </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a list of error strings, if the list is empty then the PKI bundle is valid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="372" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="1350" bodyend="1403"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classQgsAuthCertUtils_1a9ff7d267a683a820d7524b24e6f58972" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthCertUtils::appendDirSegment_</definition>
        <argsstring>(QStringList &amp;dirname, const QString &amp;segment, QString value)</argsstring>
        <name>appendDirSegment_</name>
        <param>
          <type>QStringList &amp;</type>
          <declname>dirname</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="375" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="644" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthCertUtils_1a5cf66130afed9f4ecd527a404c11d404" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSsl::EncodingFormat</type>
        <definition>QSsl::EncodingFormat QgsAuthCertUtils::sniffEncoding</definition>
        <argsstring>(const QByteArray &amp;payload)</argsstring>
        <name>sniffEncoding</name>
        <param>
          <type>const QByteArray &amp;</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="377" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.cpp" bodystart="653" bodyend="658"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utilities for working with certificates and keys. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" line="41" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthcertutils.h" bodystart="40" bodyend="378"/>
    <listofallmembers>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441da28003122de2a6d9f2ab3fa241d6efc8d" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>AnyOrUnspecifiedUsage</name></member>
      <member refid="classQgsAuthCertUtils_1a9ff7d267a683a820d7524b24e6f58972" prot="private" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>appendDirSegment_</name></member>
      <member refid="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375dd" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>CaCertSource</name></member>
      <member refid="classQgsAuthCertUtils_1a9b60d458a0085eb7d3be49e891a28de7" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>casFromFile</name></member>
      <member refid="classQgsAuthCertUtils_1a4aaa3f19c881ed1ee82428b9c2ca6952" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>casMerge</name></member>
      <member refid="classQgsAuthCertUtils_1a80db11dd909408dac031a3e6db84cca9" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>casRemoveSelfSigned</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441dadb1d63565a06e7b6f9b2fa0937ccca75" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>CertAuthorityUsage</name></member>
      <member refid="classQgsAuthCertUtils_1a2781a4ccfc51cbb78353405dc838e344" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certFromFile</name></member>
      <member refid="classQgsAuthCertUtils_1a61f6a45ac9651f157bd80bb1fe1e2a4a" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certificateIsAuthority</name></member>
      <member refid="classQgsAuthCertUtils_1a804e7ef202efaba3d411f9367f5b4008" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certificateIsAuthorityOrIssuer</name></member>
      <member refid="classQgsAuthCertUtils_1a825f5bf88b68a43f8b9203faa6d14920" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certificateIsIssuer</name></member>
      <member refid="classQgsAuthCertUtils_1a93804e12c26c578824074732840856d7" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certificateIsSslClient</name></member>
      <member refid="classQgsAuthCertUtils_1a972bf42397ede51bf0d82a8e2ca21ea2" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certificateIsSslServer</name></member>
      <member refid="classQgsAuthCertUtils_1a0fdc4b741e51733b29ff60054b8cc125" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certificateUsageTypes</name></member>
      <member refid="classQgsAuthCertUtils_1a16620dbd0cce1f5376bda70e3aa579fd" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certificateUsageTypeString</name></member>
      <member refid="classQgsAuthCertUtils_1aa9c721886de725572019df6ec482d993" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certIsCurrent</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441dadfaf0a4a3f1deeb262adcdd5ecec5803" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>CertIssuerUsage</name></member>
      <member refid="classQgsAuthCertUtils_1a5d80a3c4e51240d12e7b30cd4f0890a0" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certIsViable</name></member>
      <member refid="classQgsAuthCertUtils_1a6006a28b31c4ae2f2f58a8727dea79d4" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certKeyBundleToPem</name></member>
      <member refid="classQgsAuthCertUtils_1a7a419d79cf4d21caf313a1892c64f74d" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certsFromFile</name></member>
      <member refid="classQgsAuthCertUtils_1a9c3cbaccac44ffd7883a500ebf7c845b" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certsFromString</name></member>
      <member refid="classQgsAuthCertUtils_1a152a1d7f76e61d9e9caee9dbe646f107" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certsGroupedByOrg</name></member>
      <member refid="classQgsAuthCertUtils_1a5a9589a5cfc3f8578a5c5ed10a6e30e1" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certsToPemText</name></member>
      <member refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>CertTrustPolicy</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441d" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>CertUsageType</name></member>
      <member refid="classQgsAuthCertUtils_1affa1f6b8954b67f407f8cd78ab25fb76" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>certViabilityErrors</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441daa9496f8f2dedcbb74775b35f08a275bb" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>CodeSigningUsage</name></member>
      <member refid="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375dda03a78a0213b569f008f3ba913a6c9194" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>Connection</name></member>
      <member refid="classQgsAuthCertUtils_1a70b01a1834c9ce9d5b549ee9f1fb12cf" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>ConstraintGroup</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441daf922d8831822db3011daa12d3b8bef7e" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>CRLSigningUsage</name></member>
      <member refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371acdfae79e764aa28175aba1af1c813a44" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>DefaultTrust</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441da2b9fa844681a557b0bc0e90ba7bc97bb" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>EmailProtectionUsage</name></member>
      <member refid="classQgsAuthCertUtils_1a70b01a1834c9ce9d5b549ee9f1fb12cfa3291a7e4696933958bb6e544813ac5fc" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>ExtendedKeyUsage</name></member>
      <member refid="classQgsAuthCertUtils_1a084547c0569b050312bff9f72844034f" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>fileData</name></member>
      <member refid="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375ddaf93573fbac9d47ce86174add2d629d5e" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>FromFile</name></member>
      <member refid="classQgsAuthCertUtils_1accfcb812574b479ee8f20cb0c8fbe009" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>getCaSourceName</name></member>
      <member refid="classQgsAuthCertUtils_1af489448758b237628cf0a67c427ed03c" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>getCertDistinguishedName</name></member>
      <member refid="classQgsAuthCertUtils_1a1ea0bce656b5c6e5978a967ed201c765" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>getCertTrustName</name></member>
      <member refid="classQgsAuthCertUtils_1a61767370e1d5d5a2e87193aecc16d9aa" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>getColonDelimited</name></member>
      <member refid="classQgsAuthCertUtils_1a5cd9c87c780de657dd72ed2886e380e0" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>getSslProtocolName</name></member>
      <member refid="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375dda52c86bb5a8080b0c9263e473b7d9a888" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>InDatabase</name></member>
      <member refid="classQgsAuthCertUtils_1a95a831125902ad0426a60ca9c2e0cb59" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>keyFromFile</name></member>
      <member refid="classQgsAuthCertUtils_1a70b01a1834c9ce9d5b549ee9f1fb12cfa555a8a7526965c3e47c25c26e271850a" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>KeyUsage</name></member>
      <member refid="classQgsAuthCertUtils_1a3c8a249d8342929ac22985e3e844f9c0" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>mapDigestToCerts</name></member>
      <member refid="classQgsAuthCertUtils_1ad50f8df6822e222b43f71cae741b7a85" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>mapDigestToSslConfigs</name></member>
      <member refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371a7b2701924cf6c9d1754629942902d320" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>NoPolicy</name></member>
      <member refid="classQgsAuthCertUtils_1acf87e6e1bf6812600bf2e7041a7cb96e" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>pemIsPkcs8</name></member>
      <member refid="classQgsAuthCertUtils_1ace4ce0331465828e8eb0e8099affb06c" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>pemTextToTempFile</name></member>
      <member refid="classQgsAuthCertUtils_1ac1d183ba837ef614b379985f0dde7d88" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>pkcs12BundleCas</name></member>
      <member refid="classQgsAuthCertUtils_1a72937c0e1b2bcb20e04c6a9ec49a4366" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>pkcs12BundleToPem</name></member>
      <member refid="classQgsAuthCertUtils_1acb480f364903aba53ecee7f17571defc" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>qcaKeyBundle</name></member>
      <member refid="classQgsAuthCertUtils_1a2962d18262cda4b823d2643002460c7e" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>qcaKnownConstraint</name></member>
      <member refid="classQgsAuthCertUtils_1a11d4fbb80afe731d222e7184a8b61015" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>qcaSignatureAlgorithm</name></member>
      <member refid="classQgsAuthCertUtils_1a0368f502332634f4b27e0967738a0705" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>qcaValidityMessage</name></member>
      <member refid="classQgsAuthCertUtils_1a21dca118cb02e62a12ea6dd06e5f7d77" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>qtCertsToQcaCollection</name></member>
      <member refid="classQgsAuthCertUtils_1a12b78fe6f22c96790e3b20c357d46168" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>qtCertToQcaCert</name></member>
      <member refid="classQgsAuthCertUtils_1a11e1b2b2c9538948503b70a23bc313dc" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>resolvedCertName</name></member>
      <member refid="classQgsAuthCertUtils_1a21a2226262fa5b14de308a5a40b750d4" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>shaHexForCert</name></member>
      <member refid="classQgsAuthCertUtils_1a5cf66130afed9f4ecd527a404c11d404" prot="private" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>sniffEncoding</name></member>
      <member refid="classQgsAuthCertUtils_1a7808536527d2af8e162da8c6c382c647" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>sslConfigsGroupedByOrg</name></member>
      <member refid="classQgsAuthCertUtils_1a02e114e5382af5cfd5dd7e9a93810abd" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>sslErrorEnumString</name></member>
      <member refid="classQgsAuthCertUtils_1aded924e7f75d6e374b5a9de81238d478" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>sslErrorEnumStrings</name></member>
      <member refid="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375ddad49c8b852dcd6bbec85e73466f91766f" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>SystemRoot</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441dad6867785394257d9bb37fe33e0dd8aee" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>TimeStampingUsage</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441da63936dc3cdd57dc5bcf47a12033d9cd1" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>TlsClientUsage</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441dab7bbc9be6a6c9e785bfa0be0faf43c7e" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>TlsServerEvUsage</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441dacccda0119f3eca7ba3966e8ac47a5eda" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>TlsServerUsage</name></member>
      <member refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371a61ab01103aee838ab3df35b0d56f547c" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>Trusted</name></member>
      <member refid="classQgsAuthCertUtils_1ab5152748d33625a50f6140968348441da56e9bc3bd8ccd5fb3f8d82723db7d70b" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>UndeterminedUsage</name></member>
      <member refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371a1eb7b3429862d0c79080d69445b30acb" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>Untrusted</name></member>
      <member refid="classQgsAuthCertUtils_1ad87fa6f35b409b3bedb3833819d43dec" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>validateCertChain</name></member>
      <member refid="classQgsAuthCertUtils_1afa9cc61136ec0cebe5cb7e9fbcfc5650" prot="public" virt="non-virtual"><scope>QgsAuthCertUtils</scope><name>validatePKIBundle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
