<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsQuadrilateral" kind="class" language="C++" prot="public">
    <compoundname>QgsQuadrilateral</compoundname>
    <includes refid="qgsquadrilateral_8h" local="no">qgsquadrilateral.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsQuadrilateral_1abc5fd1db8fd0cf7fc3322ec360d2deba" prot="public" static="no">
        <name>ConstructionOption</name>
        <enumvalue id="classQgsQuadrilateral_1abc5fd1db8fd0cf7fc3322ec360d2debaa5f1b8ea7528a72a69fbc3197eb6aa2e6" prot="public">
          <name>Distance</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsQuadrilateral_1abc5fd1db8fd0cf7fc3322ec360d2debaaa85775129ada948641f783e7c06408ad" prot="public">
          <name>Projected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>A quadrilateral can be constructed from 3 points where the second distance can be determined by the third point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="enum" id="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839" prot="public" static="no">
        <name>Point</name>
        <enumvalue id="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839ac33e657deeed06c5634259d0986b2962" prot="public">
          <name>Point1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839a468eff9dec459930923e73fa54f2d720" prot="public">
          <name>Point2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839aa80275677da1f10f408cf07356068d09" prot="public">
          <name>Point3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839a22479cdc66f2d1eb1075f7e4a6376746" prot="public">
          <name>Point4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Simple enumeration to ensure indices in setPoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="149" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" bodystart="148" bodyend="154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classQgsQuadrilateral_1a3bf7bf17cd860ca6f14afe40564e806a" prot="public" static="yes" mutable="no">
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; QgsQuadrilateral::rectangleFromDiagonal</definition>
        <argsstring></argsstring>
        <name>rectangleFromDiagonal</name>
        <initializer>= <ref refid="classQgsQuadrilateral_1a3a9aabd02d062e6c25936067851bebf1" kindref="member">rectangleFromExtent</ref></initializer>
        <briefdescription>
<para>Alias for rectangleFromDiagonal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="100" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsQuadrilateral_1a30d0008db59793a548f0ccdd54d15af6" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsQuadrilateral::mPoint1</definition>
        <argsstring></argsstring>
        <name>mPoint1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="211" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsQuadrilateral_1a2728fbb526419b7aaa1d9cadffd134e9" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsQuadrilateral::mPoint2</definition>
        <argsstring></argsstring>
        <name>mPoint2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="211" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsQuadrilateral_1a9dd661960f47f4f6f1e25b0905193333" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsQuadrilateral::mPoint3</definition>
        <argsstring></argsstring>
        <name>mPoint3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="211" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsQuadrilateral_1ab2f4c0f03fa587a8f4b48b49496b2620" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsQuadrilateral::mPoint4</definition>
        <argsstring></argsstring>
        <name>mPoint4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="211" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsQuadrilateral_1a72a80d73cb262b5ea37b4e4855d53055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsQuadrilateral::QgsQuadrilateral</definition>
        <argsstring>()</argsstring>
        <name>QgsQuadrilateral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1aa2471c4f7d6565f83a7c615d2894d75f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsQuadrilateral::QgsQuadrilateral</definition>
        <argsstring>(const QgsPoint &amp;p1, const QgsPoint &amp;p2, const QgsPoint &amp;p3, const QgsPoint &amp;p4)</argsstring>
        <name>QgsQuadrilateral</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p4</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> from four <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>first point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>second point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p3</parametername>
</parameternamelist>
<parameterdescription>
<para>third point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p4</parametername>
</parameternamelist>
<parameterdescription>
<para>fourth point </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsQuadrilateral_1af0a51f18e4f027a8ced8dd5c3a96298d" kindref="member">setPoints</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="48" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1ae48c83f6539900da671e7d6cace505a6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsQuadrilateral::QgsQuadrilateral</definition>
        <argsstring>(const QgsPointXY &amp;p1, const QgsPointXY &amp;p2, const QgsPointXY &amp;p3, const QgsPointXY &amp;p4)</argsstring>
        <name>QgsQuadrilateral</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p4</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> from four <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>first point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>second point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p3</parametername>
</parameternamelist>
<parameterdescription>
<para>third point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p4</parametername>
</parameternamelist>
<parameterdescription>
<para>fourth point </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsQuadrilateral_1af0a51f18e4f027a8ced8dd5c3a96298d" kindref="member">setPoints</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="58" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a6b2ef109d080205e8dcf9983f33407e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsQuadrilateral::area</definition>
        <argsstring>() const</argsstring>
        <name>area</name>
        <briefdescription>
<para>Returns the area of the quadrilateral, or 0 if the quadrilateral is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="197" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="416" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a97bda186b1b9d0a1fe0c60c0fa77b4b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsQuadrilateral::equals</definition>
        <argsstring>(const QgsQuadrilateral &amp;other, double epsilon=4 *std::numeric_limits&lt; double &gt;::epsilon()) const</argsstring>
        <name>equals</name>
        <param>
          <type>const <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>4 *std::numeric_limits&lt; double &gt;::epsilon()</defval>
        </param>
        <briefdescription>
<para>Compares two <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref>, allowing specification of the maximum allowable difference between points. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum difference allowed / tolerance </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="134" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="229" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a67878fdfb0aed567f45032e6891c2b42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsQuadrilateral::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Convenient method to determine if a <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> is valid. </para>        </briefdescription>
        <detaileddescription>
<para>A <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> must be simple (not self-intersecting) and cannot have collinear points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="143" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a193b1503d19494b61ce889c93673d9ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsQuadrilateral::operator!=</definition>
        <argsstring>(const QgsQuadrilateral &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="136" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1ac7b289fb6a76ae96fd434db51d42a423" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsQuadrilateral::operator==</definition>
        <argsstring>(const QgsQuadrilateral &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="135" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a24bae0bf168be5718d327bf471aab19e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsQuadrilateral::perimeter</definition>
        <argsstring>() const</argsstring>
        <name>perimeter</name>
        <briefdescription>
<para>Returns the perimeter of the quadrilateral, or 0 if the quadrilateral is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="202" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="421" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1ad4cf6efee8fafefcd12bc3749f762c83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="qgsabstractgeometry_8h_1a998c0c2a807f73c4412fdab61e278f21" kindref="member">QgsPointSequence</ref></type>
        <definition>QgsPointSequence QgsQuadrilateral::points</definition>
        <argsstring>() const</argsstring>
        <name>points</name>
        <briefdescription>
<para>Returns a list including the vertices of the quadrilateral. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="176" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="360" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a0fa1850d0705cdafb38a181e478e033d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsQuadrilateral::setPoint</definition>
        <argsstring>(const QgsPoint &amp;newPoint, Point index)</argsstring>
        <name>setPoint</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>newPoint</declname>
        </param>
        <param>
          <type><ref refid="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839" kindref="member">Point</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Sets the point <emphasis>newPoint</emphasis> at the <emphasis>index</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns false if the <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> is not valid. <simplesect kind="see"><para><ref refid="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839" kindref="member">Point</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="161" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="318" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1af0a51f18e4f027a8ced8dd5c3a96298d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsQuadrilateral::setPoints</definition>
        <argsstring>(const QgsPoint &amp;p1, const QgsPoint &amp;p2, const QgsPoint &amp;p3, const QgsPoint &amp;p4)</argsstring>
        <name>setPoints</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p4</declname>
        </param>
        <briefdescription>
<para>Set all points Returns false if the <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> is not valid: </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>The points do not have the same type</para></listitem><listitem><para>The quadrilateral would have auto intersections</para></listitem><listitem><para>The quadrilateral has double points</para></listitem><listitem><para>The quadrilateral has collinear points </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="171" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="347" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a4c09c119059504b89f6facfb98d3960f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLineString" kindref="compound">QgsLineString</ref> *</type>
        <definition>QgsLineString * QgsQuadrilateral::toLineString</definition>
        <argsstring>(bool force2D=false) const</argsstring>
        <name>toLineString</name>
        <param>
          <type>bool</type>
          <declname>force2D</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the quadrilateral as a new linestring. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership is transferred to the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="186" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="382" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1aa18b5af8246bd4368509d4cc3130dadd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPolygon" kindref="compound">QgsPolygon</ref> *</type>
        <definition>QgsPolygon * QgsQuadrilateral::toPolygon</definition>
        <argsstring>(bool force2D=false) const</argsstring>
        <name>toPolygon</name>
        <param>
          <type>bool</type>
          <declname>force2D</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the quadrilateral as a new polygon. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership is transferred to the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="181" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="369" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a62cc9a4a239c859f9ca4de8a9bf23101" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsQuadrilateral::toString</definition>
        <argsstring>(int pointPrecision=17) const</argsstring>
        <name>toString</name>
        <param>
          <type>int</type>
          <declname>pointPrecision</declname>
          <defval>17</defval>
        </param>
        <briefdescription>
<para>Returns a string representation of the quadrilateral. </para>        </briefdescription>
        <detaileddescription>
<para>Members will be truncated to the specified precision. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="192" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="401" bodyend="414"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsQuadrilateral_1a31c1a56354680be9538a8e5e47a1fd8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref></type>
        <definition>QgsQuadrilateral QgsQuadrilateral::fromRectangle</definition>
        <argsstring>(const QgsRectangle &amp;rectangle)</argsstring>
        <name>fromRectangle</name>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>rectangle</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> as a rectangle from a <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rectangle</parametername>
</parameternamelist>
<parameterdescription>
<para>rectangle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="124" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="202" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1abb92917f933ca9943554c94f2afa1af5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref></type>
        <definition>QgsQuadrilateral QgsQuadrilateral::rectangleFrom3Points</definition>
        <argsstring>(const QgsPoint &amp;p1, const QgsPoint &amp;p2, const QgsPoint &amp;p3, ConstructionOption mode)</argsstring>
        <name>rectangleFrom3Points</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type><ref refid="classQgsQuadrilateral_1abc5fd1db8fd0cf7fc3322ec360d2deba" kindref="member">ConstructionOption</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> as a Rectangle from 3 points. </para>        </briefdescription>
        <detaileddescription>
<para>In the case where one of the points is of type PointZ. The other points will also be of type Z, even if they are of type Point. In addition, the z used will be the one of the first point with a Z. This ensures consistency in point types and the ability to export to a Polygon or LineString. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>first point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>second point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p3</parametername>
</parameternamelist>
<parameterdescription>
<para>third point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Construction mode to construct the rectangle from 3 points </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsQuadrilateral_1abc5fd1db8fd0cf7fc3322ec360d2deba" kindref="member">ConstructionOption</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="84" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="33" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a35bac6a16d0ef59ad064e6cce5137b76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref></type>
        <definition>QgsQuadrilateral QgsQuadrilateral::rectangleFromCenterPoint</definition>
        <argsstring>(const QgsPoint &amp;center, const QgsPoint &amp;point)</argsstring>
        <name>rectangleFromCenterPoint</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> as a rectangle from center point <emphasis>center</emphasis> and another point <emphasis>point</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Z is taken from <emphasis>center</emphasis> point. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>center point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>corner point </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="118" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="189" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a3a9aabd02d062e6c25936067851bebf1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref></type>
        <definition>QgsQuadrilateral QgsQuadrilateral::rectangleFromExtent</definition>
        <argsstring>(const QgsPoint &amp;p1, const QgsPoint &amp;p2)</argsstring>
        <name>rectangleFromExtent</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> as a rectangle from an extent, defined by two opposite corner points. </para>        </briefdescription>
        <detaileddescription>
<para>Z is taken from point <emphasis>p1</emphasis>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>first point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>second point </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="93" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="117" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classQgsQuadrilateral_1a709bb7b2e4f14ec04a38d2fd6c1827bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref></type>
        <definition>QgsQuadrilateral QgsQuadrilateral::squareFromDiagonal</definition>
        <argsstring>(const QgsPoint &amp;p1, const QgsPoint &amp;p2)</argsstring>
        <name>squareFromDiagonal</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classQgsQuadrilateral" kindref="compound">QgsQuadrilateral</ref> as a square from a diagonal. </para>        </briefdescription>
        <detaileddescription>
<para>Z is taken from point <emphasis>p1</emphasis>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>first point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>second point </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="109" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.cpp" bodystart="159" bodyend="187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Quadrilateral geometry type. </para>    </briefdescription>
    <detaileddescription>
<para>A quadrilateral is a polygon with four edges (or sides) and four vertices or corners. This class allows the creation of simple quadrilateral (which does not self-intersect). <simplesect kind="since"><para>QGIS 3.6 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" line="36" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsquadrilateral.h" bodystart="35" bodyend="212"/>
    <listofallmembers>
      <member refid="classQgsQuadrilateral_1a6b2ef109d080205e8dcf9983f33407e4" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>area</name></member>
      <member refid="classQgsQuadrilateral_1abc5fd1db8fd0cf7fc3322ec360d2deba" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>ConstructionOption</name></member>
      <member refid="classQgsQuadrilateral_1abc5fd1db8fd0cf7fc3322ec360d2debaa5f1b8ea7528a72a69fbc3197eb6aa2e6" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>Distance</name></member>
      <member refid="classQgsQuadrilateral_1a97bda186b1b9d0a1fe0c60c0fa77b4b7" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>equals</name></member>
      <member refid="classQgsQuadrilateral_1a31c1a56354680be9538a8e5e47a1fd8b" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>fromRectangle</name></member>
      <member refid="classQgsQuadrilateral_1a67878fdfb0aed567f45032e6891c2b42" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>isValid</name></member>
      <member refid="classQgsQuadrilateral_1a30d0008db59793a548f0ccdd54d15af6" prot="private" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>mPoint1</name></member>
      <member refid="classQgsQuadrilateral_1a2728fbb526419b7aaa1d9cadffd134e9" prot="private" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>mPoint2</name></member>
      <member refid="classQgsQuadrilateral_1a9dd661960f47f4f6f1e25b0905193333" prot="private" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>mPoint3</name></member>
      <member refid="classQgsQuadrilateral_1ab2f4c0f03fa587a8f4b48b49496b2620" prot="private" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>mPoint4</name></member>
      <member refid="classQgsQuadrilateral_1a193b1503d19494b61ce889c93673d9ca" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>operator!=</name></member>
      <member refid="classQgsQuadrilateral_1ac7b289fb6a76ae96fd434db51d42a423" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>operator==</name></member>
      <member refid="classQgsQuadrilateral_1a24bae0bf168be5718d327bf471aab19e" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>perimeter</name></member>
      <member refid="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>Point</name></member>
      <member refid="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839ac33e657deeed06c5634259d0986b2962" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>Point1</name></member>
      <member refid="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839a468eff9dec459930923e73fa54f2d720" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>Point2</name></member>
      <member refid="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839aa80275677da1f10f408cf07356068d09" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>Point3</name></member>
      <member refid="classQgsQuadrilateral_1a567f47064c91e405a9e4652690f17839a22479cdc66f2d1eb1075f7e4a6376746" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>Point4</name></member>
      <member refid="classQgsQuadrilateral_1ad4cf6efee8fafefcd12bc3749f762c83" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>points</name></member>
      <member refid="classQgsQuadrilateral_1abc5fd1db8fd0cf7fc3322ec360d2debaaa85775129ada948641f783e7c06408ad" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>Projected</name></member>
      <member refid="classQgsQuadrilateral_1a72a80d73cb262b5ea37b4e4855d53055" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>QgsQuadrilateral</name></member>
      <member refid="classQgsQuadrilateral_1aa2471c4f7d6565f83a7c615d2894d75f" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>QgsQuadrilateral</name></member>
      <member refid="classQgsQuadrilateral_1ae48c83f6539900da671e7d6cace505a6" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>QgsQuadrilateral</name></member>
      <member refid="classQgsQuadrilateral_1abb92917f933ca9943554c94f2afa1af5" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>rectangleFrom3Points</name></member>
      <member refid="classQgsQuadrilateral_1a35bac6a16d0ef59ad064e6cce5137b76" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>rectangleFromCenterPoint</name></member>
      <member refid="classQgsQuadrilateral_1a3bf7bf17cd860ca6f14afe40564e806a" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>rectangleFromDiagonal</name></member>
      <member refid="classQgsQuadrilateral_1a3a9aabd02d062e6c25936067851bebf1" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>rectangleFromExtent</name></member>
      <member refid="classQgsQuadrilateral_1a0fa1850d0705cdafb38a181e478e033d" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>setPoint</name></member>
      <member refid="classQgsQuadrilateral_1af0a51f18e4f027a8ced8dd5c3a96298d" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>setPoints</name></member>
      <member refid="classQgsQuadrilateral_1a709bb7b2e4f14ec04a38d2fd6c1827bd" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>squareFromDiagonal</name></member>
      <member refid="classQgsQuadrilateral_1a4c09c119059504b89f6facfb98d3960f" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>toLineString</name></member>
      <member refid="classQgsQuadrilateral_1aa18b5af8246bd4368509d4cc3130dadd" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>toPolygon</name></member>
      <member refid="classQgsQuadrilateral_1a62cc9a4a239c859f9ca4de8a9bf23101" prot="public" virt="non-virtual"><scope>QgsQuadrilateral</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
