<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsLayerTreeGroup" kind="class" language="C++" prot="public">
    <compoundname>QgsLayerTreeGroup</compoundname>
    <basecompoundref refid="classQgsLayerTreeNode" prot="public" virt="non-virtual">QgsLayerTreeNode</basecompoundref>
    <derivedcompoundref refid="classQgsLayerTree" prot="public" virt="non-virtual">QgsLayerTree</derivedcompoundref>
    <includes refid="qgslayertreegroup_8h" local="no">qgslayertreegroup.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQgsLayerTreeGroup_1a6794573ee03f9e8410db98e15474439f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsLayerTreeGroup::mChangingChildVisibility</definition>
        <argsstring></argsstring>
        <name>mChangingChildVisibility</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="220" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsLayerTreeGroup_1a909f5dd6b45785c139bf34eea23c6e95" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsLayerTreeGroup::mMutuallyExclusive</definition>
        <argsstring></argsstring>
        <name>mMutuallyExclusive</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether the group is mutually exclusive (i.e. only one child can be checked at a time) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="223" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsLayerTreeGroup_1afbc9c94f1eeaa1518e2b2fa33bab5a7b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int QgsLayerTreeGroup::mMutuallyExclusiveChildIndex</definition>
        <argsstring></argsstring>
        <name>mMutuallyExclusiveChildIndex</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para>Keeps track which child has been most recently selected (so if the whole group is unchecked and checked again, we know which child to check) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="229" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsLayerTreeGroup_1ac4590638da7003020687c73536602de6" prot="protected" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsLayerTreeGroup::mName</definition>
        <argsstring></argsstring>
        <name>mName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="218" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a4dc924768b13642a37fd112312fe30e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsLayerTreeGroup::QgsLayerTreeGroup</definition>
        <argsstring>(const QString &amp;name=QString(), bool checked=true)</argsstring>
        <name>QgsLayerTreeGroup</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>checked</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="42" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="26" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1aa1bf8d423922e18a91114444d78d3c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsLayerTreeGroup::QgsLayerTreeGroup</definition>
        <argsstring>(const QgsLayerTreeGroup &amp;other)</argsstring>
        <name>QgsLayerTreeGroup</name>
        <param>
          <type>const <ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="45" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a6c4d7898f68a10456cfa67959d2d5152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::addChildNode</definition>
        <argsstring>(QgsLayerTreeNode *node)</argsstring>
        <name>addChildNode</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Append an existing node. </para>        </briefdescription>
        <detaileddescription>
<para>The node must not have a parent yet. The node will be owned by this group. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="91" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1ac8b3c127a260f14cc83404daaad33fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
        <definition>QgsLayerTreeGroup * QgsLayerTreeGroup::addGroup</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>addGroup</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Append a new group node with given name. </para>        </briefdescription>
        <detaileddescription>
<para>Newly created node is owned by this group. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1ad7ecacd6259983f5a0702f11155a7af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> *</type>
        <definition>QgsLayerTreeLayer * QgsLayerTreeGroup::addLayer</definition>
        <argsstring>(QgsMapLayer *layer)</argsstring>
        <name>addLayer</name>
        <param>
          <type><ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Append a new layer node for given map layer. </para>        </briefdescription>
        <detaileddescription>
<para>The newly created node is owned by this group. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="76" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="82" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1aa83708ac49e41c0411667881c719d0a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
        <definition>QgsLayerTreeGroup * QgsLayerTreeGroup::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classQgsLayerTreeNode_1a6ec9f401dfe34909830758ed8712a106">clone</reimplements>
        <briefdescription>
<para>Returns a clone of the group. </para>        </briefdescription>
        <detaileddescription>
<para>The children are cloned too. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="181" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1aef9b017f8cbbe3a3f9fdaddb434c405f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsLayerTreeGroup::dump</definition>
        <argsstring>() const override</argsstring>
        <name>dump</name>
        <reimplements refid="classQgsLayerTreeNode_1a4278dd40612d41d44f86448fc3071cf3">dump</reimplements>
        <briefdescription>
<para>Returns text representation of the tree. </para>        </briefdescription>
        <detaileddescription>
<para>For debugging purposes only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="176" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="335" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a24079a54dc415727b6aa05b4f4260f26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
        <definition>QgsLayerTreeGroup * QgsLayerTreeGroup::findGroup</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>findGroup</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Find group node with specified name. </para>        </briefdescription>
        <detaileddescription>
<para>Searches recursively the whole sub-tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="142" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="235" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1ab128b473faa6095f771fcef46577af77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> * &gt;</type>
        <definition>QList&lt; QgsLayerTreeGroup * &gt; QgsLayerTreeGroup::findGroups</definition>
        <argsstring>() const</argsstring>
        <name>findGroups</name>
        <briefdescription>
<para>Find all group layer nodes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="147" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="255" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1ab1d23a4fa30202929c97cfe00c326e03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> *</type>
        <definition>QgsLayerTreeLayer * QgsLayerTreeGroup::findLayer</definition>
        <argsstring>(QgsMapLayer *layer) const</argsstring>
        <name>findLayer</name>
        <param>
          <type><ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Find layer node representing the map layer. </para>        </briefdescription>
        <detaileddescription>
<para>Searches recursively the whole sub-tree. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="122" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1afaac440af412eece5161da41dad12ba1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> *</type>
        <definition>QgsLayerTreeLayer * QgsLayerTreeGroup::findLayer</definition>
        <argsstring>(const QString &amp;layerId) const</argsstring>
        <name>findLayer</name>
        <param>
          <type>const QString &amp;</type>
          <declname>layerId</declname>
        </param>
        <briefdescription>
<para>Find layer node representing the map layer specified by its ID. </para>        </briefdescription>
        <detaileddescription>
<para>Searches recursively the whole sub-tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="127" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="202" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a527b55b8befc7c9a8c6a0c439cd16a8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsLayerTreeGroup::findLayerIds</definition>
        <argsstring>() const</argsstring>
        <name>findLayerIds</name>
        <briefdescription>
<para>Find layer IDs used in all layer nodes. </para>        </briefdescription>
        <detaileddescription>
<para>Searches recursively the whole sub-tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="137" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="396" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1aaf2f3c127fc50f81450ea4e71d7502e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> * &gt;</type>
        <definition>QList&lt; QgsLayerTreeLayer * &gt; QgsLayerTreeGroup::findLayers</definition>
        <argsstring>() const</argsstring>
        <name>findLayers</name>
        <briefdescription>
<para>Find all layer nodes. </para>        </briefdescription>
        <detaileddescription>
<para>Searches recursively the whole sub-tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="132" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="222" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a12971b2a46fbf14844c5d5976aaf90b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::insertChildNode</definition>
        <argsstring>(int index, QgsLayerTreeNode *node)</argsstring>
        <name>insertChildNode</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Insert existing node at specified position. </para>        </briefdescription>
        <detaileddescription>
<para>The node must not have a parent yet. The node will be owned by this group. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="86" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a13b502ee47b91fa533e71d957093ddf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::insertChildNodes</definition>
        <argsstring>(int index, const QList&lt; QgsLayerTreeNode *&gt; &amp;nodes)</argsstring>
        <name>insertChildNodes</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *&gt; &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Insert existing nodes at specified position. </para>        </briefdescription>
        <detaileddescription>
<para>The nodes must not have a parent yet. The nodes will be owned by this group. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="81" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="99" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a3d97d49e52ee5ef401447ef44d37b80d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
        <definition>QgsLayerTreeGroup * QgsLayerTreeGroup::insertGroup</definition>
        <argsstring>(int index, const QString &amp;name)</argsstring>
        <name>insertGroup</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Insert a new group node with given name at specified position. </para>        </briefdescription>
        <detaileddescription>
<para>The newly created node is owned by this group. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="61" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1ae907fd0e89d3b891c30aa6583c7b4c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref> *</type>
        <definition>QgsLayerTreeLayer * QgsLayerTreeGroup::insertLayer</definition>
        <argsstring>(int index, QgsMapLayer *layer)</argsstring>
        <name>insertLayer</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Insert a new layer node for given map layer at specified position. </para>        </briefdescription>
        <detaileddescription>
<para>The newly created node is owned by this group. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="71" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1ab23a865027bd38663a84e85212831569" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeGroup::isMutuallyExclusive</definition>
        <argsstring>() const</argsstring>
        <name>isMutuallyExclusive</name>
        <briefdescription>
<para>Returns whether the group is mutually exclusive (only one child can be checked at a time) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="198" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="363" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a4b794ad235e0efdbb04ca1bbb25da64f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsLayerTreeGroup::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classQgsLayerTreeNode_1a8a5842f42fa01189b8381f2d41a3709c">name</reimplements>
        <briefdescription>
<para>Returns the group&apos;s name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="51" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a9a672ab3c0a93247babeee445d71916f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::readChildrenFromXml</definition>
        <argsstring>(QDomElement &amp;element, const QgsReadWriteContext &amp;context)</argsstring>
        <name>readChildrenFromXml</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Read children from XML and append them to the group. </para>        </briefdescription>
        <detaileddescription>
<para>Does not resolve textual references to layers. Call <ref refid="classQgsLayerTreeGroup_1a23c3ef4f67a608996ed86c97a807e8fa" kindref="member">resolveReferences()</ref> afterwards to do it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="171" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="319" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a88eeab8501bf23947c6fb7c836434887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::removeAllChildren</definition>
        <argsstring>()</argsstring>
        <name>removeAllChildren</name>
        <briefdescription>
<para>Remove all child nodes. </para>        </briefdescription>
        <detaileddescription>
<para>The nodes will be deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="116" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a414e116e18afdeb540e6bf83c42fac6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::removeChildNode</definition>
        <argsstring>(QgsLayerTreeNode *node)</argsstring>
        <name>removeChildNode</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Remove a child node from this group. </para>        </briefdescription>
        <detaileddescription>
<para>The node will be deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="96" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1ad0b608362a9085432f681c2184f6684e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::removeChildren</definition>
        <argsstring>(int from, int count)</argsstring>
        <name>removeChildren</name>
        <param>
          <type>int</type>
          <declname>from</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Remove child nodes from index &quot;from&quot;. </para>        </briefdescription>
        <detaileddescription>
<para>The nodes will be deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="106" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="155" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1ad41c812a5c92a9cc6c3d347d4abcb6a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::removeChildrenGroupWithoutLayers</definition>
        <argsstring>()</argsstring>
        <name>removeChildrenGroupWithoutLayers</name>
        <briefdescription>
<para>Remove all child group nodes without layers. </para>        </briefdescription>
        <detaileddescription>
<para>The groupnodes will be deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="173" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1ae30b7548ce90850818c25240d014905a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::removeLayer</definition>
        <argsstring>(QgsMapLayer *layer)</argsstring>
        <name>removeLayer</name>
        <param>
          <type><ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Remove map layer&apos;s node from this group. </para>        </briefdescription>
        <detaileddescription>
<para>The node will be deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="101" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="139" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a23c3ef4f67a608996ed86c97a807e8fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::resolveReferences</definition>
        <argsstring>(const QgsProject *project, bool looseMatching=false) override</argsstring>
        <name>resolveReferences</name>
        <reimplements refid="classQgsLayerTreeNode_1aec39036eeba5cb921bc7a371374fb09e">resolveReferences</reimplements>
        <param>
          <type>const <ref refid="classQgsProject" kindref="compound">QgsProject</ref> *</type>
          <declname>project</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>looseMatching</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Calls <ref refid="classQgsLayerTreeGroup_1a23c3ef4f67a608996ed86c97a807e8fa" kindref="member">resolveReferences()</ref> on child tree nodes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="187" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="351" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a985a1c8eba8456784d001fd94776c39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::setIsMutuallyExclusive</definition>
        <argsstring>(bool enabled, int initialChildIndex=-1)</argsstring>
        <name>setIsMutuallyExclusive</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initialChildIndex</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Set whether the group is mutually exclusive (only one child can be checked at a time). </para>        </briefdescription>
        <detaileddescription>
<para>The initial child index determines which child should be initially checked. The default value of -1 will determine automatically (either first one currently checked or none) <simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="206" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="368" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a9d33edae0778adaaf906fa57b73e3e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::setItemVisibilityCheckedRecursive</definition>
        <argsstring>(bool checked) override</argsstring>
        <name>setItemVisibilityCheckedRecursive</name>
        <reimplements refid="classQgsLayerTreeNode_1ad0bf89c61a9a9d375c522aa18829246a">setItemVisibilityCheckedRecursive</reimplements>
        <param>
          <type>bool</type>
          <declname>checked</declname>
        </param>
        <briefdescription>
<para>Check or uncheck a node and all its children (taking into account exclusion rules) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="192" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="444" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a1e9a7ffbb5fbad92197dcc5f569c2213" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::setName</definition>
        <argsstring>(const QString &amp;n) override</argsstring>
        <name>setName</name>
        <reimplements refid="classQgsLayerTreeNode_1a0da23e08cdc978febb1096be93f0823c">setName</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Sets the group&apos;s name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="56" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="48" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a4ab5f30739e8be9824bc21a45b09ac5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::writeXml</definition>
        <argsstring>(QDomElement &amp;parentElement, const QgsReadWriteContext &amp;context) override</argsstring>
        <name>writeXml</name>
        <reimplements refid="classQgsLayerTreeNode_1a4dc22571b3da21e911922ec287673889">writeXml</reimplements>
        <param>
          <type>QDomElement &amp;</type>
          <declname>parentElement</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Write group (tree) as XML element &lt;layer-tree-group&gt; and add it to the given parent element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="165" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="298" bodyend="317"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsLayerTreeGroup_1ac00f1cad9617e1822455e7f589946d7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
        <definition>QgsLayerTreeGroup * QgsLayerTreeGroup::readXml</definition>
        <argsstring>(QDomElement &amp;element, const QgsReadWriteContext &amp;context)</argsstring>
        <name>readXml</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Read group (tree) from XML element &lt;layer-tree-group&gt; and return the newly created group (or null on error). </para>        </briefdescription>
        <detaileddescription>
<para>Does not resolve textual references to layers. Call <ref refid="classQgsLayerTreeGroup_1a23c3ef4f67a608996ed86c97a807e8fa" kindref="member">resolveReferences()</ref> afterwards to do it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="153" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="267" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeGroup_1a5d2f0183d45e11e7ca9962876de4eb24" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
        <definition>QgsLayerTreeGroup * QgsLayerTreeGroup::readXml</definition>
        <argsstring>(QDomElement &amp;element, const QgsProject *project, const QgsReadWriteContext &amp;context)</argsstring>
        <name>readXml</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsProject" kindref="compound">QgsProject</ref> *</type>
          <declname>project</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Read group (tree) from XML element &lt;layer-tree-group&gt; and return the newly created group (or null on error). </para>        </briefdescription>
        <detaileddescription>
<para>Also resolves textual references to layers from the project (calls <ref refid="classQgsLayerTreeGroup_1a23c3ef4f67a608996ed86c97a807e8fa" kindref="member">resolveReferences()</ref> internally). <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="160" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="290" bodyend="296"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-slot">
      <memberdef kind="slot" id="classQgsLayerTreeGroup_1af06dfd8c3370a73f8aec74d911dda1aa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::nodeVisibilityChanged</definition>
        <argsstring>(QgsLayerTreeNode *node)</argsstring>
        <name>nodeVisibilityChanged</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="209" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="409" bodyend="425"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsLayerTreeGroup_1abfa11fdd7020ce1533134df5e03705be" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeGroup::updateChildVisibilityMutuallyExclusive</definition>
        <argsstring>()</argsstring>
        <name>updateChildVisibilityMutuallyExclusive</name>
        <briefdescription>
<para>Set check state of children - if mutually exclusive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="216" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.cpp" bodystart="427" bodyend="442"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Layer tree group node serves as a container for layers and further groups. </para>    </briefdescription>
    <detaileddescription>
<para>Group names do not need to be unique within one tree nor within one parent.</para><para><simplesect kind="since"><para>QGIS 2.4 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="4267">
        <label>QObject</label>
      </node>
      <node id="4266">
        <label>QgsLayerTreeNode</label>
        <link refid="classQgsLayerTreeNode"/>
        <childnode refid="4267" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4268">
        <label>QgsLayerTree</label>
        <link refid="classQgsLayerTree"/>
        <childnode refid="4265" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4265">
        <label>QgsLayerTreeGroup</label>
        <link refid="classQgsLayerTreeGroup"/>
        <childnode refid="4266" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4271">
        <label>QObject</label>
      </node>
      <node id="4270">
        <label>QgsLayerTreeNode</label>
        <link refid="classQgsLayerTreeNode"/>
        <childnode refid="4271" relation="public-inheritance">
        </childnode>
        <childnode refid="4270" relation="usage">
          <edgelabel>mParent</edgelabel>
        </childnode>
        <childnode refid="4272" relation="usage">
          <edgelabel>mProperties</edgelabel>
        </childnode>
      </node>
      <node id="4272">
        <label>QgsObjectCustomProperties</label>
        <link refid="classQgsObjectCustomProperties"/>
      </node>
      <node id="4269">
        <label>QgsLayerTreeGroup</label>
        <link refid="classQgsLayerTreeGroup"/>
        <childnode refid="4270" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" line="35" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreegroup.h" bodystart="34" bodyend="241"/>
    <listofallmembers>
      <member refid="classQgsLayerTreeGroup_1a6c4d7898f68a10456cfa67959d2d5152" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>addChildNode</name></member>
      <member refid="classQgsLayerTreeNode_1aafb8fcdf1f88cf30b2cfb8ac02305062" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>addedChildren</name></member>
      <member refid="classQgsLayerTreeGroup_1ac8b3c127a260f14cc83404daaad33fde" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>addGroup</name></member>
      <member refid="classQgsLayerTreeGroup_1ad7ecacd6259983f5a0702f11155a7af1" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>addLayer</name></member>
      <member refid="classQgsLayerTreeNode_1ad8e7856e52c56219ff1f2c06fbe2909b" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>checkedLayers</name></member>
      <member refid="classQgsLayerTreeNode_1ab82bb4fef5dec90baa927927a11f86d9" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>children</name></member>
      <member refid="classQgsLayerTreeNode_1acaea1a6ec08656295a2aea2b3259c7aa" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>children</name></member>
      <member refid="classQgsLayerTreeGroup_1aa83708ac49e41c0411667881c719d0a7" prot="public" virt="virtual"><scope>QgsLayerTreeGroup</scope><name>clone</name></member>
      <member refid="classQgsLayerTreeNode_1ad67169a8134ec13520fe6e011cb0ae88" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>customProperties</name></member>
      <member refid="classQgsLayerTreeNode_1a8050bc62c7d37e25e707d47dee3752ee" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>customProperty</name></member>
      <member refid="classQgsLayerTreeNode_1a9d0d7f92fddbbb1931d0e9d8ff438fe2" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>customPropertyChanged</name></member>
      <member refid="classQgsLayerTreeGroup_1aef9b017f8cbbe3a3f9fdaddb434c405f" prot="public" virt="virtual"><scope>QgsLayerTreeGroup</scope><name>dump</name></member>
      <member refid="classQgsLayerTreeNode_1afa1caacfe93c69d39f2c1294a2d0580e" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>expandedChanged</name></member>
      <member refid="classQgsLayerTreeGroup_1a24079a54dc415727b6aa05b4f4260f26" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>findGroup</name></member>
      <member refid="classQgsLayerTreeGroup_1ab128b473faa6095f771fcef46577af77" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>findGroups</name></member>
      <member refid="classQgsLayerTreeGroup_1ab1d23a4fa30202929c97cfe00c326e03" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>findLayer</name></member>
      <member refid="classQgsLayerTreeGroup_1afaac440af412eece5161da41dad12ba1" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>findLayer</name></member>
      <member refid="classQgsLayerTreeGroup_1a527b55b8befc7c9a8c6a0c439cd16a8a" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>findLayerIds</name></member>
      <member refid="classQgsLayerTreeGroup_1aaf2f3c127fc50f81450ea4e71d7502e8" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>findLayers</name></member>
      <member refid="classQgsLayerTreeGroup_1a12971b2a46fbf14844c5d5976aaf90b6" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>insertChildNode</name></member>
      <member refid="classQgsLayerTreeGroup_1a13b502ee47b91fa533e71d957093ddf5" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>insertChildNodes</name></member>
      <member refid="classQgsLayerTreeNode_1a54de98df55157b3e521e53cbf9627c66" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>insertChildrenPrivate</name></member>
      <member refid="classQgsLayerTreeGroup_1a3d97d49e52ee5ef401447ef44d37b80d" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>insertGroup</name></member>
      <member refid="classQgsLayerTreeGroup_1ae907fd0e89d3b891c30aa6583c7b4c2f" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>insertLayer</name></member>
      <member refid="classQgsLayerTreeNode_1ad5da9180a4f3eb57a45da2f66d2ce541" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>isExpanded</name></member>
      <member refid="classQgsLayerTreeNode_1aea605ad4f0e8868e49514c0038727f02" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>isItemVisibilityCheckedRecursive</name></member>
      <member refid="classQgsLayerTreeNode_1a5771045c9d5fa3e037d62acbf5ad6351" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>isItemVisibilityUncheckedRecursive</name></member>
      <member refid="classQgsLayerTreeGroup_1ab23a865027bd38663a84e85212831569" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>isMutuallyExclusive</name></member>
      <member refid="classQgsLayerTreeNode_1a406d4f892502e2c7ffa3eb2b10be03bc" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>isVisible</name></member>
      <member refid="classQgsLayerTreeNode_1aebb513ef0ace30a9049d50ca050baf97" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>itemVisibilityChecked</name></member>
      <member refid="classQgsLayerTreeGroup_1a6794573ee03f9e8410db98e15474439f" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>mChangingChildVisibility</name></member>
      <member refid="classQgsLayerTreeNode_1a60603d68b98ab4926557f7d96354a933" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>mChecked</name></member>
      <member refid="classQgsLayerTreeNode_1acea8600cfa07bc1ee6cd920b916fa53c" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>mChildren</name></member>
      <member refid="classQgsLayerTreeNode_1ad2d4c027b8a41587a5360ba216fbe10f" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>mExpanded</name></member>
      <member refid="classQgsLayerTreeGroup_1a909f5dd6b45785c139bf34eea23c6e95" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>mMutuallyExclusive</name></member>
      <member refid="classQgsLayerTreeGroup_1afbc9c94f1eeaa1518e2b2fa33bab5a7b" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>mMutuallyExclusiveChildIndex</name></member>
      <member refid="classQgsLayerTreeGroup_1ac4590638da7003020687c73536602de6" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>mName</name></member>
      <member refid="classQgsLayerTreeNode_1aa0b9118acdb3c431eeaace4598eb1fc5" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>mNodeType</name></member>
      <member refid="classQgsLayerTreeNode_1add3ae71428644c7c1aacea5ab98a6e62" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>mParent</name></member>
      <member refid="classQgsLayerTreeNode_1a95e870816acd0915a5447d0d935c32df" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>mProperties</name></member>
      <member refid="classQgsLayerTreeGroup_1a4b794ad235e0efdbb04ca1bbb25da64f" prot="public" virt="virtual"><scope>QgsLayerTreeGroup</scope><name>name</name></member>
      <member refid="classQgsLayerTreeNode_1a3d1c3582f58e93f71e70bd1c0b00005a" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>nameChanged</name></member>
      <member refid="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17a103cb3fb5a9106380034458fd88e109f" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>NodeGroup</name></member>
      <member refid="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17ad3da24ad32e5a6f7542c169090fec525" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>NodeLayer</name></member>
      <member refid="classQgsLayerTreeNode_1a94c93bd93107268171a35f422e720789" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>nodeType</name></member>
      <member refid="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>NodeType</name></member>
      <member refid="classQgsLayerTreeGroup_1af06dfd8c3370a73f8aec74d911dda1aa" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>nodeVisibilityChanged</name></member>
      <member refid="classQgsLayerTreeNode_1aa29249808413d2442f212193be6a2327" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>parent</name></member>
      <member refid="classQgsLayerTreeGroup_1a4dc924768b13642a37fd112312fe30e4" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>QgsLayerTreeGroup</name></member>
      <member refid="classQgsLayerTreeGroup_1aa1bf8d423922e18a91114444d78d3c13" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>QgsLayerTreeGroup</name></member>
      <member refid="classQgsLayerTreeNode_1a8fe0bee04f087e06705307a85b29a9c6" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>QgsLayerTreeNode</name></member>
      <member refid="classQgsLayerTreeNode_1a9fc4a0559b15d96c9153faa012a5f8b9" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>QgsLayerTreeNode</name></member>
      <member refid="classQgsLayerTreeGroup_1a9a672ab3c0a93247babeee445d71916f" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>readChildrenFromXml</name></member>
      <member refid="classQgsLayerTreeNode_1a05da768f2ed0d97e63badb424469e482" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>readCommonXml</name></member>
      <member refid="classQgsLayerTreeGroup_1ac00f1cad9617e1822455e7f589946d7b" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>readXml</name></member>
      <member refid="classQgsLayerTreeGroup_1a5d2f0183d45e11e7ca9962876de4eb24" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>readXml</name></member>
      <member refid="classQgsLayerTreeNode_1a043c1dedb591384cdbb03d0001ffc7a5" prot="public" virt="non-virtual" ambiguityscope="QgsLayerTreeNode::"><scope>QgsLayerTreeGroup</scope><name>readXml</name></member>
      <member refid="classQgsLayerTreeGroup_1a88eeab8501bf23947c6fb7c836434887" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>removeAllChildren</name></member>
      <member refid="classQgsLayerTreeGroup_1a414e116e18afdeb540e6bf83c42fac6d" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>removeChildNode</name></member>
      <member refid="classQgsLayerTreeGroup_1ad0b608362a9085432f681c2184f6684e" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>removeChildren</name></member>
      <member refid="classQgsLayerTreeGroup_1ad41c812a5c92a9cc6c3d347d4abcb6a4" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>removeChildrenGroupWithoutLayers</name></member>
      <member refid="classQgsLayerTreeNode_1afccc54112d91019d9917f33fa70c5268" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>removeChildrenPrivate</name></member>
      <member refid="classQgsLayerTreeNode_1a79dfdb61628cd7a1260d5bdef8fc69b5" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>removeCustomProperty</name></member>
      <member refid="classQgsLayerTreeNode_1a31ee6e9bbf0ef9ef67af37e55baa426b" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>removedChildren</name></member>
      <member refid="classQgsLayerTreeGroup_1ae30b7548ce90850818c25240d014905a" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>removeLayer</name></member>
      <member refid="classQgsLayerTreeGroup_1a23c3ef4f67a608996ed86c97a807e8fa" prot="public" virt="virtual"><scope>QgsLayerTreeGroup</scope><name>resolveReferences</name></member>
      <member refid="classQgsLayerTreeNode_1a488cad4a41eceea25b44ba1091a11cb5" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>setCustomProperty</name></member>
      <member refid="classQgsLayerTreeNode_1a86b03df69ebcce2733f9cc3f191caa40" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>setExpanded</name></member>
      <member refid="classQgsLayerTreeGroup_1a985a1c8eba8456784d001fd94776c39b" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>setIsMutuallyExclusive</name></member>
      <member refid="classQgsLayerTreeNode_1ad6c4e357cbf618dbe00fe5e7d44276e8" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>setItemVisibilityChecked</name></member>
      <member refid="classQgsLayerTreeNode_1aff2ca3e672c1dd14adadf35331b33a97" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>setItemVisibilityCheckedParentRecursive</name></member>
      <member refid="classQgsLayerTreeGroup_1a9d33edae0778adaaf906fa57b73e3e2c" prot="public" virt="virtual"><scope>QgsLayerTreeGroup</scope><name>setItemVisibilityCheckedRecursive</name></member>
      <member refid="classQgsLayerTreeGroup_1a1e9a7ffbb5fbad92197dcc5f569c2213" prot="public" virt="virtual"><scope>QgsLayerTreeGroup</scope><name>setName</name></member>
      <member refid="classQgsLayerTreeNode_1ab36fcba57b7cb24f88e340357205fa9c" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>takeChild</name></member>
      <member refid="classQgsLayerTreeGroup_1abfa11fdd7020ce1533134df5e03705be" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>updateChildVisibilityMutuallyExclusive</name></member>
      <member refid="classQgsLayerTreeNode_1acd8ebad3e3fc5b7f8ac7f500a50ca12f" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>visibilityChanged</name></member>
      <member refid="classQgsLayerTreeNode_1ac7965be1caea0ee54119991fa2480545" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>willAddChildren</name></member>
      <member refid="classQgsLayerTreeNode_1a69e34928a72b1d457cb45e04207941bd" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>willRemoveChildren</name></member>
      <member refid="classQgsLayerTreeNode_1a91e058716212a62000179bcfe5348749" prot="protected" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>writeCommonXml</name></member>
      <member refid="classQgsLayerTreeGroup_1a4ab5f30739e8be9824bc21a45b09ac5d" prot="public" virt="virtual"><scope>QgsLayerTreeGroup</scope><name>writeXml</name></member>
      <member refid="classQgsLayerTreeNode_1a7b72d81658009aa698415cfc8496fca5" prot="public" virt="non-virtual"><scope>QgsLayerTreeGroup</scope><name>~QgsLayerTreeNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
