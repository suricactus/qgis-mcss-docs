<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsAbstractPropertyCollection" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QgsAbstractPropertyCollection</compoundname>
    <derivedcompoundref refid="classQgsPropertyCollection" prot="public" virt="non-virtual">QgsPropertyCollection</derivedcompoundref>
    <derivedcompoundref refid="classQgsPropertyCollectionStack" prot="public" virt="non-virtual">QgsPropertyCollectionStack</derivedcompoundref>
    <includes refid="qgspropertycollection_8h" local="no">qgspropertycollection.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsAbstractPropertyCollection_1a8f85d25cc701cc7d62d4f68715f0022e" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsAbstractPropertyCollection::mName</definition>
        <argsstring></argsstring>
        <name>mName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="266" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a9ac950d71aba3faca73df84d27d17445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsAbstractPropertyCollection::QgsAbstractPropertyCollection</definition>
        <argsstring>(const QString &amp;name=QString())</argsstring>
        <name>QgsAbstractPropertyCollection</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsAbstractPropertyCollection" kindref="compound">QgsAbstractPropertyCollection</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The name parameter should be set to a descriptive name for the collection. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="59" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1aeb2b834ea10c36bbf91eff05b4f5d167" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QgsAbstractPropertyCollection::~QgsAbstractPropertyCollection</definition>
        <argsstring>()=default</argsstring>
        <name>~QgsAbstractPropertyCollection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a84cf4043db5b88bc0008d7c19c194639" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QgsAbstractPropertyCollection::clear</definition>
        <argsstring>()=0</argsstring>
        <name>clear</name>
        <reimplementedby refid="classQgsPropertyCollection_1ad68fa5fa4842292d98b37d5c3f6060cc">clear</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1ad4b2c799a9aa9bd3737fb60e0abe52db">clear</reimplementedby>
        <briefdescription>
<para>Removes all properties from the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1aac16f8363300a66598266fdc550711d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsAbstractPropertyCollection::hasActiveProperties</definition>
        <argsstring>() const =0</argsstring>
        <name>hasActiveProperties</name>
        <reimplementedby refid="classQgsPropertyCollection_1af41839c81a3aae1113a5a3c160be9a2c">hasActiveProperties</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1aa50130ccf45aeaa403f0f662c8e17f9f">hasActiveProperties</reimplementedby>
        <briefdescription>
<para>Returns true if the collection has any active properties, or false if all properties within the collection are deactivated. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1ad63932a119c9161052949f80e4aa9b72" kindref="member">hasDynamicProperties()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1ad63932a119c9161052949f80e4aa9b72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsAbstractPropertyCollection::hasDynamicProperties</definition>
        <argsstring>() const =0</argsstring>
        <name>hasDynamicProperties</name>
        <reimplementedby refid="classQgsPropertyCollection_1a848ed12e50f7743adc87be8e51d7cf28">hasDynamicProperties</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1ae4acafd728c1ffc1d34829809222bfc8">hasDynamicProperties</reimplementedby>
        <briefdescription>
<para>Returns true if the collection has any active, non-static properties, or false if either all non-static properties within the collection are deactivated or if the collection only contains static properties. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1aac16f8363300a66598266fdc550711d9" kindref="member">hasActiveProperties()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a2dd48b0c0fc917034fbe85cfb42cb8f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsAbstractPropertyCollection::hasProperty</definition>
        <argsstring>(int key) const =0</argsstring>
        <name>hasProperty</name>
        <reimplementedby refid="classQgsPropertyCollection_1a0ea22aa8a2ce1e18a36c803f35c05755">hasProperty</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1a54bb33fe86505596681a755f59f91e42">hasProperty</reimplementedby>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns true if the collection contains a property with the specified key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a50d7627921b3cdc734708ff471ba46b2" kindref="member">property()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a39c5569f5ed2905f4ae9e62b1cd5a97c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsAbstractPropertyCollection::isActive</definition>
        <argsstring>(int key) const =0</argsstring>
        <name>isActive</name>
        <reimplementedby refid="classQgsPropertyCollection_1af187605ecb23d984e40cc7fe06563bd7">isActive</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1ada1779a3b9fb34f1f03d67ce33924993">isActive</reimplementedby>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns true if the collection contains an active property with the specified key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to test. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1aa147e983f4c75fd920bd42d2828603e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsAbstractPropertyCollection::loadVariant</definition>
        <argsstring>(const QVariant &amp;configuration, const QgsPropertiesDefinition &amp;definitions)=0</argsstring>
        <name>loadVariant</name>
        <reimplementedby refid="classQgsPropertyCollection_1a64d425f32a0d637b2e7970cde274bb6d">loadVariant</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1aced9cac862336ece2d82ba779511a78a">loadVariant</reimplementedby>
        <param>
          <type>const QVariant &amp;</type>
          <declname>configuration</declname>
        </param>
        <param>
          <type>const <ref refid="qgspropertycollection_8h_1a55b05677f78795114fa12c8fe7356db6" kindref="member">QgsPropertiesDefinition</ref> &amp;</type>
          <declname>definitions</declname>
        </param>
        <briefdescription>
<para>Loads this property collection from a QVariantMap, wrapped in a QVariant. </para>        </briefdescription>
        <detaileddescription>
<para>You can use <ref refid="classQgsXmlUtils_1a78b54d8785573d3ad51566999d7a3884" kindref="member">QgsXmlUtils::readVariant</ref> to save it to an XML document.</para><para><simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1aeb3800ad6eb6f4bb842831b14c7f02fa" kindref="member">toVariant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1aae99df08fe5b8d30cd1309fb6fe6f47f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAbstractPropertyCollection::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
<para>Returns the descriptive name of the property collection. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a1c01a41cc99b48d2a1150bfbf661cc56" kindref="member">setName()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="67" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a920cb81a5b99cfa6237c86402bb14b4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QgsAbstractPropertyCollection::prepare</definition>
        <argsstring>(const QgsExpressionContext &amp;context=QgsExpressionContext()) const =0</argsstring>
        <name>prepare</name>
        <reimplementedby refid="classQgsPropertyCollection_1af418882f603822c8373f54d5eb8af03b">prepare</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1a7bf8ca0b6ec34d54adabf1855e76c652">prepare</reimplementedby>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>()</defval>
        </param>
        <briefdescription>
<para>Prepares the collection against a specified expression context. </para>        </briefdescription>
        <detaileddescription>
<para>Calling prepare before evaluating the collection&apos;s properties multiple times allows precalculation of expensive setup tasks such as parsing expressions. Returns true if preparation was successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a50d7627921b3cdc734708ff471ba46b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classQgsProperty" kindref="compound">QgsProperty</ref></type>
        <definition>virtual QgsProperty QgsAbstractPropertyCollection::property</definition>
        <argsstring>(int key) const =0</argsstring>
        <name>property</name>
        <reimplementedby refid="classQgsPropertyCollection_1a179bafc5f2636dde1fd4f6058727c903">property</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1ad02b87ed8994e54c394612bb9a8e2fc7">property</reimplementedby>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns a matching property from the collection, if one exists. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matching property, or null if no matching, active property found. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a2dd48b0c0fc917034fbe85cfb42cb8f9" kindref="member">hasProperty()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1aabba89a7b870a6dfd690188d6853f2ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QSet&lt; int &gt;</type>
        <definition>virtual QSet&lt;int&gt; QgsAbstractPropertyCollection::propertyKeys</definition>
        <argsstring>() const =0</argsstring>
        <name>propertyKeys</name>
        <reimplementedby refid="classQgsPropertyCollection_1aec6922d45431a7c5536f3152a27d2490">propertyKeys</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1ab6d4839a8c373c84d27c8d22654bcaf1">propertyKeys</reimplementedby>
        <briefdescription>
<para>Returns a list of property keys contained within the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1ab3df675b6cb01963b82dd84f26417ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsAbstractPropertyCollection::readXml</definition>
        <argsstring>(const QDomElement &amp;collectionElem, const QgsPropertiesDefinition &amp;definitions)</argsstring>
        <name>readXml</name>
        <param>
          <type>const QDomElement &amp;</type>
          <declname>collectionElem</declname>
        </param>
        <param>
          <type>const <ref refid="qgspropertycollection_8h_1a55b05677f78795114fa12c8fe7356db6" kindref="member">QgsPropertiesDefinition</ref> &amp;</type>
          <declname>definitions</declname>
        </param>
        <briefdescription>
<para>Reads property collection state from an XML element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>collectionElem</parametername>
</parameternamelist>
<parameterdescription>
<para>source DOM element for property collection&apos;s state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>definitions</parametername>
</parameternamelist>
<parameterdescription>
<para>property definitions </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1ae5dc589ec5b5f4864e5f52e7114f9372" kindref="member">writeXml()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="246" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a4627b3aa0a221b112e0dd8c735a63f5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>virtual QSet&lt; QString &gt; QgsAbstractPropertyCollection::referencedFields</definition>
        <argsstring>(const QgsExpressionContext &amp;context=QgsExpressionContext()) const =0</argsstring>
        <name>referencedFields</name>
        <reimplementedby refid="classQgsPropertyCollection_1ae9274bd16e6793ba3a1bd056133631a3">referencedFields</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1a36752a203d9a719d568af71bda4aa0da">referencedFields</reimplementedby>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
          <defval><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>()</defval>
        </param>
        <briefdescription>
<para>Returns the set of any fields referenced by the active properties from the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>expression context the properties will be evaluated against. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a1c01a41cc99b48d2a1150bfbf661cc56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAbstractPropertyCollection::setName</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>setName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets the descriptive name for the property collection. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1aae99df08fe5b8d30cd1309fb6fe6f47f" kindref="member">name()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="73" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1aeb3800ad6eb6f4bb842831b14c7f02fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QVariant</type>
        <definition>virtual QVariant QgsAbstractPropertyCollection::toVariant</definition>
        <argsstring>(const QgsPropertiesDefinition &amp;definitions) const =0</argsstring>
        <name>toVariant</name>
        <reimplementedby refid="classQgsPropertyCollection_1a82afdcf57961ec77d8a9237e410c57b2">toVariant</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1ae78983934843397e5cd09edc5e734534">toVariant</reimplementedby>
        <param>
          <type>const <ref refid="qgspropertycollection_8h_1a55b05677f78795114fa12c8fe7356db6" kindref="member">QgsPropertiesDefinition</ref> &amp;</type>
          <declname>definitions</declname>
        </param>
        <briefdescription>
<para>Saves this property collection to a QVariantMap, wrapped in a QVariant. </para>        </briefdescription>
        <detaileddescription>
<para>You can use <ref refid="classQgsXmlUtils_1a4192d177c2475a2825cc1ba9972d97b9" kindref="member">QgsXmlUtils::writeVariant</ref> to save it to an XML document.</para><para><simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1aa147e983f4c75fd920bd42d2828603e9" kindref="member">loadVariant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a019335a5ad374d375c5c6d40dce06c94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QVariant</type>
        <definition>virtual QVariant QgsAbstractPropertyCollection::value</definition>
        <argsstring>(int key, const QgsExpressionContext &amp;context, const QVariant &amp;defaultValue=QVariant()) const =0</argsstring>
        <name>value</name>
        <reimplementedby refid="classQgsPropertyCollection_1a279a2483752abbe19740e7143f294f89">value</reimplementedby>
        <reimplementedby refid="classQgsPropertyCollectionStack_1a2ea3cc352482d59c5046c0ebae836fa5">value</reimplementedby>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>defaultValue</declname>
          <defval>QVariant()</defval>
        </param>
        <briefdescription>
<para>Returns the calculated value of the property with the specified key from within the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>expression context to evaluate property against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>default value to return if no matching, active property found or if the property value cannot be calculated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>calculated property value, or default value if property could not be evaluated </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1aceb66fd899863e2f94ddea8685f47945" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a26635d5d39d88cad06a644656c90fce5" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a8f7248ffb2b0645ec589f5a3d7d7ea89" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a4fe8018df9c685a0ceb400f990eb29b1" kindref="member">valueAsInt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a57efefb4c0dad49de9854fc7476955b2" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a57efefb4c0dad49de9854fc7476955b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAbstractPropertyCollection::valueAsBool</definition>
        <argsstring>(int key, const QgsExpressionContext &amp;context, bool defaultValue=false, bool *ok=nullptr) const</argsstring>
        <name>valueAsBool</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defaultValue</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property with the specified key and interprets it as an boolean. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>default boolean to return if the property cannot be calculated as a boolean </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value parsed to bool </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a019335a5ad374d375c5c6d40dce06c94" kindref="member">value()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1aceb66fd899863e2f94ddea8685f47945" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a26635d5d39d88cad06a644656c90fce5" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a8f7248ffb2b0645ec589f5a3d7d7ea89" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a4fe8018df9c685a0ceb400f990eb29b1" kindref="member">valueAsInt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="196" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="76" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a26635d5d39d88cad06a644656c90fce5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor QgsAbstractPropertyCollection::valueAsColor</definition>
        <argsstring>(int key, const QgsExpressionContext &amp;context, const QColor &amp;defaultColor=QColor(), bool *ok=nullptr) const</argsstring>
        <name>valueAsColor</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>defaultColor</declname>
          <defval>QColor()</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property with the specified key and interprets it as a color. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultColor</parametername>
</parameternamelist>
<parameterdescription>
<para>default color to return if the property cannot be calculated as a color </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value parsed to color </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a019335a5ad374d375c5c6d40dce06c94" kindref="member">value()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1aceb66fd899863e2f94ddea8685f47945" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a8f7248ffb2b0645ec589f5a3d7d7ea89" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a4fe8018df9c685a0ceb400f990eb29b1" kindref="member">valueAsInt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a57efefb4c0dad49de9854fc7476955b2" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="148" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="42" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a8f7248ffb2b0645ec589f5a3d7d7ea89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsAbstractPropertyCollection::valueAsDouble</definition>
        <argsstring>(int key, const QgsExpressionContext &amp;context, double defaultValue=0.0, bool *ok=nullptr) const</argsstring>
        <name>valueAsDouble</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defaultValue</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property with the specified key and interprets it as a double. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>default double to return if the property cannot be calculated as a double </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value parsed to double </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a019335a5ad374d375c5c6d40dce06c94" kindref="member">value()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1aceb66fd899863e2f94ddea8685f47945" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a26635d5d39d88cad06a644656c90fce5" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a4fe8018df9c685a0ceb400f990eb29b1" kindref="member">valueAsInt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a57efefb4c0dad49de9854fc7476955b2" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="164" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1a4fe8018df9c685a0ceb400f990eb29b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsAbstractPropertyCollection::valueAsInt</definition>
        <argsstring>(int key, const QgsExpressionContext &amp;context, int defaultValue=0, bool *ok=nullptr) const</argsstring>
        <name>valueAsInt</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property with the specified key and interprets it as an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>default integer to return if the property cannot be calculated as a integer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value parsed to integer </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a019335a5ad374d375c5c6d40dce06c94" kindref="member">value()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1aceb66fd899863e2f94ddea8685f47945" kindref="member">valueAsString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a26635d5d39d88cad06a644656c90fce5" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a8f7248ffb2b0645ec589f5a3d7d7ea89" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a57efefb4c0dad49de9854fc7476955b2" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="180" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="65" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1aceb66fd899863e2f94ddea8685f47945" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAbstractPropertyCollection::valueAsString</definition>
        <argsstring>(int key, const QgsExpressionContext &amp;context, const QString &amp;defaultString=QString(), bool *ok=nullptr) const</argsstring>
        <name>valueAsString</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>defaultString</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the current value of the property with the specified key and interprets it as a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>integer key for property to return. The intended use case is that a context specific enum is cast to int and used for the key value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> to evaluate the property for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultString</parametername>
</parameternamelist>
<parameterdescription>
<para>default string to return if the property cannot be calculated as a string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ok</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if conversion was successful </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value parsed to string </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a019335a5ad374d375c5c6d40dce06c94" kindref="member">value()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a26635d5d39d88cad06a644656c90fce5" kindref="member">valueAsColor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a8f7248ffb2b0645ec589f5a3d7d7ea89" kindref="member">valueAsDouble()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a4fe8018df9c685a0ceb400f990eb29b1" kindref="member">valueAsInt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1a57efefb4c0dad49de9854fc7476955b2" kindref="member">valueAsBool()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="132" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="30" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAbstractPropertyCollection_1ae5dc589ec5b5f4864e5f52e7114f9372" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsAbstractPropertyCollection::writeXml</definition>
        <argsstring>(QDomElement &amp;collectionElem, const QgsPropertiesDefinition &amp;definitions) const</argsstring>
        <name>writeXml</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>collectionElem</declname>
        </param>
        <param>
          <type>const <ref refid="qgspropertycollection_8h_1a55b05677f78795114fa12c8fe7356db6" kindref="member">QgsPropertiesDefinition</ref> &amp;</type>
          <declname>definitions</declname>
        </param>
        <briefdescription>
<para>Writes the current state of the property collection into an XML element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>collectionElem</parametername>
</parameternamelist>
<parameterdescription>
<para>destination element for the property collection&apos;s state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>definitions</parametername>
</parameternamelist>
<parameterdescription>
<para>property definitions </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsAbstractPropertyCollection_1ab3df675b6cb01963b82dd84f26417ae1" kindref="member">readXml()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="238" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.cpp" bodystart="87" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract base class for <ref refid="classQgsPropertyCollection" kindref="compound">QgsPropertyCollection</ref> like objects. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1072">
        <label>QgsAbstractPropertyCollection</label>
        <link refid="classQgsAbstractPropertyCollection"/>
      </node>
      <node id="1074">
        <label>QgsPropertyCollectionStack</label>
        <link refid="classQgsPropertyCollectionStack"/>
        <childnode refid="1072" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1073">
        <label>QgsPropertyCollection</label>
        <link refid="classQgsPropertyCollection"/>
        <childnode refid="1072" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" line="40" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertycollection.h" bodystart="39" bodyend="267"/>
    <listofallmembers>
      <member refid="classQgsAbstractPropertyCollection_1a84cf4043db5b88bc0008d7c19c194639" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>clear</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aac16f8363300a66598266fdc550711d9" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>hasActiveProperties</name></member>
      <member refid="classQgsAbstractPropertyCollection_1ad63932a119c9161052949f80e4aa9b72" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>hasDynamicProperties</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a2dd48b0c0fc917034fbe85cfb42cb8f9" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>hasProperty</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a39c5569f5ed2905f4ae9e62b1cd5a97c" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>isActive</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aa147e983f4c75fd920bd42d2828603e9" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>loadVariant</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a8f85d25cc701cc7d62d4f68715f0022e" prot="private" virt="non-virtual"><scope>QgsAbstractPropertyCollection</scope><name>mName</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aae99df08fe5b8d30cd1309fb6fe6f47f" prot="public" virt="non-virtual"><scope>QgsAbstractPropertyCollection</scope><name>name</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a920cb81a5b99cfa6237c86402bb14b4c" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>prepare</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a50d7627921b3cdc734708ff471ba46b2" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>property</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aabba89a7b870a6dfd690188d6853f2ac" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>propertyKeys</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a9ac950d71aba3faca73df84d27d17445" prot="public" virt="non-virtual"><scope>QgsAbstractPropertyCollection</scope><name>QgsAbstractPropertyCollection</name></member>
      <member refid="classQgsAbstractPropertyCollection_1ab3df675b6cb01963b82dd84f26417ae1" prot="public" virt="virtual"><scope>QgsAbstractPropertyCollection</scope><name>readXml</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a4627b3aa0a221b112e0dd8c735a63f5e" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>referencedFields</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a1c01a41cc99b48d2a1150bfbf661cc56" prot="public" virt="non-virtual"><scope>QgsAbstractPropertyCollection</scope><name>setName</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aeb3800ad6eb6f4bb842831b14c7f02fa" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>toVariant</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a019335a5ad374d375c5c6d40dce06c94" prot="public" virt="pure-virtual"><scope>QgsAbstractPropertyCollection</scope><name>value</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a57efefb4c0dad49de9854fc7476955b2" prot="public" virt="non-virtual"><scope>QgsAbstractPropertyCollection</scope><name>valueAsBool</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a26635d5d39d88cad06a644656c90fce5" prot="public" virt="non-virtual"><scope>QgsAbstractPropertyCollection</scope><name>valueAsColor</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a8f7248ffb2b0645ec589f5a3d7d7ea89" prot="public" virt="non-virtual"><scope>QgsAbstractPropertyCollection</scope><name>valueAsDouble</name></member>
      <member refid="classQgsAbstractPropertyCollection_1a4fe8018df9c685a0ceb400f990eb29b1" prot="public" virt="non-virtual"><scope>QgsAbstractPropertyCollection</scope><name>valueAsInt</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aceb66fd899863e2f94ddea8685f47945" prot="public" virt="non-virtual"><scope>QgsAbstractPropertyCollection</scope><name>valueAsString</name></member>
      <member refid="classQgsAbstractPropertyCollection_1ae5dc589ec5b5f4864e5f52e7114f9372" prot="public" virt="virtual"><scope>QgsAbstractPropertyCollection</scope><name>writeXml</name></member>
      <member refid="classQgsAbstractPropertyCollection_1aeb2b834ea10c36bbf91eff05b4f5d167" prot="public" virt="virtual"><scope>QgsAbstractPropertyCollection</scope><name>~QgsAbstractPropertyCollection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
