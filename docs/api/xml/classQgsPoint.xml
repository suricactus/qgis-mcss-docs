<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsPoint" kind="class" language="C++" prot="public">
    <compoundname>QgsPoint</compoundname>
    <basecompoundref refid="classQgsAbstractGeometry" prot="public" virt="non-virtual">QgsAbstractGeometry</basecompoundref>
    <includes refid="qgspoint_8h" local="no">qgspoint.h</includes>
      <sectiondef kind="property">
      <memberdef kind="property" id="classQgsPoint_1ae4de56605f876418cd59f318a79ddb82" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double QgsPoint::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <read>m</read>
        <write>setM</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="39" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classQgsPoint_1aab5c56479f3f9131deb1998a0768ea03" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double QgsPoint::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <read>x</read>
        <write>setX</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="39" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classQgsPoint_1ae7c99caa3ae034dc4521fe4a09a907ea" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double QgsPoint::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <read>y</read>
        <write>setY</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="39" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="classQgsPoint_1a9fac72ae2899169a3ee353fb62d63139" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>double</type>
        <definition>double QgsPoint::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <read>z</read>
        <write>setZ</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="39" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsPoint_1a47e81bc42d0acb7fd7a1c9745d443a92" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsPoint::mM</definition>
        <argsstring></argsstring>
        <name>mM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="516" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPoint_1a00209808edf16e755dd6026b0e82cbf3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsPoint::mX</definition>
        <argsstring></argsstring>
        <name>mX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="513" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPoint_1a6d020cc9d5a597a30d1d9353bdb7642c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsPoint::mY</definition>
        <argsstring></argsstring>
        <name>mY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="514" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPoint_1aae3b12736e634e697f634d9fb9a65faa" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsPoint::mZ</definition>
        <argsstring></argsstring>
        <name>mZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="515" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="515" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsPoint_1a55c315abda73e46b7f41b56e0ee65493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPoint::QgsPoint</definition>
        <argsstring>(double x=0.0, double y=0.0, double z=std::numeric_limits&lt; double &gt;::quiet_NaN(), double m=std::numeric_limits&lt; double &gt;::quiet_NaN(), QgsWkbTypes::Type wkbType=QgsWkbTypes::Unknown)</argsstring>
        <name>QgsPoint</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
          <defval>std::numeric_limits&lt; double &gt;::quiet_NaN()</defval>
        </param>
        <param>
          <type>double</type>
          <declname>m</declname>
          <defval>std::numeric_limits&lt; double &gt;::quiet_NaN()</defval>
        </param>
        <param>
          <type><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11" kindref="member">QgsWkbTypes::Type</ref></type>
          <declname>wkbType</declname>
          <defval><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11ab4b00cf5f667f3c8164d955613c93dfa" kindref="member">QgsWkbTypes::Unknown</ref></defval>
        </param>
        <briefdescription>
<para>Construct a point with the provided initial coordinate values. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>wkbType</emphasis> is set to <computeroutput><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11a28b2733de642d6d326fcf0f91b52ce9e" kindref="member">QgsWkbTypes::Point</ref></computeroutput>, <computeroutput><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11a53c800ce9bc3507d2eabd6ed1e1f7c29" kindref="member">QgsWkbTypes::PointZ</ref></computeroutput>, <computeroutput><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11a9051ba2136de707a2c82d2a5a73e54ba" kindref="member">QgsWkbTypes::PointM</ref></computeroutput> or <computeroutput><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11af451e9e8aeada4ee3f0847ea6abdf861" kindref="member">QgsWkbTypes::PointZM</ref></computeroutput> the type will be set accordingly. If it is left to the default <computeroutput><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11ab4b00cf5f667f3c8164d955613c93dfa" kindref="member">QgsWkbTypes::Unknown</ref></computeroutput>, the type will be set based on the following rules:<itemizedlist>
<listitem><para>If only x and y are specified, the type will be a 2D point.</para></listitem><listitem><para>If any or both of the Z and M are specified, the appropriate type will be created.</para></listitem></itemizedlist>
</para><para><programlisting><codeline><highlight class="normal">pt<sp/>=<sp/><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref>(43.4,<sp/>5.3)</highlight></codeline>
<codeline><highlight class="normal">pt.asWkt()<sp/></highlight><highlight class="comment">#<sp/>Point(43.4<sp/>5.3)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pt_z<sp/>=<sp/><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref>(120,<sp/>343,<sp/>77)</highlight></codeline>
<codeline><highlight class="normal">pt.asWkt()<sp/></highlight><highlight class="comment">#<sp/>PointZ(120<sp/>343<sp/>77)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pt_m<sp/>=<sp/><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref>(33,<sp/>88,<sp/>m=5)</highlight></codeline>
<codeline><highlight class="normal">pt_m.m()<sp/></highlight><highlight class="comment">#<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pt_m.wkbType()<sp/></highlight><highlight class="comment">#<sp/>QgsWkbTypes.PointM</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pt<sp/>=<sp/><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref>(30,<sp/>40,<sp/>wkbType=QgsWkbTypes.PointZ)</highlight></codeline>
<codeline><highlight class="normal">pt.z()<sp/></highlight><highlight class="comment">#<sp/>nan</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pt.wkbType()<sp/></highlight><highlight class="comment">#<sp/>QgsWkbTypes.PointZ</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="74" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="36" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a412fff8072404759bf2dbb42e0ec5d10" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPoint::QgsPoint</definition>
        <argsstring>(const QgsPointXY &amp;p)</argsstring>
        <name>QgsPoint</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> from a <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="106" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a92fe3abad965a9293011c38ac89c8b46" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPoint::QgsPoint</definition>
        <argsstring>(QPointF p)</argsstring>
        <name>QgsPoint</name>
        <param>
          <type>QPointF</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> from a QPointF. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="69" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a605f4af223c8501329658c7eb27337a7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPoint::QgsPoint</definition>
        <argsstring>(QgsWkbTypes::Type wkbType, double x=0.0, double y=0.0, double z=std::numeric_limits&lt; double &gt;::quiet_NaN(), double m=std::numeric_limits&lt; double &gt;::quiet_NaN())</argsstring>
        <name>QgsPoint</name>
        <param>
          <type><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11" kindref="member">QgsWkbTypes::Type</ref></type>
          <declname>wkbType</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
          <defval>std::numeric_limits&lt; double &gt;::quiet_NaN()</defval>
        </param>
        <param>
          <type>double</type>
          <declname>m</declname>
          <defval>std::numeric_limits&lt; double &gt;::quiet_NaN()</defval>
        </param>
        <briefdescription>
<para>Create a new point with the given wkbtype and values. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="118" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="78" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a1a22f2bc353403e5b607c6f5f36d5410" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::addMValue</definition>
        <argsstring>(double mValue=0) override</argsstring>
        <name>addMValue</name>
        <reimplements refid="classQgsAbstractGeometry_1a7312cb36669cfbc3030c0f867348ffe0">addMValue</reimplements>
        <param>
          <type>double</type>
          <declname>mValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Adds a measure to the geometry, initialized to a preset value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mValue</parametername>
</parameternamelist>
<parameterdescription>
<para>initial m-value for all nodes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a29d20191fbfd8da2f29184ad6d8c9985" kindref="member">dropMValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a31a943ac0ab4256bc6a0012e370effb4" kindref="member">addZValue()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="471" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="480" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a31a943ac0ab4256bc6a0012e370effb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::addZValue</definition>
        <argsstring>(double zValue=0) override</argsstring>
        <name>addZValue</name>
        <reimplements refid="classQgsAbstractGeometry_1a07db82adbfcdb6f9aeb18d4639d2c141">addZValue</reimplements>
        <param>
          <type>double</type>
          <declname>zValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Adds a z-dimension to the geometry, initialized to a preset value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>zValue</parametername>
</parameternamelist>
<parameterdescription>
<para>initial z-value for all nodes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1ae231f18ce0f9f02e28a4ae367b563b78" kindref="member">dropZValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a1a22f2bc353403e5b607c6f5f36d5410" kindref="member">addMValue()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="470" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="469" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a2e185edb769959901abcaacd94b3110c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPoint::adjacentVertices</definition>
        <argsstring>(QgsVertexId vertex, QgsVertexId &amp;previousVertex, QgsVertexId &amp;nextVertex) const override</argsstring>
        <name>adjacentVertices</name>
        <reimplements refid="classQgsAbstractGeometry_1a6de19d36661e354ad0894e2bacc1517a">adjacentVertices</reimplements>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref></type>
          <declname>vertex</declname>
        </param>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref> &amp;</type>
          <declname>previousVertex</declname>
        </param>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref> &amp;</type>
          <declname>nextVertex</declname>
        </param>
        <briefdescription>
<para>Returns the vertices adjacent to a specified <emphasis>vertex</emphasis> within a geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="455" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="421" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a7aa8f52cc2616563e173557e0af830ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QDomElement</type>
        <definition>QDomElement QgsPoint::asGml2</definition>
        <argsstring>(QDomDocument &amp;doc, int precision=17, const QString &amp;ns=&quot;gml&quot;, QgsAbstractGeometry::AxisOrder axisOrder=QgsAbstractGeometry::AxisOrder::XY) const override</argsstring>
        <name>asGml2</name>
        <reimplements refid="classQgsAbstractGeometry_1a71d6a67c0756c7294f643096583d7619">asGml2</reimplements>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
          <defval>17</defval>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>ns</declname>
          <defval>&quot;gml&quot;</defval>
        </param>
        <param>
          <type><ref refid="classQgsAbstractGeometry_1a429cf06290bd0bdb2134a30c16d4d2a7" kindref="member">QgsAbstractGeometry::AxisOrder</ref></type>
          <declname>axisOrder</declname>
          <defval>QgsAbstractGeometry::AxisOrder::XY</defval>
        </param>
        <briefdescription>
<para>Returns a GML2 representation of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>doc</parametername>
</parameternamelist>
<parameterdescription>
<para>DOM document </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>precision</parametername>
</parameternamelist>
<parameterdescription>
<para>number of decimal places for coordinates </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ns</parametername>
</parameternamelist>
<parameterdescription>
<para>XML namespace </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axisOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>Axis order for generated GML </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsPoint_1adbca810479cbf0988792e37015f50cf0" kindref="member">asWkb()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a4f38b0d3de53d2cda84358a32a841f34" kindref="member">asWkt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a19513245c9f535ebea5e24e0c452561b" kindref="member">asGml3()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a9a999e2f47725ffb00ee3c74e0d397ac" kindref="member">asJson()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="437" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="235" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a19513245c9f535ebea5e24e0c452561b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QDomElement</type>
        <definition>QDomElement QgsPoint::asGml3</definition>
        <argsstring>(QDomDocument &amp;doc, int precision=17, const QString &amp;ns=&quot;gml&quot;, QgsAbstractGeometry::AxisOrder axisOrder=QgsAbstractGeometry::AxisOrder::XY) const override</argsstring>
        <name>asGml3</name>
        <reimplements refid="classQgsAbstractGeometry_1aa86061e273223dbd396f7b9853960b96">asGml3</reimplements>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
          <defval>17</defval>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>ns</declname>
          <defval>&quot;gml&quot;</defval>
        </param>
        <param>
          <type><ref refid="classQgsAbstractGeometry_1a429cf06290bd0bdb2134a30c16d4d2a7" kindref="member">QgsAbstractGeometry::AxisOrder</ref></type>
          <declname>axisOrder</declname>
          <defval>QgsAbstractGeometry::AxisOrder::XY</defval>
        </param>
        <briefdescription>
<para>Returns a GML3 representation of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>doc</parametername>
</parameternamelist>
<parameterdescription>
<para>DOM document </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>precision</parametername>
</parameternamelist>
<parameterdescription>
<para>number of decimal places for coordinates </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ns</parametername>
</parameternamelist>
<parameterdescription>
<para>XML namespace </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axisOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>Axis order for generated GML </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsPoint_1adbca810479cbf0988792e37015f50cf0" kindref="member">asWkb()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a4f38b0d3de53d2cda84358a32a841f34" kindref="member">asWkt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a7aa8f52cc2616563e173557e0af830ad" kindref="member">asGml2()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a9a999e2f47725ffb00ee3c74e0d397ac" kindref="member">asJson()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="438" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="258" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a9a999e2f47725ffb00ee3c74e0d397ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsPoint::asJson</definition>
        <argsstring>(int precision=17) const override</argsstring>
        <name>asJson</name>
        <reimplements refid="classQgsAbstractGeometry_1aa1a1182d214073a7bc9d32b96e9b4520">asJson</reimplements>
        <param>
          <type>int</type>
          <declname>precision</declname>
          <defval>17</defval>
        </param>
        <briefdescription>
<para>Returns a GeoJSON representation of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>precision</parametername>
</parameternamelist>
<parameterdescription>
<para>number of decimal places for coordinates </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsPoint_1adbca810479cbf0988792e37015f50cf0" kindref="member">asWkb()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a4f38b0d3de53d2cda84358a32a841f34" kindref="member">asWkt()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a7aa8f52cc2616563e173557e0af830ad" kindref="member">asGml2()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a19513245c9f535ebea5e24e0c452561b" kindref="member">asGml3()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="439" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="282" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1adbca810479cbf0988792e37015f50cf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QByteArray</type>
        <definition>QByteArray QgsPoint::asWkb</definition>
        <argsstring>() const override</argsstring>
        <name>asWkb</name>
        <reimplements refid="classQgsAbstractGeometry_1aa5f9616ce24cd17807c951e1d41be73a">asWkb</reimplements>
        <briefdescription>
<para>Returns a WKB representation of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPoint_1a4f38b0d3de53d2cda84358a32a841f34" kindref="member">asWkt</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a7aa8f52cc2616563e173557e0af830ad" kindref="member">asGml2</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a19513245c9f535ebea5e24e0c452561b" kindref="member">asGml3</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a9a999e2f47725ffb00ee3c74e0d397ac" kindref="member">asJson()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="435" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="201" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a4f38b0d3de53d2cda84358a32a841f34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsPoint::asWkt</definition>
        <argsstring>(int precision=17) const override</argsstring>
        <name>asWkt</name>
        <reimplements refid="classQgsAbstractGeometry_1a92e7e3e943101ae22fb8d4659de11ddb">asWkt</reimplements>
        <param>
          <type>int</type>
          <declname>precision</declname>
          <defval>17</defval>
        </param>
        <briefdescription>
<para>Returns a WKT representation of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>precision</parametername>
</parameternamelist>
<parameterdescription>
<para>number of decimal places for coordinates </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsPoint_1adbca810479cbf0988792e37015f50cf0" kindref="member">asWkb()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a7aa8f52cc2616563e173557e0af830ad" kindref="member">asGml2()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a19513245c9f535ebea5e24e0c452561b" kindref="member">asGml3()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a9a999e2f47725ffb00ee3c74e0d397ac" kindref="member">asJson()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="436" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="223" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a2c79cfbf721ae27204552d5b6e3c8811" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::azimuth</definition>
        <argsstring>(const QgsPoint &amp;other) const</argsstring>
        <name>azimuth</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Calculates azimuth between this point and other one (clockwise in degree, starting from north) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="355" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="624" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a330a945d87d07d7db75ebfe5a1ea95f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
        <definition>QgsAbstractGeometry * QgsPoint::boundary</definition>
        <argsstring>() const override</argsstring>
        <name>boundary</name>
        <reimplements refid="classQgsAbstractGeometry_1a0a0f6159d97445e1a869d997cdb87ff5">boundary</reimplements>
        <briefdescription>
<para>Returns the closure of the combinatorial boundary of the geometry (ie the topological boundary of the geometry). </para>        </briefdescription>
        <detaileddescription>
<para>For instance, a polygon geometry will have a boundary consisting of the linestrings for each ring in the polygon. <simplesect kind="return"><para>boundary for geometry. May be null for some geometry types. </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="446" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="347" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a68b66fd929b03b88b43d62e88031fb3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref></type>
        <definition>QgsRectangle QgsPoint::boundingBox</definition>
        <argsstring>() const override</argsstring>
        <name>boundingBox</name>
        <reimplements refid="classQgsAbstractGeometry_1a28d745df47c96d586ee05cf70ce1cc6a">boundingBox</reimplements>
        <briefdescription>
<para>Returns the minimal bounding box for the geometry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="426" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="675" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a96005f7489ac873c3ae1a73814e090b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> *</type>
        <definition>const QgsPoint* QgsPoint::cast</definition>
        <argsstring>(const QgsAbstractGeometry *geom) const</argsstring>
        <name>cast</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
<para>Cast the <emphasis>geom</emphasis> to a <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Should be used by qgsgeometry_cast&lt;QgsPoint *&gt;( geometry ).</para><para><simplesect kind="note"><para>Not available in Python. Objects will be automatically be converted to the appropriate target type. </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="489" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="489" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a230e11904d82d5454ec3ebe84eb5a51c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPoint::clear</definition>
        <argsstring>() override</argsstring>
        <name>clear</name>
        <reimplements refid="classQgsAbstractGeometry_1acbd999fc4aada45327f862bda205783c">clear</reimplements>
        <briefdescription>
<para>Clears the geometry, ie reset it to a null geometry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="432" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="294" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a6da6d0975e3a64805ffa50cbb46edfa6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> *</type>
        <definition>QgsPoint * QgsPoint::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classQgsAbstractGeometry_1a6a916e15201499e34a64f2de7946188d">clone</reimplements>
        <briefdescription>
<para>Clones the geometry by performing a deep copy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="429" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a7655d6d083a29bdf0636e1f141ba4721" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QgsPoint::closestSegment</definition>
        <argsstring>(const QgsPoint &amp;pt, QgsPoint &amp;segmentPt, QgsVertexId &amp;vertexAfter, int *leftOf=nullptr, double epsilon=4 *std::numeric_limits&lt; double &gt;::epsilon()) const override</argsstring>
        <name>closestSegment</name>
        <reimplements refid="classQgsAbstractGeometry_1afb4026bdd44aec81bbbfb232b267f812">closestSegment</reimplements>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>segmentPt</declname>
        </param>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref> &amp;</type>
          <declname>vertexAfter</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>leftOf</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>4 *std::numeric_limits&lt; double &gt;::epsilon()</defval>
        </param>
        <briefdescription>
<para>Searches for the closest segment of the geometry to a given point. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the point to find closest segment to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segmentPt</parametername>
</parameternamelist>
<parameterdescription>
<para>storage for the closest point within the geometry </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertexAfter</parametername>
</parameternamelist>
<parameterdescription>
<para>storage for the ID of the vertex at the end of the closest segment </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leftOf</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates whether the point lies on the left side of the geometry (-1 if point is to the left of the geometry, +1 if the point is to the right of the geometry, or 0 for cases where left/right could not be determined, e.g. point exactly on a line) false if point is to right of segment) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>epsilon for segment snapping </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>squared distance to closest segment or negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="453" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="388" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a5675e2867176a1c48cde703ab2d9ba57" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::convertTo</definition>
        <argsstring>(QgsWkbTypes::Type type) override</argsstring>
        <name>convertTo</name>
        <reimplements refid="classQgsAbstractGeometry_1aad5452504a91918ff5f5c12fb3305e2a">convertTo</reimplements>
        <param>
          <type><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11" kindref="member">QgsWkbTypes::Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Converts the geometry to a specified type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if conversion was successful </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="475" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="538" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a0e1df7868de14be73412652da40ca507" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="qgsabstractgeometry_8h_1a34a2af2e7b4a63974fc6c09e66c94d8c" kindref="member">QgsCoordinateSequence</ref></type>
        <definition>QgsCoordinateSequence QgsPoint::coordinateSequence</definition>
        <argsstring>() const override</argsstring>
        <name>coordinateSequence</name>
        <reimplements refid="classQgsAbstractGeometry_1ab19bf974972b67aee49a5f4bccd829b1">coordinateSequence</reimplements>
        <briefdescription>
<para>Retrieves the sequence of geometries, rings and nodes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>coordinate sequence </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="443" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="324" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a8798423119e45f3858e4d4d88b4286c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> *</type>
        <definition>QgsPoint * QgsPoint::createEmptyWithSameType</definition>
        <argsstring>() const override</argsstring>
        <name>createEmptyWithSameType</name>
        <reimplements refid="classQgsAbstractGeometry_1a597f27b71036ca634386b766f602a912">createEmptyWithSameType</reimplements>
        <briefdescription>
<para>Creates a new geometry with the same class and same WKB type as the original and transfers ownership. </para>        </briefdescription>
        <detaileddescription>
<para>To create it, the geometry is default constructed and then the WKB is changed. <simplesect kind="see"><para><ref refid="classQgsPoint_1a6da6d0975e3a64805ffa50cbb46edfa6" kindref="member">clone()</ref> </para></simplesect>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="497" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="701" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a9ddd26075e82a5b686d1528b25e68b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::deleteVertex</definition>
        <argsstring>(QgsVertexId position) override</argsstring>
        <name>deleteVertex</name>
        <reimplements refid="classQgsAbstractGeometry_1ac52b5975cd6e6fd54fcc039fb8614c6e">deleteVertex</reimplements>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Deletes a vertex within the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>vertex id for vertex to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if delete was successful </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a2a12dad7ff419ded43f307a718099804" kindref="member">insertVertex</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a906c2ce03dbcf320de972785272cdc40" kindref="member">moveVertex</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="451" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="382" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a6a5d4d2df34b59d450700f33c7a76089" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int QgsPoint::dimension</definition>
        <argsstring>() const override</argsstring>
        <name>dimension</name>
        <reimplements refid="classQgsAbstractGeometry_1ada1545bccf717251e11e2b5bd02d8746">dimension</reimplements>
        <briefdescription>
<para>Returns the inherent dimension of the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>For example, this is 0 for a point geometry, 1 for a linestring and 2 for a polygon. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="428" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="685" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::distance</definition>
        <argsstring>(double x, double y) const</argsstring>
        <name>distance</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns the distance between this point and a specified x, y coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>In certain cases it may be more appropriate to call the faster <ref refid="classQgsPoint_1adba5f11573013366cce710f392fb7ea6" kindref="member">distanceSquared()</ref> method, e.g., when comparing distances. <simplesect kind="see"><para><ref refid="classQgsPoint_1adba5f11573013366cce710f392fb7ea6" kindref="member">distanceSquared()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="276" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a644589a9e9957ee2d80f3a222d5ebdc9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::distance</definition>
        <argsstring>(const QgsPoint &amp;other) const</argsstring>
        <name>distance</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns the 2D distance between this point and another point. </para>        </briefdescription>
        <detaileddescription>
<para>In certain cases it may be more appropriate to call the faster <ref refid="classQgsPoint_1adba5f11573013366cce710f392fb7ea6" kindref="member">distanceSquared()</ref> method, e.g., when comparing distances. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="287" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a6ff6a0b3fa5e63d8139514d25eaf2f15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::distance3D</definition>
        <argsstring>(double x, double y, double z) const</argsstring>
        <name>distance3D</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Returns the 3D distance between this point and a specified x, y, z coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>In certain cases it may be more appropriate to call the faster <ref refid="classQgsPoint_1adba5f11573013366cce710f392fb7ea6" kindref="member">distanceSquared()</ref> method, e.g., when comparing distances. <simplesect kind="see"><para><ref refid="classQgsPoint_1adba5f11573013366cce710f392fb7ea6" kindref="member">distanceSquared()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="323" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="588" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a14eeaef179c4a3d962a98f3312a40329" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::distance3D</definition>
        <argsstring>(const QgsPoint &amp;other) const</argsstring>
        <name>distance3D</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns the 3D distance between this point and another point. </para>        </briefdescription>
        <detaileddescription>
<para>In certain cases it may be more appropriate to call the faster <ref refid="classQgsPoint_1adba5f11573013366cce710f392fb7ea6" kindref="member">distanceSquared()</ref> method, e.g., when comparing distances. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="331" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="597" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1adba5f11573013366cce710f392fb7ea6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::distanceSquared</definition>
        <argsstring>(double x, double y) const</argsstring>
        <name>distanceSquared</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns the squared distance between this point a specified x, y coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this is faster than calling <ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref>, and may be useful in use cases such as comparing distances where the extra expense of calling <ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref> is not required. <simplesect kind="see"><para><ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="299" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1abc177f2681f975e8e0c0e06fa7e382c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::distanceSquared</definition>
        <argsstring>(const QgsPoint &amp;other) const</argsstring>
        <name>distanceSquared</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns the squared distance between this point another point. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this is faster than calling <ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref>, and may be useful in use cases such as comparing distances where the extra expense of calling <ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref> is not required. <simplesect kind="see"><para><ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="311" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a76ffc867dca1cd322e3a84f7e77a681e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::distanceSquared3D</definition>
        <argsstring>(double x, double y, double z) const</argsstring>
        <name>distanceSquared3D</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Returns the 3D squared distance between this point a specified x, y, z coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this is faster than calling <ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref>, and may be useful in use cases such as comparing distances where the extra expense of calling <ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref> is not required. <simplesect kind="see"><para><ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="340" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="606" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a4cc61cd6e0804ea24a3e8f475123b7d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::distanceSquared3D</definition>
        <argsstring>(const QgsPoint &amp;other) const</argsstring>
        <name>distanceSquared3D</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns the 3D squared distance between this point another point. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this is faster than calling <ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref>, and may be useful in use cases such as comparing distances where the extra expense of calling <ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref> is not required. <simplesect kind="see"><para><ref refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" kindref="member">distance()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="349" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="615" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a335eb95c02ad8cd82fef981d14be7d1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPoint::draw</definition>
        <argsstring>(QPainter &amp;p) const override</argsstring>
        <name>draw</name>
        <reimplements refid="classQgsAbstractGeometry_1a196cb31fed9a15b9b342a4cca28d73a9">draw</reimplements>
        <param>
          <type>QPainter &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Draws the geometry using the specified QPainter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>destination QPainter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="440" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a29d20191fbfd8da2f29184ad6d8c9985" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::dropMValue</definition>
        <argsstring>() override</argsstring>
        <name>dropMValue</name>
        <reimplements refid="classQgsAbstractGeometry_1a119e7a6f1287bf23281d051d575994ca">dropMValue</reimplements>
        <briefdescription>
<para>Drops any measure values which exist in the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if m-values were present and have been removed </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a1a22f2bc353403e5b607c6f5f36d5410" kindref="member">addMValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1ae231f18ce0f9f02e28a4ae367b563b78" kindref="member">dropZValue()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="473" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="521" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ae231f18ce0f9f02e28a4ae367b563b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::dropZValue</definition>
        <argsstring>() override</argsstring>
        <name>dropZValue</name>
        <reimplements refid="classQgsAbstractGeometry_1ad3592944bd8919d44a7a5c5e3f160899">dropZValue</reimplements>
        <briefdescription>
<para>Drops any z-dimensions which exist in the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if Z values were present and have been removed </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a31a943ac0ab4256bc6a0012e370effb4" kindref="member">addZValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a29d20191fbfd8da2f29184ad6d8c9985" kindref="member">dropMValue()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="472" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="510" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a0bf734f1b7960359ed8ca98a6593c976" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPoint::filterVertices</definition>
        <argsstring>(const std::function&lt; bool(const QgsPoint &amp;) &gt; &amp;filter) override</argsstring>
        <name>filterVertices</name>
        <reimplements refid="classQgsAbstractGeometry_1ace16ad5e1ff5c0541da19e57861bc373">filterVertices</reimplements>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;) &gt; &amp;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Filters the vertices from the geometry in place, removing any which do not return true for the <emphasis>filter</emphasis> function check. </para>        </briefdescription>
        <detaileddescription>
<para>Has no meaning when called on a single point geometry.</para><para>Depending on the <emphasis>filter</emphasis> used, this may result in an invalid geometry.</para><para><simplesect kind="note"><para>Not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="479" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="571" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a0bb9694fbb2872148030b0650bf77ff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::fromWkb</definition>
        <argsstring>(QgsConstWkbPtr &amp;wkb) override</argsstring>
        <name>fromWkb</name>
        <reimplements refid="classQgsAbstractGeometry_1a091bbdb232265ff282397d27a7a1029b">fromWkb</reimplements>
        <param>
          <type><ref refid="classQgsConstWkbPtr" kindref="compound">QgsConstWkbPtr</ref> &amp;</type>
          <declname>wkb</declname>
        </param>
        <briefdescription>
<para>Sets the geometry from a WKB string. </para>        </briefdescription>
        <detaileddescription>
<para>After successful read the wkb argument will be at the position where the reading has stopped. <simplesect kind="see"><para><ref refid="classQgsPoint_1a2611b17bf71ed927352e27996333c979" kindref="member">fromWkt</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="433" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="125" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a2611b17bf71ed927352e27996333c979" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::fromWkt</definition>
        <argsstring>(const QString &amp;wkt) override</argsstring>
        <name>fromWkt</name>
        <reimplements refid="classQgsAbstractGeometry_1ab3004c5748c9b014702da3f58fc54215">fromWkt</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>wkt</declname>
        </param>
        <briefdescription>
<para>Sets the geometry from a WKT string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPoint_1a0bb9694fbb2872148030b0650bf77ff4" kindref="member">fromWkb</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="434" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="153" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1adc9d8015910f51ebbc0f5bba9cd0aef5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsPoint::geometryType</definition>
        <argsstring>() const override</argsstring>
        <name>geometryType</name>
        <reimplements refid="classQgsAbstractGeometry_1a55e56308b97d5635945a65b666ab19d5">geometryType</reimplements>
        <briefdescription>
<para>Returns a unique string representing the geometry type. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsAbstractGeometry_1a8b8706728c90bc5c0e9c3ea3925b4453" kindref="member">wkbType</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsAbstractGeometry_1a5c6589aaf5ddfc75c0e141438666ae5c" kindref="member">wktTypeStr</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="427" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="680" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a0ddb881837618aaa7446e613f5f5ba9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::inclination</definition>
        <argsstring>(const QgsPoint &amp;other) const</argsstring>
        <name>inclination</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Calculates inclination between this point and other one (starting from zenith = 0 to nadir = 180. </para>        </briefdescription>
        <detaileddescription>
<para>Horizon = 90) Returns 90.0 if the distance between this point and other one is equal to 0 (same point). <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="362" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="631" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a2a12dad7ff419ded43f307a718099804" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::insertVertex</definition>
        <argsstring>(QgsVertexId position, const QgsPoint &amp;vertex) override</argsstring>
        <name>insertVertex</name>
        <reimplements refid="classQgsAbstractGeometry_1a81e51aa7a9d2100609c14d7420c8c7ff">insertVertex</reimplements>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>vertex</declname>
        </param>
        <briefdescription>
<para>Inserts a vertex into the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>vertex id for position of inserted vertex </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex</parametername>
</parameternamelist>
<parameterdescription>
<para>vertex to insert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if insert was successful </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a906c2ce03dbcf320de972785272cdc40" kindref="member">moveVertex</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a9ddd26075e82a5b686d1528b25e68b49" kindref="member">deleteVertex</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="449" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="352" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1abd73219032dfe02d9bd0cc0533d1cba2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::isEmpty</definition>
        <argsstring>() const override</argsstring>
        <name>isEmpty</name>
        <reimplements refid="classQgsAbstractGeometry_1a9d211f0b36027d9a9f2984624338362d">isEmpty</reimplements>
        <briefdescription>
<para>Returns true if the geometry is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="425" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="670" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1acbcf82563317609c0ee3a5373cb8ab48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::m</definition>
        <argsstring>() const</argsstring>
        <name>m</name>
        <briefdescription>
<para>Returns the point&apos;s m value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPoint_1ab12a3d7152fa50dc88ce95ce96d9af51" kindref="member">setM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a58282e3e798baa4176748f11ed23b086" kindref="member">rm()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="170" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a906c2ce03dbcf320de972785272cdc40" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::moveVertex</definition>
        <argsstring>(QgsVertexId position, const QgsPoint &amp;newPos) override</argsstring>
        <name>moveVertex</name>
        <reimplements refid="classQgsAbstractGeometry_1a092a0395c14e70e288665fa47bb2fd22">moveVertex</reimplements>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>newPos</declname>
        </param>
        <briefdescription>
<para>Moves a vertex within the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>vertex id for vertex to move </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newPos</parametername>
</parameternamelist>
<parameterdescription>
<para>new position of vertex </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if move was successful </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a2a12dad7ff419ded43f307a718099804" kindref="member">insertVertex</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a9ddd26075e82a5b686d1528b25e68b49" kindref="member">deleteVertex</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="450" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="365" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1acd02d56f35297cee8cc583d9b2aea334" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int QgsPoint::nCoordinates</definition>
        <argsstring>() const override</argsstring>
        <name>nCoordinates</name>
        <reimplements refid="classQgsAbstractGeometry_1a64c5b74e8ce6ccbf46fcb8ca17505891">nCoordinates</reimplements>
        <briefdescription>
<para>Returns the number of nodes contained in the geometry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="444" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1aedd4f26134472a45ea8fb54f8bfd27e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::nextVertex</definition>
        <argsstring>(QgsVertexId &amp;id, QgsPoint &amp;vertex) const override</argsstring>
        <name>nextVertex</name>
        <reimplements refid="classQgsAbstractGeometry_1af5ec97c5568c257e0284b733a1c86d82">nextVertex</reimplements>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>vertex</declname>
        </param>
        <briefdescription>
<para>Returns next vertex id and coordinates. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>initial value should be the starting vertex id. The next vertex id will be stored in this variable if found. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex</parametername>
</parameternamelist>
<parameterdescription>
<para>container for found node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if at end </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="454" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="399" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ae8cec10583e770fba3408d49f6e151ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::operator!=</definition>
        <argsstring>(const QgsAbstractGeometry &amp;other) const override</argsstring>
        <name>operator!=</name>
        <reimplements refid="classQgsAbstractGeometry_1a7af4753f5c0aa85fc4457488dcbad57c">operator!=</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="139" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a4bdd15e32f25de1ca0efb6cfe35257ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsPoint::operator+</definition>
        <argsstring>(QgsVector v) const</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classQgsVector" kindref="compound">QgsVector</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Adds a vector to this point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="416" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="416" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ab634f02025d11c329c22ebf1f3972b7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
        <definition>QgsPoint&amp; QgsPoint::operator+=</definition>
        <argsstring>(QgsVector v)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="classQgsVector" kindref="compound">QgsVector</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Adds a vector to this point in place. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="404" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="404" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ae6a1b006400cbe260fa823d67030b96b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsVector" kindref="compound">QgsVector</ref></type>
        <definition>QgsVector QgsPoint::operator-</definition>
        <argsstring>(const QgsPoint &amp;p) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Calculates the vector obtained by subtracting a point from this point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="398" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="398" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a1c7ba13bb7b75ce18cbc1abd8ddafe18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsPoint::operator-</definition>
        <argsstring>(QgsVector v) const</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classQgsVector" kindref="compound">QgsVector</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Subtracts a vector from this point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="422" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="422" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a21831fd398e7fa39fc27ae459bc925cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
        <definition>QgsPoint&amp; QgsPoint::operator-=</definition>
        <argsstring>(QgsVector v)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="classQgsVector" kindref="compound">QgsVector</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Subtracts a vector from this point in place. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="410" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="410" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a116b79816221173f90736dc7b73ae2f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::operator==</definition>
        <argsstring>(const QgsAbstractGeometry &amp;other) const override</argsstring>
        <name>operator==</name>
        <reimplements refid="classQgsAbstractGeometry_1ae46cc147b9834ca5d0ca66cfe5d17575">operator==</reimplements>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="120" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="120" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1af679c870bae3affb083d4901202982d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int QgsPoint::partCount</definition>
        <argsstring>() const override</argsstring>
        <name>partCount</name>
        <reimplements refid="classQgsAbstractGeometry_1ab4ae6761b862c334114afe31a8a89fdf">partCount</reimplements>
        <briefdescription>
<para>Returns count of parts contained in the geometry. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPoint_1ac9f58c31d3b557133ff4809beb322a92" kindref="member">vertexCount</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a77a6e2353b6bb8801406fd4671ccb467" kindref="member">ringCount</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="465" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="443" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ae5b591ac604024fdb873e4ca4a209e1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsPoint::project</definition>
        <argsstring>(double distance, double azimuth, double inclination=90.0) const</argsstring>
        <name>project</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>double</type>
          <declname>azimuth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inclination</declname>
          <defval>90.0</defval>
        </param>
        <briefdescription>
<para>Returns a new point which correspond to this point projected by a specified distance with specified angles (azimuth and inclination). </para>        </briefdescription>
        <detaileddescription>
<para>M value is preserved. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>distance to project </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>azimuth</parametername>
</parameternamelist>
<parameterdescription>
<para>angle to project in X Y, clockwise in degrees starting from north </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inclination</parametername>
</parameternamelist>
<parameterdescription>
<para>angle to project in Z (3D). If the point is 2D, the Z value is assumed to be 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The point projected. If a 2D point is projected a 3D point will be returned except if inclination is 90. A 3D point is always returned if a 3D point is projected. Example: <programlisting><codeline><highlight class="normal">p<sp/>=<sp/><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref>(<sp/>1,<sp/>2<sp/>)<sp/></highlight><highlight class="comment">#<sp/>2D<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pr<sp/>=<sp/>p.project<sp/>(<sp/>1,<sp/>0<sp/>)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>pr<sp/>is<sp/>a<sp/>2D<sp/>point:<sp/>&apos;Point<sp/>(1<sp/>3)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pr<sp/>=<sp/>p.project<sp/>(<sp/>1,<sp/>0,<sp/>90<sp/>)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>pr<sp/>is<sp/>a<sp/>2D<sp/>point:<sp/>&apos;Point<sp/>(1<sp/>3)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pr<sp/>=<sp/>p.project<sp/>(1,<sp/>0,<sp/>0<sp/>)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>pr<sp/>is<sp/>a<sp/>3D<sp/>point:<sp/>&apos;PointZ<sp/>(1<sp/>2<sp/>1)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">p<sp/>=<sp/><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref>(<sp/>QgsWkbTypes.PointZ,<sp/>1,<sp/>2,<sp/>2<sp/>)<sp/></highlight><highlight class="comment">#<sp/>3D<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pr<sp/>=<sp/>p.project<sp/>(<sp/>1,<sp/>0<sp/>)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>pr<sp/>is<sp/>a<sp/>3D<sp/>point:<sp/>&apos;PointZ<sp/>(1<sp/>3<sp/>2)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pr<sp/>=<sp/>p.project<sp/>(<sp/>1,<sp/>0,<sp/>90<sp/>)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>pr<sp/>is<sp/>a<sp/>3D<sp/>point:<sp/>&apos;PointZ<sp/>(1<sp/>3<sp/>2)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">pr<sp/>=<sp/>p.project<sp/>(1,<sp/>0,<sp/>0<sp/>)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>pr<sp/>is<sp/>a<sp/>3D<sp/>point:<sp/>&apos;PointZ<sp/>(1<sp/>2<sp/>3)&apos;</highlight></codeline>
</programlisting> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="392" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="643" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1afc8d94987d752264120e425131998c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPoint::removeDuplicateNodes</definition>
        <argsstring>(double epsilon=4 *std::numeric_limits&lt; double &gt;::epsilon(), bool useZValues=false) override</argsstring>
        <name>removeDuplicateNodes</name>
        <reimplements refid="classQgsAbstractGeometry_1ae5a6fc4ba09589575d1826ff67705754">removeDuplicateNodes</reimplements>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>4 *std::numeric_limits&lt; double &gt;::epsilon()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useZValues</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Removes duplicate nodes from the geometry, wherever removing the nodes does not result in a degenerate geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>epsilon</emphasis> parameter specifies the tolerance for coordinates when determining that vertices are identical.</para><para>By default, z values are not considered when detecting duplicate nodes. E.g. two nodes with the same x and y coordinate but different z values will still be considered duplicate and one will be removed. If <emphasis>useZValues</emphasis> is true, then the z values are also tested and nodes with the same x and y but different z will be maintained.</para><para>Note that duplicate nodes are not tested between different parts of a multipart geometry. E.g. a multipoint geometry with overlapping points will not be changed by this method.</para><para>The function will return true if nodes were removed, or false if no duplicate nodes were found.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="431" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a77a6e2353b6bb8801406fd4671ccb467" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int QgsPoint::ringCount</definition>
        <argsstring>(int=0) const override</argsstring>
        <name>ringCount</name>
        <reimplements refid="classQgsAbstractGeometry_1a0632546e8330bfa94cffa6e7bc8313b2">ringCount</reimplements>
        <param>
          <type>int</type>
          <declname>part</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the number of rings of which this geometry is built. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="464" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="438" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a58282e3e798baa4176748f11ed23b086" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; QgsPoint::rm</definition>
        <argsstring>()</argsstring>
        <name>rm</name>
        <briefdescription>
<para>Returns a reference to the m value of this point. </para>        </briefdescription>
        <detaileddescription>
<para>Using a reference makes it possible to directly manipulate m in place. <simplesect kind="see"><para><ref refid="classQgsPoint_1ae4de56605f876418cd59f318a79ddb82" kindref="member">m()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1ab12a3d7152fa50dc88ce95ce96d9af51" kindref="member">setM()</ref> </para></simplesect>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="206" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ac664e9a6d5985f10308eb792802e81ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; QgsPoint::rx</definition>
        <argsstring>()</argsstring>
        <name>rx</name>
        <briefdescription>
<para>Returns a reference to the x-coordinate of this point. </para>        </briefdescription>
        <detaileddescription>
<para>Using a reference makes it possible to directly manipulate x in place. <simplesect kind="see"><para><ref refid="classQgsPoint_1aab5c56479f3f9131deb1998a0768ea03" kindref="member">x()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a4faeb4afb2807bd99fa4ac9ff519d832" kindref="member">setX()</ref> </para></simplesect>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="179" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a19dd6b35a46c8739d84d60e373d86e55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; QgsPoint::ry</definition>
        <argsstring>()</argsstring>
        <name>ry</name>
        <briefdescription>
<para>Returns a reference to the y-coordinate of this point. </para>        </briefdescription>
        <detaileddescription>
<para>Using a reference makes it possible to directly manipulate y in place. <simplesect kind="see"><para><ref refid="classQgsPoint_1ae7c99caa3ae034dc4521fe4a09a907ea" kindref="member">y()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a06c93b509ad9ffc1ad8a2b0e8ef77bc3" kindref="member">setY()</ref> </para></simplesect>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="188" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a56b141975e3bbc87e43f70d636783e26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; QgsPoint::rz</definition>
        <argsstring>()</argsstring>
        <name>rz</name>
        <briefdescription>
<para>Returns a reference to the z-coordinate of this point. </para>        </briefdescription>
        <detaileddescription>
<para>Using a reference makes it possible to directly manipulate z in place. <simplesect kind="see"><para><ref refid="classQgsPoint_1a9fac72ae2899169a3ee353fb62d63139" kindref="member">z()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1acf221ee34a130f9e7f24476401f29d4e" kindref="member">setZ()</ref> </para></simplesect>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="197" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1adf6a8b20318b2f17d7b0eccb1b3b4212" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QgsPoint::segmentLength</definition>
        <argsstring>(QgsVertexId startVertex) const override</argsstring>
        <name>segmentLength</name>
        <reimplements refid="classQgsAbstractGeometry_1ae1afc6e953981f8929312ad6b558fe2d">segmentLength</reimplements>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref></type>
          <declname>startVertex</declname>
        </param>
        <briefdescription>
<para>Returns the length of the segment of the geometry which begins at <emphasis>startVertex</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="468" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="458" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ab12a3d7152fa50dc88ce95ce96d9af51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPoint::setM</definition>
        <argsstring>(double m)</argsstring>
        <name>setM</name>
        <param>
          <type>double</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Sets the point&apos;s m-value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>calling this will have no effect if the point does not contain a m-dimension. Use <ref refid="classQgsPoint_1a1a22f2bc353403e5b607c6f5f36d5410" kindref="member">addMValue()</ref> to add a m value and force the point to have an m dimension. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1ae4de56605f876418cd59f318a79ddb82" kindref="member">m()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a58282e3e798baa4176748f11ed23b086" kindref="member">rm()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="252" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="252" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a4faeb4afb2807bd99fa4ac9ff519d832" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPoint::setX</definition>
        <argsstring>(double x)</argsstring>
        <name>setX</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Sets the point&apos;s x-coordinate. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPoint_1aab5c56479f3f9131deb1998a0768ea03" kindref="member">x()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1ac664e9a6d5985f10308eb792802e81ac" kindref="member">rx()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="213" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a06c93b509ad9ffc1ad8a2b0e8ef77bc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPoint::setY</definition>
        <argsstring>(double y)</argsstring>
        <name>setY</name>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Sets the point&apos;s y-coordinate. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPoint_1ae7c99caa3ae034dc4521fe4a09a907ea" kindref="member">y()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a19dd6b35a46c8739d84d60e373d86e55" kindref="member">ry()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="224" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="224" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1acf221ee34a130f9e7f24476401f29d4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPoint::setZ</definition>
        <argsstring>(double z)</argsstring>
        <name>setZ</name>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Sets the point&apos;s z-coordinate. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>calling this will have no effect if the point does not contain a z-dimension. Use <ref refid="classQgsPoint_1a31a943ac0ab4256bc6a0012e370effb4" kindref="member">addZValue()</ref> to add a z value and force the point to have a z dimension. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a9fac72ae2899169a3ee353fb62d63139" kindref="member">z()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a56b141975e3bbc87e43f70d636783e26" kindref="member">rz()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="237" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="237" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ab4e496cc8f2d652fa37827f445255769" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> *</type>
        <definition>QgsPoint * QgsPoint::snappedToGrid</definition>
        <argsstring>(double hSpacing, double vSpacing, double dSpacing=0, double mSpacing=0) const override</argsstring>
        <name>snappedToGrid</name>
        <reimplements refid="classQgsAbstractGeometry_1a78bedc13b410bb6e442fa19eefbf6983">snappedToGrid</reimplements>
        <param>
          <type>double</type>
          <declname>hSpacing</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vSpacing</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dSpacing</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>mSpacing</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Makes a new geometry with all the points or vertices snapped to the closest point of the grid. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership is transferred to the caller.</para><para>If the gridified geometry could not be calculated a nullptr will be returned. It may generate an invalid geometry (in some corner cases). It can also be thought as rounding the edges and it may be useful for removing errors. Example: <programlisting><codeline><highlight class="normal">geometry-&gt;snappedToGrid(1,<sp/>1);</highlight></codeline>
</programlisting> In this case we use a 2D grid of 1x1 to gridify. In this case, it can be thought like rounding the x and y of all the points/vertices to full units (remove all decimals). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hSpacing</parametername>
</parameternamelist>
<parameterdescription>
<para>Horizontal spacing of the grid (x axis). 0 to disable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vSpacing</parametername>
</parameternamelist>
<parameterdescription>
<para>Vertical spacing of the grid (y axis). 0 to disable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dSpacing</parametername>
</parameternamelist>
<parameterdescription>
<para>Depth spacing of the grid (z axis). 0 (default) to disable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mSpacing</parametername>
</parameternamelist>
<parameterdescription>
<para>Custom dimension spacing of the grid (m axis). 0 (default) to disable. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="430" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="99" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ad0b3661b698cd9b2b00a46c01ef85951" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPoint::swapXy</definition>
        <argsstring>() override</argsstring>
        <name>swapXy</name>
        <reimplements refid="classQgsAbstractGeometry_1a85289f1e45950856e54fdf21856ad6bb">swapXy</reimplements>
        <briefdescription>
<para>Swaps the x and y coordinates from the geometry. </para>        </briefdescription>
        <detaileddescription>
<para>This can be used to repair geometries which have accidentally had their latitude and longitude coordinates reversed. <simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="474" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="532" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a3628b484f3de4cd16d3381cd03703b3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> *</type>
        <definition>QgsPoint * QgsPoint::toCurveType</definition>
        <argsstring>() const override</argsstring>
        <name>toCurveType</name>
        <reimplements refid="classQgsAbstractGeometry_1a506550131e5b8c8b3bf289d34909699c">toCurveType</reimplements>
        <briefdescription>
<para>Returns the geometry converted to the more generic curve type. </para>        </briefdescription>
        <detaileddescription>
<para>E.g. <ref refid="classQgsLineString" kindref="compound">QgsLineString</ref> -&gt; <ref refid="classQgsCompoundCurve" kindref="compound">QgsCompoundCurve</ref>, <ref refid="classQgsPolygon" kindref="compound">QgsPolygon</ref> -&gt; <ref refid="classQgsCurvePolygon" kindref="compound">QgsCurvePolygon</ref>, <ref refid="classQgsMultiLineString" kindref="compound">QgsMultiLineString</ref> -&gt; <ref refid="classQgsMultiCurve" kindref="compound">QgsMultiCurve</ref>, <ref refid="classQgsMultiPolygon" kindref="compound">QgsMultiPolygon</ref> -&gt; <ref refid="classQgsMultiSurface" kindref="compound">QgsMultiSurface</ref> <simplesect kind="return"><para>the converted geometry. Caller takes ownership </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="467" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="453" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a61f8a2b7ec8f29cedfea847b5e1a10a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF QgsPoint::toQPointF</definition>
        <argsstring>() const</argsstring>
        <name>toQPointF</name>
        <briefdescription>
<para>Returns the point as a QPointF. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="264" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1afa511445b91cad28178838d8848edd38" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPoint::transform</definition>
        <argsstring>(const QgsCoordinateTransform &amp;ct, QgsCoordinateTransform::TransformDirection d=QgsCoordinateTransform::ForwardTransform, bool transformZ=false) override SIP_THROW(QgsCsException)</argsstring>
        <name>transform</name>
        <reimplements refid="classQgsAbstractGeometry_1a87d89f92efa9db41483f00a0f1e0e302">transform</reimplements>
        <param>
          <type>const <ref refid="classQgsCoordinateTransform" kindref="compound">QgsCoordinateTransform</ref> &amp;</type>
          <declname>ct</declname>
        </param>
        <param>
          <type><ref refid="classQgsCoordinateTransform_1a8bc24d9a900ec38443bb573eb77e66f5" kindref="member">QgsCoordinateTransform::TransformDirection</ref></type>
          <declname>d</declname>
          <defval><ref refid="classQgsCoordinateTransform_1a8bc24d9a900ec38443bb573eb77e66f5a1bae13b526add06d1a5f42dae9f67c9e" kindref="member">QgsCoordinateTransform::ForwardTransform</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>transformZ</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Transforms the geometry using a coordinate transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ct</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate transform </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>transformation direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transformZ</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true to also transform z coordinates. This requires that the z coordinates in the geometry represent height relative to the vertical datum of the source CRS (generally ellipsoidal heights) and are expressed in its vertical units (generally meters). If false, then z coordinates will not be changed by the transform. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="441" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="310" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1acbec9a30303207527c6d89d33354ef0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPoint::transform</definition>
        <argsstring>(const QTransform &amp;t, double zTranslate=0.0, double zScale=1.0, double mTranslate=0.0, double mScale=1.0) override</argsstring>
        <name>transform</name>
        <reimplements refid="classQgsAbstractGeometry_1ab21e149ab74999808bd266820100fa6e">transform</reimplements>
        <param>
          <type>const QTransform &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>zTranslate</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>zScale</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>mTranslate</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>mScale</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Transforms the x and y components of the geometry using a QTransform object <emphasis>t</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Optionally, the geometry&apos;s z values can be scaled via <emphasis>zScale</emphasis> and translated via <emphasis>zTranslate</emphasis>. Similarly, m-values can be scaled via <emphasis>mScale</emphasis> and translated via <emphasis>mTranslate</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="442" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="491" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ab381af490b807cc36e607c696a959cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsPoint::transformVertices</definition>
        <argsstring>(const std::function&lt; QgsPoint(const QgsPoint &amp;) &gt; &amp;transform) override</argsstring>
        <name>transformVertices</name>
        <reimplements refid="classQgsAbstractGeometry_1a33ad8f7d7022716968a1dea76e830607">transformVertices</reimplements>
        <param>
          <type>const std::function&lt; <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref>(const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;) &gt; &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Transforms the vertices from the geometry in place, applying the <emphasis>transform</emphasis> function to every vertex. </para>        </briefdescription>
        <detaileddescription>
<para>Depending on the <emphasis>transform</emphasis> used, this may result in an invalid geometry.</para><para>Transform functions are not permitted to alter the dimensionality of vertices. If a transform which adds (or removes) z/m values is desired, first call the corresponding <ref refid="classQgsPoint_1a31a943ac0ab4256bc6a0012e370effb4" kindref="member">addZValue()</ref> or <ref refid="classQgsPoint_1a1a22f2bc353403e5b607c6f5f36d5410" kindref="member">addMValue()</ref> function to change the geometry&apos;s dimensionality and then transform.</para><para><simplesect kind="note"><para>Not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="480" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="576" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a0eb0b85af07a8b91e4781c88e6b3a3c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QgsPoint::vertexAngle</definition>
        <argsstring>(QgsVertexId vertex) const override</argsstring>
        <name>vertexAngle</name>
        <reimplements refid="classQgsAbstractGeometry_1a0e7b77f10a7a29bb2c184c7098f57456">vertexAngle</reimplements>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref></type>
          <declname>vertex</declname>
        </param>
        <briefdescription>
<para>Angle undefined. </para>        </briefdescription>
        <detaileddescription>
<para>Always returns 0.0 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vertex</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertex id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="461" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="427" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a867d213aac0648d3b11aa948576b9c82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsPoint::vertexAt</definition>
        <argsstring>(QgsVertexId) const override</argsstring>
        <name>vertexAt</name>
        <reimplements refid="classQgsAbstractGeometry_1a665ef655c903c02e6ae5d0d211a04ecb">vertexAt</reimplements>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the point corresponding to a specified vertex id. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="466" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="448" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ac9f58c31d3b557133ff4809beb322a92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int QgsPoint::vertexCount</definition>
        <argsstring>(int=0, int=0) const override</argsstring>
        <name>vertexCount</name>
        <reimplements refid="classQgsAbstractGeometry_1a234be132c5f849e44001a998e239fc3f">vertexCount</reimplements>
        <param>
          <type>int</type>
          <declname>part</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>ring</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the number of vertices of which this geometry is built. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="463" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1abc680ecbd5f9d800f61b551406e5b49e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int QgsPoint::vertexNumberFromVertexId</definition>
        <argsstring>(QgsVertexId id) const override</argsstring>
        <name>vertexNumberFromVertexId</name>
        <reimplements refid="classQgsAbstractGeometry_1a0b9d10657e010af6f6bf0e5608c3fe24">vertexNumberFromVertexId</reimplements>
        <param>
          <type><ref refid="structQgsVertexId" kindref="compound">QgsVertexId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the vertex number corresponding to a vertex <emphasis>id</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The vertex numbers start at 0, so a return value of 0 corresponds to the first vertex.</para><para>Returns -1 if a corresponding vertex could not be found.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="445" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="339" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1af9d444448e7142e776a6cbcdd97d27b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <briefdescription>
<para>Returns the point&apos;s x-coordinate. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPoint_1a4faeb4afb2807bd99fa4ac9ff519d832" kindref="member">setX()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1ac664e9a6d5985f10308eb792802e81ac" kindref="member">rx()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="149" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1ab287ef713e6395da4bb9bc6914c1b485" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <briefdescription>
<para>Returns the point&apos;s y-coordinate. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPoint_1a06c93b509ad9ffc1ad8a2b0e8ef77bc3" kindref="member">setY()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a19dd6b35a46c8739d84d60e373d86e55" kindref="member">ry()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="156" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a025d076bdba27771e772f9183a798863" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPoint::z</definition>
        <argsstring>() const</argsstring>
        <name>z</name>
        <briefdescription>
<para>Returns the point&apos;s z-coordinate. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPoint_1acf221ee34a130f9e7f24476401f29d4e" kindref="member">setZ()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPoint_1a56b141975e3bbc87e43f70d636783e26" kindref="member">rz()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="163" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="163" bodyend="163"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsPoint_1abcbf55a33f5376ad6932aee9dfd6b407" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int QgsPoint::childCount</definition>
        <argsstring>() const override</argsstring>
        <name>childCount</name>
        <reimplements refid="classQgsAbstractGeometry_1a323a213bdeb27cafbcc9f901656aed3f">childCount</reimplements>
        <briefdescription>
<para>Returns number of child geometries (for geometries with child geometries) or child points (for geometries without child geometries - i.e. </para>        </briefdescription>
        <detaileddescription>
<para>curve / point) <simplesect kind="note"><para>used for vertex_iterator implementation </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="509" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="690" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPoint_1a5028bb72a36596c97973301c42b04296" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref></type>
        <definition>QgsPoint QgsPoint::childPoint</definition>
        <argsstring>(int index) const override</argsstring>
        <name>childPoint</name>
        <reimplements refid="classQgsAbstractGeometry_1a02138fd0cca00c4504818ff6ed7a1934">childPoint</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns point at index (for geometries without child geometries - i.e. </para>        </briefdescription>
        <detaileddescription>
<para>curve / point) <simplesect kind="note"><para>used for vertex_iterator implementation </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="510" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.cpp" bodystart="695" bodyend="699"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Point geometry type, with support for z-dimension and m-values. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0, (previously QgsPointv2 since QGIS 2.10) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6510">
        <label>QgsAbstractGeometry</label>
        <link refid="classQgsAbstractGeometry"/>
      </node>
      <node id="6509">
        <label>QgsPoint</label>
        <link refid="classQgsPoint"/>
        <childnode refid="6510" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6512">
        <label>QgsAbstractGeometry</label>
        <link refid="classQgsAbstractGeometry"/>
      </node>
      <node id="6511">
        <label>QgsPoint</label>
        <link refid="classQgsPoint"/>
        <childnode refid="6512" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" line="38" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgspoint.h" bodystart="37" bodyend="517"/>
    <listofallmembers>
      <member refid="classQgsPoint_1a1a22f2bc353403e5b607c6f5f36d5410" prot="public" virt="virtual"><scope>QgsPoint</scope><name>addMValue</name></member>
      <member refid="classQgsPoint_1a31a943ac0ab4256bc6a0012e370effb4" prot="public" virt="virtual"><scope>QgsPoint</scope><name>addZValue</name></member>
      <member refid="classQgsPoint_1a2e185edb769959901abcaacd94b3110c" prot="public" virt="virtual"><scope>QgsPoint</scope><name>adjacentVertices</name></member>
      <member refid="classQgsAbstractGeometry_1aeb48c72d10d875e97e516e6f7495438e" prot="public" virt="virtual"><scope>QgsPoint</scope><name>area</name></member>
      <member refid="classQgsPoint_1a7aa8f52cc2616563e173557e0af830ad" prot="public" virt="virtual"><scope>QgsPoint</scope><name>asGml2</name></member>
      <member refid="classQgsPoint_1a19513245c9f535ebea5e24e0c452561b" prot="public" virt="virtual"><scope>QgsPoint</scope><name>asGml3</name></member>
      <member refid="classQgsPoint_1a9a999e2f47725ffb00ee3c74e0d397ac" prot="public" virt="virtual"><scope>QgsPoint</scope><name>asJson</name></member>
      <member refid="classQgsPoint_1adbca810479cbf0988792e37015f50cf0" prot="public" virt="virtual"><scope>QgsPoint</scope><name>asWkb</name></member>
      <member refid="classQgsPoint_1a4f38b0d3de53d2cda84358a32a841f34" prot="public" virt="virtual"><scope>QgsPoint</scope><name>asWkt</name></member>
      <member refid="classQgsAbstractGeometry_1a429cf06290bd0bdb2134a30c16d4d2a7" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>AxisOrder</name></member>
      <member refid="classQgsPoint_1a2c79cfbf721ae27204552d5b6e3c8811" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>azimuth</name></member>
      <member refid="classQgsPoint_1a330a945d87d07d7db75ebfe5a1ea95f1" prot="public" virt="virtual"><scope>QgsPoint</scope><name>boundary</name></member>
      <member refid="classQgsPoint_1a68b66fd929b03b88b43d62e88031fb3a" prot="public" virt="virtual"><scope>QgsPoint</scope><name>boundingBox</name></member>
      <member refid="classQgsAbstractGeometry_1a30243090ed9158f111a0637315112c30" prot="protected" virt="virtual"><scope>QgsPoint</scope><name>calculateBoundingBox</name></member>
      <member refid="classQgsPoint_1a96005f7489ac873c3ae1a73814e090b5" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>cast</name></member>
      <member refid="classQgsAbstractGeometry_1ad559e167894034e9ae1d10f840c96c3a" prot="public" virt="virtual"><scope>QgsPoint</scope><name>centroid</name></member>
      <member refid="classQgsPoint_1abcbf55a33f5376ad6932aee9dfd6b407" prot="protected" virt="virtual"><scope>QgsPoint</scope><name>childCount</name></member>
      <member refid="classQgsAbstractGeometry_1acb56ca5e94987b9cb9fdf8f5530859ea" prot="protected" virt="virtual"><scope>QgsPoint</scope><name>childGeometry</name></member>
      <member refid="classQgsPoint_1a5028bb72a36596c97973301c42b04296" prot="protected" virt="virtual"><scope>QgsPoint</scope><name>childPoint</name></member>
      <member refid="classQgsPoint_1a230e11904d82d5454ec3ebe84eb5a51c" prot="public" virt="virtual"><scope>QgsPoint</scope><name>clear</name></member>
      <member refid="classQgsAbstractGeometry_1a725f124cb23fdf84260deda680f24303" prot="protected" virt="virtual"><scope>QgsPoint</scope><name>clearCache</name></member>
      <member refid="classQgsPoint_1a6da6d0975e3a64805ffa50cbb46edfa6" prot="public" virt="virtual"><scope>QgsPoint</scope><name>clone</name></member>
      <member refid="classQgsPoint_1a7655d6d083a29bdf0636e1f141ba4721" prot="public" virt="virtual"><scope>QgsPoint</scope><name>closestSegment</name></member>
      <member refid="classQgsAbstractGeometry_1ae86c938f4a97ce51fbd73a77156eecce" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>const_parts_begin</name></member>
      <member refid="classQgsAbstractGeometry_1a9d19fdb36c64ac40b00125c455dc64df" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>const_parts_end</name></member>
      <member refid="classQgsPoint_1a5675e2867176a1c48cde703ab2d9ba57" prot="public" virt="virtual"><scope>QgsPoint</scope><name>convertTo</name></member>
      <member refid="classQgsPoint_1a0e1df7868de14be73412652da40ca507" prot="public" virt="virtual"><scope>QgsPoint</scope><name>coordinateSequence</name></member>
      <member refid="classQgsPoint_1a8798423119e45f3858e4d4d88b4286c7" prot="public" virt="virtual"><scope>QgsPoint</scope><name>createEmptyWithSameType</name></member>
      <member refid="classQgsPoint_1a9ddd26075e82a5b686d1528b25e68b49" prot="public" virt="virtual"><scope>QgsPoint</scope><name>deleteVertex</name></member>
      <member refid="classQgsPoint_1a6a5d4d2df34b59d450700f33c7a76089" prot="public" virt="virtual"><scope>QgsPoint</scope><name>dimension</name></member>
      <member refid="classQgsPoint_1ac7a87dbf3c7517d335222b8e2fc8fdba" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>distance</name></member>
      <member refid="classQgsPoint_1a644589a9e9957ee2d80f3a222d5ebdc9" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>distance</name></member>
      <member refid="classQgsPoint_1a6ff6a0b3fa5e63d8139514d25eaf2f15" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>distance3D</name></member>
      <member refid="classQgsPoint_1a14eeaef179c4a3d962a98f3312a40329" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>distance3D</name></member>
      <member refid="classQgsPoint_1adba5f11573013366cce710f392fb7ea6" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>distanceSquared</name></member>
      <member refid="classQgsPoint_1abc177f2681f975e8e0c0e06fa7e382c8" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>distanceSquared</name></member>
      <member refid="classQgsPoint_1a76ffc867dca1cd322e3a84f7e77a681e" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>distanceSquared3D</name></member>
      <member refid="classQgsPoint_1a4cc61cd6e0804ea24a3e8f475123b7d8" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>distanceSquared3D</name></member>
      <member refid="classQgsPoint_1a335eb95c02ad8cd82fef981d14be7d1b" prot="public" virt="virtual"><scope>QgsPoint</scope><name>draw</name></member>
      <member refid="classQgsPoint_1a29d20191fbfd8da2f29184ad6d8c9985" prot="public" virt="virtual"><scope>QgsPoint</scope><name>dropMValue</name></member>
      <member refid="classQgsPoint_1ae231f18ce0f9f02e28a4ae367b563b78" prot="public" virt="virtual"><scope>QgsPoint</scope><name>dropZValue</name></member>
      <member refid="classQgsPoint_1a0bf734f1b7960359ed8ca98a6593c976" prot="public" virt="virtual"><scope>QgsPoint</scope><name>filterVertices</name></member>
      <member refid="classQgsPoint_1a0bb9694fbb2872148030b0650bf77ff4" prot="public" virt="virtual"><scope>QgsPoint</scope><name>fromWkb</name></member>
      <member refid="classQgsPoint_1a2611b17bf71ed927352e27996333c979" prot="public" virt="virtual"><scope>QgsPoint</scope><name>fromWkt</name></member>
      <member refid="classQgsPoint_1adc9d8015910f51ebbc0f5bba9cd0aef5" prot="public" virt="virtual"><scope>QgsPoint</scope><name>geometryType</name></member>
      <member refid="classQgsAbstractGeometry_1ab8c18bf4a80645ff70cc61518f7e3ef9" prot="protected" virt="virtual"><scope>QgsPoint</scope><name>hasChildGeometries</name></member>
      <member refid="classQgsAbstractGeometry_1ac5b4206ebdc39ca64dd0b3e826c7e1b5" prot="public" virt="virtual"><scope>QgsPoint</scope><name>hasCurvedSegments</name></member>
      <member refid="classQgsPoint_1a0ddb881837618aaa7446e613f5f5ba9d" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>inclination</name></member>
      <member refid="classQgsPoint_1a2a12dad7ff419ded43f307a718099804" prot="public" virt="virtual"><scope>QgsPoint</scope><name>insertVertex</name></member>
      <member refid="classQgsAbstractGeometry_1a414275940aae6a3a8a7f0adeeefcfdee" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>is3D</name></member>
      <member refid="classQgsPoint_1abd73219032dfe02d9bd0cc0533d1cba2" prot="public" virt="virtual"><scope>QgsPoint</scope><name>isEmpty</name></member>
      <member refid="classQgsAbstractGeometry_1a244df46423e297f76e6f8f0cbc39db6d" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>isMeasure</name></member>
      <member refid="classQgsAbstractGeometry_1a92a705bc19d95e1d6c0fc1bc407ab783" prot="public" virt="virtual"><scope>QgsPoint</scope><name>length</name></member>
      <member refid="classQgsPoint_1ae4de56605f876418cd59f318a79ddb82" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>m</name></member>
      <member refid="classQgsPoint_1acbcf82563317609c0ee3a5373cb8ab48" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>m</name></member>
      <member refid="classQgsAbstractGeometry_1a0ad4bdf6c9a37daa3be14cb41fc38d96ae179641e9ac6aafe1005da4b6f7c7618" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>MaximumAngle</name></member>
      <member refid="classQgsAbstractGeometry_1a0ad4bdf6c9a37daa3be14cb41fc38d96a366917a4d314a51392c2e04686aad8d2" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>MaximumDifference</name></member>
      <member refid="classQgsPoint_1a47e81bc42d0acb7fd7a1c9745d443a92" prot="private" virt="non-virtual"><scope>QgsPoint</scope><name>mM</name></member>
      <member refid="classQgsPoint_1a906c2ce03dbcf320de972785272cdc40" prot="public" virt="virtual"><scope>QgsPoint</scope><name>moveVertex</name></member>
      <member refid="classQgsAbstractGeometry_1af287af3318c631f2206ef0b200830583" prot="protected" virt="non-virtual"><scope>QgsPoint</scope><name>mWkbType</name></member>
      <member refid="classQgsPoint_1a00209808edf16e755dd6026b0e82cbf3" prot="private" virt="non-virtual"><scope>QgsPoint</scope><name>mX</name></member>
      <member refid="classQgsPoint_1a6d020cc9d5a597a30d1d9353bdb7642c" prot="private" virt="non-virtual"><scope>QgsPoint</scope><name>mY</name></member>
      <member refid="classQgsPoint_1aae3b12736e634e697f634d9fb9a65faa" prot="private" virt="non-virtual"><scope>QgsPoint</scope><name>mZ</name></member>
      <member refid="classQgsPoint_1acd02d56f35297cee8cc583d9b2aea334" prot="public" virt="virtual"><scope>QgsPoint</scope><name>nCoordinates</name></member>
      <member refid="classQgsPoint_1aedd4f26134472a45ea8fb54f8bfd27e3" prot="public" virt="virtual"><scope>QgsPoint</scope><name>nextVertex</name></member>
      <member refid="classQgsPoint_1ae8cec10583e770fba3408d49f6e151ce" prot="public" virt="virtual"><scope>QgsPoint</scope><name>operator!=</name></member>
      <member refid="classQgsPoint_1a4bdd15e32f25de1ca0efb6cfe35257ad" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>operator+</name></member>
      <member refid="classQgsPoint_1ab634f02025d11c329c22ebf1f3972b7e" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>operator+=</name></member>
      <member refid="classQgsPoint_1ae6a1b006400cbe260fa823d67030b96b" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>operator-</name></member>
      <member refid="classQgsPoint_1a1c7ba13bb7b75ce18cbc1abd8ddafe18" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>operator-</name></member>
      <member refid="classQgsPoint_1a21831fd398e7fa39fc27ae459bc925cd" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>operator-=</name></member>
      <member refid="classQgsAbstractGeometry_1a72e38668113433c7a5ae2e43d9086654" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>operator=</name></member>
      <member refid="classQgsPoint_1a116b79816221173f90736dc7b73ae2f4" prot="public" virt="virtual"><scope>QgsPoint</scope><name>operator==</name></member>
      <member refid="classQgsPoint_1af679c870bae3affb083d4901202982d7" prot="public" virt="virtual"><scope>QgsPoint</scope><name>partCount</name></member>
      <member refid="classQgsAbstractGeometry_1af50be9d5399768d25a136cea07f608f9" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>parts</name></member>
      <member refid="classQgsAbstractGeometry_1ab2118f1df1d278df8cecb46c99810d67" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>parts</name></member>
      <member refid="classQgsAbstractGeometry_1af309b3f75d6cb473a7ce8518718f6130" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>parts_begin</name></member>
      <member refid="classQgsAbstractGeometry_1a911e0222e26032cca995fc84005a8288" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>parts_end</name></member>
      <member refid="classQgsAbstractGeometry_1a61a15d374161fccc1401f9971e93f2b7" prot="public" virt="virtual"><scope>QgsPoint</scope><name>perimeter</name></member>
      <member refid="classQgsPoint_1ae5b591ac604024fdb873e4ca4a209e1f" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>project</name></member>
      <member refid="classQgsAbstractGeometry_1aea45573a7471a93b4839d9ba3e240293" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>QgsAbstractGeometry</name></member>
      <member refid="classQgsAbstractGeometry_1a0ca58ea869fa586cbc08d228e171aa5d" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>QgsAbstractGeometry</name></member>
      <member refid="classQgsPoint_1a55c315abda73e46b7f41b56e0ee65493" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>QgsPoint</name></member>
      <member refid="classQgsPoint_1a412fff8072404759bf2dbb42e0ec5d10" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>QgsPoint</name></member>
      <member refid="classQgsPoint_1a92fe3abad965a9293011c38ac89c8b46" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>QgsPoint</name></member>
      <member refid="classQgsPoint_1a605f4af223c8501329658c7eb27337a7" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>QgsPoint</name></member>
      <member refid="classQgsPoint_1afc8d94987d752264120e425131998c6c" prot="public" virt="virtual"><scope>QgsPoint</scope><name>removeDuplicateNodes</name></member>
      <member refid="classQgsPoint_1a77a6e2353b6bb8801406fd4671ccb467" prot="public" virt="virtual"><scope>QgsPoint</scope><name>ringCount</name></member>
      <member refid="classQgsPoint_1a58282e3e798baa4176748f11ed23b086" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>rm</name></member>
      <member refid="classQgsPoint_1ac664e9a6d5985f10308eb792802e81ac" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>rx</name></member>
      <member refid="classQgsPoint_1a19dd6b35a46c8739d84d60e373d86e55" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>ry</name></member>
      <member refid="classQgsPoint_1a56b141975e3bbc87e43f70d636783e26" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>rz</name></member>
      <member refid="classQgsAbstractGeometry_1a0ad4bdf6c9a37daa3be14cb41fc38d96" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>SegmentationToleranceType</name></member>
      <member refid="classQgsAbstractGeometry_1a2074dabaf33c1ba3a4407aff45b75a59" prot="public" virt="virtual"><scope>QgsPoint</scope><name>segmentize</name></member>
      <member refid="classQgsPoint_1adf6a8b20318b2f17d7b0eccb1b3b4212" prot="public" virt="virtual"><scope>QgsPoint</scope><name>segmentLength</name></member>
      <member refid="classQgsPoint_1ab12a3d7152fa50dc88ce95ce96d9af51" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>setM</name></member>
      <member refid="classQgsPoint_1a4faeb4afb2807bd99fa4ac9ff519d832" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>setX</name></member>
      <member refid="classQgsPoint_1a06c93b509ad9ffc1ad8a2b0e8ef77bc3" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>setY</name></member>
      <member refid="classQgsPoint_1acf221ee34a130f9e7f24476401f29d4e" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>setZ</name></member>
      <member refid="classQgsAbstractGeometry_1afd3ab014d85f3b9daafee9544763cb08" prot="protected" virt="non-virtual"><scope>QgsPoint</scope><name>setZMTypeFromSubGeometry</name></member>
      <member refid="classQgsPoint_1ab4e496cc8f2d652fa37827f445255769" prot="public" virt="virtual"><scope>QgsPoint</scope><name>snappedToGrid</name></member>
      <member refid="classQgsPoint_1ad0b3661b698cd9b2b00a46c01ef85951" prot="public" virt="virtual"><scope>QgsPoint</scope><name>swapXy</name></member>
      <member refid="classQgsPoint_1a3628b484f3de4cd16d3381cd03703b3e" prot="public" virt="virtual"><scope>QgsPoint</scope><name>toCurveType</name></member>
      <member refid="classQgsPoint_1a61f8a2b7ec8f29cedfea847b5e1a10a3" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>toQPointF</name></member>
      <member refid="classQgsPoint_1afa511445b91cad28178838d8848edd38" prot="public" virt="virtual"><scope>QgsPoint</scope><name>transform</name></member>
      <member refid="classQgsPoint_1acbec9a30303207527c6d89d33354ef0b" prot="public" virt="virtual"><scope>QgsPoint</scope><name>transform</name></member>
      <member refid="classQgsPoint_1ab381af490b807cc36e607c696a959cdb" prot="public" virt="virtual"><scope>QgsPoint</scope><name>transformVertices</name></member>
      <member refid="classQgsPoint_1a0eb0b85af07a8b91e4781c88e6b3a3c1" prot="public" virt="virtual"><scope>QgsPoint</scope><name>vertexAngle</name></member>
      <member refid="classQgsPoint_1a867d213aac0648d3b11aa948576b9c82" prot="public" virt="virtual"><scope>QgsPoint</scope><name>vertexAt</name></member>
      <member refid="classQgsPoint_1ac9f58c31d3b557133ff4809beb322a92" prot="public" virt="virtual"><scope>QgsPoint</scope><name>vertexCount</name></member>
      <member refid="classQgsPoint_1abc680ecbd5f9d800f61b551406e5b49e" prot="public" virt="virtual"><scope>QgsPoint</scope><name>vertexNumberFromVertexId</name></member>
      <member refid="classQgsAbstractGeometry_1a1f8cda068565f35313215df729a5971e" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>vertices</name></member>
      <member refid="classQgsAbstractGeometry_1ac391bce2a1a06eceffaccf6d731beb52" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>vertices_begin</name></member>
      <member refid="classQgsAbstractGeometry_1a14ad1c06073e0933a32b9b05f7c599a8" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>vertices_end</name></member>
      <member refid="classQgsAbstractGeometry_1a8b8706728c90bc5c0e9c3ea3925b4453" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>wkbType</name></member>
      <member refid="classQgsAbstractGeometry_1a5c6589aaf5ddfc75c0e141438666ae5c" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>wktTypeStr</name></member>
      <member refid="classQgsPoint_1aab5c56479f3f9131deb1998a0768ea03" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>x</name></member>
      <member refid="classQgsPoint_1af9d444448e7142e776a6cbcdd97d27b9" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>x</name></member>
      <member refid="classQgsAbstractGeometry_1a429cf06290bd0bdb2134a30c16d4d2a7aae0bffb31794a26e0f1e2f5f506cccb3" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>XY</name></member>
      <member refid="classQgsPoint_1ae7c99caa3ae034dc4521fe4a09a907ea" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>y</name></member>
      <member refid="classQgsPoint_1ab287ef713e6395da4bb9bc6914c1b485" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>y</name></member>
      <member refid="classQgsAbstractGeometry_1a429cf06290bd0bdb2134a30c16d4d2a7ad3bbc17894009b36b9a9a6e3b41d0b2f" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>YX</name></member>
      <member refid="classQgsPoint_1a9fac72ae2899169a3ee353fb62d63139" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>z</name></member>
      <member refid="classQgsPoint_1a025d076bdba27771e772f9183a798863" prot="public" virt="non-virtual"><scope>QgsPoint</scope><name>z</name></member>
      <member refid="classQgsAbstractGeometry_1afbd59f1e4fbeb985adaefceb3c6b9b7e" prot="public" virt="virtual"><scope>QgsPoint</scope><name>~QgsAbstractGeometry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
