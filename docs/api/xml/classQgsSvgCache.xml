<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsSvgCache" kind="class" language="C++" prot="public">
    <compoundname>QgsSvgCache</compoundname>
    <basecompoundref refid="classQgsAbstractContentCache" prot="public" virt="non-virtual">QgsAbstractContentCache&lt; QgsSvgCacheEntry &gt;</basecompoundref>
    <includes refid="qgssvgcache_8h" local="no">qgssvgcache.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsSvgCache_1a3404a4b611c3350964e16cfe058c3bf3" prot="private" static="no" mutable="no">
        <type>QByteArray</type>
        <definition>QByteArray QgsSvgCache::mFetchingSvg</definition>
        <argsstring></argsstring>
        <name>mFetchingSvg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="251" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSvgCache_1ac0e57eddf384024298b72e31383c9d0b" prot="private" static="no" mutable="no">
        <type>QByteArray</type>
        <definition>QByteArray QgsSvgCache::mMissingSvg</definition>
        <argsstring></argsstring>
        <name>mMissingSvg</name>
        <briefdescription>
<para>SVG content to be rendered if SVG file was not found. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="249" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classQgsSvgCache_1af7d0b1d8148b0f23f4d15e6db57cb9c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TestQgsSvgCache</definition>
        <argsstring></argsstring>
        <name>TestQgsSvgCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="253" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsSvgCache_1a7015005a4c4947d5f516d3c124abec53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSvgCache::QgsSvgCache</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>QgsSvgCache</name>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsSvgCache" kindref="compound">QgsSvgCache</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="99" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1a991da6b47411b9e9f34916cdcaa2522b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSvgCache::containsParams</definition>
        <argsstring>(const QString &amp;path, bool &amp;hasFillParam, QColor &amp;defaultFillColor, bool &amp;hasStrokeParam, QColor &amp;defaultStrokeColor, bool &amp;hasStrokeWidthParam, double &amp;defaultStrokeWidth) const</argsstring>
        <name>containsParams</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasFillParam</declname>
        </param>
        <param>
          <type>QColor &amp;</type>
          <declname>defaultFillColor</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasStrokeParam</declname>
        </param>
        <param>
          <type>QColor &amp;</type>
          <declname>defaultStrokeColor</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasStrokeWidthParam</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>defaultStrokeWidth</declname>
        </param>
        <briefdescription>
<para>Tests if an svg file contains parameters for fill, stroke color, stroke width. </para>        </briefdescription>
        <detaileddescription>
<para>If yes, possible default values are returned. If there are several default values in the svg file, only the first one is considered </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="159" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="224" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1a15946f7b42aa5e7c5f97a61fa0606b24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSvgCache::containsParams</definition>
        <argsstring>(const QString &amp;path, bool &amp;hasFillParam, bool &amp;hasDefaultFillParam, QColor &amp;defaultFillColor, bool &amp;hasFillOpacityParam, bool &amp;hasDefaultFillOpacity, double &amp;defaultFillOpacity, bool &amp;hasStrokeParam, bool &amp;hasDefaultStrokeColor, QColor &amp;defaultStrokeColor, bool &amp;hasStrokeWidthParam, bool &amp;hasDefaultStrokeWidth, double &amp;defaultStrokeWidth, bool &amp;hasStrokeOpacityParam, bool &amp;hasDefaultStrokeOpacity, double &amp;defaultStrokeOpacity) const</argsstring>
        <name>containsParams</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasFillParam</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasDefaultFillParam</declname>
        </param>
        <param>
          <type>QColor &amp;</type>
          <declname>defaultFillColor</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasFillOpacityParam</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasDefaultFillOpacity</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>defaultFillOpacity</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasStrokeParam</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasDefaultStrokeColor</declname>
        </param>
        <param>
          <type>QColor &amp;</type>
          <declname>defaultStrokeColor</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasStrokeWidthParam</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasDefaultStrokeWidth</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>defaultStrokeWidth</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasStrokeOpacityParam</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasDefaultStrokeOpacity</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>defaultStrokeOpacity</declname>
        </param>
        <briefdescription>
<para>Tests if an svg file contains parameters for fill, stroke color, stroke width. </para>        </briefdescription>
        <detaileddescription>
<para>If yes, possible default values are returned. If there are several default values in the svg file, only the first one is considered. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>path to SVG file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasFillParam</parametername>
</parameternamelist>
<parameterdescription>
<para>will be true if fill param present in SVG </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasDefaultFillParam</parametername>
</parameternamelist>
<parameterdescription>
<para>will be true if fill param has a default value specified </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultFillColor</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to default fill color specified in SVG, if present </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasFillOpacityParam</parametername>
</parameternamelist>
<parameterdescription>
<para>will be true if fill opacity param present in SVG </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasDefaultFillOpacity</parametername>
</parameternamelist>
<parameterdescription>
<para>will be true if fill opacity param has a default value specified </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultFillOpacity</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to default fill opacity specified in SVG, if present </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasStrokeParam</parametername>
</parameternamelist>
<parameterdescription>
<para>will be true if stroke param present in SVG </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasDefaultStrokeColor</parametername>
</parameternamelist>
<parameterdescription>
<para>will be true if stroke param has a default value specified </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultStrokeColor</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to default stroke color specified in SVG, if present </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasStrokeWidthParam</parametername>
</parameternamelist>
<parameterdescription>
<para>will be true if stroke width param present in SVG </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasDefaultStrokeWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>will be true if stroke width param has a default value specified </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultStrokeWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to default stroke width specified in SVG, if present </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasStrokeOpacityParam</parametername>
</parameternamelist>
<parameterdescription>
<para>will be true if stroke opacity param present in SVG </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasDefaultStrokeOpacity</parametername>
</parameternamelist>
<parameterdescription>
<para>will be true if stroke opacity param has a default value specified </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultStrokeOpacity</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to default stroke opacity specified in SVG, if present </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>available in Python bindings as containsParamsV3 </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="184" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="244" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1aee7744cdaae8613003c5e7a41d879177" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray QgsSvgCache::getImageData</definition>
        <argsstring>(const QString &amp;path) const</argsstring>
        <name>getImageData</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Gets image data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="191" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1af5e2a37a194a1ac210d56d7d97331157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QImage</type>
        <definition>QImage QgsSvgCache::svgAsImage</definition>
        <argsstring>(const QString &amp;path, double size, const QColor &amp;fill, const QColor &amp;stroke, double strokeWidth, double widthScaleFactor, bool &amp;fitsInCache, double fixedAspectRatio=0)</argsstring>
        <name>svgAsImage</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>fill</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>stroke</declname>
        </param>
        <param>
          <type>double</type>
          <declname>strokeWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>widthScaleFactor</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>fitsInCache</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fixedAspectRatio</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Gets SVG as QImage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute path to SVG file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of cached image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fill</parametername>
</parameternamelist>
<parameterdescription>
<para>color of fill </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stroke</parametername>
</parameternamelist>
<parameterdescription>
<para>color of stroke </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strokeWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of stroke </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>widthScaleFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>width scale factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fitsInCache</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fixedAspectRatio</parametername>
</parameternamelist>
<parameterdescription>
<para>fixed aspect ratio (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="124" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="122" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1a2818df64069c3ce9358fbd32914f871d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QPicture</type>
        <definition>QPicture QgsSvgCache::svgAsPicture</definition>
        <argsstring>(const QString &amp;path, double size, const QColor &amp;fill, const QColor &amp;stroke, double strokeWidth, double widthScaleFactor, bool forceVectorOutput=false, double fixedAspectRatio=0)</argsstring>
        <name>svgAsPicture</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>fill</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>stroke</declname>
        </param>
        <param>
          <type>double</type>
          <declname>strokeWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>widthScaleFactor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceVectorOutput</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>double</type>
          <declname>fixedAspectRatio</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Gets SVG as QPicture&amp;. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute path to SVG file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of cached image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fill</parametername>
</parameternamelist>
<parameterdescription>
<para>color of fill </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stroke</parametername>
</parameternamelist>
<parameterdescription>
<para>color of stroke </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strokeWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of stroke </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>widthScaleFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>width scale factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forceVectorOutput</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fixedAspectRatio</parametername>
</parameternamelist>
<parameterdescription>
<para>fixed aspect ratio (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="138" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="182" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1a4fc771a9af528435a73f38c1950fcd82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray QgsSvgCache::svgContent</definition>
        <argsstring>(const QString &amp;path, double size, const QColor &amp;fill, const QColor &amp;stroke, double strokeWidth, double widthScaleFactor, double fixedAspectRatio=0)</argsstring>
        <name>svgContent</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>fill</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>stroke</declname>
        </param>
        <param>
          <type>double</type>
          <declname>strokeWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>widthScaleFactor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fixedAspectRatio</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Gets SVG content. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="194" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="206" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1a23bae89e95e801c6e2812aee1577f616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSizeF</type>
        <definition>QSizeF QgsSvgCache::svgViewboxSize</definition>
        <argsstring>(const QString &amp;path, double size, const QColor &amp;fill, const QColor &amp;stroke, double strokeWidth, double widthScaleFactor, double fixedAspectRatio=0)</argsstring>
        <name>svgViewboxSize</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>fill</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>stroke</declname>
        </param>
        <param>
          <type>double</type>
          <declname>strokeWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>widthScaleFactor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fixedAspectRatio</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Calculates the viewbox size of a (possibly cached) SVG file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute path to SVG file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of cached image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fill</parametername>
</parameternamelist>
<parameterdescription>
<para>color of fill </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stroke</parametername>
</parameternamelist>
<parameterdescription>
<para>color of stroke </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strokeWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of stroke </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>widthScaleFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>width scale factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fixedAspectRatio</parametername>
</parameternamelist>
<parameterdescription>
<para>fixed aspect ratio (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>viewbox size set in SVG file </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="153" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="216" bodyend="222"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classQgsSvgCache_1aa8ff8d89ad0275638e9214145662f27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSvgCache::remoteSvgFetched</definition>
        <argsstring>(const QString &amp;url)</argsstring>
        <name>remoteSvgFetched</name>
        <param>
          <type>const QString &amp;</type>
          <declname>url</declname>
        </param>
        <briefdescription>
<para>Emitted when the cache has finished retrieving an SVG file from a remote <emphasis>url</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsSvgCache_1a1ab89169abf46585a4d72d34eef61c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_DECL_DEPRECATED void</type>
        <definition>Q_DECL_DEPRECATED void QgsSvgCache::statusChanged</definition>
        <argsstring>(const QString &amp;statusQString)</argsstring>
        <name>statusChanged</name>
        <param>
          <type>const QString &amp;</type>
          <declname>statusQString</declname>
        </param>
        <briefdescription>
<para>Emit a signal to be caught by qgisapp and display a msg on status bar. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000034"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Deprecated since QGIS 3.6 <ndash/> no longer emitted. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="203" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsSvgCache_1a75eb2ff3f1c0ec380c0845f055bbfa01" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsSvgCache::checkReply</definition>
        <argsstring>(QNetworkReply *reply, const QString &amp;path) const override</argsstring>
        <name>checkReply</name>
        <reimplements refid="classQgsAbstractContentCacheBase_1a59291b956cbd573b846d1bf58fce2050">checkReply</reimplements>
        <param>
          <type>QNetworkReply *</type>
          <declname>reply</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Runs additional checks on a network <emphasis>reply</emphasis> to ensure that the reply content is consistent with that required by the cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="213" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="373" bodyend="385"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsSvgCache_1a60c76be6b519b7ba9f96dbaabccd4868" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QgsSvgCacheEntry *</type>
        <definition>QgsSvgCacheEntry * QgsSvgCache::cacheEntry</definition>
        <argsstring>(const QString &amp;path, double size, const QColor &amp;fill, const QColor &amp;stroke, double strokeWidth, double widthScaleFactor, double fixedAspectRatio=0)</argsstring>
        <name>cacheEntry</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>fill</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>stroke</declname>
        </param>
        <param>
          <type>double</type>
          <declname>strokeWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>widthScaleFactor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fixedAspectRatio</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns entry from cache or creates a new entry if it does not exist already. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="221" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="464" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1ab534596d19803de2e6e1e972a516f517" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSvgCache::cacheImage</definition>
        <argsstring>(QgsSvgCacheEntry *entry)</argsstring>
        <name>cacheImage</name>
        <param>
          <type>QgsSvgCacheEntry *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="218" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="387" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1af50530a090efb8ff9b3e148a6a5a5357" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSvgCache::cachePicture</definition>
        <argsstring>(QgsSvgCacheEntry *entry, bool forceVectorOutput=false)</argsstring>
        <name>cachePicture</name>
        <param>
          <type>QgsSvgCacheEntry *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceVectorOutput</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="219" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="422" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1ab5ba1f2525a79203903b998b78223797" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsSvgCache::calcSizeScaleFactor</definition>
        <argsstring>(QgsSvgCacheEntry *entry, const QDomElement &amp;docElem, QSizeF &amp;viewboxSize) const</argsstring>
        <name>calcSizeScaleFactor</name>
        <param>
          <type>QgsSvgCacheEntry *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>const QDomElement &amp;</type>
          <declname>docElem</declname>
        </param>
        <param>
          <type>QSizeF &amp;</type>
          <declname>viewboxSize</declname>
        </param>
        <briefdescription>
<para>Calculates scaling for rendered image sizes to SVG logical sizes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="235" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="313" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1ab8eb852e01d4c79de5879ff2664f02e8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSvgCache::containsElemParams</definition>
        <argsstring>(const QDomElement &amp;elem, bool &amp;hasFillParam, bool &amp;hasDefaultFill, QColor &amp;defaultFill, bool &amp;hasFillOpacityParam, bool &amp;hasDefaultFillOpacity, double &amp;defaultFillOpacity, bool &amp;hasStrokeParam, bool &amp;hasDefaultStroke, QColor &amp;defaultStroke, bool &amp;hasStrokeWidthParam, bool &amp;hasDefaultStrokeWidth, double &amp;defaultStrokeWidth, bool &amp;hasStrokeOpacityParam, bool &amp;hasDefaultStrokeOpacity, double &amp;defaultStrokeOpacity) const</argsstring>
        <name>containsElemParams</name>
        <param>
          <type>const QDomElement &amp;</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasFillParam</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasDefaultFill</declname>
        </param>
        <param>
          <type>QColor &amp;</type>
          <declname>defaultFill</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasFillOpacityParam</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasDefaultFillOpacity</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>defaultFillOpacity</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasStrokeParam</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasDefaultStroke</declname>
        </param>
        <param>
          <type>QColor &amp;</type>
          <declname>defaultStroke</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasStrokeWidthParam</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasDefaultStrokeWidth</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>defaultStrokeWidth</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasStrokeOpacityParam</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasDefaultStrokeOpacity</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>defaultStrokeOpacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="227" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="572" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1a79ba42155f996d13301038f7d3442662" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QImage</type>
        <definition>QImage QgsSvgCache::imageFromCachedPicture</definition>
        <argsstring>(const QgsSvgCacheEntry &amp;entry) const</argsstring>
        <name>imageFromCachedPicture</name>
        <param>
          <type>const QgsSvgCacheEntry &amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Returns a rendered image for a cached picture <emphasis>entry</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="246" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="779" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1a359263d22bb751057bdf2c95f1633acb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSvgCache::replaceElemParams</definition>
        <argsstring>(QDomElement &amp;elem, const QColor &amp;fill, const QColor &amp;stroke, double strokeWidth)</argsstring>
        <name>replaceElemParams</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>fill</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>stroke</declname>
        </param>
        <param>
          <type>double</type>
          <declname>strokeWidth</declname>
        </param>
        <briefdescription>
<para>Replaces parameters in elements of a dom node and calls method for all child nodes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="225" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="478" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1a5089d0f8186b26a39f48365ba2ce0a67" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSvgCache::replaceParamsAndCacheSvg</definition>
        <argsstring>(QgsSvgCacheEntry *entry)</argsstring>
        <name>replaceParamsAndCacheSvg</name>
        <param>
          <type>QgsSvgCacheEntry *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="217" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="282" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSvgCache_1a3d1e22f5cc3b6404cf90636f7a38f4aa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize QgsSvgCache::sizeForImage</definition>
        <argsstring>(const QgsSvgCacheEntry &amp;entry, QSizeF &amp;viewBoxSize, QSizeF &amp;scaledSize) const</argsstring>
        <name>sizeForImage</name>
        <param>
          <type>const QgsSvgCacheEntry &amp;</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>QSizeF &amp;</type>
          <declname>viewBoxSize</declname>
        </param>
        <param>
          <type>QSizeF &amp;</type>
          <declname>scaledSize</declname>
        </param>
        <briefdescription>
<para>Returns the target size (in pixels) and calculates the <emphasis>viewBoxSize</emphasis> for a cache <emphasis>entry</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="241" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.cpp" bodystart="744" bodyend="777"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A cache for images / pictures derived from svg files. </para>    </briefdescription>
    <detaileddescription>
<para>This class supports parameter replacement in svg files according to the svg params specification (<ulink url="http://www.w3.org/TR/2009/WD-SVGParamPrimer-20090616/">http://www.w3.org/TR/2009/WD-SVGParamPrimer-20090616/</ulink>). Supported are the parameters &apos;fill-color&apos;, &apos;pen-color&apos;, &apos;outline-width&apos;, &apos;stroke-width&apos;. E.g. &lt;circle fill=&quot;param(fill-color red)&quot; stroke=&quot;param(pen-color black)&quot; stroke-width=&quot;param(outline-width 1)&quot;</para><para><ref refid="classQgsSvgCache" kindref="compound">QgsSvgCache</ref> is not usually directly created, but rather accessed through <ref refid="classQgsApplication_1a8854f0911acc1954c119f68e928e9170" kindref="member">QgsApplication::svgCache()</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="8644">
        <label>QgsSvgCache</label>
        <link refid="classQgsSvgCache"/>
        <childnode refid="8645" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8647">
        <label>QObject</label>
      </node>
      <node id="8645">
        <label>QgsAbstractContentCache&lt; QgsSvgCacheEntry &gt;</label>
        <link refid="classQgsAbstractContentCache"/>
        <childnode refid="8646" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8646">
        <label>QgsAbstractContentCacheBase</label>
        <link refid="classQgsAbstractContentCacheBase"/>
        <childnode refid="8647" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8648">
        <label>QgsSvgCache</label>
        <link refid="classQgsSvgCache"/>
        <childnode refid="8649" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8651">
        <label>QObject</label>
      </node>
      <node id="8649">
        <label>QgsAbstractContentCache&lt; QgsSvgCacheEntry &gt;</label>
        <link refid="classQgsAbstractContentCache"/>
        <childnode refid="8650" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8650">
        <label>QgsAbstractContentCacheBase</label>
        <link refid="classQgsAbstractContentCacheBase"/>
        <childnode refid="8651" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" line="102" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/symbology/qgssvgcache.h" bodystart="101" bodyend="254"/>
    <listofallmembers>
      <member refid="classQgsSvgCache_1a60c76be6b519b7ba9f96dbaabccd4868" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>cacheEntry</name></member>
      <member refid="classQgsSvgCache_1ab534596d19803de2e6e1e972a516f517" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>cacheImage</name></member>
      <member refid="classQgsSvgCache_1af50530a090efb8ff9b3e148a6a5a5357" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>cachePicture</name></member>
      <member refid="classQgsSvgCache_1ab5ba1f2525a79203903b998b78223797" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>calcSizeScaleFactor</name></member>
      <member refid="classQgsSvgCache_1a75eb2ff3f1c0ec380c0845f055bbfa01" prot="protected" virt="virtual"><scope>QgsSvgCache</scope><name>checkReply</name></member>
      <member refid="classQgsSvgCache_1ab8eb852e01d4c79de5879ff2664f02e8" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>containsElemParams</name></member>
      <member refid="classQgsSvgCache_1a991da6b47411b9e9f34916cdcaa2522b" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>containsParams</name></member>
      <member refid="classQgsSvgCache_1a15946f7b42aa5e7c5f97a61fa0606b24" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>containsParams</name></member>
      <member refid="classQgsAbstractContentCache_1a0f7f46aaeb38fa212bbbcb79713babcd" prot="protected" virt="non-virtual"><scope>QgsSvgCache</scope><name>findExistingEntry</name></member>
      <member refid="classQgsAbstractContentCache_1ae759708e1a09ef888bfb0672238aaffb" prot="protected" virt="non-virtual"><scope>QgsSvgCache</scope><name>getContent</name></member>
      <member refid="classQgsSvgCache_1aee7744cdaae8613003c5e7a41d879177" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>getImageData</name></member>
      <member refid="classQgsSvgCache_1a79ba42155f996d13301038f7d3442662" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>imageFromCachedPicture</name></member>
      <member refid="classQgsSvgCache_1a3404a4b611c3350964e16cfe058c3bf3" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>mFetchingSvg</name></member>
      <member refid="classQgsAbstractContentCache_1a18e966f7c5c31ffbf97e1ddf4d2d9aca" prot="protected" virt="non-virtual"><scope>QgsSvgCache</scope><name>mMaxCacheSize</name></member>
      <member refid="classQgsSvgCache_1ac0e57eddf384024298b72e31383c9d0b" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>mMissingSvg</name></member>
      <member refid="classQgsAbstractContentCache_1aaf09d85762a13df57b8bfa26e574c6e5" prot="protected" virt="non-virtual"><scope>QgsSvgCache</scope><name>mMutex</name></member>
      <member refid="classQgsAbstractContentCache_1a6703853a23c0d227136d0b6a30043637" prot="protected" virt="non-virtual"><scope>QgsSvgCache</scope><name>mTotalSize</name></member>
      <member refid="classQgsAbstractContentCache_1a52a1d38ed9104b8eda759f6d647d4f6b" prot="protected" virt="virtual"><scope>QgsSvgCache</scope><name>onRemoteContentFetched</name></member>
      <member refid="classQgsAbstractContentCache_1a5d4fc48a2b5b9ca5efec3a5e9f2c8ca6" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>QgsAbstractContentCache</name></member>
      <member refid="classQgsAbstractContentCacheBase_1abc4f90a71c3df675e8d7b82b6829aefc" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>QgsAbstractContentCacheBase</name></member>
      <member refid="classQgsSvgCache_1a7015005a4c4947d5f516d3c124abec53" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>QgsSvgCache</name></member>
      <member refid="classQgsAbstractContentCacheBase_1a0466d84c9bbe8749c671a05245fff78e" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>remoteContentFetched</name></member>
      <member refid="classQgsSvgCache_1aa8ff8d89ad0275638e9214145662f27c" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>remoteSvgFetched</name></member>
      <member refid="classQgsSvgCache_1a359263d22bb751057bdf2c95f1633acb" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>replaceElemParams</name></member>
      <member refid="classQgsSvgCache_1a5089d0f8186b26a39f48365ba2ce0a67" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>replaceParamsAndCacheSvg</name></member>
      <member refid="classQgsSvgCache_1a3d1e22f5cc3b6404cf90636f7a38f4aa" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>sizeForImage</name></member>
      <member refid="classQgsSvgCache_1a1ab89169abf46585a4d72d34eef61c6c" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>statusChanged</name></member>
      <member refid="classQgsSvgCache_1af5e2a37a194a1ac210d56d7d97331157" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>svgAsImage</name></member>
      <member refid="classQgsSvgCache_1a2818df64069c3ce9358fbd32914f871d" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>svgAsPicture</name></member>
      <member refid="classQgsSvgCache_1a4fc771a9af528435a73f38c1950fcd82" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>svgContent</name></member>
      <member refid="classQgsSvgCache_1a23bae89e95e801c6e2812aee1577f616" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>svgViewboxSize</name></member>
      <member refid="classQgsSvgCache_1af7d0b1d8148b0f23f4d15e6db57cb9c3" prot="private" virt="non-virtual"><scope>QgsSvgCache</scope><name>TestQgsSvgCache</name></member>
      <member refid="classQgsAbstractContentCache_1a7826c63eec1b04d2777ca784bd5ed458" prot="protected" virt="non-virtual"><scope>QgsSvgCache</scope><name>trimToMaximumSize</name></member>
      <member refid="classQgsAbstractContentCache_1a4e597e7d5e081ecb0760cfd856fbce42" prot="public" virt="non-virtual"><scope>QgsSvgCache</scope><name>~QgsAbstractContentCache</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
