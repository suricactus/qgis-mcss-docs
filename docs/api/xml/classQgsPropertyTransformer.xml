<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsPropertyTransformer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QgsPropertyTransformer</compoundname>
    <derivedcompoundref refid="classQgsColorRampTransformer" prot="public" virt="non-virtual">QgsColorRampTransformer</derivedcompoundref>
    <derivedcompoundref refid="classQgsGenericNumericTransformer" prot="public" virt="non-virtual">QgsGenericNumericTransformer</derivedcompoundref>
    <derivedcompoundref refid="classQgsSizeScaleTransformer" prot="public" virt="non-virtual">QgsSizeScaleTransformer</derivedcompoundref>
    <includes refid="qgspropertytransformer_8h" local="no">qgspropertytransformer.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsPropertyTransformer_1aada495a695562f6e589c13d0d1edf310" prot="public" static="no">
        <name>Type</name>
        <enumvalue id="classQgsPropertyTransformer_1aada495a695562f6e589c13d0d1edf310a2a8d872d5b0c657a61f038aeaff44562" prot="public">
          <name>GenericNumericTransformer</name>
          <briefdescription>
<para>Generic transformer for numeric values (<ref refid="classQgsGenericNumericTransformer" kindref="compound">QgsGenericNumericTransformer</ref>) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsPropertyTransformer_1aada495a695562f6e589c13d0d1edf310a2c95554b369c6d856ae3a17f842413d8" prot="public">
          <name>SizeScaleTransformer</name>
          <briefdescription>
<para>Size scaling transformer (<ref refid="classQgsSizeScaleTransformer" kindref="compound">QgsSizeScaleTransformer</ref>) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsPropertyTransformer_1aada495a695562f6e589c13d0d1edf310aebeb5603de57ad269ba90093987aa0c7" prot="public">
          <name>ColorRampTransformer</name>
          <briefdescription>
<para>Color ramp transformer (<ref refid="classQgsColorRampTransformer" kindref="compound">QgsColorRampTransformer</ref>) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Transformer types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="190" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="189" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQgsPropertyTransformer_1a919ce7ce9126d8b5de4a00fee82fa9ba" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classQgsCurveTransform" kindref="compound">QgsCurveTransform</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsCurveTransform &gt; QgsPropertyTransformer::mCurveTransform</definition>
        <argsstring></argsstring>
        <name>mCurveTransform</name>
        <briefdescription>
<para>Optional curve transform. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="332" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPropertyTransformer_1af7a3b8ef82e47c5ba41b2d24903f2c01" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsPropertyTransformer::mMaxValue</definition>
        <argsstring></argsstring>
        <name>mMaxValue</name>
        <briefdescription>
<para>Maximum value expected by the transformer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="329" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsPropertyTransformer_1a880a71826886dbffcfc81d3eee856562" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsPropertyTransformer::mMinValue</definition>
        <argsstring></argsstring>
        <name>mMinValue</name>
        <briefdescription>
<para>Minimum value expected by the transformer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="326" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsPropertyTransformer_1ac253bd75b4c070017f7dd8cc0e572e23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPropertyTransformer" kindref="compound">QgsPropertyTransformer</ref> *</type>
        <definition>QgsPropertyTransformer * QgsPropertyTransformer::create</definition>
        <argsstring>(Type type)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="classQgsPropertyTransformer_1aada495a695562f6e589c13d0d1edf310" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Factory method for creating a new property transformer of the specified type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>transformer type to create </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="200" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.cpp" bodystart="30" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a1037c42a804a059485f3cbc3732894dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPropertyTransformer" kindref="compound">QgsPropertyTransformer</ref> *</type>
        <definition>QgsPropertyTransformer * QgsPropertyTransformer::fromExpression</definition>
        <argsstring>(const QString &amp;expression, QString &amp;baseExpression, QString &amp;fieldName)</argsstring>
        <name>fromExpression</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <param>
          <type>QString &amp;</type>
          <declname>baseExpression</declname>
        </param>
        <param>
          <type>QString &amp;</type>
          <declname>fieldName</declname>
        </param>
        <briefdescription>
<para>Attempts to parse an expression into a corresponding property transformer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>expression to parse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baseExpression</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to the component of the source expression which is used to calculate the input to the property transformer. This will be set to an empty string if a field reference is the transformer input. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldName</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to a field name which is used to calculate the input to the property transformer. This will be set to an empty string if an expression is the transformer input. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>corresponding property transformer, or nullptr if expression could not be parsed to a transformer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="314" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.cpp" bodystart="100" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsPropertyTransformer_1aa864fffdaf8f9a8c6af55de7f669ac3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPropertyTransformer::QgsPropertyTransformer</definition>
        <argsstring>(double minValue=0.0, double maxValue=1.0)</argsstring>
        <name>QgsPropertyTransformer</name>
        <param>
          <type>double</type>
          <declname>minValue</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>maxValue</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsPropertyTransformer" kindref="compound">QgsPropertyTransformer</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minValue</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum expected value from source property </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxValue</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum expected value from source property </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="207" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a408dc02b31ce7c6355b5fcecfc21d727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsPropertyTransformer::QgsPropertyTransformer</definition>
        <argsstring>(const QgsPropertyTransformer &amp;other)</argsstring>
        <name>QgsPropertyTransformer</name>
        <param>
          <type>const <ref refid="classQgsPropertyTransformer" kindref="compound">QgsPropertyTransformer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="212" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a16ca0400f2743b27fa7c29cfea839e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QgsPropertyTransformer::~QgsPropertyTransformer</definition>
        <argsstring>()=default</argsstring>
        <name>~QgsPropertyTransformer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a7c310c812c4758f0c89a3e49c54a1139" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classQgsPropertyTransformer" kindref="compound">QgsPropertyTransformer</ref> *</type>
        <definition>virtual QgsPropertyTransformer* QgsPropertyTransformer::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classQgsGenericNumericTransformer_1a6c7652164be963ba402b4232afff7ea4">clone</reimplementedby>
        <reimplementedby refid="classQgsSizeScaleTransformer_1a177f7cef926439e216d99a82f27422a1">clone</reimplementedby>
        <reimplementedby refid="classQgsColorRampTransformer_1a4ae20a4e72f5c39aa30023dd5285c941">clone</reimplementedby>
        <briefdescription>
<para>Returns a clone of the transformer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a6b3fcde3a458221924c53f400e7a15a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsCurveTransform" kindref="compound">QgsCurveTransform</ref> *</type>
        <definition>QgsCurveTransform* QgsPropertyTransformer::curveTransform</definition>
        <argsstring>() const</argsstring>
        <name>curveTransform</name>
        <briefdescription>
<para>Returns the curve transform applied to input values before they are transformed by the individual transform subclasses. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1affc24552a03f59f7363b9a195cbb648d" kindref="member">setCurveTransform()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="278" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="278" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a2709068957db6461039191843cfff37f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsPropertyTransformer::loadVariant</definition>
        <argsstring>(const QVariant &amp;transformer)</argsstring>
        <name>loadVariant</name>
        <reimplementedby refid="classQgsGenericNumericTransformer_1a5450424f030e33d875433c35198ffd21">loadVariant</reimplementedby>
        <reimplementedby refid="classQgsSizeScaleTransformer_1a0abe2abcf59c1b9fc0d892ae91931642">loadVariant</reimplementedby>
        <reimplementedby refid="classQgsColorRampTransformer_1adb156276dd2a0b1997baef5c0862d173">loadVariant</reimplementedby>
        <param>
          <type>const QVariant &amp;</type>
          <declname>transformer</declname>
        </param>
        <briefdescription>
<para>Loads this transformer from a QVariantMap, wrapped in a QVariant. </para>        </briefdescription>
        <detaileddescription>
<para>You can use <ref refid="classQgsXmlUtils_1a78b54d8785573d3ad51566999d7a3884" kindref="member">QgsXmlUtils::readVariant</ref> to read it from an XML document.</para><para><simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1a858ad2ed90d65258f418d80222d86d7f" kindref="member">toVariant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="233" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.cpp" bodystart="67" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a881d3a07cd6ec4a928bbd7eb8707a4b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPropertyTransformer::maxValue</definition>
        <argsstring>() const</argsstring>
        <name>maxValue</name>
        <briefdescription>
<para>Returns the maximum value expected by the transformer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1af5bff33e7939502188e19a1faafdff43" kindref="member">minValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1ad4a27c4e089ffe9d61b8ced5377174ba" kindref="member">setMaxValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="263" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1af5bff33e7939502188e19a1faafdff43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPropertyTransformer::minValue</definition>
        <argsstring>() const</argsstring>
        <name>minValue</name>
        <briefdescription>
<para>Returns the minimum value expected by the transformer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1a881d3a07cd6ec4a928bbd7eb8707a4b1" kindref="member">maxValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1a5d4ab9137589ebcb8696fa90a62ed51d" kindref="member">setMinValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="248" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a7e06836d4bb1707fcb9141769627726a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPropertyTransformer" kindref="compound">QgsPropertyTransformer</ref> &amp;</type>
        <definition>QgsPropertyTransformer &amp; QgsPropertyTransformer::operator=</definition>
        <argsstring>(const QgsPropertyTransformer &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsPropertyTransformer" kindref="compound">QgsPropertyTransformer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="213" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.cpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1affc24552a03f59f7363b9a195cbb648d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPropertyTransformer::setCurveTransform</definition>
        <argsstring>(QgsCurveTransform *transform)</argsstring>
        <name>setCurveTransform</name>
        <param>
          <type><ref refid="classQgsCurveTransform" kindref="compound">QgsCurveTransform</ref> *</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Sets a curve transform to apply to input values before they are transformed by the individual transform subclasses. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of <emphasis>transform</emphasis> is transferred to the property transformer. <simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1a6b3fcde3a458221924c53f400e7a15a2" kindref="member">curveTransform()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="286" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1ad4a27c4e089ffe9d61b8ced5377174ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPropertyTransformer::setMaxValue</definition>
        <argsstring>(double max)</argsstring>
        <name>setMaxValue</name>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Sets the maximum value expected by the transformer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1a5d4ab9137589ebcb8696fa90a62ed51d" kindref="member">setMinValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1a881d3a07cd6ec4a928bbd7eb8707a4b1" kindref="member">maxValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="271" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a5d4ab9137589ebcb8696fa90a62ed51d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsPropertyTransformer::setMinValue</definition>
        <argsstring>(double min)</argsstring>
        <name>setMinValue</name>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <briefdescription>
<para>Sets the minimum value expected by the transformer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1ad4a27c4e089ffe9d61b8ced5377174ba" kindref="member">setMaxValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1af5bff33e7939502188e19a1faafdff43" kindref="member">minValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="256" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="256" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a7a7998cc077e98eb62648db57ddb6ecb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString QgsPropertyTransformer::toExpression</definition>
        <argsstring>(const QString &amp;baseExpression) const =0</argsstring>
        <name>toExpression</name>
        <reimplementedby refid="classQgsGenericNumericTransformer_1a406437fcba7a384ebf36c32bea81b8ef">toExpression</reimplementedby>
        <reimplementedby refid="classQgsSizeScaleTransformer_1aabdf88a7d632ccffded84194e273f506">toExpression</reimplementedby>
        <reimplementedby refid="classQgsColorRampTransformer_1a6471a022a5d370536c23461d79e489b4">toExpression</reimplementedby>
        <param>
          <type>const QString &amp;</type>
          <declname>baseExpression</declname>
        </param>
        <briefdescription>
<para>Converts the transformer to a QGIS expression string. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>baseExpression</emphasis> string consists of a sub-expression reflecting the parent property&apos;s state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a858ad2ed90d65258f418d80222d86d7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsPropertyTransformer::toVariant</definition>
        <argsstring>() const</argsstring>
        <name>toVariant</name>
        <reimplementedby refid="classQgsGenericNumericTransformer_1ae321a5050e00959f9a85bf065c5ad042">toVariant</reimplementedby>
        <reimplementedby refid="classQgsSizeScaleTransformer_1af7d358d665e8a38b76d45dac7780ab4b">toVariant</reimplementedby>
        <reimplementedby refid="classQgsColorRampTransformer_1a56dfa6291c8032ed21543325036d054f">toVariant</reimplementedby>
        <briefdescription>
<para>Saves this transformer to a QVariantMap, wrapped in a QVariant. </para>        </briefdescription>
        <detaileddescription>
<para>You can use <ref refid="classQgsXmlUtils_1a4192d177c2475a2825cc1ba9972d97b9" kindref="member">QgsXmlUtils::writeVariant</ref> to save it to an XML document.</para><para><simplesect kind="see"><para><ref refid="classQgsPropertyTransformer_1a2709068957db6461039191843cfff37f" kindref="member">loadVariant()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="241" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.cpp" bodystart="86" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1a1d9e8d731ef0ee2dfb88b62c3cc904f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QVariant</type>
        <definition>virtual QVariant QgsPropertyTransformer::transform</definition>
        <argsstring>(const QgsExpressionContext &amp;context, const QVariant &amp;value) const =0</argsstring>
        <name>transform</name>
        <reimplementedby refid="classQgsGenericNumericTransformer_1afc1621334d1891b0e5779d0f4b6174f7">transform</reimplementedby>
        <reimplementedby refid="classQgsSizeScaleTransformer_1a3d8138a10f8367ddd02324d39a98f2e8">transform</reimplementedby>
        <reimplementedby refid="classQgsColorRampTransformer_1a75a62735a772ba3eec829b6c8f99d019">transform</reimplementedby>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Calculates the transform of a value. </para>        </briefdescription>
        <detaileddescription>
<para>Derived classes must implement this to perform their transformations on input values <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>expression context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>input value to transform </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsPropertyTransformer_1ada78131a9cfb88051f77374b0aac7901" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classQgsPropertyTransformer_1aada495a695562f6e589c13d0d1edf310" kindref="member">Type</ref></type>
        <definition>virtual Type QgsPropertyTransformer::transformerType</definition>
        <argsstring>() const =0</argsstring>
        <name>transformerType</name>
        <reimplementedby refid="classQgsGenericNumericTransformer_1a74196dd360a9989954ba8d2f32ebd34c">transformerType</reimplementedby>
        <reimplementedby refid="classQgsSizeScaleTransformer_1a26ef9265e27b015d46dfc2438baf36ea">transformerType</reimplementedby>
        <reimplementedby refid="classQgsColorRampTransformer_1afc966d4793d2a984496816af15fa3d24">transformerType</reimplementedby>
        <briefdescription>
<para>Returns the transformer type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="220" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsPropertyTransformer_1abaf53d2cf91b34d8e09cd8b3db110566" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsPropertyTransformer::transformNumeric</definition>
        <argsstring>(double input) const</argsstring>
        <name>transformNumeric</name>
        <param>
          <type>double</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Applies base class numeric transformations. </para>        </briefdescription>
        <detaileddescription>
<para>Derived classes should call this to transform an <emphasis>input</emphasis> numeric value before they apply any transform to the result. This applies any curve transforms which may exist on the transformer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="323" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.cpp" bodystart="111" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract base class for objects which transform the calculated value of a property. </para>    </briefdescription>
    <detaileddescription>
<para>Possible uses include transformers which map a value into a scaled size or color from a gradient. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7330">
        <label>QgsSizeScaleTransformer</label>
        <link refid="classQgsSizeScaleTransformer"/>
        <childnode refid="7327" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7329">
        <label>QgsGenericNumericTransformer</label>
        <link refid="classQgsGenericNumericTransformer"/>
        <childnode refid="7327" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7327">
        <label>QgsPropertyTransformer</label>
        <link refid="classQgsPropertyTransformer"/>
      </node>
      <node id="7328">
        <label>QgsColorRampTransformer</label>
        <link refid="classQgsColorRampTransformer"/>
        <childnode refid="7327" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" line="171" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgspropertytransformer.h" bodystart="170" bodyend="334"/>
    <listofallmembers>
      <member refid="classQgsPropertyTransformer_1a7c310c812c4758f0c89a3e49c54a1139" prot="public" virt="pure-virtual"><scope>QgsPropertyTransformer</scope><name>clone</name></member>
      <member refid="classQgsPropertyTransformer_1aada495a695562f6e589c13d0d1edf310aebeb5603de57ad269ba90093987aa0c7" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>ColorRampTransformer</name></member>
      <member refid="classQgsPropertyTransformer_1ac253bd75b4c070017f7dd8cc0e572e23" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>create</name></member>
      <member refid="classQgsPropertyTransformer_1a6b3fcde3a458221924c53f400e7a15a2" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>curveTransform</name></member>
      <member refid="classQgsPropertyTransformer_1a1037c42a804a059485f3cbc3732894dd" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>fromExpression</name></member>
      <member refid="classQgsPropertyTransformer_1aada495a695562f6e589c13d0d1edf310a2a8d872d5b0c657a61f038aeaff44562" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>GenericNumericTransformer</name></member>
      <member refid="classQgsPropertyTransformer_1a2709068957db6461039191843cfff37f" prot="public" virt="virtual"><scope>QgsPropertyTransformer</scope><name>loadVariant</name></member>
      <member refid="classQgsPropertyTransformer_1a881d3a07cd6ec4a928bbd7eb8707a4b1" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>maxValue</name></member>
      <member refid="classQgsPropertyTransformer_1a919ce7ce9126d8b5de4a00fee82fa9ba" prot="protected" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>mCurveTransform</name></member>
      <member refid="classQgsPropertyTransformer_1af5bff33e7939502188e19a1faafdff43" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>minValue</name></member>
      <member refid="classQgsPropertyTransformer_1af7a3b8ef82e47c5ba41b2d24903f2c01" prot="protected" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>mMaxValue</name></member>
      <member refid="classQgsPropertyTransformer_1a880a71826886dbffcfc81d3eee856562" prot="protected" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>mMinValue</name></member>
      <member refid="classQgsPropertyTransformer_1a7e06836d4bb1707fcb9141769627726a" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>operator=</name></member>
      <member refid="classQgsPropertyTransformer_1aa864fffdaf8f9a8c6af55de7f669ac3e" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>QgsPropertyTransformer</name></member>
      <member refid="classQgsPropertyTransformer_1a408dc02b31ce7c6355b5fcecfc21d727" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>QgsPropertyTransformer</name></member>
      <member refid="classQgsPropertyTransformer_1affc24552a03f59f7363b9a195cbb648d" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>setCurveTransform</name></member>
      <member refid="classQgsPropertyTransformer_1ad4a27c4e089ffe9d61b8ced5377174ba" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>setMaxValue</name></member>
      <member refid="classQgsPropertyTransformer_1a5d4ab9137589ebcb8696fa90a62ed51d" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>setMinValue</name></member>
      <member refid="classQgsPropertyTransformer_1aada495a695562f6e589c13d0d1edf310a2c95554b369c6d856ae3a17f842413d8" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>SizeScaleTransformer</name></member>
      <member refid="classQgsPropertyTransformer_1a7a7998cc077e98eb62648db57ddb6ecb" prot="public" virt="pure-virtual"><scope>QgsPropertyTransformer</scope><name>toExpression</name></member>
      <member refid="classQgsPropertyTransformer_1a858ad2ed90d65258f418d80222d86d7f" prot="public" virt="virtual"><scope>QgsPropertyTransformer</scope><name>toVariant</name></member>
      <member refid="classQgsPropertyTransformer_1a1d9e8d731ef0ee2dfb88b62c3cc904f1" prot="public" virt="pure-virtual"><scope>QgsPropertyTransformer</scope><name>transform</name></member>
      <member refid="classQgsPropertyTransformer_1ada78131a9cfb88051f77374b0aac7901" prot="public" virt="pure-virtual"><scope>QgsPropertyTransformer</scope><name>transformerType</name></member>
      <member refid="classQgsPropertyTransformer_1abaf53d2cf91b34d8e09cd8b3db110566" prot="protected" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>transformNumeric</name></member>
      <member refid="classQgsPropertyTransformer_1aada495a695562f6e589c13d0d1edf310" prot="public" virt="non-virtual"><scope>QgsPropertyTransformer</scope><name>Type</name></member>
      <member refid="classQgsPropertyTransformer_1a16ca0400f2743b27fa7c29cfea839e05" prot="public" virt="virtual"><scope>QgsPropertyTransformer</scope><name>~QgsPropertyTransformer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
