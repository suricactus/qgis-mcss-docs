<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsExpressionContextScope" kind="class" language="C++" prot="public">
    <compoundname>QgsExpressionContextScope</compoundname>
    <includes refid="qgsexpressioncontext_8h" local="no">qgsexpressioncontext.h</includes>
    <innerclass refid="structQgsExpressionContextScope_1_1StaticVariable" prot="public">QgsExpressionContextScope::StaticVariable</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsExpressionContextScope_1a05badc21e79b301c14ffbaf0296f7bd3" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsFeature" kindref="compound">QgsFeature</ref></type>
        <definition>QgsFeature QgsExpressionContextScope::mFeature</definition>
        <argsstring></argsstring>
        <name>mFeature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="357" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContextScope_1a01d4bd173354ebc338c087f386a6119e" prot="private" static="no" mutable="no">
        <type>QHash&lt; QString, <ref refid="classQgsScopedExpressionFunction" kindref="compound">QgsScopedExpressionFunction</ref> *&gt;</type>
        <definition>QHash&lt;QString, QgsScopedExpressionFunction * &gt; QgsExpressionContextScope::mFunctions</definition>
        <argsstring></argsstring>
        <name>mFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="355" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContextScope_1ab08111a680a03b0b4b06114913f2cfdd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsExpressionContextScope::mHasFeature</definition>
        <argsstring></argsstring>
        <name>mHasFeature</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="356" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContextScope_1a4f3ec150ab9a5c77ce11c1f94567e4ac" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsExpressionContextScope::mName</definition>
        <argsstring></argsstring>
        <name>mName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="353" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpressionContextScope_1ad46b31f65c83696d47f615a9574b38ff" prot="private" static="no" mutable="no">
        <type>QHash&lt; QString, <ref refid="structQgsExpressionContextScope_1_1StaticVariable" kindref="compound">StaticVariable</ref> &gt;</type>
        <definition>QHash&lt;QString, StaticVariable&gt; QgsExpressionContextScope::mVariables</definition>
        <argsstring></argsstring>
        <name>mVariables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="354" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsExpressionContextScope_1ad6007da7679dc3b67e5b979b39566655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionContextScope::QgsExpressionContextScope</definition>
        <argsstring>(const QString &amp;name=QString())</argsstring>
        <name>QgsExpressionContextScope</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>friendly display name for the context scope </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="175" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a8405a61c9c74f606758dfdf6db1a43e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionContextScope::QgsExpressionContextScope</definition>
        <argsstring>(const QgsExpressionContextScope &amp;other)</argsstring>
        <name>QgsExpressionContextScope</name>
        <param>
          <type>const <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="180" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="63" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1af73d64fbafe3854f8fe3661022711583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpressionContextScope::~QgsExpressionContextScope</definition>
        <argsstring>()</argsstring>
        <name>~QgsExpressionContextScope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="184" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a905a0794fd61464f5c4a126d69c61e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContextScope::addFunction</definition>
        <argsstring>(const QString &amp;name, QgsScopedExpressionFunction *function)</argsstring>
        <name>addFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classQgsScopedExpressionFunction" kindref="compound">QgsScopedExpressionFunction</ref> *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Adds a function to the scope. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>function name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to insert. Ownership is transferred to the scope. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1aac12f83e5634bf46709fd82c3791e3dd" kindref="member">addVariable()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="311" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1aac12f83e5634bf46709fd82c3791e3dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContextScope::addVariable</definition>
        <argsstring>(const QgsExpressionContextScope::StaticVariable &amp;variable)</argsstring>
        <name>addVariable</name>
        <param>
          <type>const <ref refid="structQgsExpressionContextScope_1_1StaticVariable" kindref="compound">QgsExpressionContextScope::StaticVariable</ref> &amp;</type>
          <declname>variable</declname>
        </param>
        <briefdescription>
<para>Adds a variable into the context scope. </para>        </briefdescription>
        <detaileddescription>
<para>If a variable with the same name is already set then its value is overwritten, otherwise a new variable is added to the scope. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variable</parametername>
</parameternamelist>
<parameterdescription>
<para>definition of variable to insert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1ad3945798feafefa137e9d2a4f029f504" kindref="member">setVariable()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a905a0794fd61464f5c4a126d69c61e21" kindref="member">addFunction()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="207" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a20172dc1c42ca6fbdc55229707c933de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpressionContextScope::description</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>description</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the translated description for the variable with the specified <emphasis>name</emphasis> (if set). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="272" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1ac99e0f99a8f9bc9f935428305bba9a93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsFeature" kindref="compound">QgsFeature</ref></type>
        <definition>QgsFeature QgsExpressionContextScope::feature</definition>
        <argsstring>() const</argsstring>
        <name>feature</name>
        <briefdescription>
<para>Sets the feature associated with the scope. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a847b0556706686d28f6e922391e936e5" kindref="member">setFeature()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a905d6470a3a84fc1fd1c8a706b5db118" kindref="member">hasFeature()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="326" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="326" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1abfe4e7c94e08a8a5fbf6287cd02bf547" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionContextScope::filteredVariableNames</definition>
        <argsstring>() const</argsstring>
        <name>filteredVariableNames</name>
        <briefdescription>
<para>Returns a filtered and sorted list of variable names contained within the scope. </para>        </briefdescription>
        <detaileddescription>
<para>Hidden variable names will be excluded, and the list will be sorted so that read only variables are listed first. <simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1af79f7dbeadc037cb98a4bab165449dd4" kindref="member">variableNames()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="248" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="167" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a71e8419d0d7162eeb0ab179cb56b92dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpressionFunction" kindref="compound">QgsExpressionFunction</ref> *</type>
        <definition>QgsExpressionFunction * QgsExpressionContextScope::function</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>function</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieves a function from the scope. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>function name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>function, or null if matching function could not be found </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a9ec485950cab154b786e98f2310d298d" kindref="member">hasFunction()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1ad1dd32e332c407d5b15637a56741953d" kindref="member">functionNames()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a72554b20e59c5aeb0f3245bf308a7f29" kindref="member">variable()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="296" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1ad1dd32e332c407d5b15637a56741953d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionContextScope::functionNames</definition>
        <argsstring>() const</argsstring>
        <name>functionNames</name>
        <briefdescription>
<para>Retrieves a list of names of functions contained in the scope. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a71e8419d0d7162eeb0ab179cb56b92dc" kindref="member">function()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1af79f7dbeadc037cb98a4bab165449dd4" kindref="member">variableNames()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="303" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a905d6470a3a84fc1fd1c8a706b5db118" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContextScope::hasFeature</definition>
        <argsstring>() const</argsstring>
        <name>hasFeature</name>
        <briefdescription>
<para>Returns true if the scope has a feature associated with it. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1ac99e0f99a8f9bc9f935428305bba9a93" kindref="member">feature()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="318" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a9ec485950cab154b786e98f2310d298d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContextScope::hasFunction</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>hasFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Tests whether a function with the specified name exists in the scope. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>function name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if matching function was found in the scope </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a71e8419d0d7162eeb0ab179cb56b92dc" kindref="member">function()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a9ec485950cab154b786e98f2310d298d" kindref="member">hasFunction()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="286" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a18a077e76b13a235bf3e0e73cb45da73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContextScope::hasVariable</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>hasVariable</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Tests whether a variable with the specified name exists in the scope. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>variable name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if matching variable was found in the scope </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a72554b20e59c5aeb0f3245bf308a7f29" kindref="member">variable()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a9ec485950cab154b786e98f2310d298d" kindref="member">hasFunction()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="224" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a8a83d6fd5908ddfe60bf5155dfe54595" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContextScope::isReadOnly</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>isReadOnly</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Tests whether the specified variable is read only and should not be editable by users. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>variable name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if variable is read only </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="256" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1ab6c05eb19a117dcddcdedbaab65bda79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContextScope::isStatic</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>isStatic</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Tests whether the variable with the specified <emphasis>name</emphasis> is static and can be cached. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="264" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1aaa03878425629f11b709631eb63cc75c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpressionContextScope::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
<para>Returns the friendly display name of the context scope. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="189" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1ad5638bcf59e4998f7adb057802237766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> &amp;</type>
        <definition>QgsExpressionContextScope &amp; QgsExpressionContextScope::operator=</definition>
        <argsstring>(const QgsExpressionContextScope &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="182" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="76" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a639bedc501ea7d5cd68e2a46806db306" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContextScope::removeFeature</definition>
        <argsstring>()</argsstring>
        <name>removeFeature</name>
        <briefdescription>
<para>Removes any feature associated with the scope. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a847b0556706686d28f6e922391e936e5" kindref="member">setFeature()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a905d6470a3a84fc1fd1c8a706b5db118" kindref="member">hasFeature()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="343" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="343" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a7a8f163527f722946d7252d1e626b852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContextScope::removeVariable</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>removeVariable</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Removes a variable from the context scope, if found. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of variable to remove </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if variable was removed from the scope, false if matching variable was not found within the scope </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="215" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a847b0556706686d28f6e922391e936e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContextScope::setFeature</definition>
        <argsstring>(const QgsFeature &amp;feature)</argsstring>
        <name>setFeature</name>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Convenience function for setting a feature for the scope. </para>        </briefdescription>
        <detaileddescription>
<para>Any existing feature set by the scope will be overwritten. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feature</parametername>
</parameternamelist>
<parameterdescription>
<para>feature for scope </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a639bedc501ea7d5cd68e2a46806db306" kindref="member">removeFeature()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1ac99e0f99a8f9bc9f935428305bba9a93" kindref="member">feature()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="335" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="335" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a191fb8dcb07a4f6105b349067b6956eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContextScope::setFields</definition>
        <argsstring>(const QgsFields &amp;fields)</argsstring>
        <name>setFields</name>
        <param>
          <type>const <ref refid="classQgsFields" kindref="compound">QgsFields</ref> &amp;</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
<para>Convenience function for setting a fields for the scope. </para>        </briefdescription>
        <detaileddescription>
<para>Any existing fields set by the scope will be overwritten. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fields</parametername>
</parameternamelist>
<parameterdescription>
<para>fields for scope </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="350" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1ad3945798feafefa137e9d2a4f029f504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpressionContextScope::setVariable</definition>
        <argsstring>(const QString &amp;name, const QVariant &amp;value, bool isStatic=false)</argsstring>
        <name>setVariable</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Convenience method for setting a variable in the context scope by <emphasis>name</emphasis> name and <emphasis>value</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>If a variable with the same name is already set then its value is overwritten, otherwise a new variable is added to the scope. If the <emphasis>isStatic</emphasis> parameter is set to true, this variable can be cached during the execution of <ref refid="classQgsExpression_1a0285763c2bc4a7202878e7723b9c5ce2" kindref="member">QgsExpression::prepare()</ref>. <simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1aac12f83e5634bf46709fd82c3791e3dd" kindref="member">addVariable()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="198" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="99" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1a72554b20e59c5aeb0f3245bf308a7f29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsExpressionContextScope::variable</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>variable</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieves a variable&apos;s value from the scope. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>variable name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>variable value, or invalid QVariant if matching variable could not be found </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a18a077e76b13a235bf3e0e73cb45da73" kindref="member">hasVariable()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1a71e8419d0d7162eeb0ab179cb56b92dc" kindref="member">function()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="233" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1ab8d4890476af36b730ce91a84dda8801" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int QgsExpressionContextScope::variableCount</definition>
        <argsstring>() const</argsstring>
        <name>variableCount</name>
        <briefdescription>
<para>Returns the count of variables contained within the scope. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="277" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpressionContextScope_1af79f7dbeadc037cb98a4bab165449dd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsExpressionContextScope::variableNames</definition>
        <argsstring>() const</argsstring>
        <name>variableNames</name>
        <briefdescription>
<para>Returns a list of variable names contained within the scope. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1ad1dd32e332c407d5b15637a56741953d" kindref="member">functionNames()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpressionContextScope_1abfe4e7c94e08a8a5fbf6287cd02bf547" kindref="member">filteredVariableNames()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="240" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="134" bodyend="138"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsExpressionContextScope_1a7522515b519adba626adfcef0e5bc09e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpressionContextScope::variableNameSort</definition>
        <argsstring>(const QString &amp;a, const QString &amp;b)</argsstring>
        <name>variableNameSort</name>
        <param>
          <type>const QString &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="359" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Single scope for storing variables and functions for use within a <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>Examples include a project&apos;s scope, which could contain information about the current project such as the project file&apos;s location. <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> can encapsulate both variables (static values) and functions(which are calculated only when an expression is evaluated).</para><para>See <ref refid="classQgsExpressionContextUtils" kindref="compound">QgsExpressionContextUtils</ref> for helper methods for working with <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref> objects.</para><para><simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="130" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="129" bodyend="360"/>
    <listofallmembers>
      <member refid="classQgsExpressionContextScope_1a905a0794fd61464f5c4a126d69c61e21" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>addFunction</name></member>
      <member refid="classQgsExpressionContextScope_1aac12f83e5634bf46709fd82c3791e3dd" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>addVariable</name></member>
      <member refid="classQgsExpressionContextScope_1a20172dc1c42ca6fbdc55229707c933de" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>description</name></member>
      <member refid="classQgsExpressionContextScope_1ac99e0f99a8f9bc9f935428305bba9a93" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>feature</name></member>
      <member refid="classQgsExpressionContextScope_1abfe4e7c94e08a8a5fbf6287cd02bf547" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>filteredVariableNames</name></member>
      <member refid="classQgsExpressionContextScope_1a71e8419d0d7162eeb0ab179cb56b92dc" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>function</name></member>
      <member refid="classQgsExpressionContextScope_1ad1dd32e332c407d5b15637a56741953d" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>functionNames</name></member>
      <member refid="classQgsExpressionContextScope_1a905d6470a3a84fc1fd1c8a706b5db118" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>hasFeature</name></member>
      <member refid="classQgsExpressionContextScope_1a9ec485950cab154b786e98f2310d298d" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>hasFunction</name></member>
      <member refid="classQgsExpressionContextScope_1a18a077e76b13a235bf3e0e73cb45da73" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>hasVariable</name></member>
      <member refid="classQgsExpressionContextScope_1a8a83d6fd5908ddfe60bf5155dfe54595" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>isReadOnly</name></member>
      <member refid="classQgsExpressionContextScope_1ab6c05eb19a117dcddcdedbaab65bda79" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>isStatic</name></member>
      <member refid="classQgsExpressionContextScope_1a05badc21e79b301c14ffbaf0296f7bd3" prot="private" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>mFeature</name></member>
      <member refid="classQgsExpressionContextScope_1a01d4bd173354ebc338c087f386a6119e" prot="private" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>mFunctions</name></member>
      <member refid="classQgsExpressionContextScope_1ab08111a680a03b0b4b06114913f2cfdd" prot="private" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>mHasFeature</name></member>
      <member refid="classQgsExpressionContextScope_1a4f3ec150ab9a5c77ce11c1f94567e4ac" prot="private" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>mName</name></member>
      <member refid="classQgsExpressionContextScope_1ad46b31f65c83696d47f615a9574b38ff" prot="private" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>mVariables</name></member>
      <member refid="classQgsExpressionContextScope_1aaa03878425629f11b709631eb63cc75c" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>name</name></member>
      <member refid="classQgsExpressionContextScope_1ad5638bcf59e4998f7adb057802237766" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>operator=</name></member>
      <member refid="classQgsExpressionContextScope_1ad6007da7679dc3b67e5b979b39566655" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>QgsExpressionContextScope</name></member>
      <member refid="classQgsExpressionContextScope_1a8405a61c9c74f606758dfdf6db1a43e8" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>QgsExpressionContextScope</name></member>
      <member refid="classQgsExpressionContextScope_1a639bedc501ea7d5cd68e2a46806db306" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>removeFeature</name></member>
      <member refid="classQgsExpressionContextScope_1a7a8f163527f722946d7252d1e626b852" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>removeVariable</name></member>
      <member refid="classQgsExpressionContextScope_1a847b0556706686d28f6e922391e936e5" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>setFeature</name></member>
      <member refid="classQgsExpressionContextScope_1a191fb8dcb07a4f6105b349067b6956eb" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>setFields</name></member>
      <member refid="classQgsExpressionContextScope_1ad3945798feafefa137e9d2a4f029f504" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>setVariable</name></member>
      <member refid="classQgsExpressionContextScope_1a72554b20e59c5aeb0f3245bf308a7f29" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>variable</name></member>
      <member refid="classQgsExpressionContextScope_1ab8d4890476af36b730ce91a84dda8801" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>variableCount</name></member>
      <member refid="classQgsExpressionContextScope_1af79f7dbeadc037cb98a4bab165449dd4" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>variableNames</name></member>
      <member refid="classQgsExpressionContextScope_1a7522515b519adba626adfcef0e5bc09e" prot="private" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>variableNameSort</name></member>
      <member refid="classQgsExpressionContextScope_1af73d64fbafe3854f8fe3661022711583" prot="public" virt="non-virtual"><scope>QgsExpressionContextScope</scope><name>~QgsExpressionContextScope</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
