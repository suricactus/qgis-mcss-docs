<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsConnectionPool" kind="class" language="C++" prot="public">
    <compoundname>QgsConnectionPool</compoundname>
    <includes refid="qgsconnectionpool_8h" local="no">qgsconnectionpool.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename T_Group</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classQgsConnectionPool_1a2991d90b8e39445c2178dc54f50facb8" prot="public" static="no">
        <type>QMap&lt; QString, T_Group * &gt;</type>
        <definition>typedef QMap&lt;QString, T_Group *&gt; QgsConnectionPool&lt; T, T_Group &gt;::T_Groups</definition>
        <argsstring></argsstring>
        <name>T_Groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" line="270" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQgsConnectionPool_1aa2fbf9b0ef5d4c5875e7db9fd4fc74b1" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsConnectionPool_1a2991d90b8e39445c2178dc54f50facb8" kindref="member">T_Groups</ref></type>
        <definition>T_Groups QgsConnectionPool&lt; T, T_Group &gt;::mGroups</definition>
        <argsstring></argsstring>
        <name>mGroups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" line="335" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsConnectionPool_1ac7f295bf5772bac0650e469c4c992c63" prot="protected" static="no" mutable="no">
        <type>QMutex</type>
        <definition>QMutex QgsConnectionPool&lt; T, T_Group &gt;::mMutex</definition>
        <argsstring></argsstring>
        <name>mMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" line="336" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsConnectionPool_1a5e547b65ef83cc470a661bbb4abd6e6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual QgsConnectionPool&lt; T, T_Group &gt;::~QgsConnectionPool</definition>
        <argsstring>()</argsstring>
        <name>~QgsConnectionPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" line="272" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" bodystart="272" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConnectionPool_1a01cb175f45f107f4e7fa6fa7f64c3807" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T QgsConnectionPool&lt; T, T_Group &gt;::acquireConnection</definition>
        <argsstring>(const QString &amp;connInfo, int timeout=-1, bool requestMayBeNested=false)</argsstring>
        <name>acquireConnection</name>
        <param>
          <type>const QString &amp;</type>
          <declname>connInfo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>requestMayBeNested</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Try to acquire a connection for a maximum of <emphasis>timeout</emphasis> milliseconds. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>timeout</emphasis> is a negative value the calling thread will be blocked until a connection becomes available. This is the default behavior.</para><para><simplesect kind="return"><para>initialized connection or nullptr if unsuccessful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" line="292" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" bodystart="292" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConnectionPool_1a2ba5d0888019722168b95d1cde6d4fb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsConnectionPool&lt; T, T_Group &gt;::invalidateConnections</definition>
        <argsstring>(const QString &amp;connInfo)</argsstring>
        <name>invalidateConnections</name>
        <param>
          <type>const QString &amp;</type>
          <declname>connInfo</declname>
        </param>
        <briefdescription>
<para>Invalidates all connections to the specified resource. </para>        </briefdescription>
        <detaileddescription>
<para>The internal state of certain handles (for instance OGR) are altered when a dataset is modified. Consquently, all open handles need to be invalidated when such datasets are changed to ensure the handles are refreshed. See the OGR provider for an example where this is needed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" line="325" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" bodystart="325" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConnectionPool_1aae054f2f92160e81f3b8c9182ba75511" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsConnectionPool&lt; T, T_Group &gt;::releaseConnection</definition>
        <argsstring>(T conn)</argsstring>
        <name>releaseConnection</name>
        <param>
          <type>T</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Release an existing connection so it will get back into the pool and can be reused. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" line="307" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" bodystart="307" bodyend="316"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Template class responsible for keeping a pool of open connections. </para>    </briefdescription>
    <detaileddescription>
<para>This is desired to avoid the overhead of creation of new connection every time.</para><para>The methods are thread safe.</para><para>The connection pool has a limit on maximum number of concurrent connections (per server), once the limit is reached, the <ref refid="classQgsConnectionPool_1a01cb175f45f107f4e7fa6fa7f64c3807" kindref="member">acquireConnection()</ref> function will block. All connections that have been acquired must be then released with <ref refid="classQgsConnectionPool_1aae054f2f92160e81f3b8c9182ba75511" kindref="member">releaseConnection()</ref> function.</para><para>When the connections are not used for some time, they will get closed automatically to save resources. <simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" line="267" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconnectionpool.h" bodystart="266" bodyend="337"/>
    <listofallmembers>
      <member refid="classQgsConnectionPool_1a01cb175f45f107f4e7fa6fa7f64c3807" prot="public" virt="non-virtual"><scope>QgsConnectionPool</scope><name>acquireConnection</name></member>
      <member refid="classQgsConnectionPool_1a2ba5d0888019722168b95d1cde6d4fb3" prot="public" virt="non-virtual"><scope>QgsConnectionPool</scope><name>invalidateConnections</name></member>
      <member refid="classQgsConnectionPool_1aa2fbf9b0ef5d4c5875e7db9fd4fc74b1" prot="protected" virt="non-virtual"><scope>QgsConnectionPool</scope><name>mGroups</name></member>
      <member refid="classQgsConnectionPool_1ac7f295bf5772bac0650e469c4c992c63" prot="protected" virt="non-virtual"><scope>QgsConnectionPool</scope><name>mMutex</name></member>
      <member refid="classQgsConnectionPool_1aae054f2f92160e81f3b8c9182ba75511" prot="public" virt="non-virtual"><scope>QgsConnectionPool</scope><name>releaseConnection</name></member>
      <member refid="classQgsConnectionPool_1a2991d90b8e39445c2178dc54f50facb8" prot="public" virt="non-virtual"><scope>QgsConnectionPool</scope><name>T_Groups</name></member>
      <member refid="classQgsConnectionPool_1a5e547b65ef83cc470a661bbb4abd6e6d" prot="public" virt="virtual"><scope>QgsConnectionPool</scope><name>~QgsConnectionPool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
