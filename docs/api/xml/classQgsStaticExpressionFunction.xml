<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsStaticExpressionFunction" kind="class" language="C++" prot="public">
    <compoundname>QgsStaticExpressionFunction</compoundname>
    <basecompoundref refid="classQgsExpressionFunction" prot="public" virt="non-virtual">QgsExpressionFunction</basecompoundref>
    <includes refid="qgsexpressionfunction_8h" local="no">qgsexpressionfunction.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsStaticExpressionFunction_1a187d52547a6b6dd855edc59d48ce9a08" prot="private" static="no" mutable="no">
        <type>QStringList</type>
        <definition>QStringList QgsStaticExpressionFunction::mAliases</definition>
        <argsstring></argsstring>
        <name>mAliases</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="493" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsStaticExpressionFunction_1a2201ce37911368492f2ad5c32d128886" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsExpressionFunction_1af8f1aaa201835de29f9e58d0ae726af2" kindref="member">FcnEval</ref></type>
        <definition>FcnEval QgsStaticExpressionFunction::mFnc</definition>
        <argsstring></argsstring>
        <name>mFnc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="492" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsStaticExpressionFunction_1a5344c646e6778ff26858fa4572ede357" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsStaticExpressionFunction::mIsStatic</definition>
        <argsstring></argsstring>
        <name>mIsStatic</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="500" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsStaticExpressionFunction_1a01a53223468b3938dee9aa1bea4477a4" prot="private" static="no" mutable="no">
        <type>std::function&lt; bool(const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *node, <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *parent, const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *context) &gt;</type>
        <definition>std::function&lt; bool( const QgsExpressionNodeFunction *node, QgsExpression *parent, const QgsExpressionContext *context ) &gt; QgsStaticExpressionFunction::mIsStaticFunc</definition>
        <argsstring></argsstring>
        <name>mIsStaticFunc</name>
        <initializer>= <ref refid="classQgsExpressionFunction_1a4b513026b2f50b370d62210acc38dbd9" kindref="member">allParamsStatic</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="497" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsStaticExpressionFunction_1ab2a49b6cceb0b681de174f5d59c01417" prot="private" static="no" mutable="no">
        <type>std::function&lt; bool(const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *node, <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *parent, const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *context) &gt;</type>
        <definition>std::function&lt; bool( const QgsExpressionNodeFunction *node, QgsExpression *parent, const QgsExpressionContext *context ) &gt; QgsStaticExpressionFunction::mPrepareFunc</definition>
        <argsstring></argsstring>
        <name>mPrepareFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="498" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsStaticExpressionFunction_1a50cec057d459ea6cbc16657f19a3b263" prot="private" static="no" mutable="no">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt;QString&gt; QgsStaticExpressionFunction::mReferencedColumns</definition>
        <argsstring></argsstring>
        <name>mReferencedColumns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="499" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsStaticExpressionFunction_1a733ab3014657e782ce238de71d7a500a" prot="private" static="no" mutable="no">
        <type>std::function&lt; QSet&lt; QString &gt; const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *node) &gt;</type>
        <definition>std::function&lt; QSet&lt;QString&gt; const QgsExpressionNodeFunction *node ) &gt; QgsStaticExpressionFunction::mReferencedColumnsFunc</definition>
        <argsstring></argsstring>
        <name>mReferencedColumnsFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="496" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsStaticExpressionFunction_1a0cd384920120e2b66109ff4235c6e230" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsStaticExpressionFunction::mUsesGeometry</definition>
        <argsstring></argsstring>
        <name>mUsesGeometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="494" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsStaticExpressionFunction_1a52bda69b679d0e3407bf3ba37f090dc0" prot="private" static="no" mutable="no">
        <type>std::function&lt; bool(const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *node) &gt;</type>
        <definition>std::function&lt; bool( const QgsExpressionNodeFunction *node ) &gt; QgsStaticExpressionFunction::mUsesGeometryFunc</definition>
        <argsstring></argsstring>
        <name>mUsesGeometryFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="495" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1ae9a2bf993e06614f60fa0c2b5146226a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsStaticExpressionFunction::QgsStaticExpressionFunction</definition>
        <argsstring>(const QString &amp;fnname, int params, FcnEval fcn, const QString &amp;group, const QString &amp;helpText=QString(), bool usesGeometry=false, const QSet&lt; QString &gt; &amp;referencedColumns=QSet&lt; QString &gt;(), bool lazyEval=false, const QStringList &amp;aliases=QStringList(), bool handlesNull=false)</argsstring>
        <name>QgsStaticExpressionFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fnname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpressionFunction_1af8f1aaa201835de29f9e58d0ae726af2" kindref="member">FcnEval</ref></type>
          <declname>fcn</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>helpText</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>usesGeometry</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const QSet&lt; QString &gt; &amp;</type>
          <declname>referencedColumns</declname>
          <defval>QSet&lt; QString &gt;()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lazyEval</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const QStringList &amp;</type>
          <declname>aliases</declname>
          <defval>QStringList()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>handlesNull</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Static function for evaluation against a <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>, using an unnamed list of parameter values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="356" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="356" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1a6e5bf0292af4e5d550f81aa0c92d9893" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsStaticExpressionFunction::QgsStaticExpressionFunction</definition>
        <argsstring>(const QString &amp;fnname, const QgsExpressionFunction::ParameterList &amp;params, FcnEval fcn, const QString &amp;group, const QString &amp;helpText=QString(), bool usesGeometry=false, const QSet&lt; QString &gt; &amp;referencedColumns=QSet&lt; QString &gt;(), bool lazyEval=false, const QStringList &amp;aliases=QStringList(), bool handlesNull=false)</argsstring>
        <name>QgsStaticExpressionFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fnname</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" kindref="member">QgsExpressionFunction::ParameterList</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpressionFunction_1af8f1aaa201835de29f9e58d0ae726af2" kindref="member">FcnEval</ref></type>
          <declname>fcn</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>helpText</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>usesGeometry</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const QSet&lt; QString &gt; &amp;</type>
          <declname>referencedColumns</declname>
          <defval>QSet&lt; QString &gt;()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lazyEval</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const QStringList &amp;</type>
          <declname>aliases</declname>
          <defval>QStringList()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>handlesNull</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Static function for evaluation against a <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>, using a named list of parameter values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="377" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="377" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1aab64da77e28e78104e7eb7f51d1498c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsStaticExpressionFunction::QgsStaticExpressionFunction</definition>
        <argsstring>(const QString &amp;fnname, const QgsExpressionFunction::ParameterList &amp;params, FcnEval fcn, const QString &amp;group, const QString &amp;helpText, const std::function&lt; bool(const QgsExpressionNodeFunction *node)&gt; &amp;usesGeometry, const std::function&lt; QSet&lt; QString &gt;(const QgsExpressionNodeFunction *node)&gt; &amp;referencedColumns, bool lazyEval=false, const QStringList &amp;aliases=QStringList(), bool handlesNull=false)</argsstring>
        <name>QgsStaticExpressionFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fnname</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" kindref="member">QgsExpressionFunction::ParameterList</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpressionFunction_1af8f1aaa201835de29f9e58d0ae726af2" kindref="member">FcnEval</ref></type>
          <declname>fcn</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>helpText</declname>
        </param>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *node)&gt; &amp;</type>
          <declname>usesGeometry</declname>
        </param>
        <param>
          <type>const std::function&lt; QSet&lt; QString &gt;(const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *node)&gt; &amp;</type>
          <declname>referencedColumns</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lazyEval</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const QStringList &amp;</type>
          <declname>aliases</declname>
          <defval>QStringList()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>handlesNull</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Static function for evaluation against a <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>, using a named list of parameter values. </para>        </briefdescription>
        <detaileddescription>
<para>Lambda functions can be provided that will be called to determine if a geometry is used an which columns are referenced. This is only required if this cannot be determined by calling each parameter node&apos;s <ref refid="classQgsStaticExpressionFunction_1af79223f2108220ac48dcc62064adb13f" kindref="member">usesGeometry()</ref> or <ref refid="classQgsStaticExpressionFunction_1aedb887972621fc8c10b86c97ad561e8c" kindref="member">referencedColumns()</ref> method. For example, an aggregate expression requires the geometry and all columns if the parent variable is used. If a nullptr is passed as a node to these functions, they should stay on the safe side and return if they could potentially require a geometry or columns. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="405" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1a288bf587bd4f95aeed4a3931110337c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsStaticExpressionFunction::QgsStaticExpressionFunction</definition>
        <argsstring>(const QString &amp;fnname, const QgsExpressionFunction::ParameterList &amp;params, FcnEval fcn, const QStringList &amp;groups, const QString &amp;helpText=QString(), bool usesGeometry=false, const QSet&lt; QString &gt; &amp;referencedColumns=QSet&lt; QString &gt;(), bool lazyEval=false, const QStringList &amp;aliases=QStringList(), bool handlesNull=false)</argsstring>
        <name>QgsStaticExpressionFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fnname</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" kindref="member">QgsExpressionFunction::ParameterList</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpressionFunction_1af8f1aaa201835de29f9e58d0ae726af2" kindref="member">FcnEval</ref></type>
          <declname>fcn</declname>
        </param>
        <param>
          <type>const QStringList &amp;</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>helpText</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>usesGeometry</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const QSet&lt; QString &gt; &amp;</type>
          <declname>referencedColumns</declname>
          <defval>QSet&lt; QString &gt;()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lazyEval</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const QStringList &amp;</type>
          <declname>aliases</declname>
          <defval>QStringList()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>handlesNull</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Static function for evaluation against a <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref>, using a named list of parameter values and list of groups. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="421" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="421" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1a2dfcda664509e799cd1da8bda2db4597" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QStringList</type>
        <definition>QStringList QgsStaticExpressionFunction::aliases</definition>
        <argsstring>() const override</argsstring>
        <name>aliases</name>
        <reimplements refid="classQgsExpressionFunction_1a3df939a4995ff37fa1bd5c85f5c5b48a">aliases</reimplements>
        <briefdescription>
<para>Returns a list of possible aliases for the function. </para>        </briefdescription>
        <detaileddescription>
<para>These include other permissible names for the function, e.g., deprecated names. <simplesect kind="return"><para>list of known aliases </para></simplesect>
<simplesect kind="since"><para>QGIS 2.9 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="451" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1a7a7adcee2172d46e7313cf6693b89dd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsStaticExpressionFunction::func</definition>
        <argsstring>(const QVariantList &amp;values, const QgsExpressionContext *context, QgsExpression *parent, const QgsExpressionNodeFunction *node) override</argsstring>
        <name>func</name>
        <reimplements refid="classQgsExpressionFunction_1aac3bdce16c2974dff049cdd6f9946d6f">func</reimplements>
        <param>
          <type>const QVariantList &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Returns result of evaluating the function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>list of values passed to the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>context expression is being evaluated against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>parent expression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>function node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result of function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="446" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1a7f813d148f6699c110bc2ee7459205e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsStaticExpressionFunction::isStatic</definition>
        <argsstring>(const QgsExpressionNodeFunction *node, QgsExpression *parent, const QgsExpressionContext *context) const override</argsstring>
        <name>isStatic</name>
        <reimplements refid="classQgsExpressionFunction_1a399b81147422abf64c288d0c8b74b596">isStatic</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Will be called during prepare to determine if the function is static. </para>        </briefdescription>
        <detaileddescription>
<para>A function is static if it will return the same value for every feature with different attributes and/or geometry.</para><para>By default this will return true, if all arguments that have been passed to the function are also static.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="457" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="182" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1a27a672f5175635643f8364d9bb3f965e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsStaticExpressionFunction::prepare</definition>
        <argsstring>(const QgsExpressionNodeFunction *node, QgsExpression *parent, const QgsExpressionContext *context) const override</argsstring>
        <name>prepare</name>
        <reimplements refid="classQgsExpressionFunction_1ac8dcaad4093a5831ff42d5b7755d43b1">prepare</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>This will be called during the prepare step() of an expression if it is not static. </para>        </briefdescription>
        <detaileddescription>
<para>This can be used by functions to do any preparation steps that might help to speedup the upcoming evaluation.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="459" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="190" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1aedb887972621fc8c10b86c97ad561e8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsStaticExpressionFunction::referencedColumns</definition>
        <argsstring>(const QgsExpressionNodeFunction *node) const override</argsstring>
        <name>referencedColumns</name>
        <reimplements refid="classQgsExpressionFunction_1abef6a1ef1af36137394c969371a23aed">referencedColumns</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Returns a set of field names which are required for this function. </para>        </briefdescription>
        <detaileddescription>
<para>May contain QgsFeatureRequest::AllAttributes to signal that all attributes are required. If in doubt this will return more fields than strictly required.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="455" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1a9f5e04b6dbcf6dd936446591c60de550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsStaticExpressionFunction::setIsStatic</definition>
        <argsstring>(bool isStatic)</argsstring>
        <name>setIsStatic</name>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
        </param>
        <briefdescription>
<para>Tag this function as either static or not static. </para>        </briefdescription>
        <detaileddescription>
<para>This will indicate that the function is always expected to return the same value for an iteration (or explicitly request that it&apos;s going to be called for every feature, if false).</para><para><simplesect kind="see"><para><ref refid="classQgsStaticExpressionFunction_1a29771080d6718cda0368d8e29551166f" kindref="member">setIsStaticFunction</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="476" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="203" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1a29771080d6718cda0368d8e29551166f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsStaticExpressionFunction::setIsStaticFunction</definition>
        <argsstring>(const std::function&lt; bool(const QgsExpressionNodeFunction *, QgsExpression *, const QgsExpressionContext *) &gt; &amp;isStatic)</argsstring>
        <name>setIsStaticFunction</name>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *, <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *, const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *) &gt; &amp;</type>
          <declname>isStatic</declname>
        </param>
        <briefdescription>
<para>Set a function that will be called in the prepare step to determine if the function is static or not. </para>        </briefdescription>
        <detaileddescription>
<para>By default this is set to a function that checks all arguments that have been passed to the variable and if all of them are static, it will be assumed that the function is static as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="467" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1a38bd351d66827402109f9c22facd3c50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsStaticExpressionFunction::setPrepareFunction</definition>
        <argsstring>(const std::function&lt; bool(const QgsExpressionNodeFunction *, QgsExpression *, const QgsExpressionContext *)&gt; &amp;prepareFunc)</argsstring>
        <name>setPrepareFunction</name>
        <param>
          <type>const std::function&lt; bool(const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *, <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *, const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *)&gt; &amp;</type>
          <declname>prepareFunc</declname>
        </param>
        <briefdescription>
<para>Set a function that will be called in the prepare step to determine if the function is static or not. </para>        </briefdescription>
        <detaileddescription>
<para>By default this is set to a function that checks all arguments that have been passed to the variable and if all of them are static, it will be assumed that the function is static as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="484" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1af79223f2108220ac48dcc62064adb13f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsStaticExpressionFunction::usesGeometry</definition>
        <argsstring>(const QgsExpressionNodeFunction *node) const override</argsstring>
        <name>usesGeometry</name>
        <reimplements refid="classQgsExpressionFunction_1aea286ec1a3c8ced38d33b0544385924d">usesGeometry</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Does this function use a geometry object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="453" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="166" bodyend="172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsStaticExpressionFunction_1aaadb44f962d804ee6f0cd75e2e71dc21" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; <ref refid="classQgsExpressionFunction" kindref="compound">QgsExpressionFunction</ref> * &gt; &amp;</type>
        <definition>static const QList&lt;QgsExpressionFunction *&gt;&amp; QgsStaticExpressionFunction::functions</definition>
        <argsstring>()</argsstring>
        <name>functions</name>
        <briefdescription>
<para>Returns a list of all registered expression functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="489" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>c++ helper class for defining <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> functions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8558">
        <label>QgsStaticExpressionFunction</label>
        <link refid="classQgsStaticExpressionFunction"/>
        <childnode refid="8559" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8559">
        <label>QgsExpressionFunction</label>
        <link refid="classQgsExpressionFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8560">
        <label>QgsStaticExpressionFunction</label>
        <link refid="classQgsStaticExpressionFunction"/>
        <childnode refid="8561" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8561">
        <label>QgsExpressionFunction</label>
        <link refid="classQgsExpressionFunction"/>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="350" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="349" bodyend="501"/>
    <listofallmembers>
      <member refid="classQgsStaticExpressionFunction_1a2dfcda664509e799cd1da8bda2db4597" prot="public" virt="virtual"><scope>QgsStaticExpressionFunction</scope><name>aliases</name></member>
      <member refid="classQgsExpressionFunction_1a4b513026b2f50b370d62210acc38dbd9" prot="protected" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>allParamsStatic</name></member>
      <member refid="classQgsExpressionFunction_1af8f1aaa201835de29f9e58d0ae726af2" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>FcnEval</name></member>
      <member refid="classQgsStaticExpressionFunction_1a7a7adcee2172d46e7313cf6693b89dd4" prot="public" virt="virtual"><scope>QgsStaticExpressionFunction</scope><name>func</name></member>
      <member refid="classQgsStaticExpressionFunction_1aaadb44f962d804ee6f0cd75e2e71dc21" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>functions</name></member>
      <member refid="classQgsExpressionFunction_1aa29b1d86d870e46689d02d9c0d7db236" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>group</name></member>
      <member refid="classQgsExpressionFunction_1a1b9cee2c24287bd685088a96471e66e9" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>groups</name></member>
      <member refid="classQgsExpressionFunction_1ac0b17f18a0e5280ec554d89ea5475b51" prot="public" virt="virtual"><scope>QgsStaticExpressionFunction</scope><name>handlesNull</name></member>
      <member refid="classQgsExpressionFunction_1ad61ceb46aa3133a40d29300fdb73777c" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>helpText</name></member>
      <member refid="classQgsExpressionFunction_1a0a6475c1b384c3654f2269dfc6e7a243" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>isContextual</name></member>
      <member refid="classQgsExpressionFunction_1a324a412f350be861600cef3b4a07bd6e" prot="public" virt="virtual"><scope>QgsStaticExpressionFunction</scope><name>isDeprecated</name></member>
      <member refid="classQgsStaticExpressionFunction_1a7f813d148f6699c110bc2ee7459205e8" prot="public" virt="virtual"><scope>QgsStaticExpressionFunction</scope><name>isStatic</name></member>
      <member refid="classQgsExpressionFunction_1a3fb17cb0e65635ea646fd80ed1d51f8c" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>lazyEval</name></member>
      <member refid="classQgsStaticExpressionFunction_1a187d52547a6b6dd855edc59d48ce9a08" prot="private" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>mAliases</name></member>
      <member refid="classQgsStaticExpressionFunction_1a2201ce37911368492f2ad5c32d128886" prot="private" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>mFnc</name></member>
      <member refid="classQgsExpressionFunction_1a70702a09951459dbb665622ba65c755e" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>minParams</name></member>
      <member refid="classQgsStaticExpressionFunction_1a5344c646e6778ff26858fa4572ede357" prot="private" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>mIsStatic</name></member>
      <member refid="classQgsStaticExpressionFunction_1a01a53223468b3938dee9aa1bea4477a4" prot="private" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>mIsStaticFunc</name></member>
      <member refid="classQgsStaticExpressionFunction_1ab2a49b6cceb0b681de174f5d59c01417" prot="private" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>mPrepareFunc</name></member>
      <member refid="classQgsStaticExpressionFunction_1a50cec057d459ea6cbc16657f19a3b263" prot="private" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>mReferencedColumns</name></member>
      <member refid="classQgsStaticExpressionFunction_1a733ab3014657e782ce238de71d7a500a" prot="private" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>mReferencedColumnsFunc</name></member>
      <member refid="classQgsStaticExpressionFunction_1a0cd384920120e2b66109ff4235c6e230" prot="private" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>mUsesGeometry</name></member>
      <member refid="classQgsStaticExpressionFunction_1a52bda69b679d0e3407bf3ba37f090dc0" prot="private" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>mUsesGeometryFunc</name></member>
      <member refid="classQgsExpressionFunction_1a75b3d6b9d50a8dd663465a42cce11848" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>name</name></member>
      <member refid="classQgsExpressionFunction_1a22fc286594b6d3ba60d2a222a1ced67b" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>operator==</name></member>
      <member refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>ParameterList</name></member>
      <member refid="classQgsExpressionFunction_1ab3056f181ae6085f89ca16639db00ed0" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>parameters</name></member>
      <member refid="classQgsExpressionFunction_1a14d5dbed8e5dd8fdcf7d5c02e18bbd7d" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>params</name></member>
      <member refid="classQgsStaticExpressionFunction_1a27a672f5175635643f8364d9bb3f965e" prot="public" virt="virtual"><scope>QgsStaticExpressionFunction</scope><name>prepare</name></member>
      <member refid="classQgsExpressionFunction_1a2637c89917718ead50b08c760316c328" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1a721f8a31e84ecf173278082ee6f345c3" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1afc7af3ed9f0bb5da6c2e3df39b65fb06" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1a0a1834d566ebe3860d3772913b9a9fe3" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsStaticExpressionFunction_1ae9a2bf993e06614f60fa0c2b5146226a" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>QgsStaticExpressionFunction</name></member>
      <member refid="classQgsStaticExpressionFunction_1a6e5bf0292af4e5d550f81aa0c92d9893" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>QgsStaticExpressionFunction</name></member>
      <member refid="classQgsStaticExpressionFunction_1aab64da77e28e78104e7eb7f51d1498c7" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>QgsStaticExpressionFunction</name></member>
      <member refid="classQgsStaticExpressionFunction_1a288bf587bd4f95aeed4a3931110337c3" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>QgsStaticExpressionFunction</name></member>
      <member refid="classQgsStaticExpressionFunction_1aedb887972621fc8c10b86c97ad561e8c" prot="public" virt="virtual"><scope>QgsStaticExpressionFunction</scope><name>referencedColumns</name></member>
      <member refid="classQgsExpressionFunction_1a8cd98eda990f063851b333b5ebc2fbd5" prot="public" virt="virtual"><scope>QgsStaticExpressionFunction</scope><name>run</name></member>
      <member refid="classQgsStaticExpressionFunction_1a9f5e04b6dbcf6dd936446591c60de550" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>setIsStatic</name></member>
      <member refid="classQgsStaticExpressionFunction_1a29771080d6718cda0368d8e29551166f" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>setIsStaticFunction</name></member>
      <member refid="classQgsStaticExpressionFunction_1a38bd351d66827402109f9c22facd3c50" prot="public" virt="non-virtual"><scope>QgsStaticExpressionFunction</scope><name>setPrepareFunction</name></member>
      <member refid="classQgsStaticExpressionFunction_1af79223f2108220ac48dcc62064adb13f" prot="public" virt="virtual"><scope>QgsStaticExpressionFunction</scope><name>usesGeometry</name></member>
      <member refid="classQgsExpressionFunction_1a4fcb413c419837eeb3b425d046048844" prot="public" virt="virtual"><scope>QgsStaticExpressionFunction</scope><name>~QgsExpressionFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
