<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsFontUtils" kind="class" language="C++" prot="public">
    <compoundname>QgsFontUtils</compoundname>
    <includes refid="qgsfontutils_8h" local="no">qgsfontutils.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsFontUtils_1acc4dae115abc303c6905c16cabf75d2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsFontUtils::addRecentFontFamily</definition>
        <argsstring>(const QString &amp;family)</argsstring>
        <name>addRecentFontFamily</name>
        <param>
          <type>const QString &amp;</type>
          <declname>family</declname>
        </param>
        <briefdescription>
<para>Adds a font <emphasis>family</emphasis> to the list of recently used font families. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsFontUtils_1afcbfe583845718db6b31d0cd3a6d8e0e" kindref="member">recentFontFamilies()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="189" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="517" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a064525729278531fff78aec58a8e812b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsFontUtils::asCSS</definition>
        <argsstring>(const QFont &amp;font, double pointToPixelMultiplier=1.0)</argsstring>
        <name>asCSS</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pointToPixelMultiplier</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Returns a CSS string representing the specified font as closely as possible. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>QFont to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointToPixelMultiplier</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling factor to apply to convert point sizes to pixel font sizes. The CSS returned by this function will always use pixels for font sizes, so this parameter should be set to a suitable value to convert point sizes to pixels (e.g., taking into account destination DPI) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>partial CSS string, e.g., &quot;font-family: Comic Sans; font-size: 12px;&quot; </para></simplesect>
<simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="182" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="457" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1ae25010597ac312032a5926b3556920f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFontUtils::fontFamilyHasStyle</definition>
        <argsstring>(const QString &amp;family, const QString &amp;style)</argsstring>
        <name>fontFamilyHasStyle</name>
        <param>
          <type>const QString &amp;</type>
          <declname>family</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Check whether font family on system has specific style. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>The family to test </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>The style to test for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether family has style </para></simplesect>
<simplesect kind="since"><para>QGIS 2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="57" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="44" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a6675ccc603f1ad830d1f257c8356f108" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFontUtils::fontFamilyMatchOnSystem</definition>
        <argsstring>(const QString &amp;family, QString *chosen=nullptr, bool *match=nullptr)</argsstring>
        <name>fontFamilyMatchOnSystem</name>
        <param>
          <type>const QString &amp;</type>
          <declname>family</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>chosen</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>match</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Check whether font family is on system. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>The family to test </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para>The actual family (possibly from different foundry) returned by system </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>match</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the family [foundry] returned by system is a match </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether family was found on system </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="68" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a6de7b3108b2c0d5f8873579fc5ec15ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFontUtils::fontFamilyOnSystem</definition>
        <argsstring>(const QString &amp;family)</argsstring>
        <name>fontFamilyOnSystem</name>
        <param>
          <type>const QString &amp;</type>
          <declname>family</declname>
        </param>
        <briefdescription>
<para>Check whether font family is on system in a quick manner, which does not compare [foundry]. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>The family to test </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether family was found on system </para></simplesect>
<simplesect kind="note"><para>This is good for use in loops of large lists, e.g. registering many features for labeling </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="48" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="37" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a7eacb410e4dfa52bfdcb238aa9f65c75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFontUtils::fontMatchOnSystem</definition>
        <argsstring>(const QFont &amp;f)</argsstring>
        <name>fontMatchOnSystem</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Check whether exact font is on system. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>The font to test for match </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="40" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1adefb650a0e3e221bd6b0473984d5b639" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QFont</type>
        <definition>QFont QgsFontUtils::fromMimeData</definition>
        <argsstring>(const QMimeData *data, bool *ok=nullptr)</argsstring>
        <name>fromMimeData</name>
        <param>
          <type>const QMimeData *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Attempts to parse the provided mime <emphasis>data</emphasis> as a QFont. </para>        </briefdescription>
        <detaileddescription>
<para>If data can be parsed as a QFont, <emphasis>ok</emphasis> will be set to true. <simplesect kind="see"><para><ref refid="classQgsFontUtils_1a5d90e50d726dfa1605111c929b4bd4cf" kindref="member">toMimeData()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="152" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="377" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a8c9d3f213bbca08cf8eaf45539930ca2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QFont</type>
        <definition>QFont QgsFontUtils::getStandardTestFont</definition>
        <argsstring>(const QString &amp;style=&quot;Roman&quot;, int pointsize=12)</argsstring>
        <name>getStandardTestFont</name>
        <param>
          <type>const QString &amp;</type>
          <declname>style</declname>
          <defval>&quot;Roman&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>pointsize</declname>
          <defval>12</defval>
        </param>
        <briefdescription>
<para>Gets standard test font with specific style. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Style to load, e.g. Roman, Oblique, Bold, Bold Oblique </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Font point size to set </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>QFont </para></simplesect>
<simplesect kind="since"><para>QGIS 2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="100" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="285" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a8bb56c12d27879d94cf63ac710200a28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFontUtils::loadStandardTestFonts</definition>
        <argsstring>(const QStringList &amp;loadstyles)</argsstring>
        <name>loadStandardTestFonts</name>
        <param>
          <type>const QStringList &amp;</type>
          <declname>loadstyles</declname>
        </param>
        <briefdescription>
<para>Loads standard test fonts from filesystem or qrc resource. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loadstyles</parametername>
</parameternamelist>
<parameterdescription>
<para>List of styles to load, e.g. All, Roman, Oblique, Bold, Bold Oblique </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether any font was loaded </para></simplesect>
<simplesect kind="note"><para>Done by default on debug app/server startup to ensure fonts available for unit tests (Roman and Bold) </para></simplesect>
<simplesect kind="since"><para>QGIS 2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="91" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="223" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1afcbfe583845718db6b31d0cd3a6d8e0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsFontUtils::recentFontFamilies</definition>
        <argsstring>()</argsstring>
        <name>recentFontFamilies</name>
        <briefdescription>
<para>Returns a list of recently used font families. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsFontUtils_1acc4dae115abc303c6905c16cabf75d2b" kindref="member">addRecentFontFamily()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="196" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="539" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a1d2fe1ff3dc69d9f586a6ea3ecf630e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFontUtils::setFromXmlChildNode</definition>
        <argsstring>(QFont &amp;font, const QDomElement &amp;element, const QString &amp;childNode)</argsstring>
        <name>setFromXmlChildNode</name>
        <param>
          <type>QFont &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>childNode</declname>
        </param>
        <briefdescription>
<para>Sets the properties of a font to match the properties stored in an XML child node. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this will overwrite the current properties of the font. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>font to update </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>DOM element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>childNode</parametername>
</parameternamelist>
<parameterdescription>
<para>name of child node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if child node exists and properties were successfully read from node </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFontUtils_1a189fff75c5cd1bd5d0bd1b4852e6310f" kindref="member">setFromXmlElement</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFontUtils_1aac84399338420a23194e91af5acaa6db" kindref="member">toXmlElement</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.10 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="136" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="346" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a189fff75c5cd1bd5d0bd1b4852e6310f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFontUtils::setFromXmlElement</definition>
        <argsstring>(QFont &amp;font, const QDomElement &amp;element)</argsstring>
        <name>setFromXmlElement</name>
        <param>
          <type>QFont &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Sets the properties of a font to match the properties stored in an XML element. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this will overwrite the current properties of the font. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>font to update </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>DOM element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if properties were successfully read from element </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFontUtils_1aac84399338420a23194e91af5acaa6db" kindref="member">toXmlElement</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFontUtils_1a1d2fe1ff3dc69d9f586a6ea3ecf630e6" kindref="member">setFromXmlChildNode</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.10 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="123" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="330" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1acd703e38a08d185665be2f73c6f85c4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsFontUtils::standardTestFontFamily</definition>
        <argsstring>()</argsstring>
        <name>standardTestFontFamily</name>
        <briefdescription>
<para>Gets standard test font family. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="82" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a5d90e50d726dfa1605111c929b4bd4cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QMimeData *</type>
        <definition>QMimeData * QgsFontUtils::toMimeData</definition>
        <argsstring>(const QFont &amp;font)</argsstring>
        <name>toMimeData</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Returns new mime data representing the specified <emphasis>font</emphasis> settings. </para>        </briefdescription>
        <detaileddescription>
<para>Caller takes responsibility for deleting the returned object. <simplesect kind="see"><para><ref refid="classQgsFontUtils_1adefb650a0e3e221bd6b0473984d5b639" kindref="member">fromMimeData()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="144" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="365" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1aac84399338420a23194e91af5acaa6db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QDomElement</type>
        <definition>QDomElement QgsFontUtils::toXmlElement</definition>
        <argsstring>(const QFont &amp;font, QDomDocument &amp;document, const QString &amp;elementName)</argsstring>
        <name>toXmlElement</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>elementName</declname>
        </param>
        <briefdescription>
<para>Returns a DOM element containing the properties of the font. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>font </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>document</parametername>
</parameternamelist>
<parameterdescription>
<para>DOM document </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementName</parametername>
</parameternamelist>
<parameterdescription>
<para>name for DOM element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DOM element containing font settings </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFontUtils_1a189fff75c5cd1bd5d0bd1b4852e6310f" kindref="member">setFromXmlElement</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.10 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="322" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a0e3951088de8626e9ef2a9f25eff1dc8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsFontUtils::translateNamedStyle</definition>
        <argsstring>(const QString &amp;namedStyle)</argsstring>
        <name>translateNamedStyle</name>
        <param>
          <type>const QString &amp;</type>
          <declname>namedStyle</declname>
        </param>
        <briefdescription>
<para>Returns the localized named style of a font, if such a translation is available. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namedStyle</parametername>
</parameternamelist>
<parameterdescription>
<para>a named style, i.e. &quot;Bold&quot;, &quot;Italic&quot;, etc </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The localized named style </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFontUtils_1a183528d661119f235c307daaebe0e2b2" kindref="member">untranslateNamedStyle</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="161" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="429" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a183528d661119f235c307daaebe0e2b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsFontUtils::untranslateNamedStyle</definition>
        <argsstring>(const QString &amp;namedStyle)</argsstring>
        <name>untranslateNamedStyle</name>
        <param>
          <type>const QString &amp;</type>
          <declname>namedStyle</declname>
        </param>
        <briefdescription>
<para>Returns the english named style of a font, if possible. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namedStyle</parametername>
</parameternamelist>
<parameterdescription>
<para>a localized named style, i.e. &quot;Fett&quot;, &quot;Kursiv&quot;, etc </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The english named style </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsFontUtils_1a0e3951088de8626e9ef2a9f25eff1dc8" kindref="member">translateNamedStyle</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="170" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="439" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classQgsFontUtils_1a7e73828dd98c0f98c707c5f80804c478" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsFontUtils::updateFontViaStyle</definition>
        <argsstring>(QFont &amp;f, const QString &amp;fontstyle, bool fallback=false)</argsstring>
        <name>updateFontViaStyle</name>
        <param>
          <type>QFont &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>fontstyle</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fallback</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Updates font with named style and retain all font properties. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>The font to update </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fontstyle</parametername>
</parameternamelist>
<parameterdescription>
<para>The style to try and switch the font to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fallback</parametername>
</parameternamelist>
<parameterdescription>
<para>If no matching fontstyle found for font, assign most similar or first style found to font </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether the font was updated (also returns true if the requested style matches font&apos;s current style) </para></simplesect>
<simplesect kind="note"><para>This is a more featured replacement for a Qt 4.8+ function: void QFont::setStyleName ( const QString &amp; styleName ) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="76" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.cpp" bodystart="121" bodyend="216"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" line="33" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsfontutils.h" bodystart="32" bodyend="197"/>
    <listofallmembers>
      <member refid="classQgsFontUtils_1acc4dae115abc303c6905c16cabf75d2b" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>addRecentFontFamily</name></member>
      <member refid="classQgsFontUtils_1a064525729278531fff78aec58a8e812b" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>asCSS</name></member>
      <member refid="classQgsFontUtils_1ae25010597ac312032a5926b3556920f5" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>fontFamilyHasStyle</name></member>
      <member refid="classQgsFontUtils_1a6675ccc603f1ad830d1f257c8356f108" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>fontFamilyMatchOnSystem</name></member>
      <member refid="classQgsFontUtils_1a6de7b3108b2c0d5f8873579fc5ec15ee" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>fontFamilyOnSystem</name></member>
      <member refid="classQgsFontUtils_1a7eacb410e4dfa52bfdcb238aa9f65c75" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>fontMatchOnSystem</name></member>
      <member refid="classQgsFontUtils_1adefb650a0e3e221bd6b0473984d5b639" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>fromMimeData</name></member>
      <member refid="classQgsFontUtils_1a8c9d3f213bbca08cf8eaf45539930ca2" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>getStandardTestFont</name></member>
      <member refid="classQgsFontUtils_1a8bb56c12d27879d94cf63ac710200a28" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>loadStandardTestFonts</name></member>
      <member refid="classQgsFontUtils_1afcbfe583845718db6b31d0cd3a6d8e0e" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>recentFontFamilies</name></member>
      <member refid="classQgsFontUtils_1a1d2fe1ff3dc69d9f586a6ea3ecf630e6" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>setFromXmlChildNode</name></member>
      <member refid="classQgsFontUtils_1a189fff75c5cd1bd5d0bd1b4852e6310f" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>setFromXmlElement</name></member>
      <member refid="classQgsFontUtils_1acd703e38a08d185665be2f73c6f85c4e" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>standardTestFontFamily</name></member>
      <member refid="classQgsFontUtils_1a5d90e50d726dfa1605111c929b4bd4cf" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>toMimeData</name></member>
      <member refid="classQgsFontUtils_1aac84399338420a23194e91af5acaa6db" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>toXmlElement</name></member>
      <member refid="classQgsFontUtils_1a0e3951088de8626e9ef2a9f25eff1dc8" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>translateNamedStyle</name></member>
      <member refid="classQgsFontUtils_1a183528d661119f235c307daaebe0e2b2" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>untranslateNamedStyle</name></member>
      <member refid="classQgsFontUtils_1a7e73828dd98c0f98c707c5f80804c478" prot="public" virt="non-virtual"><scope>QgsFontUtils</scope><name>updateFontViaStyle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
