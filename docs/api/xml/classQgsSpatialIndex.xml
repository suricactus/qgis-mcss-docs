<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsSpatialIndex" kind="class" language="C++" prot="public">
    <compoundname>QgsSpatialIndex</compoundname>
    <basecompoundref refid="classQgsFeatureSink" prot="public" virt="non-virtual">QgsFeatureSink</basecompoundref>
    <includes refid="qgsspatialindex_8h" local="no">qgsspatialindex.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classQgsSpatialIndex_1a7f47ed28d7ace1e2ef461a9a1fe876f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class QgsFeatureIteratorDataStream</definition>
        <argsstring></argsstring>
        <name>QgsFeatureIteratorDataStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="209" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsSpatialIndex_1a1c13256c221112f53c2135de882266c7" prot="private" static="no" mutable="no">
        <type>QSharedDataPointer&lt; <ref refid="classQgsSpatialIndexData" kindref="compound">QgsSpatialIndexData</ref> &gt;</type>
        <definition>QSharedDataPointer&lt;QgsSpatialIndexData&gt; QgsSpatialIndex::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="213" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsSpatialIndex_1a38153003650630a60daa68bfaa3d93d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSpatialIndex::QgsSpatialIndex</definition>
        <argsstring>()</argsstring>
        <name>QgsSpatialIndex</name>
        <briefdescription>
<para>Constructor for <ref refid="classQgsSpatialIndex" kindref="compound">QgsSpatialIndex</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Creates an empty R-tree index. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="77" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1a5b0eb3ffff2b341fec7985d0fbd018d1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSpatialIndex::QgsSpatialIndex</definition>
        <argsstring>(const QgsFeatureIterator &amp;fi, QgsFeedback *feedback=nullptr)</argsstring>
        <name>QgsSpatialIndex</name>
        <param>
          <type>const <ref refid="classQgsFeatureIterator" kindref="compound">QgsFeatureIterator</ref> &amp;</type>
          <declname>fi</declname>
        </param>
        <param>
          <type><ref refid="classQgsFeedback" kindref="compound">QgsFeedback</ref> *</type>
          <declname>feedback</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructor - creates R-tree and bulk loads it with features from the iterator. </para>        </briefdescription>
        <detaileddescription>
<para>This is much faster approach than creating an empty index and then inserting features one by one.</para><para>The optional <emphasis>feedback</emphasis> object can be used to allow cancelation of bulk feature loading. Ownership of <emphasis>feedback</emphasis> is not transferred, and callers must take care that the lifetime of feedback exceeds that of the spatial index construction.</para><para><simplesect kind="since"><para>QGIS 2.8 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="89" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1ac00a584cfd80b110c205217c8f490dad" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSpatialIndex::QgsSpatialIndex</definition>
        <argsstring>(const QgsFeatureSource &amp;source, QgsFeedback *feedback=nullptr)</argsstring>
        <name>QgsSpatialIndex</name>
        <param>
          <type>const <ref refid="classQgsFeatureSource" kindref="compound">QgsFeatureSource</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classQgsFeedback" kindref="compound">QgsFeedback</ref> *</type>
          <declname>feedback</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructor - creates R-tree and bulk loads it with features from the source. </para>        </briefdescription>
        <detaileddescription>
<para>This is much faster approach than creating an empty index and then inserting features one by one.</para><para>The optional <emphasis>feedback</emphasis> object can be used to allow cancelation of bulk feature loading. Ownership of <emphasis>feedback</emphasis> is not transferred, and callers must take care that the lifetime of feedback exceeds that of the spatial index construction.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="102" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1aba6b70aef08b166e99cb599328ddc873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSpatialIndex::QgsSpatialIndex</definition>
        <argsstring>(const QgsSpatialIndex &amp;other)</argsstring>
        <name>QgsSpatialIndex</name>
        <param>
          <type>const <ref refid="classQgsSpatialIndex" kindref="compound">QgsSpatialIndex</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="105" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1a82f5fd8f32ce62c9945667b39118817e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSpatialIndex::~QgsSpatialIndex</definition>
        <argsstring>() override</argsstring>
        <name>~QgsSpatialIndex</name>
        <briefdescription>
<para>Destructor finalizes work with spatial index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="108" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1ac27b971acd87b58010a8709371167ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsSpatialIndex::addFeature</definition>
        <argsstring>(QgsFeature &amp;feature, QgsFeatureSink::Flags flags=nullptr) override</argsstring>
        <name>addFeature</name>
        <reimplements refid="classQgsFeatureSink_1aef4fbd5b3c521770ea2e7acda0addc05">addFeature</reimplements>
        <param>
          <type><ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type>QgsFeatureSink::Flags</type>
          <declname>flags</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Adds a <emphasis>feature</emphasis> to the index. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>flags</emphasis> argument is ignored.</para><para><simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="128" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="302" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1ab23713ee3b00322887d76bee801f8bf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsSpatialIndex::addFeature</definition>
        <argsstring>(QgsFeatureId id, const QgsRectangle &amp;bounds)</argsstring>
        <name>addFeature</name>
        <param>
          <type><ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
<para>Add a feature <emphasis>id</emphasis> to the index with a specified bounding box. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if feature was successfully added to index. </para></simplesect>
<simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="151" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="334" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1a9afc4863da5fb383e7e868c0df1afebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsSpatialIndex::addFeatures</definition>
        <argsstring>(QgsFeatureList &amp;features, QgsFeatureSink::Flags flags=nullptr) override</argsstring>
        <name>addFeatures</name>
        <reimplements refid="classQgsFeatureSink_1ae74a8e6dbc5dfdb3c769df49d0fc4bd2">addFeatures</reimplements>
        <param>
          <type><ref refid="qgsfeature_8h_1ae0f922f3469155bc17dfc96729f1c1cc" kindref="member">QgsFeatureList</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>QgsFeatureSink::Flags</type>
          <declname>flags</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Adds a list of <emphasis>features</emphasis> to the index. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>flags</emphasis> argument is ignored.</para><para><simplesect kind="see"><para><ref refid="classQgsSpatialIndex_1ac27b971acd87b58010a8709371167ad4" kindref="member">addFeature()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="137" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="312" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1ae51ebe272a85211dade526ed0aeed916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsSpatialIndex::deleteFeature</definition>
        <argsstring>(const QgsFeature &amp;feature)</argsstring>
        <name>deleteFeature</name>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Removes a <emphasis>feature</emphasis> from the index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="156" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="364" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1aba57698626fcd78c42fb00570e6cbceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_DECL_DEPRECATED bool</type>
        <definition>bool QgsSpatialIndex::insertFeature</definition>
        <argsstring>(const QgsFeature &amp;feature)</argsstring>
        <name>insertFeature</name>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Adds a <emphasis>feature</emphasis> to the index. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000017"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classQgsSpatialIndex_1ac27b971acd87b58010a8709371167ad4" kindref="member">addFeature()</ref> instead </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="119" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="323" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1a185e5aa5b8212a2a312f4d87a4827794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Q_DECL_DEPRECATED bool</type>
        <definition>bool QgsSpatialIndex::insertFeature</definition>
        <argsstring>(QgsFeatureId id, const QgsRectangle &amp;bounds)</argsstring>
        <name>insertFeature</name>
        <param>
          <type><ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
<para>Add a feature <emphasis>id</emphasis> to the index with a specified bounding box. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if feature was successfully added to index. </para></simplesect>
<xrefsect id="deprecated_1_deprecated000018"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classQgsSpatialIndex_1ac27b971acd87b58010a8709371167ad4" kindref="member">addFeature()</ref> instead </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="144" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1a58c6e5ac1ef78551ecf0757d835da0ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref> &gt;</type>
        <definition>QList&lt; QgsFeatureId &gt; QgsSpatialIndex::intersects</definition>
        <argsstring>(const QgsRectangle &amp;rectangle) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>rectangle</declname>
        </param>
        <briefdescription>
<para>Returns a list of features with a bounding box which intersects the specified <emphasis>rectangle</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The intersection test is performed based on the feature bounding boxes only, so for non-point geometry features it is necessary to manually test the returned features for exact geometry intersection when required. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="168" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="376" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1a06ca7bf7fe3b48a18cf89a5829ba527b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref> &gt;</type>
        <definition>QList&lt; QgsFeatureId &gt; QgsSpatialIndex::nearestNeighbor</definition>
        <argsstring>(const QgsPointXY &amp;point, int neighbors) const</argsstring>
        <name>nearestNeighbor</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>int</type>
          <declname>neighbors</declname>
        </param>
        <briefdescription>
<para>Returns nearest neighbors to a <emphasis>point</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The number of neighbours returned is specified by the <emphasis>neighbours</emphasis> argument.</para><para><simplesect kind="note"><para>The nearest neighbour test is performed based on the feature bounding boxes only, so for non-point geometry features this method is not guaranteed to return the actual closest neighbours. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="177" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="389" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1a292897ec207c9d5cfc98f6408395eb9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsSpatialIndex" kindref="compound">QgsSpatialIndex</ref> &amp;</type>
        <definition>QgsSpatialIndex &amp; QgsSpatialIndex::operator=</definition>
        <argsstring>(const QgsSpatialIndex &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsSpatialIndex" kindref="compound">QgsSpatialIndex</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implement assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="268" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1a2c5603205397f9d51aaa1cbd07d15df4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QAtomicInt</type>
        <definition>QAtomicInt QgsSpatialIndex::refs</definition>
        <argsstring>() const</argsstring>
        <name>refs</name>
        <briefdescription>
<para>Gets reference count - just for debugging! </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="182" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="403" bodyend="406"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classQgsSpatialIndex_1a408b6f57bfa4884a01d28394cac0b2ed" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsSpatialIndex::featureInfo</definition>
        <argsstring>(const QgsFeature &amp;f, SpatialIndex::Region &amp;r, QgsFeatureId &amp;id)</argsstring>
        <name>featureInfo</name>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>SpatialIndex::Region &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Calculates feature info to insert into index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>input feature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to spatial index region </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to feature&apos;s ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if feature info was successfully retrieved and the feature can be added to the index </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="196" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="282" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1aaba6f564decf66e53c2691ca963cb246" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsSpatialIndex::featureInfo</definition>
        <argsstring>(const QgsFeature &amp;f, QgsRectangle &amp;rect, QgsFeatureId &amp;id)</argsstring>
        <name>featureInfo</name>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type><ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Calculates feature info to insert into index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>input feature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to feature&apos;s geometry bounding box </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to feature&apos;s ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if feature info was successfully retrieved and the feature can be added to the index </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="207" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="292" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSpatialIndex_1a681cf0210cddd5a2d278438c26f3dba4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SpatialIndex::Region</type>
        <definition>SpatialIndex::Region QgsSpatialIndex::rectToRegion</definition>
        <argsstring>(const QgsRectangle &amp;rect)</argsstring>
        <name>rectToRegion</name>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="186" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.cpp" bodystart="275" bodyend="280"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A spatial index for <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classQgsSpatialIndex" kindref="compound">QgsSpatialIndex</ref> objects are implicitly shared and can be inexpensively copied.</para><para><simplesect kind="note"><para>While the underlying libspatialindex is not thread safe on some platforms, the <ref refid="classQgsSpatialIndex" kindref="compound">QgsSpatialIndex</ref> class implements its own locks and accordingly, a single <ref refid="classQgsSpatialIndex" kindref="compound">QgsSpatialIndex</ref> object can safely be used across multiple threads.</para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsSpatialIndexKDBush" kindref="compound">QgsSpatialIndexKDBush</ref>, which is an optimised non-mutable index for point geometries only. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8513">
        <label>QgsFeatureSink</label>
        <link refid="classQgsFeatureSink"/>
      </node>
      <node id="8512">
        <label>QgsSpatialIndex</label>
        <link refid="classQgsSpatialIndex"/>
        <childnode refid="8513" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8515">
        <label>QgsFeatureSink</label>
        <link refid="classQgsFeatureSink"/>
      </node>
      <node id="8514">
        <label>QgsSpatialIndex</label>
        <link refid="classQgsSpatialIndex"/>
        <childnode refid="8515" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" line="68" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsspatialindex.h" bodystart="67" bodyend="215"/>
    <listofallmembers>
      <member refid="classQgsSpatialIndex_1ac27b971acd87b58010a8709371167ad4" prot="public" virt="virtual"><scope>QgsSpatialIndex</scope><name>addFeature</name></member>
      <member refid="classQgsSpatialIndex_1ab23713ee3b00322887d76bee801f8bf0" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>addFeature</name></member>
      <member refid="classQgsSpatialIndex_1a9afc4863da5fb383e7e868c0df1afebe" prot="public" virt="virtual"><scope>QgsSpatialIndex</scope><name>addFeatures</name></member>
      <member refid="classQgsFeatureSink_1a3d65e9e2cac5e0e0b699b08922f20f68" prot="public" virt="virtual" ambiguityscope="QgsFeatureSink::"><scope>QgsSpatialIndex</scope><name>addFeatures</name></member>
      <member refid="classQgsSpatialIndex_1a1c13256c221112f53c2135de882266c7" prot="private" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>d</name></member>
      <member refid="classQgsSpatialIndex_1ae51ebe272a85211dade526ed0aeed916" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>deleteFeature</name></member>
      <member refid="classQgsFeatureSink_1a85446dba6f3f5d74ad85890cfdd58239acd4b5c2a6ae1868f72a80b8fce669072" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>FastInsert</name></member>
      <member refid="classQgsSpatialIndex_1a408b6f57bfa4884a01d28394cac0b2ed" prot="private" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>featureInfo</name></member>
      <member refid="classQgsSpatialIndex_1aaba6f564decf66e53c2691ca963cb246" prot="private" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>featureInfo</name></member>
      <member refid="classQgsFeatureSink_1a85446dba6f3f5d74ad85890cfdd58239" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>Flag</name></member>
      <member refid="classQgsFeatureSink_1a649343548eb3c919cfd42ccee588c7ce" prot="public" virt="virtual"><scope>QgsSpatialIndex</scope><name>flushBuffer</name></member>
      <member refid="classQgsSpatialIndex_1aba57698626fcd78c42fb00570e6cbceb" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>insertFeature</name></member>
      <member refid="classQgsSpatialIndex_1a185e5aa5b8212a2a312f4d87a4827794" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>insertFeature</name></member>
      <member refid="classQgsSpatialIndex_1a58c6e5ac1ef78551ecf0757d835da0ee" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>intersects</name></member>
      <member refid="classQgsSpatialIndex_1a06ca7bf7fe3b48a18cf89a5829ba527b" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>nearestNeighbor</name></member>
      <member refid="classQgsSpatialIndex_1a292897ec207c9d5cfc98f6408395eb9a" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>operator=</name></member>
      <member refid="classQgsSpatialIndex_1a7f47ed28d7ace1e2ef461a9a1fe876f1" prot="private" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>QgsFeatureIteratorDataStream</name></member>
      <member refid="classQgsSpatialIndex_1a38153003650630a60daa68bfaa3d93d8" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>QgsSpatialIndex</name></member>
      <member refid="classQgsSpatialIndex_1a5b0eb3ffff2b341fec7985d0fbd018d1" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>QgsSpatialIndex</name></member>
      <member refid="classQgsSpatialIndex_1ac00a584cfd80b110c205217c8f490dad" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>QgsSpatialIndex</name></member>
      <member refid="classQgsSpatialIndex_1aba6b70aef08b166e99cb599328ddc873" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>QgsSpatialIndex</name></member>
      <member refid="classQgsSpatialIndex_1a681cf0210cddd5a2d278438c26f3dba4" prot="private" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>rectToRegion</name></member>
      <member refid="classQgsSpatialIndex_1a2c5603205397f9d51aaa1cbd07d15df4" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>refs</name></member>
      <member refid="classQgsFeatureSink_1a9201f5e47af6bb8003bc1b8314947f19a068ceb3d5fef4dea3ee5ea0d0527300e" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>RegeneratePrimaryKey</name></member>
      <member refid="classQgsFeatureSink_1a9201f5e47af6bb8003bc1b8314947f19" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>SinkFlag</name></member>
      <member refid="classQgsFeatureSink_1a216423652491057eef823728c29654e4" prot="public" virt="virtual"><scope>QgsSpatialIndex</scope><name>~QgsFeatureSink</name></member>
      <member refid="classQgsSpatialIndex_1a82f5fd8f32ce62c9945667b39118817e" prot="public" virt="non-virtual"><scope>QgsSpatialIndex</scope><name>~QgsSpatialIndex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
