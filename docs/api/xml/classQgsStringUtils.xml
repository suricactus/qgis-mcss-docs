<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsStringUtils" kind="class" language="C++" prot="public">
    <compoundname>QgsStringUtils</compoundname>
    <includes refid="qgsstringutils_8h" local="no">qgsstringutils.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3" prot="public" static="no">
        <name>Capitalization</name>
        <enumvalue id="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3a4ca7537376c4a25d7fbc2e4d8d6eead0" prot="public">
          <name>MixedCase</name>
          <initializer>= QFont::MixedCase</initializer>
          <briefdescription>
<para>Mixed case, ie no change. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3aafe0aa16ab5d39608363501a55c3375e" prot="public">
          <name>AllUppercase</name>
          <initializer>= QFont::AllUppercase</initializer>
          <briefdescription>
<para>Convert all characters to uppercase. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3a6edbee1344df4b129857c181a2bd1cd9" prot="public">
          <name>AllLowercase</name>
          <initializer>= QFont::AllLowercase</initializer>
          <briefdescription>
<para>Convert all characters to lowercase. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3abcf5a3808de22a3aa56c32975953db2f" prot="public">
          <name>ForceFirstLetterToCapital</name>
          <initializer>= QFont::Capitalize</initializer>
          <briefdescription>
<para>Convert just the first letter of each word to uppercase, leave the rest untouched. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3a9546f8ccd82aadbc3a0e8aa0d931db99" prot="public">
          <name>TitleCase</name>
          <initializer>= QFont::Capitalize + 1000</initializer>
          <briefdescription>
<para>Simple title case conversion - does not fully grammatically parse the text and uses simple rules only. Note that this method does not convert any characters to lowercase, it only uppercases required letters. Callers must ensure that input strings are already lowercased. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Capitalization options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" line="186" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" bodystart="185" bodyend="192"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsStringUtils_1ad6eda440f43ba67dfbeefc319a8a151f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsStringUtils::ampersandEncode</definition>
        <argsstring>(const QString &amp;string)</argsstring>
        <name>ampersandEncode</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Makes a raw string safe for inclusion as a HTML/XML string literal. </para>        </briefdescription>
        <detaileddescription>
<para>This includes replacing &apos;&lt;&apos; with &apos;&lt;&apos;, &apos;&gt;&apos; with &apos;&gt;&apos;, &apos;&amp;&apos; with &apos;&amp;amp&apos;, and any extended unicode characters with the XML style &amp;#233; encoded versions of these characters. <simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" line="211" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.cpp" bodystart="105" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStringUtils_1a95845a2aab96be58883f3c45eebe7242" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsStringUtils::capitalize</definition>
        <argsstring>(const QString &amp;string, Capitalization capitalization)</argsstring>
        <name>capitalize</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3" kindref="member">Capitalization</ref></type>
          <declname>capitalization</declname>
        </param>
        <briefdescription>
<para>Converts a string by applying capitalization rules to the string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capitalization</parametername>
</parameternamelist>
<parameterdescription>
<para>capitalization type to apply </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>capitalized string </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" line="201" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.cpp" bodystart="23" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStringUtils_1a06627c9c4ad20c6809b169e90fd56303" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsStringUtils::hammingDistance</definition>
        <argsstring>(const QString &amp;string1, const QString &amp;string2, bool caseSensitive=false)</argsstring>
        <name>hammingDistance</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>string2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the Hamming distance between two strings. </para>        </briefdescription>
        <detaileddescription>
<para>This equates to the number of characters at corresponding positions within the input strings where the characters are different. The input strings must be the same length. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string1</parametername>
</parameternamelist>
<parameterdescription>
<para>first string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string2</parametername>
</parameternamelist>
<parameterdescription>
<para>second string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true for case sensitive comparison </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Hamming distance between strings, or -1 if strings are different lengths. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" line="244" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.cpp" bodystart="270" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStringUtils_1aae4d2ef2d520a7e75b9ae1e5ea1eba6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsStringUtils::insertLinks</definition>
        <argsstring>(const QString &amp;string, bool *foundLinks=nullptr)</argsstring>
        <name>insertLinks</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>foundLinks</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns a string with any URL (e.g., http(s)/ftp) and mailto: text converted to valid HTML &lt;a ...&gt; links. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>string to insert links into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>foundLinks</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, will be set to true if any links were inserted into the string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string with inserted links </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" line="262" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.cpp" bodystart="404" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStringUtils_1a3196a8eff8d183dd82d0dd862295a0dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsStringUtils::levenshteinDistance</definition>
        <argsstring>(const QString &amp;string1, const QString &amp;string2, bool caseSensitive=false)</argsstring>
        <name>levenshteinDistance</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>string2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the Levenshtein edit distance between two strings. </para>        </briefdescription>
        <detaileddescription>
<para>This equates to the minimum number of character edits (insertions, deletions or substitutions) required to change one string to another. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string1</parametername>
</parameternamelist>
<parameterdescription>
<para>first string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string2</parametername>
</parameternamelist>
<parameterdescription>
<para>second string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true for case sensitive comparison </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>edit distance. Lower distances indicate more similar strings. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" line="222" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.cpp" bodystart="125" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStringUtils_1a420629b7d1bc2fd03200c6b32efc1e9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsStringUtils::longestCommonSubstring</definition>
        <argsstring>(const QString &amp;string1, const QString &amp;string2, bool caseSensitive=false)</argsstring>
        <name>longestCommonSubstring</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string1</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>string2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the longest common substring between two strings. </para>        </briefdescription>
        <detaileddescription>
<para>This substring is the longest string that is a substring of the two input strings. For example, the longest common substring of &quot;ABABC&quot; and &quot;BABCA&quot; is &quot;ABC&quot;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string1</parametername>
</parameternamelist>
<parameterdescription>
<para>first string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string2</parametername>
</parameternamelist>
<parameterdescription>
<para>second string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true for case sensitive comparison </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>longest common substring </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" line="233" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.cpp" bodystart="207" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStringUtils_1a1453382e0c1f2ba1730fe5c9198587f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsStringUtils::soundex</definition>
        <argsstring>(const QString &amp;string)</argsstring>
        <name>soundex</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Returns the Soundex representation of a string. </para>        </briefdescription>
        <detaileddescription>
<para>Soundex is a phonetic matching algorithm, so strings with similar sounds should be represented by the same Soundex code. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>4 letter Soundex code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" line="252" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.cpp" bodystart="309" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classQgsStringUtils_1ad92cef151468f261bcab20295c648927" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsStringUtils::wordWrap</definition>
        <argsstring>(const QString &amp;string, int length, bool useMaxLineLength=true, const QString &amp;customDelimiter=QString())</argsstring>
        <name>wordWrap</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useMaxLineLength</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>customDelimiter</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Automatically wraps a <emphasis>string</emphasis> by inserting new line characters at appropriate locations in the string. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>length</emphasis> argument specifies either the minimum or maximum length of lines desired, depending on whether <emphasis>useMaxLineLength</emphasis> is true. If <emphasis>useMaxLineLength</emphasis> is true, then the string will be wrapped so that each line ideally will not exceed <emphasis>length</emphasis> of characters. If <emphasis>useMaxLineLength</emphasis> is false, then the string will be wrapped so that each line will ideally exceed <emphasis>length</emphasis> of characters.</para><para>A custom delimiter can be specified to use instead of space characters.</para><para><simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" line="276" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.cpp" bodystart="445" bodyend="513"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility functions for working with strings. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.11 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" line="181" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsstringutils.h" bodystart="180" bodyend="277"/>
    <listofallmembers>
      <member refid="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3a6edbee1344df4b129857c181a2bd1cd9" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>AllLowercase</name></member>
      <member refid="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3aafe0aa16ab5d39608363501a55c3375e" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>AllUppercase</name></member>
      <member refid="classQgsStringUtils_1ad6eda440f43ba67dfbeefc319a8a151f" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>ampersandEncode</name></member>
      <member refid="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>Capitalization</name></member>
      <member refid="classQgsStringUtils_1a95845a2aab96be58883f3c45eebe7242" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>capitalize</name></member>
      <member refid="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3abcf5a3808de22a3aa56c32975953db2f" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>ForceFirstLetterToCapital</name></member>
      <member refid="classQgsStringUtils_1a06627c9c4ad20c6809b169e90fd56303" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>hammingDistance</name></member>
      <member refid="classQgsStringUtils_1aae4d2ef2d520a7e75b9ae1e5ea1eba6e" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>insertLinks</name></member>
      <member refid="classQgsStringUtils_1a3196a8eff8d183dd82d0dd862295a0dc" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>levenshteinDistance</name></member>
      <member refid="classQgsStringUtils_1a420629b7d1bc2fd03200c6b32efc1e9c" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>longestCommonSubstring</name></member>
      <member refid="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3a4ca7537376c4a25d7fbc2e4d8d6eead0" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>MixedCase</name></member>
      <member refid="classQgsStringUtils_1a1453382e0c1f2ba1730fe5c9198587f5" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>soundex</name></member>
      <member refid="classQgsStringUtils_1ab28b90964a49f560bc82b366f42791c3a9546f8ccd82aadbc3a0e8aa0d931db99" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>TitleCase</name></member>
      <member refid="classQgsStringUtils_1ad92cef151468f261bcab20295c648927" prot="public" virt="non-virtual"><scope>QgsStringUtils</scope><name>wordWrap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
