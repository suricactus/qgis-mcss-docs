<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsConditionalStyle" kind="class" language="C++" prot="public">
    <compoundname>QgsConditionalStyle</compoundname>
    <includes refid="qgsconditionalstyle_8h" local="no">qgsconditionalstyle.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsConditionalStyle_1aec8a9cf4dc241bcd38c72b271a291dfa" prot="private" static="no" mutable="no">
        <type>QColor</type>
        <definition>QColor QgsConditionalStyle::mBackColor</definition>
        <argsstring></argsstring>
        <name>mBackColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="260" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsConditionalStyle_1a4486989f3db24e953a3c4bbc5de008b3" prot="private" static="no" mutable="no">
        <type>QFont</type>
        <definition>QFont QgsConditionalStyle::mFont</definition>
        <argsstring></argsstring>
        <name>mFont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="259" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsConditionalStyle_1a7d43fa9a5aa698c847f8a7006b0cd8a4" prot="private" static="no" mutable="no">
        <type>QPixmap</type>
        <definition>QPixmap QgsConditionalStyle::mIcon</definition>
        <argsstring></argsstring>
        <name>mIcon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="262" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsConditionalStyle_1ae559fcb724141304fc882f1e8e0c6933" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsConditionalStyle::mName</definition>
        <argsstring></argsstring>
        <name>mName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="256" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsConditionalStyle_1a9b646bb3e3e856f5e92a2411a167852a" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsConditionalStyle::mRule</definition>
        <argsstring></argsstring>
        <name>mRule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="257" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsConditionalStyle_1a747ab83a1c743eb7412870dadb68fa6d" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classQgsSymbol" kindref="compound">QgsSymbol</ref> &gt;</type>
        <definition>std::unique_ptr&lt;QgsSymbol&gt; QgsConditionalStyle::mSymbol</definition>
        <argsstring></argsstring>
        <name>mSymbol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="258" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsConditionalStyle_1a0977ba40b4cc5e566c9ce0a0d5c6b22e" prot="private" static="no" mutable="no">
        <type>QColor</type>
        <definition>QColor QgsConditionalStyle::mTextColor</definition>
        <argsstring></argsstring>
        <name>mTextColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="261" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsConditionalStyle_1a1074141ca4c0f9cb5d616c6cccfdd961" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsConditionalStyle::mValid</definition>
        <argsstring></argsstring>
        <name>mValid</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="255" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsConditionalStyle_1a49bf8d94601b03af87d11311bc1b78ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsConditionalStyle::QgsConditionalStyle</definition>
        <argsstring>()</argsstring>
        <name>QgsConditionalStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="89" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1acb0dbff61a3da9ca3e8131d816540d82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsConditionalStyle::QgsConditionalStyle</definition>
        <argsstring>(const QgsConditionalStyle &amp;other)</argsstring>
        <name>QgsConditionalStyle</name>
        <param>
          <type>const <ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="90" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="132" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a72fd01a095d5e6019b1593a2b670d68e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsConditionalStyle::QgsConditionalStyle</definition>
        <argsstring>(const QString &amp;rule)</argsstring>
        <name>QgsConditionalStyle</name>
        <param>
          <type>const QString &amp;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="91" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1abe34e0f6cca2a7292ab9c4ea1737f281" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor QgsConditionalStyle::backgroundColor</definition>
        <argsstring>() const</argsstring>
        <name>backgroundColor</name>
        <briefdescription>
<para>The background color for style. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>QColor for background color </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="187" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a1b4155b0093a9d3015b678fbeecf505e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsConditionalStyle::displayText</definition>
        <argsstring>() const</argsstring>
        <name>displayText</name>
        <briefdescription>
<para>The name of the style. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The name of the style. Names are optional so might be empty. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="150" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1ac55d11def14ef78a14bb193ffbb3b632" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QFont</type>
        <definition>QFont QgsConditionalStyle::font</definition>
        <argsstring>() const</argsstring>
        <name>font</name>
        <briefdescription>
<para>The font for the style. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>QFont for the style </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="200" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1afbd6d0023a3d967a832882b7f15cd061" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPixmap</type>
        <definition>QPixmap QgsConditionalStyle::icon</definition>
        <argsstring>() const</argsstring>
        <name>icon</name>
        <briefdescription>
<para>The icon set for style generated from the set symbol. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A QPixmap that was set for the icon using the symbol </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="162" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1adb4d3d2618ab7cb59f1f84b552862d34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsConditionalStyle::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>isValid Check if this rule is valid. </para>        </briefdescription>
        <detaileddescription>
<para>A valid rule has one or more properties set. <simplesect kind="return"><para>True if the rule is valid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="214" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a41b3249e77400122076d5e8e5519d61a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsConditionalStyle::matches</definition>
        <argsstring>(const QVariant &amp;value, QgsExpressionContext &amp;context) const</argsstring>
        <name>matches</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Check if the rule matches using the given value and feature. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The current value being checked. The &quot;value&quot; variable from the context is replaced with this value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression context for evaluating rule expression </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True of the rule matches against the given feature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="101" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a20db7a73695d01c528cd1c768941cedd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsConditionalStyle::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
<para>The name of the style. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The name of the style. Names are optional so might be empty. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="156" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a7919a0835b6dc231c1d0d4c090b716e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref> &amp;</type>
        <definition>QgsConditionalStyle &amp; QgsConditionalStyle::operator=</definition>
        <argsstring>(const QgsConditionalStyle &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="93" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="145" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a007d4344f403119430ed0e94f2d9661f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsConditionalStyle::readXml</definition>
        <argsstring>(const QDomNode &amp;node, const QgsReadWriteContext &amp;context)</argsstring>
        <name>readXml</name>
        <param>
          <type>const QDomNode &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Reads vector conditional style specific state from layer Dom node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="245" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="290" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a53b08aeba082dd1dd6ab6ec59736c342" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPixmap</type>
        <definition>QPixmap QgsConditionalStyle::renderPreview</definition>
        <argsstring>() const</argsstring>
        <name>renderPreview</name>
        <briefdescription>
<para>Render a preview icon of the rule. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>QPixmap preview of the style </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="107" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="194" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1ac14f2ce05187cd4d2e2c10ca389c515f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsConditionalStyle::rule</definition>
        <argsstring>() const</argsstring>
        <name>rule</name>
        <briefdescription>
<para>The condition rule set for the style. </para>        </briefdescription>
        <detaileddescription>
<para>Rule may contain variable @value to represent the current value <simplesect kind="return"><para>QString of the current set rule </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="207" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1ab9c1403bdc462b05c5735f4c2ef9c1f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsConditionalStyle::setBackgroundColor</definition>
        <argsstring>(const QColor &amp;value)</argsstring>
        <name>setBackgroundColor</name>
        <param>
          <type>const QColor &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the background color for the style. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>QColor for background color </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="126" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1abbd4d03b497a6c8469d162ed7f23fd30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsConditionalStyle::setFont</definition>
        <argsstring>(const QFont &amp;value)</argsstring>
        <name>setFont</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the font for the style. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>QFont to be used for text </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="138" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a2d60f9a8ac4f58ef334dd72999fcdff4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsConditionalStyle::setName</definition>
        <argsstring>(const QString &amp;value)</argsstring>
        <name>setName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the name of the style. </para>        </briefdescription>
        <detaileddescription>
<para>Names are optional but handy for display <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The name given to the style </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="113" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1aa0ceaccadd8b4776258b282a73a6d1d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsConditionalStyle::setRule</definition>
        <argsstring>(const QString &amp;value)</argsstring>
        <name>setRule</name>
        <param>
          <type>const QString &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the rule for the style. </para>        </briefdescription>
        <detaileddescription>
<para>Rules should be of <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> syntax. Special value of @value is replaced at run time with the check value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> style rule to use for this style </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="120" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a286d905b3089acf0f50cd28bd5f16935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsConditionalStyle::setSymbol</definition>
        <argsstring>(QgsSymbol *value)</argsstring>
        <name>setSymbol</name>
        <param>
          <type><ref refid="classQgsSymbol" kindref="compound">QgsSymbol</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the icon for the style. </para>        </briefdescription>
        <detaileddescription>
<para>Icons are generated from symbols <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classQgsSymbol" kindref="compound">QgsSymbol</ref> to be used when generating the icon </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="144" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="173" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a89633b28f0f9e3be42176bf9f01077bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsConditionalStyle::setTextColor</definition>
        <argsstring>(const QColor &amp;value)</argsstring>
        <name>setTextColor</name>
        <param>
          <type>const QColor &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the text color for the style. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>QColor for text color </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="132" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a6783810c84a9218a91486afc6e34c7ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsSymbol" kindref="compound">QgsSymbol</ref> *</type>
        <definition>QgsSymbol* QgsConditionalStyle::symbol</definition>
        <argsstring>() const</argsstring>
        <name>symbol</name>
        <briefdescription>
<para>The symbol used to generate the icon for the style. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The <ref refid="classQgsSymbol" kindref="compound">QgsSymbol</ref> used for the icon </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="168" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1ac11d0878e5f058934579a0729b3d2108" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor QgsConditionalStyle::textColor</definition>
        <argsstring>() const</argsstring>
        <name>textColor</name>
        <briefdescription>
<para>The text color set for style. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>QColor for text color </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="174" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1afdcb27f77e428d08f9e12a4d405ae329" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsConditionalStyle::validBackgroundColor</definition>
        <argsstring>() const</argsstring>
        <name>validBackgroundColor</name>
        <briefdescription>
<para>Check if the background color is valid for render. </para>        </briefdescription>
        <detaileddescription>
<para>Valid colors are non invalid QColors and a color with a &gt; 0 alpha <simplesect kind="return"><para>True of the color set for background is valid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="194" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1ad21fc50e10af6bb5570251317b585328" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsConditionalStyle::validTextColor</definition>
        <argsstring>() const</argsstring>
        <name>validTextColor</name>
        <briefdescription>
<para>Check if the text color is valid for render. </para>        </briefdescription>
        <detaileddescription>
<para>Valid colors are non invalid QColors and a color with a &gt; 0 alpha <simplesect kind="return"><para>True of the color set for text is valid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="181" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1ad15f37a4e85e8fb3602a8f5e0b4c5462" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsConditionalStyle::writeXml</definition>
        <argsstring>(QDomNode &amp;node, QDomDocument &amp;doc, const QgsReadWriteContext &amp;context) const</argsstring>
        <name>writeXml</name>
        <param>
          <type>QDomNode &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Write vector conditional style specific state from layer Dom node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="250" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="270" bodyend="288"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsConditionalStyle_1a20f76b026b34fa9987ec83a758a4a10a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref></type>
        <definition>QgsConditionalStyle QgsConditionalStyle::compressStyles</definition>
        <argsstring>(const QList&lt; QgsConditionalStyle &gt; &amp;styles)</argsstring>
        <name>compressStyles</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref> &gt; &amp;</type>
          <declname>styles</declname>
        </param>
        <briefdescription>
<para>Compress a list of styles into a single style. </para>        </briefdescription>
        <detaileddescription>
<para>This can be used to stack the elements of the styles. The font of the last style is used in the output. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>styles</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of styles to compress down </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A single style generated from joining each style property. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="240" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="254" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1af92e9470586382b1e116ff0edd0bb32f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref></type>
        <definition>QgsConditionalStyle QgsConditionalStyle::matchingConditionalStyle</definition>
        <argsstring>(const QList&lt; QgsConditionalStyle &gt; &amp;styles, const QVariant &amp;value, QgsExpressionContext &amp;context)</argsstring>
        <name>matchingConditionalStyle</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref> &gt; &amp;</type>
          <declname>styles</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Find and return the matching style for the value and feature. </para>        </briefdescription>
        <detaileddescription>
<para>If no match is found a invalid <ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref> is return.</para><para><simplesect kind="return"><para>A conditional style that matches the value and feature. Check with <ref refid="classQgsConditionalStyle_1adb4d3d2618ab7cb59f1f84b552862d34" kindref="member">QgsConditionalStyle::isValid()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="232" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="244" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classQgsConditionalStyle_1a9fca42cd4917e5e2b877611f1b90b241" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref> &gt;</type>
        <definition>QList&lt; QgsConditionalStyle &gt; QgsConditionalStyle::matchingConditionalStyles</definition>
        <argsstring>(const QList&lt; QgsConditionalStyle &gt; &amp;styles, const QVariant &amp;value, QgsExpressionContext &amp;context)</argsstring>
        <name>matchingConditionalStyles</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref> &gt; &amp;</type>
          <declname>styles</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Find and return the matching styles for the value and feature. </para>        </briefdescription>
        <detaileddescription>
<para>If no match is found a invalid <ref refid="classQgsConditionalStyle" kindref="compound">QgsConditionalStyle</ref> is return.</para><para><simplesect kind="return"><para>A conditional style that matches the value and feature. Check with <ref refid="classQgsConditionalStyle_1adb4d3d2618ab7cb59f1f84b552862d34" kindref="member">QgsConditionalStyle::isValid()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="223" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.cpp" bodystart="233" bodyend="242"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Conditional styling for a rule. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" line="87" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsconditionalstyle.h" bodystart="86" bodyend="263"/>
    <listofallmembers>
      <member refid="classQgsConditionalStyle_1abe34e0f6cca2a7292ab9c4ea1737f281" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>backgroundColor</name></member>
      <member refid="classQgsConditionalStyle_1a20f76b026b34fa9987ec83a758a4a10a" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>compressStyles</name></member>
      <member refid="classQgsConditionalStyle_1a1b4155b0093a9d3015b678fbeecf505e" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>displayText</name></member>
      <member refid="classQgsConditionalStyle_1ac55d11def14ef78a14bb193ffbb3b632" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>font</name></member>
      <member refid="classQgsConditionalStyle_1afbd6d0023a3d967a832882b7f15cd061" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>icon</name></member>
      <member refid="classQgsConditionalStyle_1adb4d3d2618ab7cb59f1f84b552862d34" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>isValid</name></member>
      <member refid="classQgsConditionalStyle_1a41b3249e77400122076d5e8e5519d61a" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>matches</name></member>
      <member refid="classQgsConditionalStyle_1af92e9470586382b1e116ff0edd0bb32f" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>matchingConditionalStyle</name></member>
      <member refid="classQgsConditionalStyle_1a9fca42cd4917e5e2b877611f1b90b241" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>matchingConditionalStyles</name></member>
      <member refid="classQgsConditionalStyle_1aec8a9cf4dc241bcd38c72b271a291dfa" prot="private" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>mBackColor</name></member>
      <member refid="classQgsConditionalStyle_1a4486989f3db24e953a3c4bbc5de008b3" prot="private" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>mFont</name></member>
      <member refid="classQgsConditionalStyle_1a7d43fa9a5aa698c847f8a7006b0cd8a4" prot="private" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>mIcon</name></member>
      <member refid="classQgsConditionalStyle_1ae559fcb724141304fc882f1e8e0c6933" prot="private" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>mName</name></member>
      <member refid="classQgsConditionalStyle_1a9b646bb3e3e856f5e92a2411a167852a" prot="private" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>mRule</name></member>
      <member refid="classQgsConditionalStyle_1a747ab83a1c743eb7412870dadb68fa6d" prot="private" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>mSymbol</name></member>
      <member refid="classQgsConditionalStyle_1a0977ba40b4cc5e566c9ce0a0d5c6b22e" prot="private" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>mTextColor</name></member>
      <member refid="classQgsConditionalStyle_1a1074141ca4c0f9cb5d616c6cccfdd961" prot="private" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>mValid</name></member>
      <member refid="classQgsConditionalStyle_1a20db7a73695d01c528cd1c768941cedd" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>name</name></member>
      <member refid="classQgsConditionalStyle_1a7919a0835b6dc231c1d0d4c090b716e0" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>operator=</name></member>
      <member refid="classQgsConditionalStyle_1a49bf8d94601b03af87d11311bc1b78ed" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>QgsConditionalStyle</name></member>
      <member refid="classQgsConditionalStyle_1acb0dbff61a3da9ca3e8131d816540d82" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>QgsConditionalStyle</name></member>
      <member refid="classQgsConditionalStyle_1a72fd01a095d5e6019b1593a2b670d68e" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>QgsConditionalStyle</name></member>
      <member refid="classQgsConditionalStyle_1a007d4344f403119430ed0e94f2d9661f" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>readXml</name></member>
      <member refid="classQgsConditionalStyle_1a53b08aeba082dd1dd6ab6ec59736c342" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>renderPreview</name></member>
      <member refid="classQgsConditionalStyle_1ac14f2ce05187cd4d2e2c10ca389c515f" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>rule</name></member>
      <member refid="classQgsConditionalStyle_1ab9c1403bdc462b05c5735f4c2ef9c1f6" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>setBackgroundColor</name></member>
      <member refid="classQgsConditionalStyle_1abbd4d03b497a6c8469d162ed7f23fd30" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>setFont</name></member>
      <member refid="classQgsConditionalStyle_1a2d60f9a8ac4f58ef334dd72999fcdff4" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>setName</name></member>
      <member refid="classQgsConditionalStyle_1aa0ceaccadd8b4776258b282a73a6d1d1" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>setRule</name></member>
      <member refid="classQgsConditionalStyle_1a286d905b3089acf0f50cd28bd5f16935" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>setSymbol</name></member>
      <member refid="classQgsConditionalStyle_1a89633b28f0f9e3be42176bf9f01077bd" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>setTextColor</name></member>
      <member refid="classQgsConditionalStyle_1a6783810c84a9218a91486afc6e34c7ac" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>symbol</name></member>
      <member refid="classQgsConditionalStyle_1ac11d0878e5f058934579a0729b3d2108" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>textColor</name></member>
      <member refid="classQgsConditionalStyle_1afdcb27f77e428d08f9e12a4d405ae329" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>validBackgroundColor</name></member>
      <member refid="classQgsConditionalStyle_1ad21fc50e10af6bb5570251317b585328" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>validTextColor</name></member>
      <member refid="classQgsConditionalStyle_1ad15f37a4e85e8fb3602a8f5e0b4c5462" prot="public" virt="non-virtual"><scope>QgsConditionalStyle</scope><name>writeXml</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
