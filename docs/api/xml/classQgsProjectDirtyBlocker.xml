<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsProjectDirtyBlocker" kind="class" language="C++" prot="public">
    <compoundname>QgsProjectDirtyBlocker</compoundname>
    <includes refid="qgsproject_8h" local="no">qgsproject.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsProjectDirtyBlocker_1a2363df5ee4d4020608772c10c7f65783" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsProject" kindref="compound">QgsProject</ref> *</type>
        <definition>QgsProject* QgsProjectDirtyBlocker::mProject</definition>
        <argsstring></argsstring>
        <name>mProject</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproject.h" line="1561" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproject.h" bodystart="1561" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsProjectDirtyBlocker_1a43e0221807ddc5387e73a57ee61cfed1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsProjectDirtyBlocker::QgsProjectDirtyBlocker</definition>
        <argsstring>(QgsProject *project)</argsstring>
        <name>QgsProjectDirtyBlocker</name>
        <param>
          <type><ref refid="classQgsProject" kindref="compound">QgsProject</ref> *</type>
          <declname>project</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsProjectDirtyBlocker" kindref="compound">QgsProjectDirtyBlocker</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This will block dirtying the specified <emphasis>project</emphasis> for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproject.h" line="1543" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproject.h" bodystart="1543" bodyend="1547"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectDirtyBlocker_1af56fde40b8609c0e72701789334b4ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsProjectDirtyBlocker::QgsProjectDirtyBlocker</definition>
        <argsstring>(const QgsProjectDirtyBlocker &amp;other)=delete</argsstring>
        <name>QgsProjectDirtyBlocker</name>
        <param>
          <type>const <ref refid="classQgsProjectDirtyBlocker" kindref="compound">QgsProjectDirtyBlocker</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="classQgsProjectDirtyBlocker" kindref="compound">QgsProjectDirtyBlocker</ref> cannot be copied. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproject.h" line="1550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectDirtyBlocker_1a7c173f2463e556aef90deaebfa61b02f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsProjectDirtyBlocker::~QgsProjectDirtyBlocker</definition>
        <argsstring>()</argsstring>
        <name>~QgsProjectDirtyBlocker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproject.h" line="1555" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproject.h" bodystart="1555" bodyend="1558"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProjectDirtyBlocker_1a2adcfd9e689bcf0adc62ccfc1b7ff240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsProjectDirtyBlocker" kindref="compound">QgsProjectDirtyBlocker</ref> &amp;</type>
        <definition>QgsProjectDirtyBlocker&amp; QgsProjectDirtyBlocker::operator=</definition>
        <argsstring>(const QgsProjectDirtyBlocker &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsProjectDirtyBlocker" kindref="compound">QgsProjectDirtyBlocker</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="classQgsProjectDirtyBlocker" kindref="compound">QgsProjectDirtyBlocker</ref> cannot be copied. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproject.h" line="1553" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Temporarily blocks <ref refid="classQgsProject" kindref="compound">QgsProject</ref> &quot;dirtying&quot; for the lifetime of the object. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classQgsProjectDirtyBlocker" kindref="compound">QgsProjectDirtyBlocker</ref> supports &quot;stacked&quot; blocking, so two QgsProjectDirtyBlockers created for the same project will both need to be destroyed before the project can be dirtied again.</para><para>Note that <ref refid="classQgsProjectDirtyBlocker" kindref="compound">QgsProjectDirtyBlocker</ref> only blocks calls which set the project as dirty - calls which set the project as clean are not blocked.</para><para>Python scripts should not use <ref refid="classQgsProjectDirtyBlocker" kindref="compound">QgsProjectDirtyBlocker</ref> directly. Instead, use QgsProject.blockDirtying() <programlisting><codeline><highlight class="normal">project<sp/>=<sp/><ref refid="classQgsProject_1a26df6e8516ac9625901108875681803b" kindref="member">QgsProject.instance</ref>()</highlight></codeline>
<codeline><highlight class="normal">with<sp/>QgsProject.blockDirtying(project):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>do<sp/>something</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><ref refid="classQgsProject_1acf77f3acefd3744065b8f082f3547f3f" kindref="member">QgsProject::setDirty()</ref></para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsproject.h" line="1535" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsproject.h" bodystart="1534" bodyend="1566"/>
    <listofallmembers>
      <member refid="classQgsProjectDirtyBlocker_1a2363df5ee4d4020608772c10c7f65783" prot="private" virt="non-virtual"><scope>QgsProjectDirtyBlocker</scope><name>mProject</name></member>
      <member refid="classQgsProjectDirtyBlocker_1a2adcfd9e689bcf0adc62ccfc1b7ff240" prot="public" virt="non-virtual"><scope>QgsProjectDirtyBlocker</scope><name>operator=</name></member>
      <member refid="classQgsProjectDirtyBlocker_1a43e0221807ddc5387e73a57ee61cfed1" prot="public" virt="non-virtual"><scope>QgsProjectDirtyBlocker</scope><name>QgsProjectDirtyBlocker</name></member>
      <member refid="classQgsProjectDirtyBlocker_1af56fde40b8609c0e72701789334b4ab6" prot="public" virt="non-virtual"><scope>QgsProjectDirtyBlocker</scope><name>QgsProjectDirtyBlocker</name></member>
      <member refid="classQgsProjectDirtyBlocker_1a7c173f2463e556aef90deaebfa61b02f" prot="public" virt="non-virtual"><scope>QgsProjectDirtyBlocker</scope><name>~QgsProjectDirtyBlocker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
