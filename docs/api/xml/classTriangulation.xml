<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classTriangulation" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Triangulation</compoundname>
    <derivedcompoundref refid="classDualEdgeTriangulation" prot="public" virt="non-virtual">DualEdgeTriangulation</derivedcompoundref>
    <derivedcompoundref refid="classTriDecorator" prot="public" virt="non-virtual">TriDecorator</derivedcompoundref>
    <includes refid="Triangulation_8h" local="no">Triangulation.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classTriangulation_1ab0d77a7723f3dec85caa69106a6df413" prot="public" static="no">
        <name>ForcedCrossBehavior</name>
        <enumvalue id="classTriangulation_1ab0d77a7723f3dec85caa69106a6df413aeaadcebf3abc9ed8808490d773ca0dc9" prot="public">
          <name>SnappingTypeVertex</name>
          <briefdescription>
<para>The second inserted forced line is snapped to the closest vertice of the first inserted forced line. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classTriangulation_1ab0d77a7723f3dec85caa69106a6df413aa560416e991c80889a0751d3e05cd5d6" prot="public">
          <name>DeleteFirst</name>
          <briefdescription>
<para>The status of the first inserted forced line is reset to that of a normal edge (so that the second inserted forced line remain and the first not) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classTriangulation_1ab0d77a7723f3dec85caa69106a6df413aa60878fb5905d503f9537994c397c5c1" prot="public">
          <name>InsertVertex</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration describing the behavior, if two forced lines cross. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="43" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" bodystart="42" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTriangulation_1a6651d84a634771ff6f1cd1de45ee6131" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Triangulation::~Triangulation</definition>
        <argsstring>()=default</argsstring>
        <name>~Triangulation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1abb1841159d194ddc50c9455615af288f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Triangulation::addLine</definition>
        <argsstring>(const QVector&lt; QgsPoint &gt; &amp;points, QgsInterpolator::SourceType lineType)=0</argsstring>
        <name>addLine</name>
        <reimplementedby refid="classTriDecorator_1a85071736f25e85579b4d062edf3f2f5d">addLine</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a4b0d932cc9904abc8563a5c49e7a7924">addLine</reimplementedby>
        <param>
          <type>const QVector&lt; <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="classQgsInterpolator_1a8e8d0a3f66caf3cbf844ddf8baf67f2f" kindref="member">QgsInterpolator::SourceType</ref></type>
          <declname>lineType</declname>
        </param>
        <briefdescription>
<para>Adds a line (e.g. </para>        </briefdescription>
        <detaileddescription>
<para>a break-, structure- or an isoline) to the triangulation, by specifying a list of source <emphasis>points</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a0d17ecf5db958ac13c7e7ed2d97168eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Triangulation::addPoint</definition>
        <argsstring>(const QgsPoint &amp;point)=0</argsstring>
        <name>addPoint</name>
        <reimplementedby refid="classTriDecorator_1a6359561249cce5e8650d7bc802ae101d">addPoint</reimplementedby>
        <reimplementedby refid="classNormVecDecorator_1af6c7c88358a1906dddc276a1eb81a152">addPoint</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1acd489c0efecba6bcc6f20a139755f38d">addPoint</reimplementedby>
        <param>
          <type>const <ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Adds a <emphasis>point</emphasis> to the triangulation. </para>        </briefdescription>
        <detaileddescription>
<para>The point should have a z-value matching the value to interpolate. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1aa9ee556c46cadd40d6b8f6bc3423fa01" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Triangulation::calcNormal</definition>
        <argsstring>(double x, double y, Vector3D *result)=0</argsstring>
        <name>calcNormal</name>
        <reimplementedby refid="classTriDecorator_1ab6db5c6fceaef209223402a2f6603534">calcNormal</reimplementedby>
        <reimplementedby refid="classNormVecDecorator_1a571738bc9fef8c46dd0ec48e6bf12c35">calcNormal</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a7a0970ddd6a39bf1af490c2ba541ed6b">calcNormal</reimplementedby>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classVector3D" kindref="compound">Vector3D</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Calculates the normal at a point on the surface and assigns it to &apos;result&apos;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case of success and false in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a51951fbe164a241e8d1e64051c666b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Triangulation::calcPoint</definition>
        <argsstring>(double x, double y, QgsPoint &amp;result)=0</argsstring>
        <name>calcPoint</name>
        <reimplementedby refid="classTriDecorator_1a8edeb5251af5b3e95eaad8964de8c1f5">calcPoint</reimplementedby>
        <reimplementedby refid="classNormVecDecorator_1a5a51d6b2d83fa689ee6dc8bbebfb6fb7">calcPoint</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a2347bf831fea72b60243df7ee48c73af">calcPoint</reimplementedby>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Calculates x-, y and z-value of the point on the surface and assigns it to &apos;result&apos;. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true in case of success and flase in case of failure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1ac007a071c6a826712077bec466f095ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Triangulation::eliminateHorizontalTriangles</definition>
        <argsstring>()=0</argsstring>
        <name>eliminateHorizontalTriangles</name>
        <reimplementedby refid="classNormVecDecorator_1a590ea619e3aa35db0962237a7d8791fe">eliminateHorizontalTriangles</reimplementedby>
        <reimplementedby refid="classTriDecorator_1a4efe2ad35bf9daba3e867114b504b0ff">eliminateHorizontalTriangles</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a401d272d3c5ad3cf951d99ddf7ca64a0">eliminateHorizontalTriangles</reimplementedby>
        <briefdescription>
<para>Eliminates the horizontal triangles by swapping. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1ac5f39bfbe393ba52807fe0046eb74f02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Triangulation::getNumberOfPoints</definition>
        <argsstring>() const =0</argsstring>
        <name>getNumberOfPoints</name>
        <reimplementedby refid="classTriDecorator_1a041e7001af079726e88646cc0b2f8ff4">getNumberOfPoints</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a53f45d11a3699fc664d9d327d9838d91">getNumberOfPoints</reimplementedby>
        <briefdescription>
<para>Returns the number of points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a204cbaa8ab2ae229006c630dae5175c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Triangulation::getOppositePoint</definition>
        <argsstring>(int p1, int p2)=0</argsstring>
        <name>getOppositePoint</name>
        <reimplementedby refid="classTriDecorator_1a51972cf0cee52d92a66905da03694429">getOppositePoint</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a17653c0cbe5d0cba5ea26b8f3b09d92b">getOppositePoint</reimplementedby>
        <param>
          <type>int</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Returns the number of the point opposite to the triangle points p1, p2 (which have to be on a halfedge). </para>        </briefdescription>
        <detaileddescription>
<para>Returns -1 if point is a virtual point. Returns -10 if point crosses over edges. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a9f3458d5e869ea75fdbd5e4fc6428e3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> *</type>
        <definition>virtual QgsPoint* Triangulation::getPoint</definition>
        <argsstring>(int i) const =0</argsstring>
        <name>getPoint</name>
        <reimplementedby refid="classTriDecorator_1a5c35ffcac37b8c685683462a68b71cd7">getPoint</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1acdddaab0f0c9e5719ef2928769b904a4">getPoint</reimplementedby>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to the point with number i. Any virtual points must have the number -1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1af24302c688e62ca12e7d0a7c77918448" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>QList&lt; int &gt; *</type>
        <definition>virtual QList&lt;int&gt;* Triangulation::getPointsAroundEdge</definition>
        <argsstring>(double x, double y)=0</argsstring>
        <name>getPointsAroundEdge</name>
        <reimplementedby refid="classTriDecorator_1ad7e52dcdf08e765e3f9bd204c8140ebf">getPointsAroundEdge</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a4013929acfbdef26db98a064d72092be">getPointsAroundEdge</reimplementedby>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns a value list with the numbers of the four points, which would be affected by an edge swap. </para>        </briefdescription>
        <detaileddescription>
<para>This function is e.g. needed by <ref refid="classNormVecDecorator" kindref="compound">NormVecDecorator</ref> to know the points, for which the normals have to be recalculated. The list has to be deleted by the code which calls this method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a168182a090503221f44caa336f7f32a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>QList&lt; int &gt;</type>
        <definition>virtual QList&lt;int&gt; Triangulation::getSurroundingTriangles</definition>
        <argsstring>(int pointno)=0</argsstring>
        <name>getSurroundingTriangles</name>
        <reimplementedby refid="classTriDecorator_1a8435abb814ebe8e8ebc19ef22c2422c7">getSurroundingTriangles</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1adbc8f25c60034f6ccdcea5e63ac69cc2">getSurroundingTriangles</reimplementedby>
        <param>
          <type>int</type>
          <declname>pointno</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to a value list with the information of the triangles surrounding (counterclockwise) a point. </para>        </briefdescription>
        <detaileddescription>
<para>Four integer values describe a triangle, the first three are the number of the half edges of the triangle and the fourth is -10, if the third (and most counterclockwise) edge is a breakline, and -20 otherwise. Any virtual point needs to have the number -1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a0c37090b51fe786f82acabd2937ebc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Triangulation::getTriangle</definition>
        <argsstring>(double x, double y, QgsPoint &amp;p1, int &amp;n1, QgsPoint &amp;p2, int &amp;n2, QgsPoint &amp;p3, int &amp;n3)=0</argsstring>
        <name>getTriangle</name>
        <reimplementedby refid="classTriDecorator_1ab68eac29cbfc2c33f338221cef5081cb">getTriangle</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a4484215f19577ad8cc8bb99de5d57c35">getTriangle</reimplementedby>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>n1</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>n2</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>n3</declname>
        </param>
        <briefdescription>
<para>Finds out in which triangle the point with coordinates x and y is and assigns the numbers of the vertices to &apos;n1&apos;, &apos;n2&apos; and &apos;n3&apos; and the vertices to &apos;p1&apos;, &apos;p2&apos; and &apos;p3&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a6608f6f58769ab9e629f6eaa87c6f4f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Triangulation::getTriangle</definition>
        <argsstring>(double x, double y, QgsPoint &amp;p1, QgsPoint &amp;p2, QgsPoint &amp;p3)=0</argsstring>
        <name>getTriangle</name>
        <reimplementedby refid="classTriDecorator_1a67598b0b97af7a1a2e80de563b2efc1b">getTriangle</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1ac968240e8e2097dfec115b463acdeb86">getTriangle</reimplementedby>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type><ref refid="classQgsPoint" kindref="compound">QgsPoint</ref> &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
<para>Finds out, in which triangle the point with coordinates x and y is and assigns the points at the vertices to &apos;p1&apos;, &apos;p2&apos; and &apos;p3. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1afee3ce4cf833bbf38bf87500eb3c3534" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Triangulation::getXMax</definition>
        <argsstring>() const =0</argsstring>
        <name>getXMax</name>
        <reimplementedby refid="classTriDecorator_1a36e7e5f550e18afe31bcc7021100d347">getXMax</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a41ab0eb0e8627c64584f193cba08a0ab">getXMax</reimplementedby>
        <briefdescription>
<para>Returns the largest x-coordinate value of the bounding box. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1aed8837bcf9ce2b2f10ce0061eb1c07b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Triangulation::getXMin</definition>
        <argsstring>() const =0</argsstring>
        <name>getXMin</name>
        <reimplementedby refid="classTriDecorator_1ac66eb2816a96e21bddbc61f96a42f20b">getXMin</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a0262dff3e2fe3e9f6221b86c1c9b552a">getXMin</reimplementedby>
        <briefdescription>
<para>Returns the smallest x-coordinate value of the bounding box. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a323d0e5054762e1c3e2fb031959e1165" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Triangulation::getYMax</definition>
        <argsstring>() const =0</argsstring>
        <name>getYMax</name>
        <reimplementedby refid="classTriDecorator_1a8469b2766af6ddd56c33c9e66a1a306a">getYMax</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a834b94369c90b9a13d10cda4c32ea57d">getYMax</reimplementedby>
        <briefdescription>
<para>Returns the largest y-coordinate value of the bounding box. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a8f8117facf20ddf7cfd28ad430639ff9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Triangulation::getYMin</definition>
        <argsstring>() const =0</argsstring>
        <name>getYMin</name>
        <reimplementedby refid="classTriDecorator_1a589baf17476f0eb665f8566107ca47d5">getYMin</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a632becf0680c3c2c1748094df4717058">getYMin</reimplementedby>
        <briefdescription>
<para>Returns the smallest x-coordinate value of the bounding box. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1ab221ea040cd6c811ca98c2750a495a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Triangulation::performConsistencyTest</definition>
        <argsstring>()=0</argsstring>
        <name>performConsistencyTest</name>
        <reimplementedby refid="classTriDecorator_1a46f66b5f76e6764508b41856d292691a">performConsistencyTest</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a2548323b00504792d8a962512ea3cf98">performConsistencyTest</reimplementedby>
        <briefdescription>
<para>Performs a consistency check, remove this later. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a7719a5a1a94dc4ffaebb86e344ee8269" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Triangulation::pointInside</definition>
        <argsstring>(double x, double y)=0</argsstring>
        <name>pointInside</name>
        <reimplementedby refid="classTriDecorator_1a879560412ec6e55e457b1bd918b0453d">pointInside</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1abf7f07cfc4c07060141f7634229a7781">pointInside</reimplementedby>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns true, if the point with coordinates x and y is inside the convex hull and false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a14f1679a5111de289a7516bee07cce9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Triangulation::ruppertRefinement</definition>
        <argsstring>()=0</argsstring>
        <name>ruppertRefinement</name>
        <reimplementedby refid="classTriDecorator_1a33589a9d16acb2bfd4333e406a9ea40c">ruppertRefinement</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a8d7c0e7de6a7c4c8287e6712bc6f5aa9">ruppertRefinement</reimplementedby>
        <briefdescription>
<para>Adds points to make the triangles better shaped (algorithm of ruppert) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1ab1a75337497178053d129e5ea9782838" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Triangulation::saveTriangulation</definition>
        <argsstring>(QgsFeatureSink *sink, QgsFeedback *feedback=nullptr) const =0</argsstring>
        <name>saveTriangulation</name>
        <reimplementedby refid="classNormVecDecorator_1a530951628c6a30912667c556690782ed">saveTriangulation</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a1bac7ab7a1af4705be6dff8c666d0d4d">saveTriangulation</reimplementedby>
        <param>
          <type><ref refid="classQgsFeatureSink" kindref="compound">QgsFeatureSink</ref> *</type>
          <declname>sink</declname>
        </param>
        <param>
          <type><ref refid="classQgsFeedback" kindref="compound">QgsFeedback</ref> *</type>
          <declname>feedback</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Saves the triangulation features to a feature <emphasis>sink</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>The sink must be setup to accept LineString features, with fields matching those returned by <ref refid="classTriangulation_1a1a34ead0d4a8b74fd1dbea0362316ea4" kindref="member">triangulationFields()</ref>.</para><para><simplesect kind="return"><para>true in case of success</para></simplesect>
<simplesect kind="see"><para><ref refid="classTriangulation_1a1a34ead0d4a8b74fd1dbea0362316ea4" kindref="member">triangulationFields()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a92fb14c42cc5d1df7c8a06717e0ad9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Triangulation::setBreakEdgeColor</definition>
        <argsstring>(int r, int g, int b)=0</argsstring>
        <name>setBreakEdgeColor</name>
        <reimplementedby refid="classTriDecorator_1a06f67f56817ff1e7c5d3e880d8f6bd85">setBreakEdgeColor</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1ac03fcc457c8dfcad2a8b5955648b4786">setBreakEdgeColor</reimplementedby>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Sets the color of the breaklines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a28e47fe32c7f48b82b8b6b9844e61fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Triangulation::setEdgeColor</definition>
        <argsstring>(int r, int g, int b)=0</argsstring>
        <name>setEdgeColor</name>
        <reimplementedby refid="classTriDecorator_1a6abccf9e7f67f067b30a864e3352fa05">setEdgeColor</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1acafec9bde50fbb251d38e6c946fc919b">setEdgeColor</reimplementedby>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Sets the color of the normal edges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1aa7607f541eecf3e432a3c8dd0816e003" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Triangulation::setForcedCrossBehavior</definition>
        <argsstring>(Triangulation::ForcedCrossBehavior b)=0</argsstring>
        <name>setForcedCrossBehavior</name>
        <reimplementedby refid="classTriDecorator_1a0bb2380dd0769a644155e2e60302e01c">setForcedCrossBehavior</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a568b90457b069c484301581a65223c79">setForcedCrossBehavior</reimplementedby>
        <param>
          <type><ref refid="classTriangulation_1ab0d77a7723f3dec85caa69106a6df413" kindref="member">Triangulation::ForcedCrossBehavior</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Draws the points, edges and the forced lines. </para>        </briefdescription>
        <detaileddescription>
<para>Sets the behavior of the triangulation in case of crossing forced lines </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a9f314cc09454591fd46a5a8b6389afa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Triangulation::setForcedEdgeColor</definition>
        <argsstring>(int r, int g, int b)=0</argsstring>
        <name>setForcedEdgeColor</name>
        <reimplementedby refid="classTriDecorator_1ac8b3ba093a39e9bfa91d2c8b11516224">setForcedEdgeColor</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1af83b74b89303d099bdaa9dfdec98b0f3">setForcedEdgeColor</reimplementedby>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Sets the color of the forced edges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1ad9a666e04a02c1e1aaf0fdffda56a9a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Triangulation::setTriangleInterpolator</definition>
        <argsstring>(TriangleInterpolator *interpolator)=0</argsstring>
        <name>setTriangleInterpolator</name>
        <reimplementedby refid="classTriDecorator_1a2d9d2a08b3cd4948ffcc8373b61130f7">setTriangleInterpolator</reimplementedby>
        <reimplementedby refid="classNormVecDecorator_1a18b4e1cee3d9d25d79cfbff9a139b158">setTriangleInterpolator</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a78c1ced446bc174f86d2f437c517ec38">setTriangleInterpolator</reimplementedby>
        <param>
          <type><ref refid="classTriangleInterpolator" kindref="compound">TriangleInterpolator</ref> *</type>
          <declname>interpolator</declname>
        </param>
        <briefdescription>
<para>Sets an interpolator object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulation_1a82285eb39eda3dd76fa921b25a2317df" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Triangulation::swapEdge</definition>
        <argsstring>(double x, double y)=0</argsstring>
        <name>swapEdge</name>
        <reimplementedby refid="classTriDecorator_1a01e8ab4ce4716dd2aaa23915e629d5b9">swapEdge</reimplementedby>
        <reimplementedby refid="classNormVecDecorator_1a9a64d8cd62aec3596b389c0b9f234b60">swapEdge</reimplementedby>
        <reimplementedby refid="classDualEdgeTriangulation_1a44f05630f5314513989291c5320ce6de">swapEdge</reimplementedby>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Reads the content of a taff-file. </para>        </briefdescription>
        <detaileddescription>
<para>Saves the content to a taff file Swaps the edge which is closest to the point with x and y coordinates (if this is possible) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="163" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classTriangulation_1a1a34ead0d4a8b74fd1dbea0362316ea4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFields" kindref="compound">QgsFields</ref></type>
        <definition>QgsFields Triangulation::triangulationFields</definition>
        <argsstring>()</argsstring>
        <name>triangulationFields</name>
        <briefdescription>
<para>Returns the fields output by features when calling <ref refid="classTriangulation_1ab1a75337497178053d129e5ea9782838" kindref="member">saveTriangulation()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>These fields should be used when creating a suitable feature sink for <ref refid="classTriangulation_1ab1a75337497178053d129e5ea9782838" kindref="member">saveTriangulation()</ref> <simplesect kind="see"><para><ref refid="classTriangulation_1ab1a75337497178053d129e5ea9782838" kindref="member">saveTriangulation()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="172" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.cpp" bodystart="18" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for <ref refid="classTriangulation" kindref="compound">Triangulation</ref> classes. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Not available in Python bindings. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10285">
        <label>TriDecorator</label>
        <link refid="classTriDecorator"/>
        <childnode refid="10283" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10286">
        <label>NormVecDecorator</label>
        <link refid="classNormVecDecorator"/>
        <childnode refid="10285" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10284">
        <label>DualEdgeTriangulation</label>
        <link refid="classDualEdgeTriangulation"/>
        <childnode refid="10283" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10283">
        <label>Triangulation</label>
        <link refid="classTriangulation"/>
      </node>
    </inheritancegraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" line="39" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/analysis/interpolation/Triangulation.h" bodystart="38" bodyend="186"/>
    <listofallmembers>
      <member refid="classTriangulation_1abb1841159d194ddc50c9455615af288f" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>addLine</name></member>
      <member refid="classTriangulation_1a0d17ecf5db958ac13c7e7ed2d97168eb" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>addPoint</name></member>
      <member refid="classTriangulation_1aa9ee556c46cadd40d6b8f6bc3423fa01" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>calcNormal</name></member>
      <member refid="classTriangulation_1a51951fbe164a241e8d1e64051c666b30" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>calcPoint</name></member>
      <member refid="classTriangulation_1ab0d77a7723f3dec85caa69106a6df413aa560416e991c80889a0751d3e05cd5d6" prot="public" virt="non-virtual"><scope>Triangulation</scope><name>DeleteFirst</name></member>
      <member refid="classTriangulation_1ac007a071c6a826712077bec466f095ca" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>eliminateHorizontalTriangles</name></member>
      <member refid="classTriangulation_1ab0d77a7723f3dec85caa69106a6df413" prot="public" virt="non-virtual"><scope>Triangulation</scope><name>ForcedCrossBehavior</name></member>
      <member refid="classTriangulation_1ac5f39bfbe393ba52807fe0046eb74f02" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getNumberOfPoints</name></member>
      <member refid="classTriangulation_1a204cbaa8ab2ae229006c630dae5175c9" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getOppositePoint</name></member>
      <member refid="classTriangulation_1a9f3458d5e869ea75fdbd5e4fc6428e3d" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getPoint</name></member>
      <member refid="classTriangulation_1af24302c688e62ca12e7d0a7c77918448" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getPointsAroundEdge</name></member>
      <member refid="classTriangulation_1a168182a090503221f44caa336f7f32a2" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getSurroundingTriangles</name></member>
      <member refid="classTriangulation_1a0c37090b51fe786f82acabd2937ebc17" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getTriangle</name></member>
      <member refid="classTriangulation_1a6608f6f58769ab9e629f6eaa87c6f4f8" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getTriangle</name></member>
      <member refid="classTriangulation_1afee3ce4cf833bbf38bf87500eb3c3534" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getXMax</name></member>
      <member refid="classTriangulation_1aed8837bcf9ce2b2f10ce0061eb1c07b7" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getXMin</name></member>
      <member refid="classTriangulation_1a323d0e5054762e1c3e2fb031959e1165" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getYMax</name></member>
      <member refid="classTriangulation_1a8f8117facf20ddf7cfd28ad430639ff9" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>getYMin</name></member>
      <member refid="classTriangulation_1ab0d77a7723f3dec85caa69106a6df413aa60878fb5905d503f9537994c397c5c1" prot="public" virt="non-virtual"><scope>Triangulation</scope><name>InsertVertex</name></member>
      <member refid="classTriangulation_1ab221ea040cd6c811ca98c2750a495a20" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>performConsistencyTest</name></member>
      <member refid="classTriangulation_1a7719a5a1a94dc4ffaebb86e344ee8269" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>pointInside</name></member>
      <member refid="classTriangulation_1a14f1679a5111de289a7516bee07cce9e" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>ruppertRefinement</name></member>
      <member refid="classTriangulation_1ab1a75337497178053d129e5ea9782838" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>saveTriangulation</name></member>
      <member refid="classTriangulation_1a92fb14c42cc5d1df7c8a06717e0ad9ac" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>setBreakEdgeColor</name></member>
      <member refid="classTriangulation_1a28e47fe32c7f48b82b8b6b9844e61fd6" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>setEdgeColor</name></member>
      <member refid="classTriangulation_1aa7607f541eecf3e432a3c8dd0816e003" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>setForcedCrossBehavior</name></member>
      <member refid="classTriangulation_1a9f314cc09454591fd46a5a8b6389afa2" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>setForcedEdgeColor</name></member>
      <member refid="classTriangulation_1ad9a666e04a02c1e1aaf0fdffda56a9a7" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>setTriangleInterpolator</name></member>
      <member refid="classTriangulation_1ab0d77a7723f3dec85caa69106a6df413aeaadcebf3abc9ed8808490d773ca0dc9" prot="public" virt="non-virtual"><scope>Triangulation</scope><name>SnappingTypeVertex</name></member>
      <member refid="classTriangulation_1a82285eb39eda3dd76fa921b25a2317df" prot="public" virt="pure-virtual"><scope>Triangulation</scope><name>swapEdge</name></member>
      <member refid="classTriangulation_1a1a34ead0d4a8b74fd1dbea0362316ea4" prot="public" virt="non-virtual"><scope>Triangulation</scope><name>triangulationFields</name></member>
      <member refid="classTriangulation_1a6651d84a634771ff6f1cd1de45ee6131" prot="public" virt="virtual"><scope>Triangulation</scope><name>~Triangulation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
