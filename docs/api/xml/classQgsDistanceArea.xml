<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsDistanceArea" kind="class" language="C++" prot="public">
    <compoundname>QgsDistanceArea</compoundname>
    <includes refid="qgsdistancearea_8h" local="no">qgsdistancearea.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classQgsDistanceArea_1a53f02ae85c0ed5d7521305688df12357" prot="private" static="no">
        <name>MeasureType</name>
        <enumvalue id="classQgsDistanceArea_1a53f02ae85c0ed5d7521305688df12357a4297caa932b4404cd3e9074d1c92a04c" prot="private">
          <name>Default</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsDistanceArea_1a53f02ae85c0ed5d7521305688df12357a3ff1f87c7538dcae44ba86621f4b6eda" prot="private">
          <name>Area</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsDistanceArea_1a53f02ae85c0ed5d7521305688df12357a1fe505622b3eaa4390b924e18dbefbbf" prot="private">
          <name>Length</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="397" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="396" bodyend="401"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsDistanceArea_1a2734fbf13247e723ae25604a55a1219e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_AE</definition>
        <argsstring></argsstring>
        <name>m_AE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="425" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1ae55d15221ed0e81948cc96ed58a9ba45" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_E</definition>
        <argsstring></argsstring>
        <name>m_E</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="427" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a1f47624f702183380641eecd7ea26e57" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_QA</definition>
        <argsstring></argsstring>
        <name>m_QA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="423" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a37e3e976522dc688928286278169b156" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_QB</definition>
        <argsstring></argsstring>
        <name>m_QB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="423" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a686beeb0a3ebf1be579861b2d3b468d1" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_QbarA</definition>
        <argsstring></argsstring>
        <name>m_QbarA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="424" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1ae7cda24c413ad13e4ec0ff9b3e475776" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_QbarB</definition>
        <argsstring></argsstring>
        <name>m_QbarB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="424" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a4cc869e4f14abe18ce6cac87f8808960" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_QbarC</definition>
        <argsstring></argsstring>
        <name>m_QbarC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="424" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a94c1e08e9bb873134e7ba5df6751ecc7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_QbarD</definition>
        <argsstring></argsstring>
        <name>m_QbarD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="424" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1aca6226d4f9133ab6d7f4af7c3e5dacb4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_QC</definition>
        <argsstring></argsstring>
        <name>m_QC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="423" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a68c0d72a9f37c9054d260ba80e471d2e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_Qp</definition>
        <argsstring></argsstring>
        <name>m_Qp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="426" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a3b3bb1729773413b79aa2b633ebbb57d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::m_TwoPI</definition>
        <argsstring></argsstring>
        <name>m_TwoPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="428" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a25fe02d0d767351c8a753b7dcb58c078" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsCoordinateTransform" kindref="compound">QgsCoordinateTransform</ref></type>
        <definition>QgsCoordinateTransform QgsDistanceArea::mCoordTransform</definition>
        <argsstring></argsstring>
        <name>mCoordTransform</name>
        <briefdescription>
<para>used for transforming coordinates from source CRS to ellipsoid&apos;s coordinates </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="404" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a14811b4b1ad47774d8cd5ba13326522a" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsDistanceArea::mEllipsoid</definition>
        <argsstring></argsstring>
        <name>mEllipsoid</name>
        <briefdescription>
<para>ellipsoid acronym (from table tbl_ellipsoids) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="407" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1ae553487b304749bb9054824b3e230f6c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::mInvFlattening</definition>
        <argsstring></argsstring>
        <name>mInvFlattening</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="410" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a9c335619b5a60d303960808d2cdda7e5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::mSemiMajor</definition>
        <argsstring></argsstring>
        <name>mSemiMajor</name>
        <briefdescription>
<para>ellipsoid parameters </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="410" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsDistanceArea_1a87b25cb68b31d986b1f5db724b706a93" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsDistanceArea::mSemiMinor</definition>
        <argsstring></argsstring>
        <name>mSemiMinor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="410" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsDistanceArea_1ab5df963766f6a9a2a04ae7fcba947b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsDistanceArea::QgsDistanceArea</definition>
        <argsstring>()</argsstring>
        <name>QgsDistanceArea</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="54" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="44" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1aa1e90309bdcb65b399a3f96648a0b43a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsUnitTypes_1ab05b10caef047c173a83a5c8838a061a" kindref="member">QgsUnitTypes::AreaUnit</ref></type>
        <definition>QgsUnitTypes::AreaUnit QgsDistanceArea::areaUnits</definition>
        <argsstring>() const</argsstring>
        <name>areaUnits</name>
        <briefdescription>
<para>Returns the units of area for areal calculations made by this object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="220" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="794" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a60e46cdcc7541568e2c06787451722a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::bearing</definition>
        <argsstring>(const QgsPointXY &amp;p1, const QgsPointXY &amp;p2) const</argsstring>
        <name>bearing</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Computes the bearing (in radians) between two points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="230" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="842" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1ab6f714c5ca21a254a191dd2dfc087bd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref></type>
        <definition>QgsPointXY QgsDistanceArea::computeSpheroidProject</definition>
        <argsstring>(const QgsPointXY &amp;p1, double distance=1, double azimuth=M_PI_2) const</argsstring>
        <name>computeSpheroidProject</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>distance</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>azimuth</declname>
          <defval>M_PI_2</defval>
        </param>
        <briefdescription>
<para>Given a location, an azimuth and a distance, computes the location of the projected point. </para>        </briefdescription>
        <detaileddescription>
<para>Based on Vincenty&apos;s formula for the geodetic direct problem as described in &quot;Geocentric
Datum of Australia Technical Manual&quot;, Chapter 4. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>- location of first geographic (latitude/longitude) point as degrees. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>- distance in meters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>azimuth</parametername>
</parameternamelist>
<parameterdescription>
<para>- azimuth in radians, clockwise from North </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>p2 - location of projected point as longitude/latitude. </para></simplesect>
<simplesect kind="note"><para>code (and documentation) taken from rttopo project <ulink url="https://git.osgeo.org/gogs/rttopo/librttopo">https://git.osgeo.org/gogs/rttopo/librttopo</ulink><itemizedlist>
<listitem><para>spheroid_project.spheroid_project(...)</para></listitem><listitem><para>Valid bounds checking for degrees (latitude=+- 85.05115) is based values used for -&gt; &apos;WGS84 Web Mercator (Auxiliary Sphere)&apos; calculations <ndash/>&gt; latitudes outside these bounds cause the calculations to become unstable and can return invalid results </para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="299" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="396" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1ae14adb8602153a8dfabb8dd49920d2be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::convertAreaMeasurement</definition>
        <argsstring>(double area, QgsUnitTypes::AreaUnit toUnits) const</argsstring>
        <name>convertAreaMeasurement</name>
        <param>
          <type>double</type>
          <declname>area</declname>
        </param>
        <param>
          <type><ref refid="classQgsUnitTypes_1ab05b10caef047c173a83a5c8838a061a" kindref="member">QgsUnitTypes::AreaUnit</ref></type>
          <declname>toUnits</declname>
        </param>
        <briefdescription>
<para>Takes an area measurement calculated by this <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> object and converts it to a different areal unit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para>area value calculated by this class to convert. It is assumed that the area was calculated by this class, ie that its unit of area is equal to <ref refid="classQgsDistanceArea_1aa1e90309bdcb65b399a3f96648a0b43a" kindref="member">areaUnits()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>toUnits</parametername>
</parameternamelist>
<parameterdescription>
<para>area unit to convert measurement to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>converted area </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1ae39189a0bf2243c67ba14c5126d162cb" kindref="member">convertLengthMeasurement()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="280" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="1156" bodyend="1168"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1ae39189a0bf2243c67ba14c5126d162cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::convertLengthMeasurement</definition>
        <argsstring>(double length, QgsUnitTypes::DistanceUnit toUnits) const</argsstring>
        <name>convertLengthMeasurement</name>
        <param>
          <type>double</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="classQgsUnitTypes_1a0602e8a06afd37c267e9e532bb27f50d" kindref="member">QgsUnitTypes::DistanceUnit</ref></type>
          <declname>toUnits</declname>
        </param>
        <briefdescription>
<para>Takes a length measurement calculated by this <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> object and converts it to a different distance unit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>length value calculated by this class to convert. It is assumed that the length was calculated by this class, ie that its unit of length is equal to <ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>toUnits</parametername>
</parameternamelist>
<parameterdescription>
<para>distance unit to convert measurement to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>converted distance </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1ae14adb8602153a8dfabb8dd49920d2be" kindref="member">convertAreaMeasurement()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="268" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="1142" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsDistanceArea::ellipsoid</definition>
        <argsstring>() const</argsstring>
        <name>ellipsoid</name>
        <briefdescription>
<para>Returns ellipsoid&apos;s acronym. </para>        </briefdescription>
        <detaileddescription>
<para>Calculations will only use the ellipsoid if a valid ellipsoid has been set. <simplesect kind="see"><para><ref refid="classQgsDistanceArea_1aa8616be62f778a3d9a7aa604611d5549" kindref="member">setEllipsoid()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1abd0d7a667e169b7b5de22894030dcbcc" kindref="member">willUseEllipsoid()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a090697cacf8718c260d5117d8a71aeac" kindref="member">ellipsoidCrs()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="112" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a090697cacf8718c260d5117d8a71aeac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>QgsCoordinateReferenceSystem QgsDistanceArea::ellipsoidCrs</definition>
        <argsstring>() const</argsstring>
        <name>ellipsoidCrs</name>
        <briefdescription>
<para>Returns the ellipsoid (destination) spatial reference system. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a3041a94abe36367906f4ad8aa5a1ada6" kindref="member">sourceCrs()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" kindref="member">ellipsoid()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="84" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a6ab3bb44060d0dd68914ddfd7337ef83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::ellipsoidInverseFlattening</definition>
        <argsstring>() const</argsstring>
        <name>ellipsoidInverseFlattening</name>
        <briefdescription>
<para>Returns ellipsoid&apos;s inverse flattening. </para>        </briefdescription>
        <detaileddescription>
<para>The inverse flattening is calculated with invf = a/(a-b). <simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" kindref="member">ellipsoid()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a78e81db6e309289725263492a2b557a6" kindref="member">ellipsoidSemiMajor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1af00fcac0be9a1bb4aa8b1ff649dc300d" kindref="member">ellipsoidSemiMinor()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="137" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a78e81db6e309289725263492a2b557a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::ellipsoidSemiMajor</definition>
        <argsstring>() const</argsstring>
        <name>ellipsoidSemiMajor</name>
        <briefdescription>
<para>Returns the ellipsoid&apos;s semi major axis. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" kindref="member">ellipsoid()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1af00fcac0be9a1bb4aa8b1ff649dc300d" kindref="member">ellipsoidSemiMinor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a6ab3bb44060d0dd68914ddfd7337ef83" kindref="member">ellipsoidInverseFlattening()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="120" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1af00fcac0be9a1bb4aa8b1ff649dc300d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::ellipsoidSemiMinor</definition>
        <argsstring>() const</argsstring>
        <name>ellipsoidSemiMinor</name>
        <briefdescription>
<para>Returns ellipsoid&apos;s semi minor axis. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" kindref="member">ellipsoid()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a78e81db6e309289725263492a2b557a6" kindref="member">ellipsoidSemiMajor()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a6ab3bb44060d0dd68914ddfd7337ef83" kindref="member">ellipsoidInverseFlattening()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="128" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a4126080d5fd750b201d6726d70945109" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QVector&lt; <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &gt; &gt;</type>
        <definition>QVector&lt; QVector&lt; QgsPointXY &gt; &gt; QgsDistanceArea::geodesicLine</definition>
        <argsstring>(const QgsPointXY &amp;p1, const QgsPointXY &amp;p2, double interval, bool breakLine=false) const</argsstring>
        <name>geodesicLine</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>interval</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>breakLine</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Calculates the geodesic line between <emphasis>p1</emphasis> and <emphasis>p2</emphasis>, which represents the shortest path on the ellipsoid between these two points. </para>        </briefdescription>
        <detaileddescription>
<para>The ellipsoid settings defined on this <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> object will be used during the calculations.</para><para><emphasis>p1</emphasis> and <emphasis>p2</emphasis> must be in the <ref refid="classQgsDistanceArea_1a3041a94abe36367906f4ad8aa5a1ada6" kindref="member">sourceCrs()</ref> of this <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> object. The returned line will also be in this same CRS.</para><para>The <emphasis>interval</emphasis> parameter gives the maximum distance between points on the computed line. This argument is always specified in meters. A shorter distance results in a denser line, at the cost of extra computing time.</para><para>If the geodesic line crosses the antimeridian (+/- 180 degrees longitude) and <emphasis>breakLine</emphasis> is true, then the line will be split into two parts, broken at the antimeridian. In this case the function will return two lines, corresponding to the portions at either side of the antimeridian.</para><para><simplesect kind="since"><para>QGIS 3.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="320" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="673" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a2839b6c546e83eb952c7b7bd1a5ef668" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::latitudeGeodesicCrossesAntimeridian</definition>
        <argsstring>(const QgsPointXY &amp;p1, const QgsPointXY &amp;p2, double &amp;fractionAlongLine) const</argsstring>
        <name>latitudeGeodesicCrossesAntimeridian</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>fractionAlongLine</declname>
        </param>
        <briefdescription>
<para>Calculates the latitude at which the geodesic line joining <emphasis>p1</emphasis> and <emphasis>p2</emphasis> crosses the antimeridian (longitude +/- 180 degrees). </para>        </briefdescription>
        <detaileddescription>
<para>The ellipsoid settings defined on this <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> object will be used during the calculations.</para><para><emphasis>p1</emphasis> and <emphasis>p2</emphasis> must be in the <ref refid="classQgsDistanceArea_1a090697cacf8718c260d5117d8a71aeac" kindref="member">ellipsoidCrs()</ref> of this <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> object. The returned latitude will also be in this same CRS.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting point, in <ref refid="classQgsDistanceArea_1a090697cacf8718c260d5117d8a71aeac" kindref="member">ellipsoidCrs()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ending point, in <ref refid="classQgsDistanceArea_1a090697cacf8718c260d5117d8a71aeac" kindref="member">ellipsoidCrs()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fractionAlongLine</parametername>
</parameternamelist>
<parameterdescription>
<para>will be set to the fraction along the geodesic line joining <emphasis>p1</emphasis> to <emphasis>p2</emphasis> at which the antimeridian crossing occurs.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the latitude at which the geodesic crosses the antimeridian </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a95d001e97a7307e00537ff10d5ac34ca" kindref="member">splitGeometryAtAntimeridian()</ref></para></simplesect>
<simplesect kind="since"><para>QGIS 3.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="340" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="460" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsUnitTypes_1a0602e8a06afd37c267e9e532bb27f50d" kindref="member">QgsUnitTypes::DistanceUnit</ref></type>
        <definition>QgsUnitTypes::DistanceUnit QgsDistanceArea::lengthUnits</definition>
        <argsstring>() const</argsstring>
        <name>lengthUnits</name>
        <briefdescription>
<para>Returns the units of distance for length calculations made by this object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsDistanceArea_1aa1e90309bdcb65b399a3f96648a0b43a" kindref="member">areaUnits()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="213" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="789" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a33628d70a50bb5992bba6a3452a8dc43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::measureArea</definition>
        <argsstring>(const QgsGeometry &amp;geometry) const</argsstring>
        <name>measureArea</name>
        <param>
          <type>const <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
<para>Measures the area of a geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry to measure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>area of geometry. For geometry collections, non surface geometries will be ignored. The units for the returned area can be retrieved by calling <ref refid="classQgsDistanceArea_1aa1e90309bdcb65b399a3f96648a0b43a" kindref="member">areaUnits()</ref>. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a5ed38172b3b32f7120ef5588c9509442" kindref="member">measureLength()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a532493d8ecfc136a170a590388b18281" kindref="member">measurePerimeter()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1aa1e90309bdcb65b399a3f96648a0b43a" kindref="member">areaUnits()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="149" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="183" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a5ed38172b3b32f7120ef5588c9509442" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::measureLength</definition>
        <argsstring>(const QgsGeometry &amp;geometry) const</argsstring>
        <name>measureLength</name>
        <param>
          <type>const <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
<para>Measures the length of a geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry to measure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of geometry. For geometry collections, non curve geometries will be ignored. The units for the returned distance can be retrieved by calling <ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref>. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a33628d70a50bb5992bba6a3452a8dc43" kindref="member">measureArea()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a532493d8ecfc136a170a590388b18281" kindref="member">measurePerimeter()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="161" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="192" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a732e4348b96388df6255f981a2bc0ca4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::measureLine</definition>
        <argsstring>(const QVector&lt; QgsPointXY &gt; &amp;points) const</argsstring>
        <name>measureLine</name>
        <param>
          <type>const QVector&lt; <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Measures the length of a line with multiple segments. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>list of points in line </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of line. The units for the returned length can be retrieved by calling <ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref>. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="181" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="273" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a2d50cf1ca660d27aeccd969849ead67e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::measureLine</definition>
        <argsstring>(const QgsPointXY &amp;p1, const QgsPointXY &amp;p2) const</argsstring>
        <name>measureLine</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Measures the distance between two points. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>start of line </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>end of line </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance between points. The units for the returned distance can be retrieved by calling <ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref>. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="190" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="315" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a9a02351b01e97c8ed9f153bd742c138b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::measureLineProjected</definition>
        <argsstring>(const QgsPointXY &amp;p1, double distance=1, double azimuth=M_PI_2, QgsPointXY *projectedPoint=nullptr) const</argsstring>
        <name>measureLineProjected</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>distance</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>azimuth</declname>
          <defval>M_PI_2</defval>
        </param>
        <param>
          <type><ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> *</type>
          <declname>projectedPoint</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates the distance from one point with distance in meters and azimuth (direction) When the <ref refid="classQgsDistanceArea_1a3041a94abe36367906f4ad8aa5a1ada6" kindref="member">sourceCrs()</ref> is geographic, <ref refid="classQgsDistanceArea_1ab6f714c5ca21a254a191dd2dfc087bd3" kindref="member">computeSpheroidProject()</ref> will be called otherwise <ref refid="classQgsPoint_1ae5b591ac604024fdb873e4ca4a209e1f" kindref="member">QgsPoint.project()</ref> will be called after <ref refid="classQgsUnitTypes_1a4ac00365e7d4b2dd3754e2bea5aa8e9a" kindref="member">QgsUnitTypes::fromUnitToUnitFactor()</ref> has been applied to the distance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>start point [can be Cartesian or Geographic] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>must be in meters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>azimuth</parametername>
</parameternamelist>
<parameterdescription>
<para>- azimuth in radians, clockwise from North </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>projectedPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>calculated projected point </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>distance in mapUnits </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a3041a94abe36367906f4ad8aa5a1ada6" kindref="member">sourceCrs()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1ab6f714c5ca21a254a191dd2dfc087bd3" kindref="member">computeSpheroidProject()</ref> </para></simplesect>
<simplesect kind="note"><para>The input Point must be in the coordinate reference system being used </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="206" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="350" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a532493d8ecfc136a170a590388b18281" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::measurePerimeter</definition>
        <argsstring>(const QgsGeometry &amp;geometry) const</argsstring>
        <name>measurePerimeter</name>
        <param>
          <type>const <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
<para>Measures the perimeter of a polygon geometry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry to measure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>perimeter of geometry. For geometry collections, any non-polygon geometries will be ignored. The units for the returned perimeter can be retrieved by calling <ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref>. </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a33628d70a50bb5992bba6a3452a8dc43" kindref="member">measureArea()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a532493d8ecfc136a170a590388b18281" kindref="member">measurePerimeter()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="173" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="201" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a987a2f263125a66932313ce1ee77a3df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::measurePolygon</definition>
        <argsstring>(const QVector&lt; QgsPointXY &gt; &amp;points) const</argsstring>
        <name>measurePolygon</name>
        <param>
          <type>const QVector&lt; <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Measures the area of the polygon described by a set of points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="225" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="815" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1aa8616be62f778a3d9a7aa604611d5549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsDistanceArea::setEllipsoid</definition>
        <argsstring>(const QString &amp;ellipsoid)</argsstring>
        <name>setEllipsoid</name>
        <param>
          <type>const QString &amp;</type>
          <declname>ellipsoid</declname>
        </param>
        <briefdescription>
<para>Sets the <emphasis>ellipsoid</emphasis> by its acronym. </para>        </briefdescription>
        <detaileddescription>
<para>Known ellipsoid acronyms can be retrieved using <ref refid="classQgsEllipsoidUtils_1aceb3f98ed69ed54fc9693ce552243655" kindref="member">QgsEllipsoidUtils::acronyms()</ref>. Calculations will only use the ellipsoid if a valid ellipsoid has been set. <simplesect kind="return"><para>true if ellipsoid was successfully set </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" kindref="member">ellipsoid()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1abd0d7a667e169b7b5de22894030dcbcc" kindref="member">willUseEllipsoid()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="94" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="66" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1ace024551d677ee268ef3678fe954039e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsDistanceArea::setEllipsoid</definition>
        <argsstring>(double semiMajor, double semiMinor)</argsstring>
        <name>setEllipsoid</name>
        <param>
          <type>double</type>
          <declname>semiMajor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>semiMinor</declname>
        </param>
        <briefdescription>
<para>Sets ellipsoid by supplied radii. </para>        </briefdescription>
        <detaileddescription>
<para>Calculations will only use the ellipsoid if a valid ellipsoid been set. <simplesect kind="return"><para>true if ellipsoid was successfully set </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" kindref="member">ellipsoid()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1abd0d7a667e169b7b5de22894030dcbcc" kindref="member">willUseEllipsoid()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="103" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="90" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a836191959392b8bbe2fa82ec2aa28ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDistanceArea::setSourceCrs</definition>
        <argsstring>(const QgsCoordinateReferenceSystem &amp;crs, const QgsCoordinateTransformContext &amp;context)</argsstring>
        <name>setSourceCrs</name>
        <param>
          <type>const <ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref> &amp;</type>
          <declname>crs</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsCoordinateTransformContext" kindref="compound">QgsCoordinateTransformContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Sets source spatial reference system <emphasis>crs</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a3041a94abe36367906f4ad8aa5a1ada6" kindref="member">sourceCrs()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="69" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a3041a94abe36367906f4ad8aa5a1ada6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>QgsCoordinateReferenceSystem QgsDistanceArea::sourceCrs</definition>
        <argsstring>() const</argsstring>
        <name>sourceCrs</name>
        <briefdescription>
<para>Returns the source spatial reference system. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a836191959392b8bbe2fa82ec2aa28ce3" kindref="member">setSourceCrs()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a090697cacf8718c260d5117d8a71aeac" kindref="member">ellipsoidCrs()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="76" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a95d001e97a7307e00537ff10d5ac34ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref></type>
        <definition>QgsGeometry QgsDistanceArea::splitGeometryAtAntimeridian</definition>
        <argsstring>(const QgsGeometry &amp;geometry) const</argsstring>
        <name>splitGeometryAtAntimeridian</name>
        <param>
          <type>const <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
<para>Splits a (Multi)LineString <emphasis>geometry</emphasis> at the antimeridian (longitude +/- 180 degrees). </para>        </briefdescription>
        <detaileddescription>
<para>The returned geometry will always be a multi-part geometry.</para><para>Whenever line segments in the input geometry cross the antimeridian, they will be split into two segments, with the latitude of the breakpoint being determined using a geodesic line connecting the points either side of this segment.</para><para>The ellipsoid settings defined on this <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> object will be used during the calculations.</para><para><emphasis>geometry</emphasis> must be in the <ref refid="classQgsDistanceArea_1a3041a94abe36367906f4ad8aa5a1ada6" kindref="member">sourceCrs()</ref> of this <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> object. The returned geometry will also be in this same CRS.</para><para>If <emphasis>geometry</emphasis> contains M or Z values, these will be linearly interpolated for the new vertices created at the antimeridian.</para><para><simplesect kind="note"><para>Non-(Multi)LineString geometries will be returned unchanged.</para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a2839b6c546e83eb952c7b7bd1a5ef668" kindref="member">latitudeGeodesicCrossesAntimeridian()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.6 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="363" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="546" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1abd0d7a667e169b7b5de22894030dcbcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsDistanceArea::willUseEllipsoid</definition>
        <argsstring>() const</argsstring>
        <name>willUseEllipsoid</name>
        <briefdescription>
<para>Returns whether calculations will use the ellipsoid. </para>        </briefdescription>
        <detaileddescription>
<para>Calculations will only use the ellipsoid if a valid <ref refid="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" kindref="member">ellipsoid()</ref> has been set. <simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" kindref="member">ellipsoid()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="62" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsDistanceArea_1a8c12312b1a367bf00006ee578ce9e92b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsDistanceArea::formatArea</definition>
        <argsstring>(double area, int decimals, QgsUnitTypes::AreaUnit unit, bool keepBaseUnit=false)</argsstring>
        <name>formatArea</name>
        <param>
          <type>double</type>
          <declname>area</declname>
        </param>
        <param>
          <type>int</type>
          <declname>decimals</declname>
        </param>
        <param>
          <type><ref refid="classQgsUnitTypes_1ab05b10caef047c173a83a5c8838a061a" kindref="member">QgsUnitTypes::AreaUnit</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepBaseUnit</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns an area formatted as a friendly string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para>area to format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decimals</parametername>
</parameternamelist>
<parameterdescription>
<para>number of decimal places to show </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit of area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keepBaseUnit</parametername>
</parameternamelist>
<parameterdescription>
<para>set to false to allow conversion of large areas to more suitable units, e.g., square meters to square kilometers </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>formatted area string </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a1b7047210b8cb04dca75cea41ff1d0fc" kindref="member">formatDistance()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="256" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="1137" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a1b7047210b8cb04dca75cea41ff1d0fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsDistanceArea::formatDistance</definition>
        <argsstring>(double distance, int decimals, QgsUnitTypes::DistanceUnit unit, bool keepBaseUnit=false)</argsstring>
        <name>formatDistance</name>
        <param>
          <type>double</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>int</type>
          <declname>decimals</declname>
        </param>
        <param>
          <type><ref refid="classQgsUnitTypes_1a0602e8a06afd37c267e9e532bb27f50d" kindref="member">QgsUnitTypes::DistanceUnit</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepBaseUnit</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns an distance formatted as a friendly string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>distance to format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decimals</parametername>
</parameternamelist>
<parameterdescription>
<para>number of decimal places to show </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>unit of distance </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keepBaseUnit</parametername>
</parameternamelist>
<parameterdescription>
<para>set to false to allow conversion of large distances to more suitable units, e.g., meters to kilometers </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>formatted distance string </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsDistanceArea_1a8c12312b1a367bf00006ee578ce9e92b" kindref="member">formatArea()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="243" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="1132" bodyend="1135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsDistanceArea_1a4a85da6604572db44862db84df375a8a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDistanceArea::computeAreaInit</definition>
        <argsstring>()</argsstring>
        <name>computeAreaInit</name>
        <briefdescription>
<para>Precalculates some values (must be called always when changing ellipsoid) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="392" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="971" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a5b5e6b01c94915eaec28d5062808f725" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::computeDistanceBearing</definition>
        <argsstring>(const QgsPointXY &amp;p1, const QgsPointXY &amp;p2, double *course1=nullptr, double *course2=nullptr) const</argsstring>
        <name>computeDistanceBearing</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>course1</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>double *</type>
          <declname>course2</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Calculates distance from two points on ellipsoid based on inverse Vincenty&apos;s formulae. </para>        </briefdescription>
        <detaileddescription>
<para>Points <emphasis>p1</emphasis> and <emphasis>p2</emphasis> are expected to be in degrees and in currently used ellipsoid</para><para><simplesect kind="return"><para>distance in meters </para></simplesect>
<simplesect kind="note"><para>if course1 is not NULL, bearing (in radians) from first point is calculated (the same for course2) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="377" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="867" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a98c590f911e33e944cf2549e7d73d8eb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::computePolygonArea</definition>
        <argsstring>(const QVector&lt; QgsPointXY &gt; &amp;points) const</argsstring>
        <name>computePolygonArea</name>
        <param>
          <type>const QVector&lt; <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Calculates area of polygon on ellipsoid algorithm has been taken from GRASS: gis/area_poly1.c. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="384" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="1022" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a442a9e4e9f520a629e6c6af148923112" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::computePolygonFlatArea</definition>
        <argsstring>(const QVector&lt; QgsPointXY &gt; &amp;points) const</argsstring>
        <name>computePolygonFlatArea</name>
        <param>
          <type>const QVector&lt; <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="386" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="1111" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a7d0dc1665d286eb58ad0556a796973e7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::getQ</definition>
        <argsstring>(double x) const</argsstring>
        <name>getQ</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="414" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="949" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a2f356f2bddf02e9cbfbcc2ff52d91ee5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::getQbar</definition>
        <argsstring>(double x) const</argsstring>
        <name>getQbar</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="415" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="960" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a2e04530e05b6b81fd25edaddfa856ae5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::measure</definition>
        <argsstring>(const QgsAbstractGeometry *geomV2, MeasureType type=Default) const</argsstring>
        <name>measure</name>
        <param>
          <type>const <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> *</type>
          <declname>geomV2</declname>
        </param>
        <param>
          <type>MeasureType</type>
          <declname>type</declname>
          <defval>Default</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="417" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="102" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a82d4df22eb15569d5198a817ad3b47be" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::measureLine</definition>
        <argsstring>(const QgsCurve *curve) const</argsstring>
        <name>measureLine</name>
        <param>
          <type>const <ref refid="classQgsCurve" kindref="compound">QgsCurve</ref> *</type>
          <declname>curve</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="418" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="259" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1ad9f19890d7f8cb941c52571b72b8c4f8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsDistanceArea::measurePolygon</definition>
        <argsstring>(const QgsCurve *curve) const</argsstring>
        <name>measurePolygon</name>
        <param>
          <type>const <ref refid="classQgsCurve" kindref="compound">QgsCurve</ref> *</type>
          <declname>curve</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="419" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="800" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="classQgsDistanceArea_1a7f004c9d469bb00b813feb06217abb01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsDistanceArea::setFromParams</definition>
        <argsstring>(const QgsEllipsoidUtils::EllipsoidParameters &amp;params)</argsstring>
        <name>setFromParams</name>
        <param>
          <type>const <ref refid="structQgsEllipsoidUtils_1_1EllipsoidParameters" kindref="compound">QgsEllipsoidUtils::EllipsoidParameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="394" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.cpp" bodystart="1005" bodyend="1020"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A general purpose distance and area calculator, capable of performing ellipsoid based calculations. </para>    </briefdescription>
    <detaileddescription>
<para>Measurements can either be performed on existing <ref refid="classQgsGeometry" kindref="compound">QgsGeometry</ref> objects, or using lists of points.</para><para>If a valid <ref refid="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" kindref="member">ellipsoid()</ref> has been set for the <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref>, all calculations will be performed using ellipsoidal algorithms (e.g. using Vincenty&apos;s formulas). If no ellipsoid has been set, all calculations will be performed using Cartesian formulas only. The behavior can be determined by calling <ref refid="classQgsDistanceArea_1abd0d7a667e169b7b5de22894030dcbcc" kindref="member">willUseEllipsoid()</ref>.</para><para>In order to perform accurate calculations, the source coordinate reference system of all measured geometries must first be specified using <ref refid="classQgsDistanceArea_1a836191959392b8bbe2fa82ec2aa28ce3" kindref="member">setSourceCrs()</ref>.</para><para>Usually, the measurements returned by <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> are in meters. If no valid ellipsoid is set, then the units may not be meters. The units can be retrieved by calling <ref refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" kindref="member">lengthUnits()</ref> and <ref refid="classQgsDistanceArea_1aa1e90309bdcb65b399a3f96648a0b43a" kindref="member">areaUnits()</ref>. </para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" line="50" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsdistancearea.h" bodystart="49" bodyend="430"/>
    <listofallmembers>
      <member refid="classQgsDistanceArea_1a53f02ae85c0ed5d7521305688df12357a3ff1f87c7538dcae44ba86621f4b6eda" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>Area</name></member>
      <member refid="classQgsDistanceArea_1aa1e90309bdcb65b399a3f96648a0b43a" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>areaUnits</name></member>
      <member refid="classQgsDistanceArea_1a60e46cdcc7541568e2c06787451722a2" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>bearing</name></member>
      <member refid="classQgsDistanceArea_1a4a85da6604572db44862db84df375a8a" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>computeAreaInit</name></member>
      <member refid="classQgsDistanceArea_1a5b5e6b01c94915eaec28d5062808f725" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>computeDistanceBearing</name></member>
      <member refid="classQgsDistanceArea_1a98c590f911e33e944cf2549e7d73d8eb" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>computePolygonArea</name></member>
      <member refid="classQgsDistanceArea_1a442a9e4e9f520a629e6c6af148923112" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>computePolygonFlatArea</name></member>
      <member refid="classQgsDistanceArea_1ab6f714c5ca21a254a191dd2dfc087bd3" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>computeSpheroidProject</name></member>
      <member refid="classQgsDistanceArea_1ae14adb8602153a8dfabb8dd49920d2be" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>convertAreaMeasurement</name></member>
      <member refid="classQgsDistanceArea_1ae39189a0bf2243c67ba14c5126d162cb" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>convertLengthMeasurement</name></member>
      <member refid="classQgsDistanceArea_1a53f02ae85c0ed5d7521305688df12357a4297caa932b4404cd3e9074d1c92a04c" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>Default</name></member>
      <member refid="classQgsDistanceArea_1a6bba1f9539a6f48a9d256bb809803038" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>ellipsoid</name></member>
      <member refid="classQgsDistanceArea_1a090697cacf8718c260d5117d8a71aeac" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>ellipsoidCrs</name></member>
      <member refid="classQgsDistanceArea_1a6ab3bb44060d0dd68914ddfd7337ef83" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>ellipsoidInverseFlattening</name></member>
      <member refid="classQgsDistanceArea_1a78e81db6e309289725263492a2b557a6" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>ellipsoidSemiMajor</name></member>
      <member refid="classQgsDistanceArea_1af00fcac0be9a1bb4aa8b1ff649dc300d" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>ellipsoidSemiMinor</name></member>
      <member refid="classQgsDistanceArea_1a8c12312b1a367bf00006ee578ce9e92b" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>formatArea</name></member>
      <member refid="classQgsDistanceArea_1a1b7047210b8cb04dca75cea41ff1d0fc" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>formatDistance</name></member>
      <member refid="classQgsDistanceArea_1a4126080d5fd750b201d6726d70945109" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>geodesicLine</name></member>
      <member refid="classQgsDistanceArea_1a7d0dc1665d286eb58ad0556a796973e7" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>getQ</name></member>
      <member refid="classQgsDistanceArea_1a2f356f2bddf02e9cbfbcc2ff52d91ee5" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>getQbar</name></member>
      <member refid="classQgsDistanceArea_1a2839b6c546e83eb952c7b7bd1a5ef668" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>latitudeGeodesicCrossesAntimeridian</name></member>
      <member refid="classQgsDistanceArea_1a53f02ae85c0ed5d7521305688df12357a1fe505622b3eaa4390b924e18dbefbbf" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>Length</name></member>
      <member refid="classQgsDistanceArea_1abce86a368fff8ffb4507a57d70dcb262" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>lengthUnits</name></member>
      <member refid="classQgsDistanceArea_1a2734fbf13247e723ae25604a55a1219e" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_AE</name></member>
      <member refid="classQgsDistanceArea_1ae55d15221ed0e81948cc96ed58a9ba45" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_E</name></member>
      <member refid="classQgsDistanceArea_1a1f47624f702183380641eecd7ea26e57" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_QA</name></member>
      <member refid="classQgsDistanceArea_1a37e3e976522dc688928286278169b156" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_QB</name></member>
      <member refid="classQgsDistanceArea_1a686beeb0a3ebf1be579861b2d3b468d1" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_QbarA</name></member>
      <member refid="classQgsDistanceArea_1ae7cda24c413ad13e4ec0ff9b3e475776" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_QbarB</name></member>
      <member refid="classQgsDistanceArea_1a4cc869e4f14abe18ce6cac87f8808960" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_QbarC</name></member>
      <member refid="classQgsDistanceArea_1a94c1e08e9bb873134e7ba5df6751ecc7" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_QbarD</name></member>
      <member refid="classQgsDistanceArea_1aca6226d4f9133ab6d7f4af7c3e5dacb4" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_QC</name></member>
      <member refid="classQgsDistanceArea_1a68c0d72a9f37c9054d260ba80e471d2e" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_Qp</name></member>
      <member refid="classQgsDistanceArea_1a3b3bb1729773413b79aa2b633ebbb57d" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>m_TwoPI</name></member>
      <member refid="classQgsDistanceArea_1a25fe02d0d767351c8a753b7dcb58c078" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>mCoordTransform</name></member>
      <member refid="classQgsDistanceArea_1a2e04530e05b6b81fd25edaddfa856ae5" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>measure</name></member>
      <member refid="classQgsDistanceArea_1a33628d70a50bb5992bba6a3452a8dc43" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>measureArea</name></member>
      <member refid="classQgsDistanceArea_1a5ed38172b3b32f7120ef5588c9509442" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>measureLength</name></member>
      <member refid="classQgsDistanceArea_1a732e4348b96388df6255f981a2bc0ca4" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>measureLine</name></member>
      <member refid="classQgsDistanceArea_1a2d50cf1ca660d27aeccd969849ead67e" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>measureLine</name></member>
      <member refid="classQgsDistanceArea_1a82d4df22eb15569d5198a817ad3b47be" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>measureLine</name></member>
      <member refid="classQgsDistanceArea_1a9a02351b01e97c8ed9f153bd742c138b" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>measureLineProjected</name></member>
      <member refid="classQgsDistanceArea_1a532493d8ecfc136a170a590388b18281" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>measurePerimeter</name></member>
      <member refid="classQgsDistanceArea_1a987a2f263125a66932313ce1ee77a3df" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>measurePolygon</name></member>
      <member refid="classQgsDistanceArea_1ad9f19890d7f8cb941c52571b72b8c4f8" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>measurePolygon</name></member>
      <member refid="classQgsDistanceArea_1a53f02ae85c0ed5d7521305688df12357" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>MeasureType</name></member>
      <member refid="classQgsDistanceArea_1a14811b4b1ad47774d8cd5ba13326522a" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>mEllipsoid</name></member>
      <member refid="classQgsDistanceArea_1ae553487b304749bb9054824b3e230f6c" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>mInvFlattening</name></member>
      <member refid="classQgsDistanceArea_1a9c335619b5a60d303960808d2cdda7e5" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>mSemiMajor</name></member>
      <member refid="classQgsDistanceArea_1a87b25cb68b31d986b1f5db724b706a93" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>mSemiMinor</name></member>
      <member refid="classQgsDistanceArea_1ab5df963766f6a9a2a04ae7fcba947b00" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>QgsDistanceArea</name></member>
      <member refid="classQgsDistanceArea_1aa8616be62f778a3d9a7aa604611d5549" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>setEllipsoid</name></member>
      <member refid="classQgsDistanceArea_1ace024551d677ee268ef3678fe954039e" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>setEllipsoid</name></member>
      <member refid="classQgsDistanceArea_1a7f004c9d469bb00b813feb06217abb01" prot="private" virt="non-virtual"><scope>QgsDistanceArea</scope><name>setFromParams</name></member>
      <member refid="classQgsDistanceArea_1a836191959392b8bbe2fa82ec2aa28ce3" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>setSourceCrs</name></member>
      <member refid="classQgsDistanceArea_1a3041a94abe36367906f4ad8aa5a1ada6" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>sourceCrs</name></member>
      <member refid="classQgsDistanceArea_1a95d001e97a7307e00537ff10d5ac34ca" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>splitGeometryAtAntimeridian</name></member>
      <member refid="classQgsDistanceArea_1abd0d7a667e169b7b5de22894030dcbcc" prot="public" virt="non-virtual"><scope>QgsDistanceArea</scope><name>willUseEllipsoid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
