<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsScopedExpressionFunction" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QgsScopedExpressionFunction</compoundname>
    <basecompoundref refid="classQgsExpressionFunction" prot="public" virt="non-virtual">QgsExpressionFunction</basecompoundref>
    <includes refid="qgsexpressioncontext_8h" local="no">qgsexpressioncontext.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsScopedExpressionFunction_1aa30b7f8e072793344cb9936005879b12" prot="private" static="no" mutable="no">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt;QString&gt; QgsScopedExpressionFunction::mReferencedColumns</definition>
        <argsstring></argsstring>
        <name>mReferencedColumns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="112" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsScopedExpressionFunction_1a762e24742487dcf765b4834542853a90" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsScopedExpressionFunction::mUsesGeometry</definition>
        <argsstring></argsstring>
        <name>mUsesGeometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsScopedExpressionFunction_1a7cd66d31e48ae29b775d60d1334b676d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsScopedExpressionFunction::QgsScopedExpressionFunction</definition>
        <argsstring>(const QString &amp;fnname, int params, const QString &amp;group, const QString &amp;helpText=QString(), bool usesGeometry=false, const QSet&lt; QString &gt; &amp;referencedColumns=QSet&lt; QString &gt;(), bool lazyEval=false, bool handlesNull=false, bool isContextual=true)</argsstring>
        <name>QgsScopedExpressionFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fnname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>helpText</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>usesGeometry</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const QSet&lt; QString &gt; &amp;</type>
          <declname>referencedColumns</declname>
          <defval>QSet&lt; QString &gt;()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lazyEval</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>handlesNull</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isContextual</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Create a new <ref refid="classQgsScopedExpressionFunction" kindref="compound">QgsScopedExpressionFunction</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="64" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="64" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classQgsScopedExpressionFunction_1a9ece6acf4d19b3dffa44f46c6ec95004" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QgsScopedExpressionFunction::QgsScopedExpressionFunction</definition>
        <argsstring>(const QString &amp;fnname, const QgsExpressionFunction::ParameterList &amp;params, const QString &amp;group, const QString &amp;helpText=QString(), bool usesGeometry=false, const QSet&lt; QString &gt; &amp;referencedColumns=QSet&lt; QString &gt;(), bool lazyEval=false, bool handlesNull=false, bool isContextual=true)</argsstring>
        <name>QgsScopedExpressionFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fnname</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" kindref="member">QgsExpressionFunction::ParameterList</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>helpText</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>usesGeometry</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const QSet&lt; QString &gt; &amp;</type>
          <declname>referencedColumns</declname>
          <defval>QSet&lt; QString &gt;()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>lazyEval</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>handlesNull</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isContextual</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Create a new <ref refid="classQgsScopedExpressionFunction" kindref="compound">QgsScopedExpressionFunction</ref> using named parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="83" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="83" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classQgsScopedExpressionFunction_1ae1ffebfc258aa71e76484733bc033776" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classQgsScopedExpressionFunction" kindref="compound">QgsScopedExpressionFunction</ref> *</type>
        <definition>virtual QgsScopedExpressionFunction* QgsScopedExpressionFunction::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <briefdescription>
<para>Returns a clone of the function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsScopedExpressionFunction_1acada1c6e4c5d72c2a09813e34a841e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsScopedExpressionFunction::func</definition>
        <argsstring>(const QVariantList &amp;values, const QgsExpressionContext *context, QgsExpression *parent, const QgsExpressionNodeFunction *node) override=0</argsstring>
        <name>func</name>
        <reimplements refid="classQgsExpressionFunction_1aac3bdce16c2974dff049cdd6f9946d6f">func</reimplements>
        <param>
          <type>const QVariantList &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Returns result of evaluating the function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>list of values passed to the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>context expression is being evaluated against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>parent expression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>expression node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result of function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsScopedExpressionFunction_1a7ad3bd625ded5491101d0409242a83c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsScopedExpressionFunction::isStatic</definition>
        <argsstring>(const QgsExpressionNodeFunction *node, QgsExpression *parent, const QgsExpressionContext *context) const override</argsstring>
        <name>isStatic</name>
        <reimplements refid="classQgsExpressionFunction_1a399b81147422abf64c288d0c8b74b596">isStatic</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Will be called during prepare to determine if the function is static. </para>        </briefdescription>
        <detaileddescription>
<para>A function is static if it will return the same value for every feature with different attributes and/or geometry.</para><para>By default this will return true, if all arguments that have been passed to the function are also static.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="108" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="1329" bodyend="1332"/>
      </memberdef>
      <memberdef kind="function" id="classQgsScopedExpressionFunction_1a0cb1da28207af8c792ee22387dada1af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsScopedExpressionFunction::referencedColumns</definition>
        <argsstring>(const QgsExpressionNodeFunction *node) const override</argsstring>
        <name>referencedColumns</name>
        <reimplements refid="classQgsExpressionFunction_1abef6a1ef1af36137394c969371a23aed">referencedColumns</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Returns a set of field names which are required for this function. </para>        </briefdescription>
        <detaileddescription>
<para>May contain QgsFeatureRequest::AllAttributes to signal that all attributes are required. If in doubt this will return more fields than strictly required.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="106" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="1323" bodyend="1327"/>
      </memberdef>
      <memberdef kind="function" id="classQgsScopedExpressionFunction_1aa959787f4041762c1dd9fd018f15bb5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsScopedExpressionFunction::usesGeometry</definition>
        <argsstring>(const QgsExpressionNodeFunction *node) const override</argsstring>
        <name>usesGeometry</name>
        <reimplements refid="classQgsExpressionFunction_1aea286ec1a3c8ced38d33b0544385924d">usesGeometry</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Does this function use a geometry object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="104" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.cpp" bodystart="1317" bodyend="1321"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Expression function for use within a <ref refid="classQgsExpressionContextScope" kindref="compound">QgsExpressionContextScope</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>This differs from a standard QgsExpression::Function in that it requires an implemented <ref refid="classQgsScopedExpressionFunction_1ae1ffebfc258aa71e76484733bc033776" kindref="member">clone()</ref> method. <simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8142">
        <label>QgsScopedExpressionFunction</label>
        <link refid="classQgsScopedExpressionFunction"/>
        <childnode refid="8143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8143">
        <label>QgsExpressionFunction</label>
        <link refid="classQgsExpressionFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8144">
        <label>QgsScopedExpressionFunction</label>
        <link refid="classQgsScopedExpressionFunction"/>
        <childnode refid="8145" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8145">
        <label>QgsExpressionFunction</label>
        <link refid="classQgsExpressionFunction"/>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" line="56" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsexpressioncontext.h" bodystart="55" bodyend="113"/>
    <listofallmembers>
      <member refid="classQgsExpressionFunction_1a3df939a4995ff37fa1bd5c85f5c5b48a" prot="public" virt="virtual"><scope>QgsScopedExpressionFunction</scope><name>aliases</name></member>
      <member refid="classQgsExpressionFunction_1a4b513026b2f50b370d62210acc38dbd9" prot="protected" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>allParamsStatic</name></member>
      <member refid="classQgsScopedExpressionFunction_1ae1ffebfc258aa71e76484733bc033776" prot="public" virt="pure-virtual"><scope>QgsScopedExpressionFunction</scope><name>clone</name></member>
      <member refid="classQgsExpressionFunction_1af8f1aaa201835de29f9e58d0ae726af2" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>FcnEval</name></member>
      <member refid="classQgsScopedExpressionFunction_1acada1c6e4c5d72c2a09813e34a841e1e" prot="public" virt="pure-virtual"><scope>QgsScopedExpressionFunction</scope><name>func</name></member>
      <member refid="classQgsExpressionFunction_1aa29b1d86d870e46689d02d9c0d7db236" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>group</name></member>
      <member refid="classQgsExpressionFunction_1a1b9cee2c24287bd685088a96471e66e9" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>groups</name></member>
      <member refid="classQgsExpressionFunction_1ac0b17f18a0e5280ec554d89ea5475b51" prot="public" virt="virtual"><scope>QgsScopedExpressionFunction</scope><name>handlesNull</name></member>
      <member refid="classQgsExpressionFunction_1ad61ceb46aa3133a40d29300fdb73777c" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>helpText</name></member>
      <member refid="classQgsExpressionFunction_1a0a6475c1b384c3654f2269dfc6e7a243" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>isContextual</name></member>
      <member refid="classQgsExpressionFunction_1a324a412f350be861600cef3b4a07bd6e" prot="public" virt="virtual"><scope>QgsScopedExpressionFunction</scope><name>isDeprecated</name></member>
      <member refid="classQgsScopedExpressionFunction_1a7ad3bd625ded5491101d0409242a83c7" prot="public" virt="virtual"><scope>QgsScopedExpressionFunction</scope><name>isStatic</name></member>
      <member refid="classQgsExpressionFunction_1a3fb17cb0e65635ea646fd80ed1d51f8c" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>lazyEval</name></member>
      <member refid="classQgsExpressionFunction_1a70702a09951459dbb665622ba65c755e" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>minParams</name></member>
      <member refid="classQgsScopedExpressionFunction_1aa30b7f8e072793344cb9936005879b12" prot="private" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>mReferencedColumns</name></member>
      <member refid="classQgsScopedExpressionFunction_1a762e24742487dcf765b4834542853a90" prot="private" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>mUsesGeometry</name></member>
      <member refid="classQgsExpressionFunction_1a75b3d6b9d50a8dd663465a42cce11848" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>name</name></member>
      <member refid="classQgsExpressionFunction_1a22fc286594b6d3ba60d2a222a1ced67b" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>operator==</name></member>
      <member refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>ParameterList</name></member>
      <member refid="classQgsExpressionFunction_1ab3056f181ae6085f89ca16639db00ed0" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>parameters</name></member>
      <member refid="classQgsExpressionFunction_1a14d5dbed8e5dd8fdcf7d5c02e18bbd7d" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>params</name></member>
      <member refid="classQgsExpressionFunction_1ac8dcaad4093a5831ff42d5b7755d43b1" prot="public" virt="virtual"><scope>QgsScopedExpressionFunction</scope><name>prepare</name></member>
      <member refid="classQgsExpressionFunction_1a2637c89917718ead50b08c760316c328" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1a721f8a31e84ecf173278082ee6f345c3" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1afc7af3ed9f0bb5da6c2e3df39b65fb06" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1a0a1834d566ebe3860d3772913b9a9fe3" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsScopedExpressionFunction_1a7cd66d31e48ae29b775d60d1334b676d" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>QgsScopedExpressionFunction</name></member>
      <member refid="classQgsScopedExpressionFunction_1a9ece6acf4d19b3dffa44f46c6ec95004" prot="public" virt="non-virtual"><scope>QgsScopedExpressionFunction</scope><name>QgsScopedExpressionFunction</name></member>
      <member refid="classQgsScopedExpressionFunction_1a0cb1da28207af8c792ee22387dada1af" prot="public" virt="virtual"><scope>QgsScopedExpressionFunction</scope><name>referencedColumns</name></member>
      <member refid="classQgsExpressionFunction_1a8cd98eda990f063851b333b5ebc2fbd5" prot="public" virt="virtual"><scope>QgsScopedExpressionFunction</scope><name>run</name></member>
      <member refid="classQgsScopedExpressionFunction_1aa959787f4041762c1dd9fd018f15bb5b" prot="public" virt="virtual"><scope>QgsScopedExpressionFunction</scope><name>usesGeometry</name></member>
      <member refid="classQgsExpressionFunction_1a4fcb413c419837eeb3b425d046048844" prot="public" virt="virtual"><scope>QgsScopedExpressionFunction</scope><name>~QgsExpressionFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
