<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsSnappingUtils" kind="class" language="C++" prot="public">
    <compoundname>QgsSnappingUtils</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="classQgsMapCanvasSnappingUtils" prot="public" virt="non-virtual">QgsMapCanvasSnappingUtils</derivedcompoundref>
    <includes refid="qgssnappingutils_8h" local="no">qgssnappingutils.h</includes>
    <innerclass refid="structQgsSnappingUtils_1_1LayerConfig" prot="public">QgsSnappingUtils::LayerConfig</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07" prot="public" static="no">
        <name>IndexingStrategy</name>
        <enumvalue id="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07a11b7d0d4c2cada575b4d9e079115554e" prot="public">
          <name>IndexAlwaysFull</name>
          <briefdescription>
<para>For all layers build index of full extent. Uses more memory, but queries are faster. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07affebbca756d51383c32982ac0db80b7d" prot="public">
          <name>IndexNeverFull</name>
          <briefdescription>
<para>For all layers only create temporary indexes of small extent. Low memory usage, slower queries. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07a1bbc95a32272cf284a2cd28c56fe365d" prot="public">
          <name>IndexHybrid</name>
          <briefdescription>
<para>For &quot;big&quot; layers using IndexNeverFull, for the rest IndexAlwaysFull. Compromise between speed and memory usage. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07af057d7f729763a280ca972805890c4e6" prot="public">
          <name>IndexExtent</name>
          <briefdescription>
<para>For all layer build index of extent given in map settings. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="87" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="86" bodyend="92"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classQgsSnappingUtils_1abdcca835bca0298f9361a8bfb03c7149" prot="private" static="no">
        <type>QPair&lt; <ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *, <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &gt;</type>
        <definition>typedef QPair&lt; QgsVectorLayer *, QgsRectangle &gt; QgsSnappingUtils::LayerAndAreaOfInterest</definition>
        <argsstring></argsstring>
        <name>LayerAndAreaOfInterest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="211" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classQgsSnappingUtils_1a2ca1440999f9ec4d9a5b16e1aacb17c9" prot="private" static="no">
        <type>QMap&lt; <ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *, <ref refid="classQgsPointLocator" kindref="compound">QgsPointLocator</ref> * &gt;</type>
        <definition>typedef QMap&lt;QgsVectorLayer *, QgsPointLocator *&gt; QgsSnappingUtils::LocatorsMap</definition>
        <argsstring></argsstring>
        <name>LocatorsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="230" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="classQgsSnappingUtils_1aa70a2e323f90c8cd1787d63fc02feef5" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="classQgsSnappingConfig" kindref="compound">QgsSnappingConfig</ref></type>
        <definition>QgsSnappingConfig QgsSnappingUtils::config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <read>config</read>
        <write>setConfig</write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="581" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsSnappingUtils_1ad8d6ff8b2c839a4b5406d4aef5cf5534" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *</type>
        <definition>QgsVectorLayer* QgsSnappingUtils::mCurrentLayer</definition>
        <argsstring></argsstring>
        <name>mCurrentLayer</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="221" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1ae336b969ea55512f988d3afc82c1511c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsSnappingUtils::mEnableSnappingForInvisibleFeature</definition>
        <argsstring></argsstring>
        <name>mEnableSnappingForInvisibleFeature</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Disable or not the snapping on all features. By default is always true except for non visible features on map canvas. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="256" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1a00dd6f1cd39292adf19d2be8ed2dac16" prot="private" static="no" mutable="no">
        <type>QHash&lt; QString, double &gt;</type>
        <definition>QHash&lt;QString, double&gt; QgsSnappingUtils::mHybridMaxAreaPerLayer</definition>
        <argsstring></argsstring>
        <name>mHybridMaxAreaPerLayer</name>
        <briefdescription>
<para>a record for each layer seen: </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>value -1 == it is small layer -&gt; fully indexed</para></listitem><listitem><para>value &gt; 0 == maximum area (in map units) for which it may make sense to build index. This means that index is built in area around the point with this total area, because for a larger area the number of features will likely exceed the limit. When the limit is exceeded, the maximum area is lowered to prevent that from happening. When requesting snap in area that is not currently indexed, layer&apos;s index is destroyed and a new one is built in the different area. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="248" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1ada40d03e2e1fd394a44b97f7a34c2de0" prot="private" static="no" mutable="no">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt;QString&gt; QgsSnappingUtils::mHybridNonindexableLayers</definition>
        <argsstring></argsstring>
        <name>mHybridNonindexableLayers</name>
        <briefdescription>
<para>list of layer IDs that are too large to be indexed (hybrid strategy will use temporary locators for those) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="236" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1a1ab9913f2097342c45f99af71ec3fa5a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int QgsSnappingUtils::mHybridPerLayerFeatureLimit</definition>
        <argsstring></argsstring>
        <name>mHybridPerLayerFeatureLimit</name>
        <initializer>= 50000</initializer>
        <briefdescription>
<para>if using hybrid strategy, how many features of one layer may be indexed (to limit amount of consumed memory) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="250" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1a5465a0dabcfad6df51fad86b4f3dc50c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsSnappingUtils::mIsIndexing</definition>
        <argsstring></argsstring>
        <name>mIsIndexing</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>internal flag that an indexing process is going on. Prevents starting two processes in parallel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="253" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1a40fbb8dc069bf413888517467295072a" prot="private" static="no" mutable="no">
        <type>QList&lt; <ref refid="structQgsSnappingUtils_1_1LayerConfig" kindref="compound">LayerConfig</ref> &gt;</type>
        <definition>QList&lt;LayerConfig&gt; QgsSnappingUtils::mLayers</definition>
        <argsstring></argsstring>
        <name>mLayers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="227" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1a5943ef259cc48175608bc399a20c6523" prot="private" static="no" mutable="no">
        <type>LocatorsMap</type>
        <definition>LocatorsMap QgsSnappingUtils::mLocators</definition>
        <argsstring></argsstring>
        <name>mLocators</name>
        <briefdescription>
<para>on-demand locators used (locators are owned) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="232" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1aab86e52d26f52115ca2d70b6d244ce5a" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsMapSettings" kindref="compound">QgsMapSettings</ref></type>
        <definition>QgsMapSettings QgsSnappingUtils::mMapSettings</definition>
        <argsstring></argsstring>
        <name>mMapSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="220" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1a4e32460ab3afa3beb0f265882006aa40" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsSnappingConfig" kindref="compound">QgsSnappingConfig</ref></type>
        <definition>QgsSnappingConfig QgsSnappingUtils::mSnappingConfig</definition>
        <argsstring></argsstring>
        <name>mSnappingConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="223" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1a800de24c86a487b3b88170e4430205a4" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07" kindref="member">IndexingStrategy</ref></type>
        <definition>IndexingStrategy QgsSnappingUtils::mStrategy</definition>
        <argsstring></argsstring>
        <name>mStrategy</name>
        <initializer>= <ref refid="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07a1bbc95a32272cf284a2cd28c56fe365d" kindref="member">IndexHybrid</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="226" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsSnappingUtils_1a3cc78e3d84cdf1e94e232c874aaa4eab" prot="private" static="no" mutable="no">
        <type>LocatorsMap</type>
        <definition>LocatorsMap QgsSnappingUtils::mTemporaryLocators</definition>
        <argsstring></argsstring>
        <name>mTemporaryLocators</name>
        <briefdescription>
<para>temporary locators (indexing just a part of layers). owned by the instance </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="234" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsSnappingUtils_1ac6233f3031a233511be606930762c1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSnappingUtils::QgsSnappingUtils</definition>
        <argsstring>(QObject *parent=nullptr, bool enableSnappingForInvisibleFeature=true)</argsstring>
        <name>QgsSnappingUtils</name>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>enableSnappingForInvisibleFeature</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsSnappingUtils" kindref="compound">QgsSnappingUtils</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="56" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a82b2d9ef872c9ce73b923f8ead2b71fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsSnappingUtils::~QgsSnappingUtils</definition>
        <argsstring>() override</argsstring>
        <name>~QgsSnappingUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="57" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1ab895c9731ac1eb42a8c30643270264d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsSnappingConfig" kindref="compound">QgsSnappingConfig</ref></type>
        <definition>QgsSnappingConfig QgsSnappingUtils::config</definition>
        <argsstring>() const</argsstring>
        <name>config</name>
        <briefdescription>
<para>The snapping configuration controls the behavior of this object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a91cb0e79d57353a7f18d64a80de4c0dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *</type>
        <definition>QgsVectorLayer* QgsSnappingUtils::currentLayer</definition>
        <argsstring>() const</argsstring>
        <name>currentLayer</name>
        <briefdescription>
<para>The current layer used if mode is SnapCurrentLayer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="82" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a69936e953c3f2ff4902bd2049b971fe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsSnappingUtils::dump</definition>
        <argsstring>()</argsstring>
        <name>dump</name>
        <briefdescription>
<para>Gets extra information about the instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="155" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="495" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a6d8af303dc4ff736af4ed9cb4cb3aeb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07" kindref="member">IndexingStrategy</ref></type>
        <definition>IndexingStrategy QgsSnappingUtils::indexingStrategy</definition>
        <argsstring>() const</argsstring>
        <name>indexingStrategy</name>
        <briefdescription>
<para>Find out which strategy is used for indexing - by default hybrid indexing is used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="97" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a3f4729a8fbbfd2a64e69482cfa876fd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="structQgsSnappingUtils_1_1LayerConfig" kindref="compound">QgsSnappingUtils::LayerConfig</ref> &gt;</type>
        <definition>QList&lt;QgsSnappingUtils::LayerConfig&gt; QgsSnappingUtils::layers</definition>
        <argsstring>() const</argsstring>
        <name>layers</name>
        <briefdescription>
<para>Query layers used for snapping. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="149" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a3ffb6ca59e1bc74bbdc944bb5f18b2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPointLocator" kindref="compound">QgsPointLocator</ref> *</type>
        <definition>QgsPointLocator * QgsSnappingUtils::locatorForLayer</definition>
        <argsstring>(QgsVectorLayer *vl)</argsstring>
        <name>locatorForLayer</name>
        <param>
          <type><ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *</type>
          <declname>vl</declname>
        </param>
        <briefdescription>
<para>Gets a point locator for the given layer. If such locator does not exist, it will be created. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="62" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="37" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a2fda583cf9eaa0e2b7b6061649afec70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsMapSettings" kindref="compound">QgsMapSettings</ref></type>
        <definition>QgsMapSettings QgsSnappingUtils::mapSettings</definition>
        <argsstring>() const</argsstring>
        <name>mapSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="77" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1ab774311e458391a39c79317fb9b68c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSnappingUtils::setCurrentLayer</definition>
        <argsstring>(QgsVectorLayer *layer)</argsstring>
        <name>setCurrentLayer</name>
        <param>
          <type><ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Sets current layer so that if mode is SnapCurrentLayer we know which layer to use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="80" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="490" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1aefac6ca842f11d313421f3583e943480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSnappingUtils::setEnableSnappingForInvisibleFeature</definition>
        <argsstring>(bool enable)</argsstring>
        <name>setEnableSnappingForInvisibleFeature</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Set if invisible features must be snapped or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable or not this feature</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="169" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="439" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1ab74a933f57ff57f011889a29b1f69921" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSnappingUtils::setIndexingStrategy</definition>
        <argsstring>(IndexingStrategy strategy)</argsstring>
        <name>setIndexingStrategy</name>
        <param>
          <type><ref refid="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07" kindref="member">IndexingStrategy</ref></type>
          <declname>strategy</declname>
        </param>
        <briefdescription>
<para>Sets a strategy for indexing geometry data - determines how fast and memory consuming the data structures will be. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="95" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a277aae5f53dc755fe5591620a7439e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSnappingUtils::setMapSettings</definition>
        <argsstring>(const QgsMapSettings &amp;settings)</argsstring>
        <name>setMapSettings</name>
        <param>
          <type>const <ref refid="classQgsMapSettings" kindref="compound">QgsMapSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Assign current map settings to the utils - used for conversion between screen coords to map coords. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="76" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="480" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a20939e2234344f1c0a717643d43c816c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structQgsPointLocator_1_1Match" kindref="compound">QgsPointLocator::Match</ref></type>
        <definition>QgsPointLocator::Match QgsSnappingUtils::snapToCurrentLayer</definition>
        <argsstring>(QPoint point, QgsPointLocator::Types type, QgsPointLocator::MatchFilter *filter=nullptr)</argsstring>
        <name>snapToCurrentLayer</name>
        <param>
          <type>QPoint</type>
          <declname>point</declname>
        </param>
        <param>
          <type>QgsPointLocator::Types</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structQgsPointLocator_1_1MatchFilter" kindref="compound">QgsPointLocator::MatchFilter</ref> *</type>
          <declname>filter</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Snap to current layer. </para>        </briefdescription>
        <detaileddescription>
<para>Snap to current layer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="71" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="463" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a0517b08e2e3cf785519dbf1583d8f14e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structQgsPointLocator_1_1Match" kindref="compound">QgsPointLocator::Match</ref></type>
        <definition>QgsPointLocator::Match QgsSnappingUtils::snapToMap</definition>
        <argsstring>(QPoint point, QgsPointLocator::MatchFilter *filter=nullptr)</argsstring>
        <name>snapToMap</name>
        <param>
          <type>QPoint</type>
          <declname>point</declname>
        </param>
        <param>
          <type><ref refid="structQgsPointLocator_1_1MatchFilter" kindref="compound">QgsPointLocator::MatchFilter</ref> *</type>
          <declname>filter</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Snap to map according to the current configuration. Optional filter allows discarding unwanted matches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="65" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a653266fa1a2a293235f7c7d5be711c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structQgsPointLocator_1_1Match" kindref="compound">QgsPointLocator::Match</ref></type>
        <definition>QgsPointLocator::Match QgsSnappingUtils::snapToMap</definition>
        <argsstring>(const QgsPointXY &amp;pointMap, QgsPointLocator::MatchFilter *filter=nullptr)</argsstring>
        <name>snapToMap</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>pointMap</declname>
        </param>
        <param>
          <type><ref refid="structQgsPointLocator_1_1MatchFilter" kindref="compound">QgsPointLocator::MatchFilter</ref> *</type>
          <declname>filter</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="66" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="226" bodyend="330"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="classQgsSnappingUtils_1ae8a01f9fb7723409227ace8544423a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSnappingUtils::setConfig</definition>
        <argsstring>(const QgsSnappingConfig &amp;snappingConfig)</argsstring>
        <name>setConfig</name>
        <param>
          <type>const <ref refid="classQgsSnappingConfig" kindref="compound">QgsSnappingConfig</ref> &amp;</type>
          <declname>snappingConfig</declname>
        </param>
        <briefdescription>
<para>The snapping configuration controls the behavior of this object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="176" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="444" bodyend="455"/>
      </memberdef>
      <memberdef kind="slot" id="classQgsSnappingUtils_1a27bb65cbf02d23a32dac1ab0c06c42f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSnappingUtils::toggleEnabled</definition>
        <argsstring>()</argsstring>
        <name>toggleEnabled</name>
        <briefdescription>
<para>Toggles the state of snapping. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="183" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="457" bodyend="461"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classQgsSnappingUtils_1a7a06db84d194796a3706a4aff7b73ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSnappingUtils::configChanged</definition>
        <argsstring>(const QgsSnappingConfig &amp;snappingConfig)</argsstring>
        <name>configChanged</name>
        <param>
          <type>const <ref refid="classQgsSnappingConfig" kindref="compound">QgsSnappingConfig</ref> &amp;</type>
          <declname>snappingConfig</declname>
        </param>
        <briefdescription>
<para>Emitted when the snapping settings object changes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="190" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsSnappingUtils_1aa20b2836586a70bb05781d2c95956bbe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSnappingUtils::clearAllLocators</definition>
        <argsstring>()</argsstring>
        <name>clearAllLocators</name>
        <briefdescription>
<para>Deletes all existing locators (e.g. when destination CRS has changed and we need to reindex) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="199" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="50" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a519d99073e392afa34caee7b4494bc24" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QgsSnappingUtils::prepareIndexProgress</definition>
        <argsstring>(int index)</argsstring>
        <name>prepareIndexProgress</name>
        <reimplementedby refid="classQgsMapCanvasSnappingUtils_1a2a30695b43d531d6b1996ee5167e2912">prepareIndexProgress</reimplementedby>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Called when finished indexing a layer. When index == count the indexing is complete. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="196" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1afb974ba413586f6cd48783ce13a9b933" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QgsSnappingUtils::prepareIndexStarting</definition>
        <argsstring>(int count)</argsstring>
        <name>prepareIndexStarting</name>
        <reimplementedby refid="classQgsMapCanvasSnappingUtils_1aa986f26ffe064dfd816fe6d1b1892e6b">prepareIndexStarting</reimplementedby>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Called when starting to index - can be overridden and e.g. progress dialog can be provided. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="194" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="194" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsSnappingUtils_1a9686ea14e8458143587e6637bb7e0144" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsCoordinateReferenceSystem" kindref="compound">QgsCoordinateReferenceSystem</ref></type>
        <definition>QgsCoordinateReferenceSystem QgsSnappingUtils::destinationCrs</definition>
        <argsstring>() const</argsstring>
        <name>destinationCrs</name>
        <briefdescription>
<para>Gets destination CRS from map settings, or an invalid CRS if projections are disabled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="204" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="576" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a581387312bb5f796e47949042ad8033c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsSnappingUtils::isIndexPrepared</definition>
        <argsstring>(QgsVectorLayer *vl, const QgsRectangle &amp;areaOfInterest)</argsstring>
        <name>isIndexPrepared</name>
        <param>
          <type><ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *</type>
          <declname>vl</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsRectangle" kindref="compound">QgsRectangle</ref> &amp;</type>
          <declname>areaOfInterest</declname>
        </param>
        <briefdescription>
<para>find out whether the strategy would index such layer or just use a temporary locator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="214" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="82" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a9218d1fb735803780b3ad47b25d21735" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPointLocator" kindref="compound">QgsPointLocator</ref> *</type>
        <definition>QgsPointLocator * QgsSnappingUtils::locatorForLayerUsingStrategy</definition>
        <argsstring>(QgsVectorLayer *vl, const QgsPointXY &amp;pointMap, double tolerance)</argsstring>
        <name>locatorForLayerUsingStrategy</name>
        <param>
          <type><ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *</type>
          <declname>vl</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>pointMap</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Returns a locator (temporary or not) according to the indexing strategy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="207" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="60" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a054232c3bb90234de28f426d6bc3d8ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSnappingUtils::onIndividualLayerSettingsChanged</definition>
        <argsstring>(const QHash&lt; QgsVectorLayer *, QgsSnappingConfig::IndividualLayerSettings &gt; &amp;layerSettings)</argsstring>
        <name>onIndividualLayerSettingsChanged</name>
        <param>
          <type>const QHash&lt; <ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *, <ref refid="classQgsSnappingConfig_1_1IndividualLayerSettings" kindref="compound">QgsSnappingConfig::IndividualLayerSettings</ref> &gt; &amp;</type>
          <declname>layerSettings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="202" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="581" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1a0819da41a490e14f7bd16d347144f1e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsSnappingUtils::prepareIndex</definition>
        <argsstring>(const QList&lt; LayerAndAreaOfInterest &gt; &amp;layers)</argsstring>
        <name>prepareIndex</name>
        <param>
          <type>const QList&lt; LayerAndAreaOfInterest &gt; &amp;</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
<para>initialize index for layers where it makes sense (according to the indexing strategy) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="216" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="332" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classQgsSnappingUtils_1ac5b44e6ce2bd237ad559939c9b29acc7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsPointLocator" kindref="compound">QgsPointLocator</ref> *</type>
        <definition>QgsPointLocator * QgsSnappingUtils::temporaryLocatorForLayer</definition>
        <argsstring>(QgsVectorLayer *vl, const QgsPointXY &amp;pointMap, double tolerance)</argsstring>
        <name>temporaryLocatorForLayer</name>
        <param>
          <type><ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *</type>
          <declname>vl</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>pointMap</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Returns a temporary locator with index only for a small area (will be replaced by another one on next request) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="209" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.cpp" bodystart="70" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class has all the configuration of snapping and can return answers to snapping queries. </para>    </briefdescription>
    <detaileddescription>
<para>Internally, it keeps a cache of <ref refid="classQgsPointLocator" kindref="compound">QgsPointLocator</ref> instances for multiple layers.</para><para>Currently it supports the following queries:<itemizedlist>
<listitem><para><ref refid="classQgsSnappingUtils_1a0517b08e2e3cf785519dbf1583d8f14e" kindref="member">snapToMap()</ref> - has multiple modes of operation</para></listitem><listitem><para><ref refid="classQgsSnappingUtils_1a20939e2234344f1c0a717643d43c816c" kindref="member">snapToCurrentLayer()</ref> For more complex queries it is possible to use <ref refid="classQgsSnappingUtils_1a3ffb6ca59e1bc74bbdc944bb5f18b2e2" kindref="member">locatorForLayer()</ref> method that returns point locator instance with layer&apos;s indexed data.</para></listitem></itemizedlist>
</para><para>Indexing strategy determines how fast the queries will be and how much memory will be used.</para><para>When working with map canvas, it may be useful to use derived class <ref refid="classQgsMapCanvasSnappingUtils" kindref="compound">QgsMapCanvasSnappingUtils</ref> which keeps the configuration in sync with map canvas (e.g. current view, active layer).</para><para><simplesect kind="since"><para>QGIS 2.8 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8493">
        <label>QObject</label>
      </node>
      <node id="8492">
        <label>QgsSnappingUtils</label>
        <link refid="classQgsSnappingUtils"/>
        <childnode refid="8493" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8494">
        <label>QgsMapCanvasSnappingUtils</label>
        <link refid="classQgsMapCanvasSnappingUtils"/>
        <childnode refid="8492" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8496">
        <label>QObject</label>
      </node>
      <node id="8495">
        <label>QgsSnappingUtils</label>
        <link refid="classQgsSnappingUtils"/>
        <childnode refid="8496" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" line="48" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgssnappingutils.h" bodystart="47" bodyend="258"/>
    <listofallmembers>
      <member refid="classQgsSnappingUtils_1aa20b2836586a70bb05781d2c95956bbe" prot="protected" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>clearAllLocators</name></member>
      <member refid="classQgsSnappingUtils_1aa70a2e323f90c8cd1787d63fc02feef5" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>config</name></member>
      <member refid="classQgsSnappingUtils_1ab895c9731ac1eb42a8c30643270264d5" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>config</name></member>
      <member refid="classQgsSnappingUtils_1a7a06db84d194796a3706a4aff7b73ddd" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>configChanged</name></member>
      <member refid="classQgsSnappingUtils_1a91cb0e79d57353a7f18d64a80de4c0dd" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>currentLayer</name></member>
      <member refid="classQgsSnappingUtils_1a9686ea14e8458143587e6637bb7e0144" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>destinationCrs</name></member>
      <member refid="classQgsSnappingUtils_1a69936e953c3f2ff4902bd2049b971fe6" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>dump</name></member>
      <member refid="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07a11b7d0d4c2cada575b4d9e079115554e" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>IndexAlwaysFull</name></member>
      <member refid="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07af057d7f729763a280ca972805890c4e6" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>IndexExtent</name></member>
      <member refid="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07a1bbc95a32272cf284a2cd28c56fe365d" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>IndexHybrid</name></member>
      <member refid="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>IndexingStrategy</name></member>
      <member refid="classQgsSnappingUtils_1a6d8af303dc4ff736af4ed9cb4cb3aeb2" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>indexingStrategy</name></member>
      <member refid="classQgsSnappingUtils_1a2ea7577667b94657e14f63ba7dd0bf07affebbca756d51383c32982ac0db80b7d" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>IndexNeverFull</name></member>
      <member refid="classQgsSnappingUtils_1a581387312bb5f796e47949042ad8033c" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>isIndexPrepared</name></member>
      <member refid="classQgsSnappingUtils_1abdcca835bca0298f9361a8bfb03c7149" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>LayerAndAreaOfInterest</name></member>
      <member refid="classQgsSnappingUtils_1a3f4729a8fbbfd2a64e69482cfa876fd7" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>layers</name></member>
      <member refid="classQgsSnappingUtils_1a3ffb6ca59e1bc74bbdc944bb5f18b2e2" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>locatorForLayer</name></member>
      <member refid="classQgsSnappingUtils_1a9218d1fb735803780b3ad47b25d21735" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>locatorForLayerUsingStrategy</name></member>
      <member refid="classQgsSnappingUtils_1a2ca1440999f9ec4d9a5b16e1aacb17c9" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>LocatorsMap</name></member>
      <member refid="classQgsSnappingUtils_1a2fda583cf9eaa0e2b7b6061649afec70" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mapSettings</name></member>
      <member refid="classQgsSnappingUtils_1ad8d6ff8b2c839a4b5406d4aef5cf5534" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mCurrentLayer</name></member>
      <member refid="classQgsSnappingUtils_1ae336b969ea55512f988d3afc82c1511c" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mEnableSnappingForInvisibleFeature</name></member>
      <member refid="classQgsSnappingUtils_1a00dd6f1cd39292adf19d2be8ed2dac16" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mHybridMaxAreaPerLayer</name></member>
      <member refid="classQgsSnappingUtils_1ada40d03e2e1fd394a44b97f7a34c2de0" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mHybridNonindexableLayers</name></member>
      <member refid="classQgsSnappingUtils_1a1ab9913f2097342c45f99af71ec3fa5a" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mHybridPerLayerFeatureLimit</name></member>
      <member refid="classQgsSnappingUtils_1a5465a0dabcfad6df51fad86b4f3dc50c" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mIsIndexing</name></member>
      <member refid="classQgsSnappingUtils_1a40fbb8dc069bf413888517467295072a" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mLayers</name></member>
      <member refid="classQgsSnappingUtils_1a5943ef259cc48175608bc399a20c6523" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mLocators</name></member>
      <member refid="classQgsSnappingUtils_1aab86e52d26f52115ca2d70b6d244ce5a" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mMapSettings</name></member>
      <member refid="classQgsSnappingUtils_1a4e32460ab3afa3beb0f265882006aa40" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mSnappingConfig</name></member>
      <member refid="classQgsSnappingUtils_1a800de24c86a487b3b88170e4430205a4" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mStrategy</name></member>
      <member refid="classQgsSnappingUtils_1a3cc78e3d84cdf1e94e232c874aaa4eab" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>mTemporaryLocators</name></member>
      <member refid="classQgsSnappingUtils_1a054232c3bb90234de28f426d6bc3d8ef" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>onIndividualLayerSettingsChanged</name></member>
      <member refid="classQgsSnappingUtils_1a0819da41a490e14f7bd16d347144f1e6" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>prepareIndex</name></member>
      <member refid="classQgsSnappingUtils_1a519d99073e392afa34caee7b4494bc24" prot="protected" virt="virtual"><scope>QgsSnappingUtils</scope><name>prepareIndexProgress</name></member>
      <member refid="classQgsSnappingUtils_1afb974ba413586f6cd48783ce13a9b933" prot="protected" virt="virtual"><scope>QgsSnappingUtils</scope><name>prepareIndexStarting</name></member>
      <member refid="classQgsSnappingUtils_1ac6233f3031a233511be606930762c1cc" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>QgsSnappingUtils</name></member>
      <member refid="classQgsSnappingUtils_1ae8a01f9fb7723409227ace8544423a92" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>setConfig</name></member>
      <member refid="classQgsSnappingUtils_1ab774311e458391a39c79317fb9b68c08" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>setCurrentLayer</name></member>
      <member refid="classQgsSnappingUtils_1aefac6ca842f11d313421f3583e943480" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>setEnableSnappingForInvisibleFeature</name></member>
      <member refid="classQgsSnappingUtils_1ab74a933f57ff57f011889a29b1f69921" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>setIndexingStrategy</name></member>
      <member refid="classQgsSnappingUtils_1a277aae5f53dc755fe5591620a7439e41" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>setMapSettings</name></member>
      <member refid="classQgsSnappingUtils_1a20939e2234344f1c0a717643d43c816c" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>snapToCurrentLayer</name></member>
      <member refid="classQgsSnappingUtils_1a0517b08e2e3cf785519dbf1583d8f14e" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>snapToMap</name></member>
      <member refid="classQgsSnappingUtils_1a653266fa1a2a293235f7c7d5be711c57" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>snapToMap</name></member>
      <member refid="classQgsSnappingUtils_1ac5b44e6ce2bd237ad559939c9b29acc7" prot="private" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>temporaryLocatorForLayer</name></member>
      <member refid="classQgsSnappingUtils_1a27bb65cbf02d23a32dac1ab0c06c42f6" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>toggleEnabled</name></member>
      <member refid="classQgsSnappingUtils_1a82b2d9ef872c9ce73b923f8ead2b71fa" prot="public" virt="non-virtual"><scope>QgsSnappingUtils</scope><name>~QgsSnappingUtils</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
