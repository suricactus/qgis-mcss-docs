<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsJsonUtils" kind="class" language="C++" prot="public">
    <compoundname>QgsJsonUtils</compoundname>
    <includes refid="qgsjsonutils_8h" local="no">qgsjsonutils.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsJsonUtils_1a46e34523127b644a7c462080f4e83d6c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsJsonUtils::encodeValue</definition>
        <argsstring>(const QVariant &amp;value)</argsstring>
        <name>encodeValue</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Encodes a value to a JSON string representation, adding appropriate quotations and escaping where required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to encode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>encoded value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.h" line="266" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.cpp" bodystart="258" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classQgsJsonUtils_1a25746cf96b0327f3dc587ee385e3aa95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsJsonUtils::exportAttributes</definition>
        <argsstring>(const QgsFeature &amp;feature, QgsVectorLayer *layer=nullptr, const QVector&lt; QVariant &gt; &amp;attributeWidgetCaches=QVector&lt; QVariant &gt;())</argsstring>
        <name>exportAttributes</name>
        <param>
          <type>const <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> &amp;</type>
          <declname>feature</declname>
        </param>
        <param>
          <type><ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *</type>
          <declname>layer</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const QVector&lt; QVariant &gt; &amp;</type>
          <declname>attributeWidgetCaches</declname>
          <defval>QVector&lt; QVariant &gt;()</defval>
        </param>
        <briefdescription>
<para>Exports all attributes from a <ref refid="classQgsFeature" kindref="compound">QgsFeature</ref> as a JSON map type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feature</parametername>
</parameternamelist>
<parameterdescription>
<para>feature to export </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>optional associated vector layer. If specified, this allows richer export utilising settings like the layer&apos;s fields widget configuration. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attributeWidgetCaches</parametername>
</parameternamelist>
<parameterdescription>
<para>optional widget configuration cache. Can be used to speed up exporting the attributes for multiple features from the same layer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.h" line="276" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.cpp" bodystart="295" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classQgsJsonUtils_1a8a736206ffd2fb71b3592ef81774e65a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVariantList</type>
        <definition>QVariantList QgsJsonUtils::parseArray</definition>
        <argsstring>(const QString &amp;json, QVariant::Type type)</argsstring>
        <name>parseArray</name>
        <param>
          <type>const QString &amp;</type>
          <declname>json</declname>
        </param>
        <param>
          <type>QVariant::Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Parse a simple array (depth=1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>json</parametername>
</parameternamelist>
<parameterdescription>
<para>the JSON to parse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the elements </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.h" line="285" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.cpp" bodystart="319" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classQgsJsonUtils_1af29737fad1efddb34a26877693a12993" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="qgsfeature_8h_1ae0f922f3469155bc17dfc96729f1c1cc" kindref="member">QgsFeatureList</ref></type>
        <definition>QgsFeatureList QgsJsonUtils::stringToFeatureList</definition>
        <argsstring>(const QString &amp;string, const QgsFields &amp;fields, QTextCodec *encoding)</argsstring>
        <name>stringToFeatureList</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsFields" kindref="compound">QgsFields</ref> &amp;</type>
          <declname>fields</declname>
        </param>
        <param>
          <type>QTextCodec *</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
<para>Attempts to parse a GeoJSON string to a collection of features. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>GeoJSON string to parse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fields</parametername>
</parameternamelist>
<parameterdescription>
<para>fields collection to use for parsed features </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encoding</parametername>
</parameternamelist>
<parameterdescription>
<para>text encoding </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>list of parsed features, or an empty list if no features could be parsed </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsJsonUtils_1af36b527c8dcb8dcaf3c9d31006a269bc" kindref="member">stringToFields()</ref> </para></simplesect>
<simplesect kind="note"><para>this function is a wrapper around <ref refid="classQgsOgrUtils_1ab33d833d35ada57480ab34a6bfaca245" kindref="member">QgsOgrUtils::stringToFeatureList()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.h" line="248" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.cpp" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classQgsJsonUtils_1af36b527c8dcb8dcaf3c9d31006a269bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsFields" kindref="compound">QgsFields</ref></type>
        <definition>QgsFields QgsJsonUtils::stringToFields</definition>
        <argsstring>(const QString &amp;string, QTextCodec *encoding)</argsstring>
        <name>stringToFields</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>QTextCodec *</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
<para>Attempts to retrieve the fields from a GeoJSON string representing a collection of features. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>GeoJSON string to parse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encoding</parametername>
</parameternamelist>
<parameterdescription>
<para>text encoding </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>retrieved fields collection, or an empty list if no fields could be determined from the string </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsJsonUtils_1af29737fad1efddb34a26877693a12993" kindref="member">stringToFeatureList()</ref> </para></simplesect>
<simplesect kind="note"><para>this function is a wrapper around <ref refid="classQgsOgrUtils_1abecc597eab74e0a8b0bc844e530bb768" kindref="member">QgsOgrUtils::stringToFields()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.h" line="258" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.cpp" bodystart="253" bodyend="256"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper utilities for working with JSON and GeoJSON conversions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.16 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.h" line="236" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsjsonutils.h" bodystart="235" bodyend="286"/>
    <listofallmembers>
      <member refid="classQgsJsonUtils_1a46e34523127b644a7c462080f4e83d6c" prot="public" virt="non-virtual"><scope>QgsJsonUtils</scope><name>encodeValue</name></member>
      <member refid="classQgsJsonUtils_1a25746cf96b0327f3dc587ee385e3aa95" prot="public" virt="non-virtual"><scope>QgsJsonUtils</scope><name>exportAttributes</name></member>
      <member refid="classQgsJsonUtils_1a8a736206ffd2fb71b3592ef81774e65a" prot="public" virt="non-virtual"><scope>QgsJsonUtils</scope><name>parseArray</name></member>
      <member refid="classQgsJsonUtils_1af29737fad1efddb34a26877693a12993" prot="public" virt="non-virtual"><scope>QgsJsonUtils</scope><name>stringToFeatureList</name></member>
      <member refid="classQgsJsonUtils_1af36b527c8dcb8dcaf3c9d31006a269bc" prot="public" virt="non-virtual"><scope>QgsJsonUtils</scope><name>stringToFields</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
