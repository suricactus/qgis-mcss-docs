<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsAuxiliaryStorage" kind="class" language="C++" prot="public">
    <compoundname>QgsAuxiliaryStorage</compoundname>
    <includes refid="qgsauxiliarystorage_8h" local="no">qgsauxiliarystorage.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsAuxiliaryStorage_1a424655541deef52596b6b999a7c64c2d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::mCopy</definition>
        <argsstring></argsstring>
        <name>mCopy</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="418" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuxiliaryStorage_1a00f28be5b11f63ce94cfdb4cd497c0b3" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsAuxiliaryStorage::mErrorString</definition>
        <argsstring></argsstring>
        <name>mErrorString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="419" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuxiliaryStorage_1adebc70e972668f943d4a935babfe97d6" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsAuxiliaryStorage::mFileName</definition>
        <argsstring></argsstring>
        <name>mFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="416" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuxiliaryStorage_1a46794f83215857185f8919c9229d23ec" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsAuxiliaryStorage::mTmpFileName</definition>
        <argsstring></argsstring>
        <name>mTmpFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="417" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuxiliaryStorage_1ac2783b28b82ce50c90248eca32c9930e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::mValid</definition>
        <argsstring></argsstring>
        <name>mValid</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="415" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1ab8d4705388cbaaabd6913f7d33c2263c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsAuxiliaryStorage::QgsAuxiliaryStorage</definition>
        <argsstring>(const QgsProject &amp;project, bool copy=true)</argsstring>
        <name>QgsAuxiliaryStorage</name>
        <param>
          <type>const <ref refid="classQgsProject" kindref="compound">QgsProject</ref> &amp;</type>
          <declname>project</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>The project filename is used to build a database path at the same location, but with a different extension. Then, it&apos;s the same logic as described for <simplesect kind="see"><para><ref refid="classQgsAuxiliaryStorage_1a08805ed48e2430e774265d6f9d94fdfa" kindref="member">QgsAuxiliaryStorage(const QString &amp;, bool copy)</ref>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>project</parametername>
</parameternamelist>
<parameterdescription>
<para>The project for which the auxiliary storage has to be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter indicating if a copy of the database has to be used </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="274" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="501" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a08805ed48e2430e774265d6f9d94fdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsAuxiliaryStorage::QgsAuxiliaryStorage</definition>
        <argsstring>(const QString &amp;filename=QString(), bool copy=true)</argsstring>
        <name>QgsAuxiliaryStorage</name>
        <param>
          <type>const QString &amp;</type>
          <declname>filename</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>If a valid database path is given in parameter and copy mode is deactivated, then every changes is directly committed on the original database. But if the copy mode is activated, then changes are committed on a copy of the database (a temporary file) and a save action is therefore necessary to keep modifications in the original file.</para><para>If an empty string for the database path is given in parameter, then a database is created in a temporary file whatever the copy mode.</para><para>If the database path given in parameter is not empty but does not exist, then a database is created at this location when copy mode is deactivated. When copy mode is activated, a temporary database is used instead and a save action will be necessary to create the database at the original location given in parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the database </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter indicating if a copy of the database has to be used </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="297" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="514" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a0ba5de55597b0ecc075be407beb20d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QgsAuxiliaryStorage::~QgsAuxiliaryStorage</definition>
        <argsstring>()</argsstring>
        <name>~QgsAuxiliaryStorage</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="302" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="523" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a81bc8682a0e7195cb96b37b2b4fb27eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsAuxiliaryLayer" kindref="compound">QgsAuxiliaryLayer</ref> *</type>
        <definition>QgsAuxiliaryLayer * QgsAuxiliaryStorage::createAuxiliaryLayer</definition>
        <argsstring>(const QgsField &amp;field, QgsVectorLayer *layer) const</argsstring>
        <name>createAuxiliaryLayer</name>
        <param>
          <type>const <ref refid="classQgsField" kindref="compound">QgsField</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="classQgsVectorLayer" kindref="compound">QgsVectorLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Creates an auxiliary layer for a vector layer. </para>        </briefdescription>
        <detaileddescription>
<para>A new table is created if necessary. The primary key to use to construct the auxiliary layer is given in parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The primary key to join </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector layer for which the auxiliary layer has to be created</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new auxiliary layer or a nullptr if an error happened. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="363" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="561" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1ab32c272989172d8c6456c87de9bf76b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuxiliaryStorage::currentFileName</definition>
        <argsstring>() const</argsstring>
        <name>currentFileName</name>
        <briefdescription>
<para>Returns the path of the current database used. </para>        </briefdescription>
        <detaileddescription>
<para>It may be different from the target filename if the auxiliary storage is opened in copy mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="320" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="807" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a4331ee9bddeeaad206980aed9f4539f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuxiliaryStorage::errorString</definition>
        <argsstring>() const</argsstring>
        <name>errorString</name>
        <briefdescription>
<para>Returns the underlying error string describing potential errors happening in <ref refid="classQgsAuxiliaryStorage_1a949a4ce95e0c1ff779ea6a20361b6569" kindref="member">saveAs()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Empty by default.</para><para><simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="328" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="629" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1ab92155a6dfc7a49a0419cfeb4586a210" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuxiliaryStorage::fileName</definition>
        <argsstring>() const</argsstring>
        <name>fileName</name>
        <briefdescription>
<para>Returns the target filename of the database. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="314" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="533" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a9ea45dc33a2912a3af476a4c3b0978ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Returns the status of the auxiliary storage currently defined. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the auxiliary storage is valid, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="309" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="528" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a665dec22c636fccefe67f65c4c3d9cc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::save</definition>
        <argsstring>() const</argsstring>
        <name>save</name>
        <briefdescription>
<para>Saves the current database. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if everything is saved, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="351" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="538" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a949a4ce95e0c1ff779ea6a20361b6569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::saveAs</definition>
        <argsstring>(const QString &amp;filename)</argsstring>
        <name>saveAs</name>
        <param>
          <type>const QString &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Saves the current database to a new path. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if everything is saved, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="335" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="634" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1aeaf00dbf63a86d28a007e7979938aaf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::saveAs</definition>
        <argsstring>(const QgsProject &amp;project)</argsstring>
        <name>saveAs</name>
        <param>
          <type>const <ref refid="classQgsProject" kindref="compound">QgsProject</ref> &amp;</type>
          <declname>project</declname>
        </param>
        <briefdescription>
<para>Saves the current database to a new path for a specific project. </para>        </briefdescription>
        <detaileddescription>
<para>Actually, the current filename of the project is used to deduce the path of the database to save.</para><para><simplesect kind="return"><para>true if everything is saved, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="344" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="655" bodyend="658"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a79fd42d0574e7843c160d09e240215ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::deleteTable</definition>
        <argsstring>(const QgsDataSourceUri &amp;uri)</argsstring>
        <name>deleteTable</name>
        <param>
          <type>const <ref refid="classQgsDataSourceUri" kindref="compound">QgsDataSourceUri</ref> &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
<para>Removes a table from the auxiliary storage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The uri of the table to remove</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the table is well deleted, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="372" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="586" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a118ffca9c477d525242481106efbd8d2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::duplicateTable</definition>
        <argsstring>(const QgsDataSourceUri &amp;uri, const QString &amp;newTable)</argsstring>
        <name>duplicateTable</name>
        <param>
          <type>const <ref refid="classQgsDataSourceUri" kindref="compound">QgsDataSourceUri</ref> &amp;</type>
          <declname>uri</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>newTable</declname>
        </param>
        <briefdescription>
<para>Duplicates a table and its content. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The uri of the table to duplicate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newTable</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the new table</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the table is well duplicated, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="382" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="609" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a734d56443520eff1d21b16c05b453f8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::exists</definition>
        <argsstring>(const QgsProject &amp;project)</argsstring>
        <name>exists</name>
        <param>
          <type>const <ref refid="classQgsProject" kindref="compound">QgsProject</ref> &amp;</type>
          <declname>project</declname>
        </param>
        <briefdescription>
<para>Returns true if the auxiliary database yet exists for a project, false otherwise. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>project</parametername>
</parameternamelist>
<parameterdescription>
<para>The project for which the database is checked</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="396" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="665" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1afe75fdfc55750f6f1ca56806c9e5cfaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuxiliaryStorage::extension</definition>
        <argsstring>()</argsstring>
        <name>extension</name>
        <briefdescription>
<para>Returns the extension used for auxiliary databases. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="387" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="660" bodyend="663"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a5152fc8a33782ba158b54ebec07ae602" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuxiliaryStorage::initTmpFileName</definition>
        <argsstring>()</argsstring>
        <name>initTmpFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="402" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="799" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a631228da93edd5226e8f7a4a8e10f14a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspatialite__database__unique__ptr" kindref="compound">spatialite_database_unique_ptr</ref></type>
        <definition>spatialite_database_unique_ptr QgsAuxiliaryStorage::open</definition>
        <argsstring>(const QString &amp;filename=QString())</argsstring>
        <name>open</name>
        <param>
          <type>const QString &amp;</type>
          <declname>filename</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="399" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="761" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1aa72c9f67302517e989ae543bdfb2a106" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspatialite__database__unique__ptr" kindref="compound">spatialite_database_unique_ptr</ref></type>
        <definition>spatialite_database_unique_ptr QgsAuxiliaryStorage::open</definition>
        <argsstring>(const QgsProject &amp;project)</argsstring>
        <name>open</name>
        <param>
          <type>const <ref refid="classQgsProject" kindref="compound">QgsProject</ref> &amp;</type>
          <declname>project</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="400" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="787" bodyend="790"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a0fdb80256e05dbad35d4de9ca8d85bce" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspatialite__database__unique__ptr" kindref="compound">spatialite_database_unique_ptr</ref></type>
        <definition>spatialite_database_unique_ptr QgsAuxiliaryStorage::createDB</definition>
        <argsstring>(const QString &amp;filename)</argsstring>
        <name>createDB</name>
        <param>
          <type>const QString &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="405" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="711" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1ad8705c25b755bd168722ff65de93ac1d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::createTable</definition>
        <argsstring>(const QString &amp;type, const QString &amp;table, sqlite3 *handler)</argsstring>
        <name>createTable</name>
        <param>
          <type>const QString &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="qgscoordinatereferencesystem_8h_1a0ef6f2646262c8a9b24368d8ac140f69" kindref="member">sqlite3</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="408" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="701" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a10d2506f20f2837aa76d84aae2b3c2f5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuxiliaryStorage::debugMsg</definition>
        <argsstring>(const QString &amp;sql, sqlite3 *handler)</argsstring>
        <name>debugMsg</name>
        <param>
          <type>const QString &amp;</type>
          <declname>sql</declname>
        </param>
        <param>
          <type><ref refid="qgscoordinatereferencesystem_8h_1a0ef6f2646262c8a9b24368d8ac140f69" kindref="member">sqlite3</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="411" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="688" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1af77d4f84bcc32bc9ed477b7efc075db8" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::exec</definition>
        <argsstring>(const QString &amp;sql, sqlite3 *handler)</argsstring>
        <name>exec</name>
        <param>
          <type>const QString &amp;</type>
          <declname>sql</declname>
        </param>
        <param>
          <type><ref refid="qgscoordinatereferencesystem_8h_1a0ef6f2646262c8a9b24368d8ac140f69" kindref="member">sqlite3</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="410" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="671" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a56296db6198c716e919c8c929ecb661d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuxiliaryStorage::filenameForProject</definition>
        <argsstring>(const QgsProject &amp;project)</argsstring>
        <name>filenameForProject</name>
        <param>
          <type>const <ref refid="classQgsProject" kindref="compound">QgsProject</ref> &amp;</type>
          <declname>project</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="404" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="792" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a938b9143475cf31e2940d24a77cf5076" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classspatialite__database__unique__ptr" kindref="compound">spatialite_database_unique_ptr</ref></type>
        <definition>spatialite_database_unique_ptr QgsAuxiliaryStorage::openDB</definition>
        <argsstring>(const QString &amp;filename)</argsstring>
        <name>openDB</name>
        <param>
          <type>const QString &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="406" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="728" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1aa3f94a9fabad69ffb1ee7eca882aab44" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsDataSourceUri" kindref="compound">QgsDataSourceUri</ref></type>
        <definition>QgsDataSourceUri QgsAuxiliaryStorage::parseOgrUri</definition>
        <argsstring>(const QgsDataSourceUri &amp;uri)</argsstring>
        <name>parseOgrUri</name>
        <param>
          <type>const <ref refid="classQgsDataSourceUri" kindref="compound">QgsDataSourceUri</ref> &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="413" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="815" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuxiliaryStorage_1a931bf9a73494daf337b07233f543898e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuxiliaryStorage::tableExists</definition>
        <argsstring>(const QString &amp;table, sqlite3 *handler)</argsstring>
        <name>tableExists</name>
        <param>
          <type>const QString &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="qgscoordinatereferencesystem_8h_1a0ef6f2646262c8a9b24368d8ac140f69" kindref="member">sqlite3</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="407" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.cpp" bodystart="741" bodyend="759"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class providing some utility methods to manage auxiliary storage. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" line="260" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgsauxiliarystorage.h" bodystart="259" bodyend="420"/>
    <listofallmembers>
      <member refid="classQgsAuxiliaryStorage_1a81bc8682a0e7195cb96b37b2b4fb27eb" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>createAuxiliaryLayer</name></member>
      <member refid="classQgsAuxiliaryStorage_1a0fdb80256e05dbad35d4de9ca8d85bce" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>createDB</name></member>
      <member refid="classQgsAuxiliaryStorage_1ad8705c25b755bd168722ff65de93ac1d" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>createTable</name></member>
      <member refid="classQgsAuxiliaryStorage_1ab32c272989172d8c6456c87de9bf76b8" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>currentFileName</name></member>
      <member refid="classQgsAuxiliaryStorage_1a10d2506f20f2837aa76d84aae2b3c2f5" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>debugMsg</name></member>
      <member refid="classQgsAuxiliaryStorage_1a79fd42d0574e7843c160d09e240215ac" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>deleteTable</name></member>
      <member refid="classQgsAuxiliaryStorage_1a118ffca9c477d525242481106efbd8d2" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>duplicateTable</name></member>
      <member refid="classQgsAuxiliaryStorage_1a4331ee9bddeeaad206980aed9f4539f0" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>errorString</name></member>
      <member refid="classQgsAuxiliaryStorage_1af77d4f84bcc32bc9ed477b7efc075db8" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>exec</name></member>
      <member refid="classQgsAuxiliaryStorage_1a734d56443520eff1d21b16c05b453f8f" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>exists</name></member>
      <member refid="classQgsAuxiliaryStorage_1afe75fdfc55750f6f1ca56806c9e5cfaa" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>extension</name></member>
      <member refid="classQgsAuxiliaryStorage_1ab92155a6dfc7a49a0419cfeb4586a210" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>fileName</name></member>
      <member refid="classQgsAuxiliaryStorage_1a56296db6198c716e919c8c929ecb661d" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>filenameForProject</name></member>
      <member refid="classQgsAuxiliaryStorage_1a5152fc8a33782ba158b54ebec07ae602" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>initTmpFileName</name></member>
      <member refid="classQgsAuxiliaryStorage_1a9ea45dc33a2912a3af476a4c3b0978ac" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>isValid</name></member>
      <member refid="classQgsAuxiliaryStorage_1a424655541deef52596b6b999a7c64c2d" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>mCopy</name></member>
      <member refid="classQgsAuxiliaryStorage_1a00f28be5b11f63ce94cfdb4cd497c0b3" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>mErrorString</name></member>
      <member refid="classQgsAuxiliaryStorage_1adebc70e972668f943d4a935babfe97d6" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>mFileName</name></member>
      <member refid="classQgsAuxiliaryStorage_1a46794f83215857185f8919c9229d23ec" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>mTmpFileName</name></member>
      <member refid="classQgsAuxiliaryStorage_1ac2783b28b82ce50c90248eca32c9930e" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>mValid</name></member>
      <member refid="classQgsAuxiliaryStorage_1a631228da93edd5226e8f7a4a8e10f14a" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>open</name></member>
      <member refid="classQgsAuxiliaryStorage_1aa72c9f67302517e989ae543bdfb2a106" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>open</name></member>
      <member refid="classQgsAuxiliaryStorage_1a938b9143475cf31e2940d24a77cf5076" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>openDB</name></member>
      <member refid="classQgsAuxiliaryStorage_1aa3f94a9fabad69ffb1ee7eca882aab44" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>parseOgrUri</name></member>
      <member refid="classQgsAuxiliaryStorage_1ab8d4705388cbaaabd6913f7d33c2263c" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>QgsAuxiliaryStorage</name></member>
      <member refid="classQgsAuxiliaryStorage_1a08805ed48e2430e774265d6f9d94fdfa" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>QgsAuxiliaryStorage</name></member>
      <member refid="classQgsAuxiliaryStorage_1a665dec22c636fccefe67f65c4c3d9cc5" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>save</name></member>
      <member refid="classQgsAuxiliaryStorage_1a949a4ce95e0c1ff779ea6a20361b6569" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>saveAs</name></member>
      <member refid="classQgsAuxiliaryStorage_1aeaf00dbf63a86d28a007e7979938aaf8" prot="public" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>saveAs</name></member>
      <member refid="classQgsAuxiliaryStorage_1a931bf9a73494daf337b07233f543898e" prot="private" virt="non-virtual"><scope>QgsAuxiliaryStorage</scope><name>tableExists</name></member>
      <member refid="classQgsAuxiliaryStorage_1a0ba5de55597b0ecc075be407beb20d94" prot="public" virt="virtual"><scope>QgsAuxiliaryStorage</scope><name>~QgsAuxiliaryStorage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
