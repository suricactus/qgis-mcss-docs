<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsGraphAnalyzer" kind="class" language="C++" prot="public">
    <compoundname>QgsGraphAnalyzer</compoundname>
    <includes refid="qgsgraphanalyzer_8h" local="no">qgsgraphanalyzer.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsGraphAnalyzer_1a93e77f1bb11d0d5735a45f7138b577b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsGraphAnalyzer::dijkstra</definition>
        <argsstring>(const QgsGraph *source, int startVertexIdx, int criterionNum, QVector&lt; int &gt; *resultTree=nullptr, QVector&lt; double &gt; *resultCost=nullptr)</argsstring>
        <name>dijkstra</name>
        <param>
          <type>const <ref refid="classQgsGraph" kindref="compound">QgsGraph</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startVertexIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>criterionNum</declname>
        </param>
        <param>
          <type>QVector&lt; int &gt; *</type>
          <declname>resultTree</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>QVector&lt; double &gt; *</type>
          <declname>resultCost</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Solve shortest path problem using Dijkstra algorithm. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>source graph </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startVertexIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the start vertex </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>criterionNum</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the optimization strategy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resultTree</parametername>
</parameternamelist>
<parameterdescription>
<para>array that represents shortest path tree. resultTree[ vertexIndex ] == inboundingArcIndex if vertex reachable, otherwise resultTree[ vertexIndex ] == -1. Note that the startVertexIdx will also have a value of -1 and may need special handling by callers. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resultCost</parametername>
</parameternamelist>
<parameterdescription>
<para>array of the paths costs </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/network/qgsgraphanalyzer.h" line="45" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/analysis/network/qgsgraphanalyzer.cpp" bodystart="25" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGraphAnalyzer_1aca1a98bd7a98a51d13bb10afb102e93d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsGraph" kindref="compound">QgsGraph</ref> *</type>
        <definition>QgsGraph * QgsGraphAnalyzer::shortestTree</definition>
        <argsstring>(const QgsGraph *source, int startVertexIdx, int criterionNum)</argsstring>
        <name>shortestTree</name>
        <param>
          <type>const <ref refid="classQgsGraph" kindref="compound">QgsGraph</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startVertexIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>criterionNum</declname>
        </param>
        <briefdescription>
<para>Returns shortest path tree with root-node in startVertexIdx. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>source graph </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startVertexIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the start vertex </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>criterionNum</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the optimization strategy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/network/qgsgraphanalyzer.h" line="84" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/analysis/network/qgsgraphanalyzer.cpp" bodystart="91" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class performs graph analysis, e.g. </para>    </briefdescription>
    <detaileddescription>
<para>calculates shortest path between two points using different strategies with Dijkstra algorithm </para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/analysis/network/qgsgraphanalyzer.h" line="33" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/analysis/network/qgsgraphanalyzer.h" bodystart="32" bodyend="85"/>
    <listofallmembers>
      <member refid="classQgsGraphAnalyzer_1a93e77f1bb11d0d5735a45f7138b577b6" prot="public" virt="non-virtual"><scope>QgsGraphAnalyzer</scope><name>dijkstra</name></member>
      <member refid="classQgsGraphAnalyzer_1aca1a98bd7a98a51d13bb10afb102e93d" prot="public" virt="non-virtual"><scope>QgsGraphAnalyzer</scope><name>shortestTree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
