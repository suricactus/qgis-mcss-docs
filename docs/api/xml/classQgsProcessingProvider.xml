<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsProcessingProvider" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QgsProcessingProvider</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="classQgsNativeAlgorithms" prot="public" virt="non-virtual">QgsNativeAlgorithms</derivedcompoundref>
    <includes refid="qgsprocessingprovider_8h" local="no">qgsprocessingprovider.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsProcessingProvider_1a28d1a5b7adc3589940bd423331465560" prot="private" static="no" mutable="no">
        <type>QMap&lt; QString, const <ref refid="classQgsProcessingAlgorithm" kindref="compound">QgsProcessingAlgorithm</ref> *&gt;</type>
        <definition>QMap&lt; QString, const QgsProcessingAlgorithm * &gt; QgsProcessingProvider::mAlgorithms</definition>
        <argsstring></argsstring>
        <name>mAlgorithms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="246" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsProcessingProvider_1a5847f43db258613fe5af4cd3d2b7c728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsProcessingProvider::QgsProcessingProvider</definition>
        <argsstring>(QObject *parent=nullptr)</argsstring>
        <name>QgsProcessingProvider</name>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classQgsProcessingProvider" kindref="compound">QgsProcessingProvider</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="43" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a174ae79ac25d89f87b56477dcbb17f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsProcessingProvider::QgsProcessingProvider</definition>
        <argsstring>(const QgsProcessingProvider &amp;other)=delete</argsstring>
        <name>QgsProcessingProvider</name>
        <param>
          <type>const <ref refid="classQgsProcessingProvider" kindref="compound">QgsProcessingProvider</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Providers cannot be copied. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a21fb26b6955ca2b68a6416bc03df9c83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsProcessingProvider::~QgsProcessingProvider</definition>
        <argsstring>() override</argsstring>
        <name>~QgsProcessingProvider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="45" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a2242ac06ee31aa18961a21f6003016ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classQgsProcessingAlgorithm" kindref="compound">QgsProcessingAlgorithm</ref> *</type>
        <definition>const QgsProcessingAlgorithm * QgsProcessingProvider::algorithm</definition>
        <argsstring>(const QString &amp;name) const</argsstring>
        <name>algorithm</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the matching algorithm by <emphasis>name</emphasis>, or a nullptr if no matching algorithm is contained by this provider. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1aff41f16364f3be726b8a9fe164fad501" kindref="member">algorithms()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="220" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1aff41f16364f3be726b8a9fe164fad501" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; const <ref refid="classQgsProcessingAlgorithm" kindref="compound">QgsProcessingAlgorithm</ref> *&gt;</type>
        <definition>QList&lt; const QgsProcessingAlgorithm * &gt; QgsProcessingProvider::algorithms</definition>
        <argsstring>() const</argsstring>
        <name>algorithms</name>
        <briefdescription>
<para>Returns a list of algorithms supplied by this provider. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a2242ac06ee31aa18961a21f6003016ce" kindref="member">algorithm()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="213" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1ade3e542277627c2b1030eddd0022f8a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QgsProcessingProvider::canBeActivated</definition>
        <argsstring>() const</argsstring>
        <name>canBeActivated</name>
        <briefdescription>
<para>Returns true if the provider can be activated, or false if it cannot be activated (e.g. </para>        </briefdescription>
        <detaileddescription>
<para>due to missing external dependencies). <simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a5f55f307fb6ac2128d30cbd915605b4c" kindref="member">isActive()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="106" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a6438e88400b5d1969bca1ca7c10aede3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsProcessingProvider::defaultRasterFileExtension</definition>
        <argsstring>() const</argsstring>
        <name>defaultRasterFileExtension</name>
        <briefdescription>
<para>Returns the default file extension to use for raster outputs created by the provider. </para>        </briefdescription>
        <detaileddescription>
<para>The default implementation returns the user&apos;s default Processing raster output format setting, if it&apos;s supported by the provider (see <ref refid="classQgsProcessingProvider_1a553fc3125dcb4c4cd3cdcf77bd64a4b0" kindref="member">supportedOutputRasterLayerExtensions()</ref>). Otherwise the first reported supported raster format will be used.</para><para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a553fc3125dcb4c4cd3cdcf77bd64a4b0" kindref="member">supportedOutputRasterLayerExtensions()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a09213d73a5a9fd2ff1c1636b70dff16e" kindref="member">defaultVectorFileExtension()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="170" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="134" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a09213d73a5a9fd2ff1c1636b70dff16e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsProcessingProvider::defaultVectorFileExtension</definition>
        <argsstring>(bool hasGeometry=true) const</argsstring>
        <name>defaultVectorFileExtension</name>
        <param>
          <type>bool</type>
          <declname>hasGeometry</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns the default file extension to use for vector outputs created by the provider. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>hasGeometry</emphasis> is true then the output file format must have support for geometry. If <emphasis>hasGeometry</emphasis> is false then non-spatial formats can be used.</para><para>The default implementation returns the user&apos;s default Processing vector output format setting, if it&apos;s supported by the provider (see <ref refid="classQgsProcessingProvider_1a4cfbab286e72be0dbeb0ece2b16adbd1" kindref="member">supportedOutputVectorLayerExtensions()</ref>). Otherwise the first reported supported vector format will be used.</para><para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a4cfbab286e72be0dbeb0ece2b16adbd1" kindref="member">supportedOutputVectorLayerExtensions()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a6438e88400b5d1969bca1ca7c10aede3" kindref="member">defaultRasterFileExtension()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="157" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="110" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a185da58ddbd800d14fac4311d83869b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsProcessingProvider::helpId</definition>
        <argsstring>() const</argsstring>
        <name>helpId</name>
        <reimplementedby refid="classQgsNativeAlgorithms_1a31c6411822019ff4cc02a33a75c4dc0d">helpId</reimplementedby>
        <briefdescription>
<para>Returns the provider help id string, used for creating <ref refid="classQgsHelp" kindref="compound">QgsHelp</ref> urls for algorithms belong to this provider. </para>        </briefdescription>
        <detaileddescription>
<para>By default, this returns an empty string, meaning that no <ref refid="classQgsHelp" kindref="compound">QgsHelp</ref> url should be created for the provider&apos;s algorithms. <simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1aaf82dcfa6c13b415b8f85a35859c67bf" kindref="member">id()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="79" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a06a73138eddb9e503fd4540dd4793bc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QIcon</type>
        <definition>QIcon QgsProcessingProvider::icon</definition>
        <argsstring>() const</argsstring>
        <name>icon</name>
        <reimplementedby refid="classQgsNativeAlgorithms_1aa37a9a86d44f3f9e7c6752356138116c">icon</reimplementedby>
        <briefdescription>
<para>Returns an icon for the provider. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a806d39a728cd3191468921dcdd6a1c34" kindref="member">svgIconPath()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="56" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1aaf82dcfa6c13b415b8f85a35859c67bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString QgsProcessingProvider::id</definition>
        <argsstring>() const =0</argsstring>
        <name>id</name>
        <reimplementedby refid="classQgsNativeAlgorithms_1a4b6088da0c625f36ad8f01586a008777">id</reimplementedby>
        <briefdescription>
<para>Returns the unique provider id, used for identifying the provider. </para>        </briefdescription>
        <detaileddescription>
<para>This string should be a unique, short, character only string, eg &quot;qgis&quot; or &quot;gdal&quot;. This string should not be localised. <simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a4f5876da84e960d2d89d70013831ce03" kindref="member">name()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a185da58ddbd800d14fac4311d83869b4" kindref="member">helpId()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a5f55f307fb6ac2128d30cbd915605b4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QgsProcessingProvider::isActive</definition>
        <argsstring>() const</argsstring>
        <name>isActive</name>
        <briefdescription>
<para>Returns true if the provider is active and able to run algorithms. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1ab13944e7d3083f166094f8200683cf84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QgsProcessingProvider::load</definition>
        <argsstring>()</argsstring>
        <name>load</name>
        <briefdescription>
<para>Loads the provider. </para>        </briefdescription>
        <detaileddescription>
<para>This will be called when the plugin is being loaded, and any general setup actions should occur in an overridden version of this method. Subclasses should not individually load any algorithms in their <ref refid="classQgsProcessingProvider_1ab13944e7d3083f166094f8200683cf84" kindref="member">load()</ref> implementations, as that must occur within the <ref refid="classQgsProcessingProvider_1abbd9bab09b264c2b6025a965b49456ec" kindref="member">loadAlgorithms()</ref> method. Instead, subclasses should call <ref refid="classQgsProcessingProvider_1adf9cc74d723909133d3b42eb1ff7c09f" kindref="member">refreshAlgorithms()</ref> from any overloaded <ref refid="classQgsProcessingProvider_1ab13944e7d3083f166094f8200683cf84" kindref="member">load()</ref> method to trigger an initial load of the provider&apos;s algorithms. <simplesect kind="return"><para>true if provider could be successfully loaded </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a9c6d175166f0c257322d5b91b5825d1a" kindref="member">unload()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="196" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1ae6e23a879b11fb4d04eaacb6158df99c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsProcessingProvider::longName</definition>
        <argsstring>() const</argsstring>
        <name>longName</name>
        <briefdescription>
<para>Returns the longer version of the provider name, which can include extra details such as version numbers. </para>        </briefdescription>
        <detaileddescription>
<para>E.g. &quot;Lastools LIDAR tools (version 2.2.1)&quot;. This string should be localised.</para><para>The default implementation returns the same string as <ref refid="classQgsProcessingProvider_1a4f5876da84e960d2d89d70013831ce03" kindref="member">name()</ref>.</para><para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a4f5876da84e960d2d89d70013831ce03" kindref="member">name()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1aaf82dcfa6c13b415b8f85a35859c67bf" kindref="member">id()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="99" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a4f5876da84e960d2d89d70013831ce03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString QgsProcessingProvider::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <reimplementedby refid="classQgsNativeAlgorithms_1a86c68c4f8ca702422418a246b8b9fe5b">name</reimplementedby>
        <briefdescription>
<para>Returns the provider name, which is used to describe the provider within the GUI. </para>        </briefdescription>
        <detaileddescription>
<para>This string should be short (e.g. &quot;Lastools&quot;) and localised. <simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1ae6e23a879b11fb4d04eaacb6158df99c" kindref="member">longName()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1aaf82dcfa6c13b415b8f85a35859c67bf" kindref="member">id()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a97c14871df8192f91dff540ea019762b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsProcessingProvider" kindref="compound">QgsProcessingProvider</ref> &amp;</type>
        <definition>QgsProcessingProvider&amp; QgsProcessingProvider::operator=</definition>
        <argsstring>(const QgsProcessingProvider &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsProcessingProvider" kindref="compound">QgsProcessingProvider</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Providers cannot be copied. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1adf9cc74d723909133d3b42eb1ff7c09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsProcessingProvider::refreshAlgorithms</definition>
        <argsstring>()</argsstring>
        <name>refreshAlgorithms</name>
        <briefdescription>
<para>Refreshes the algorithms available from the provider, causing it to re-populate with all associated algorithms. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="207" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="59" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a553fc3125dcb4c4cd3cdcf77bd64a4b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QStringList</type>
        <definition>QStringList QgsProcessingProvider::supportedOutputRasterLayerExtensions</definition>
        <argsstring>() const</argsstring>
        <name>supportedOutputRasterLayerExtensions</name>
        <briefdescription>
<para>Returns a list of the raster format file extensions supported by this provider. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a4cfbab286e72be0dbeb0ece2b16adbd1" kindref="member">supportedOutputVectorLayerExtensions()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="117" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a1d7bdaeb2d2e65f29683fae102e3abd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QStringList</type>
        <definition>QStringList QgsProcessingProvider::supportedOutputTableExtensions</definition>
        <argsstring>() const</argsstring>
        <name>supportedOutputTableExtensions</name>
        <briefdescription>
<para>Returns a list of the table (geometry-less vector layers) file extensions supported by this provider. </para>        </briefdescription>
        <detaileddescription>
<para>By default this is the same as <ref refid="classQgsProcessingProvider_1a4cfbab286e72be0dbeb0ece2b16adbd1" kindref="member">supportedOutputVectorLayerExtensions()</ref>. Providers which utilize different formats for geometry-less layers can override this method to return a different list of supported formats.</para><para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a4cfbab286e72be0dbeb0ece2b16adbd1" kindref="member">supportedOutputVectorLayerExtensions()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a09213d73a5a9fd2ff1c1636b70dff16e" kindref="member">defaultVectorFileExtension()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a553fc3125dcb4c4cd3cdcf77bd64a4b0" kindref="member">supportedOutputRasterLayerExtensions()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1ae8f65d75c4ac252f04f1aa5df79c8e8f" kindref="member">supportsNonFileBasedOutput()</ref></para></simplesect>
<simplesect kind="since"><para>QGIS 3.4.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="141" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a4cfbab286e72be0dbeb0ece2b16adbd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QStringList</type>
        <definition>QStringList QgsProcessingProvider::supportedOutputVectorLayerExtensions</definition>
        <argsstring>() const</argsstring>
        <name>supportedOutputVectorLayerExtensions</name>
        <briefdescription>
<para>Returns a list of the vector format file extensions supported by this provider. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a1d7bdaeb2d2e65f29683fae102e3abd3" kindref="member">supportedOutputTableExtensions()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a09213d73a5a9fd2ff1c1636b70dff16e" kindref="member">defaultVectorFileExtension()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a553fc3125dcb4c4cd3cdcf77bd64a4b0" kindref="member">supportedOutputRasterLayerExtensions()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1ae8f65d75c4ac252f04f1aa5df79c8e8f" kindref="member">supportsNonFileBasedOutput()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="126" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1ae8f65d75c4ac252f04f1aa5df79c8e8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsProcessingProvider::supportsNonFileBasedOutput</definition>
        <argsstring>() const</argsstring>
        <name>supportsNonFileBasedOutput</name>
        <reimplementedby refid="classQgsNativeAlgorithms_1a5103cb7bf9e688cf64be78316fdd18e1">supportsNonFileBasedOutput</reimplementedby>
        <briefdescription>
<para>Returns true if the provider supports non-file based outputs (such as memory layers or direct database outputs). </para>        </briefdescription>
        <detaileddescription>
<para>If a provider returns false for this method than it indicates that none of the outputs from any of the provider&apos;s algorithms have support for non-file based outputs. Returning true indicates that the algorithm&apos;s parameters will each individually declare their non-file based support.</para><para>The default behavior for providers is to support non-file based outputs, and most providers which rely solely on QGIS API (and which do not depend on third-party scripts or external dependencies) will automatically support this.</para><para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a4cfbab286e72be0dbeb0ece2b16adbd1" kindref="member">supportedOutputVectorLayerExtensions()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="185" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a806d39a728cd3191468921dcdd6a1c34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString QgsProcessingProvider::svgIconPath</definition>
        <argsstring>() const</argsstring>
        <name>svgIconPath</name>
        <reimplementedby refid="classQgsNativeAlgorithms_1a5c1483f99a352a398632a7edc6cc830d">svgIconPath</reimplementedby>
        <briefdescription>
<para>Returns a path to an SVG version of the provider&apos;s icon. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1a06a73138eddb9e503fd4540dd4793bc1" kindref="member">icon()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="62" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1a9c6d175166f0c257322d5b91b5825d1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QgsProcessingProvider::unload</definition>
        <argsstring>()</argsstring>
        <name>unload</name>
        <briefdescription>
<para>Unloads the provider. </para>        </briefdescription>
        <detaileddescription>
<para>Any tear-down steps required by the provider should be implemented here. <simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1ab13944e7d3083f166094f8200683cf84" kindref="member">load()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="202" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" bodystart="202" bodyend="202"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classQgsProcessingProvider_1a664558d0f7f083e6b72b661f8a2e4f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsProcessingProvider::algorithmsLoaded</definition>
        <argsstring>()</argsstring>
        <name>algorithmsLoaded</name>
        <briefdescription>
<para>Emitted when the provider has loaded (or refreshed) its list of available algorithms. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsProcessingProvider_1adf9cc74d723909133d3b42eb1ff7c09f" kindref="member">refreshAlgorithms()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="229" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsProcessingProvider_1afec2cf0322c7ba3cfc7b7708c127d8f8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsProcessingProvider::addAlgorithm</definition>
        <argsstring>(QgsProcessingAlgorithm *algorithm)</argsstring>
        <name>addAlgorithm</name>
        <param>
          <type><ref refid="classQgsProcessingAlgorithm" kindref="compound">QgsProcessingAlgorithm</ref> *</type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
<para>Adds an <emphasis>algorithm</emphasis> to the provider. </para>        </briefdescription>
        <detaileddescription>
<para>Ownership of the algorithm is transferred to the provider. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="242" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.cpp" bodystart="80" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classQgsProcessingProvider_1abbd9bab09b264c2b6025a965b49456ec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QgsProcessingProvider::loadAlgorithms</definition>
        <argsstring>()=0</argsstring>
        <name>loadAlgorithms</name>
        <reimplementedby refid="classQgsNativeAlgorithms_1a07d6233663600e69cc96c06efbcd5d8d">loadAlgorithms</reimplementedby>
        <briefdescription>
<para>Loads all algorithms belonging to this provider. </para>        </briefdescription>
        <detaileddescription>
<para>Subclasses should implement this, calling <ref refid="classQgsProcessingProvider_1afec2cf0322c7ba3cfc7b7708c127d8f8" kindref="member">addAlgorithm()</ref> to register all their associated algorithms. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="237" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract base class for processing providers. </para>    </briefdescription>
    <detaileddescription>
<para>An algorithm provider is a set of related algorithms, typically from the same external application or related to a common area of analysis. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7216">
        <label>QObject</label>
      </node>
      <node id="7215">
        <label>QgsProcessingProvider</label>
        <link refid="classQgsProcessingProvider"/>
        <childnode refid="7216" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7217">
        <label>QgsNativeAlgorithms</label>
        <link refid="classQgsNativeAlgorithms"/>
        <childnode refid="7215" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7219">
        <label>QObject</label>
      </node>
      <node id="7218">
        <label>QgsProcessingProvider</label>
        <link refid="classQgsProcessingProvider"/>
        <childnode refid="7219" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" line="35" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/processing/qgsprocessingprovider.h" bodystart="34" bodyend="251"/>
    <listofallmembers>
      <member refid="classQgsProcessingProvider_1afec2cf0322c7ba3cfc7b7708c127d8f8" prot="protected" virt="non-virtual"><scope>QgsProcessingProvider</scope><name>addAlgorithm</name></member>
      <member refid="classQgsProcessingProvider_1a2242ac06ee31aa18961a21f6003016ce" prot="public" virt="non-virtual"><scope>QgsProcessingProvider</scope><name>algorithm</name></member>
      <member refid="classQgsProcessingProvider_1aff41f16364f3be726b8a9fe164fad501" prot="public" virt="non-virtual"><scope>QgsProcessingProvider</scope><name>algorithms</name></member>
      <member refid="classQgsProcessingProvider_1a664558d0f7f083e6b72b661f8a2e4f12" prot="public" virt="non-virtual"><scope>QgsProcessingProvider</scope><name>algorithmsLoaded</name></member>
      <member refid="classQgsProcessingProvider_1ade3e542277627c2b1030eddd0022f8a1" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>canBeActivated</name></member>
      <member refid="classQgsProcessingProvider_1a6438e88400b5d1969bca1ca7c10aede3" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>defaultRasterFileExtension</name></member>
      <member refid="classQgsProcessingProvider_1a09213d73a5a9fd2ff1c1636b70dff16e" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>defaultVectorFileExtension</name></member>
      <member refid="classQgsProcessingProvider_1a185da58ddbd800d14fac4311d83869b4" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>helpId</name></member>
      <member refid="classQgsProcessingProvider_1a06a73138eddb9e503fd4540dd4793bc1" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>icon</name></member>
      <member refid="classQgsProcessingProvider_1aaf82dcfa6c13b415b8f85a35859c67bf" prot="public" virt="pure-virtual"><scope>QgsProcessingProvider</scope><name>id</name></member>
      <member refid="classQgsProcessingProvider_1a5f55f307fb6ac2128d30cbd915605b4c" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>isActive</name></member>
      <member refid="classQgsProcessingProvider_1ab13944e7d3083f166094f8200683cf84" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>load</name></member>
      <member refid="classQgsProcessingProvider_1abbd9bab09b264c2b6025a965b49456ec" prot="protected" virt="pure-virtual"><scope>QgsProcessingProvider</scope><name>loadAlgorithms</name></member>
      <member refid="classQgsProcessingProvider_1ae6e23a879b11fb4d04eaacb6158df99c" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>longName</name></member>
      <member refid="classQgsProcessingProvider_1a28d1a5b7adc3589940bd423331465560" prot="private" virt="non-virtual"><scope>QgsProcessingProvider</scope><name>mAlgorithms</name></member>
      <member refid="classQgsProcessingProvider_1a4f5876da84e960d2d89d70013831ce03" prot="public" virt="pure-virtual"><scope>QgsProcessingProvider</scope><name>name</name></member>
      <member refid="classQgsProcessingProvider_1a97c14871df8192f91dff540ea019762b" prot="public" virt="non-virtual"><scope>QgsProcessingProvider</scope><name>operator=</name></member>
      <member refid="classQgsProcessingProvider_1a5847f43db258613fe5af4cd3d2b7c728" prot="public" virt="non-virtual"><scope>QgsProcessingProvider</scope><name>QgsProcessingProvider</name></member>
      <member refid="classQgsProcessingProvider_1a174ae79ac25d89f87b56477dcbb17f06" prot="public" virt="non-virtual"><scope>QgsProcessingProvider</scope><name>QgsProcessingProvider</name></member>
      <member refid="classQgsProcessingProvider_1adf9cc74d723909133d3b42eb1ff7c09f" prot="public" virt="non-virtual"><scope>QgsProcessingProvider</scope><name>refreshAlgorithms</name></member>
      <member refid="classQgsProcessingProvider_1a553fc3125dcb4c4cd3cdcf77bd64a4b0" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>supportedOutputRasterLayerExtensions</name></member>
      <member refid="classQgsProcessingProvider_1a1d7bdaeb2d2e65f29683fae102e3abd3" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>supportedOutputTableExtensions</name></member>
      <member refid="classQgsProcessingProvider_1a4cfbab286e72be0dbeb0ece2b16adbd1" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>supportedOutputVectorLayerExtensions</name></member>
      <member refid="classQgsProcessingProvider_1ae8f65d75c4ac252f04f1aa5df79c8e8f" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>supportsNonFileBasedOutput</name></member>
      <member refid="classQgsProcessingProvider_1a806d39a728cd3191468921dcdd6a1c34" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>svgIconPath</name></member>
      <member refid="classQgsProcessingProvider_1a9c6d175166f0c257322d5b91b5825d1a" prot="public" virt="virtual"><scope>QgsProcessingProvider</scope><name>unload</name></member>
      <member refid="classQgsProcessingProvider_1a21fb26b6955ca2b68a6416bc03df9c83" prot="public" virt="non-virtual"><scope>QgsProcessingProvider</scope><name>~QgsProcessingProvider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
