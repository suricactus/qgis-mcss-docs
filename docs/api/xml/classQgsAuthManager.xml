<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsAuthManager" kind="class" language="C++" prot="public">
    <compoundname>QgsAuthManager</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="qgsauthmanager_8h" local="no">qgsauthmanager.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecb" prot="public" static="no">
        <name>MessageLevel</name>
        <enumvalue id="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecbab514eac53b2ccdd151c01b97eeee89e5" prot="public">
          <name>INFO</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecba2027aa626ba578ffbcc931442d479d4a" prot="public">
          <name>WARNING</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecba7afe794b70c36cdf9961854f061ecf8a" prot="public">
          <name>CRITICAL</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Message log level (mirrors that of <ref refid="classQgsMessageLog" kindref="compound">QgsMessageLog</ref>, so it can also output there) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="72" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="71" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classQgsAuthManager_1a52374b6f35514ca47e203633c9366679" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::AUTH_MAN_TAG</definition>
        <argsstring></argsstring>
        <name>AUTH_MAN_TAG</name>
        <initializer>= QObject::tr( &quot;Authentication Manager&quot; )</initializer>
        <briefdescription>
<para>The display name of the Authentication Manager. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="679" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1ae0107862e97a6b3333613bac43aafc3a" prot="public" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::AUTH_PASSWORD_HELPER_DISPLAY_NAME</definition>
        <argsstring></argsstring>
        <name>AUTH_PASSWORD_HELPER_DISPLAY_NAME</name>
        <briefdescription>
<para>The display name of the password helper (platform dependent) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="676" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="676" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classQgsAuthManager_1ab70b2dfb1c29b4c969aa80e9d2a39981" prot="private" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::AUTH_AUTHORITIES_TABLE</definition>
        <argsstring></argsstring>
        <name>AUTH_AUTHORITIES_TABLE</name>
        <initializer>= QStringLiteral( &quot;auth_authorities&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="844" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="844" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1ae7479eb7c1040001d7b8fd8b010d144a" prot="private" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::AUTH_CFG_REGEX</definition>
        <argsstring></argsstring>
        <name>AUTH_CFG_REGEX</name>
        <initializer>= QStringLiteral( &quot;authcfg=([a-z]|[A-Z]|[0-9]){7}&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="846" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="846" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1ab79867629938c22bfa5607c884c434ab" prot="private" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::AUTH_CONFIG_TABLE</definition>
        <argsstring></argsstring>
        <name>AUTH_CONFIG_TABLE</name>
        <initializer>= QStringLiteral( &quot;auth_configs&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="839" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="839" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1aa100b8b6401d54ddd07f915a92c9dd9a" prot="private" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::AUTH_IDENTITIES_TABLE</definition>
        <argsstring></argsstring>
        <name>AUTH_IDENTITIES_TABLE</name>
        <initializer>= QStringLiteral( &quot;auth_identities&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="842" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="842" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a27deaaccc0f575c909f21a7d2570acf2" prot="private" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::AUTH_PASS_TABLE</definition>
        <argsstring></argsstring>
        <name>AUTH_PASS_TABLE</name>
        <initializer>= QStringLiteral( &quot;auth_pass&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="840" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="840" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1ade2733a2812ef33df5f42051f9d7fee0" prot="private" static="yes" mutable="no">
        <type>const QLatin1String</type>
        <definition>const QLatin1String QgsAuthManager::AUTH_PASSWORD_HELPER_FOLDER_NAME</definition>
        <argsstring></argsstring>
        <name>AUTH_PASSWORD_HELPER_FOLDER_NAME</name>
        <briefdescription>
<para>password helper folder in the wallets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="901" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a629a6827c038b76f53ec6f3824173772" prot="private" static="yes" mutable="no">
        <type>const QLatin1String</type>
        <definition>const QLatin1String QgsAuthManager::AUTH_PASSWORD_HELPER_KEY_NAME</definition>
        <argsstring></argsstring>
        <name>AUTH_PASSWORD_HELPER_KEY_NAME</name>
        <briefdescription>
<para>Master password name in the wallets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="898" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="898" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1aef945da4ccfc96ad5d4a79974997647f" prot="private" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::AUTH_SERVERS_TABLE</definition>
        <argsstring></argsstring>
        <name>AUTH_SERVERS_TABLE</name>
        <initializer>= QStringLiteral( &quot;auth_servers&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="843" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="843" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1aaaef12e586d4ba95a1c16d68620fa966" prot="private" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::AUTH_SETTINGS_TABLE</definition>
        <argsstring></argsstring>
        <name>AUTH_SETTINGS_TABLE</name>
        <initializer>= QStringLiteral( &quot;auth_settings&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="841" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="841" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a96df8a259614502fc419656c4b11be74" prot="private" static="yes" mutable="no">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::AUTH_TRUST_TABLE</definition>
        <argsstring></argsstring>
        <name>AUTH_TRUST_TABLE</name>
        <initializer>= QStringLiteral( &quot;auth_trust&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="845" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="845" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a8f00fe351cee0cecfbf1ba5a433245ab" prot="private" static="yes" mutable="no">
        <type><ref refid="classQgsAuthManager" kindref="compound">QgsAuthManager</ref> *</type>
        <definition>QgsAuthManager * QgsAuthManager::sInstance</definition>
        <argsstring></argsstring>
        <name>sInstance</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="838" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="838" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsAuthManager_1adf99cb5baf9597df0c62f6c0e1afba35" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsAuthManager::mAuthDbPath</definition>
        <argsstring></argsstring>
        <name>mAuthDbPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="849" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="849" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a13c1c7437f5edc7b699ecdf3b588295f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsAuthManager::mAuthDisabled</definition>
        <argsstring></argsstring>
        <name>mAuthDisabled</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="858" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1af93cc31a221bf0a0fe9711bbcff94195" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsAuthManager::mAuthDisabledMessage</definition>
        <argsstring></argsstring>
        <name>mAuthDisabledMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="859" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a9e3d13f2d7a8d352bf5cf9bc87932a00" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsAuthManager::mAuthInit</definition>
        <argsstring></argsstring>
        <name>mAuthInit</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="848" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="848" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a66a4f636d00cfea86d9be941cc8cce64" prot="private" static="no" mutable="no">
        <type>QHash&lt; QString, <ref refid="classQgsAuthMethod" kindref="compound">QgsAuthMethod</ref> * &gt;</type>
        <definition>QHash&lt;QString, QgsAuthMethod *&gt; QgsAuthManager::mAuthMethods</definition>
        <argsstring></argsstring>
        <name>mAuthMethods</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="854" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="854" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a4fc40810dfe3d75f88a80e284274b3bb" prot="private" static="no" mutable="no">
        <type>QMap&lt; QString, QPair&lt; <ref refid="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375dd" kindref="member">QgsAuthCertUtils::CaCertSource</ref>, QSslCertificate &gt; &gt;</type>
        <definition>QMap&lt;QString, QPair&lt;QgsAuthCertUtils::CaCertSource, QSslCertificate&gt; &gt; QgsAuthManager::mCaCertsCache</definition>
        <argsstring></argsstring>
        <name>mCaCertsCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="870" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="870" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1aa27d566cd7b7701d9ec5d38af3e28f38" prot="private" static="no" mutable="no">
        <type>QMap&lt; <ref refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371" kindref="member">QgsAuthCertUtils::CertTrustPolicy</ref>, QStringList &gt;</type>
        <definition>QMap&lt;QgsAuthCertUtils::CertTrustPolicy, QStringList &gt; QgsAuthManager::mCertTrustCache</definition>
        <argsstring></argsstring>
        <name>mCertTrustCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="872" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="872" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a1df0e01385250b57363729e68113904c" prot="private" static="no" mutable="no">
        <type>QHash&lt; QString, QString &gt;</type>
        <definition>QHash&lt;QString, QString&gt; QgsAuthManager::mConfigAuthMethods</definition>
        <argsstring></argsstring>
        <name>mConfigAuthMethods</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="853" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="853" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a7ca0d1fdc8fe928c89a7a0cecb5f65f0" prot="private" static="no" mutable="no">
        <type>QHash&lt; QString, QSet&lt; QSslError::SslError &gt; &gt;</type>
        <definition>QHash&lt;QString, QSet&lt;QSslError::SslError&gt; &gt; QgsAuthManager::mIgnoredSslErrorsCache</definition>
        <argsstring></argsstring>
        <name>mIgnoredSslErrorsCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="876" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="876" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1aa08c872fb5af310ca0ac79b34c0f6c0f" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsAuthManager::mMasterPass</definition>
        <argsstring></argsstring>
        <name>mMasterPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="856" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a781710f3960ae9aac84c3c65b9543fab" prot="private" static="no" mutable="no">
        <type>QMutex *</type>
        <definition>QMutex* QgsAuthManager::mMutex</definition>
        <argsstring></argsstring>
        <name>mMutex</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="865" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a23787a817f57ea8d9810b32ac0b89d8a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int QgsAuthManager::mPassTries</definition>
        <argsstring></argsstring>
        <name>mPassTries</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="857" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="857" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a5899e2bd2d761f33bf72a8d053547874" prot="private" static="no" mutable="no">
        <type>QKeychain::Error</type>
        <definition>QKeychain::Error QgsAuthManager::mPasswordHelperErrorCode</definition>
        <argsstring></argsstring>
        <name>mPasswordHelperErrorCode</name>
        <initializer>= QKeychain::NoError</initializer>
        <briefdescription>
<para>Store last error code (enum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="889" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="889" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1ad5b8492cf40db0848622b02e99eef1f8" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QgsAuthManager::mPasswordHelperErrorMessage</definition>
        <argsstring></argsstring>
        <name>mPasswordHelperErrorMessage</name>
        <briefdescription>
<para>Store last error message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="886" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="886" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a38b4d3c92757d9d0ff5d285d067a7329" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsAuthManager::mPasswordHelperFailedInit</definition>
        <argsstring></argsstring>
        <name>mPasswordHelperFailedInit</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether the keychain bridge failed to initialize. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="895" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="895" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a2404bf186d903aab1ac33aa3bc6ba7c9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsAuthManager::mPasswordHelperLoggingEnabled</definition>
        <argsstring></argsstring>
        <name>mPasswordHelperLoggingEnabled</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Enable logging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="892" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="892" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a3c1b8012d913f8b71f65e057740342f0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsAuthManager::mPasswordHelperVerificationError</definition>
        <argsstring></argsstring>
        <name>mPasswordHelperVerificationError</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Master password verification has failed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="883" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="883" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1afa967ce04618509d99de37b7701bf1ae" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; QCA::Initializer &gt;</type>
        <definition>std::unique_ptr&lt;QCA::Initializer&gt; QgsAuthManager::mQcaInitializer</definition>
        <argsstring></argsstring>
        <name>mQcaInitializer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="851" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="851" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1aba157de3f5184df2ba3ed7afbb97235c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsAuthManager::mScheduledDbErase</definition>
        <argsstring></argsstring>
        <name>mScheduledDbErase</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="861" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1acf6cb3dfd6e437aadf01ebb102ef9ed7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int QgsAuthManager::mScheduledDbEraseRequestCount</definition>
        <argsstring></argsstring>
        <name>mScheduledDbEraseRequestCount</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="864" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1aa060b556197c05326e6537d246318843" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsAuthManager::mScheduledDbEraseRequestEmitted</definition>
        <argsstring></argsstring>
        <name>mScheduledDbEraseRequestEmitted</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="863" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="863" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a19b1035d85d122bacf0573c731a0610d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int QgsAuthManager::mScheduledDbEraseRequestWait</definition>
        <argsstring></argsstring>
        <name>mScheduledDbEraseRequestWait</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="862" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="862" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a1a70d41ed9bdb4b6d33616d4524dadeb" prot="private" static="no" mutable="no">
        <type>QTimer *</type>
        <definition>QTimer* QgsAuthManager::mScheduledDbEraseTimer</definition>
        <argsstring></argsstring>
        <name>mScheduledDbEraseTimer</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="860" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="860" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsAuthManager_1a11080926f9451c96d24b71e31fca41c5" prot="private" static="no" mutable="no">
        <type>QList&lt; QSslCertificate &gt;</type>
        <definition>QList&lt;QSslCertificate&gt; QgsAuthManager::mTrustedCaCertsCache</definition>
        <argsstring></argsstring>
        <name>mTrustedCaCertsCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="874" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="874" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classQgsAuthManager_1a69e368b600d24379429119ab9b6616ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class QgsApplication</definition>
        <argsstring></argsstring>
        <name>QgsApplication</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="903" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="903" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsAuthManager_1a8cb7b07def4878d1e74c331f43e05f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsAuthManager::~QgsAuthManager</definition>
        <argsstring>() override</argsstring>
        <name>~QgsAuthManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="89" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2962" bodyend="2978"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1abe4afe518eefe8e58d87979d4fd65443" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::authDatabaseConfigTable</definition>
        <argsstring>() const</argsstring>
        <name>authDatabaseConfigTable</name>
        <briefdescription>
<para>Name of the authentication database table that stores configs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="95" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ab280f075bed9633cd892de8c76a43600" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSqlDatabase</type>
        <definition>QSqlDatabase QgsAuthManager::authDatabaseConnection</definition>
        <argsstring>() const</argsstring>
        <name>authDatabaseConnection</name>
        <briefdescription>
<para>Sets up the application instance of the authentication database connection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="92" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="110" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a013a5421764b48dd3dd34cf3f3e4739c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::authDatabaseServersTable</definition>
        <argsstring>() const</argsstring>
        <name>authDatabaseServersTable</name>
        <briefdescription>
<para>Name of the authentication database table that stores server exceptions/configs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="98" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a63e68de971ab1515b4b3862f25a47c32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::authenticationDatabasePath</definition>
        <argsstring>() const</argsstring>
        <name>authenticationDatabasePath</name>
        <briefdescription>
<para>The standard authentication database file in ~/.qgis3/ or defined location. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsApplication_1ab4e912d6a82a6abb8f75b65147ef99f9" kindref="member">QgsApplication::qgisAuthDatabaseFilePath</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="111" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a734154dbef7490b25551632a0455a9ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthManager::authManTag</definition>
        <argsstring>() const</argsstring>
        <name>authManTag</name>
        <briefdescription>
<para>Simple text tag describing authentication system for message logs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="194" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aa6685e6402ff2ad836f63e2a0d7666f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsAuthMethod" kindref="compound">QgsAuthMethod</ref> *</type>
        <definition>QgsAuthMethod * QgsAuthManager::authMethod</definition>
        <argsstring>(const QString &amp;authMethodKey)</argsstring>
        <name>authMethod</name>
        <param>
          <type>const QString &amp;</type>
          <declname>authMethodKey</declname>
        </param>
        <briefdescription>
<para>Gets authentication method from the config/provider cache via its key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>authMethodKey</parametername>
</parameternamelist>
<parameterdescription>
<para>Authentication method key </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="226" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1004" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a1eec643c8dfdf852e65e127fa3ca7cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QWidget *</type>
        <definition>QWidget * QgsAuthManager::authMethodEditWidget</definition>
        <argsstring>(const QString &amp;authMethodKey, QWidget *parent)</argsstring>
        <name>authMethodEditWidget</name>
        <param>
          <type>const QString &amp;</type>
          <declname>authMethodKey</declname>
        </param>
        <param>
          <type>QWidget *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Gets authentication method edit widget via its key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>authMethodKey</parametername>
</parameternamelist>
<parameterdescription>
<para>Authentication method key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent widget </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="240" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1037" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aca194ec2e5772dfe3a836773c9510e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsAuthManager::authMethodsKeys</definition>
        <argsstring>(const QString &amp;dataprovider=QString())</argsstring>
        <name>authMethodsKeys</name>
        <param>
          <type>const QString &amp;</type>
          <declname>dataprovider</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Gets keys of supported authentication methods. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="220" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="999" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a1de130513a8c8f4faebde50d3b57eb7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="qgsauthmethod_8h_1a471e53cde0f1ef6bd42b4deafd6c2908" kindref="member">QgsAuthMethodsMap</ref></type>
        <definition>QgsAuthMethodsMap QgsAuthManager::authMethodsMap</definition>
        <argsstring>(const QString &amp;dataprovider=QString())</argsstring>
        <name>authMethodsMap</name>
        <param>
          <type>const QString &amp;</type>
          <declname>dataprovider</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Gets available authentication methods mapped to their key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataprovider</parametername>
</parameternamelist>
<parameterdescription>
<para>Provider key filter, returning only methods that support a particular provider </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="233" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1015" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a4ff5a1b02994e7915ea70c1996591fc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsAuthManager::authSetting</definition>
        <argsstring>(const QString &amp;key, const QVariant &amp;defaultValue=QVariant(), bool decrypt=false)</argsstring>
        <name>authSetting</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>defaultValue</declname>
          <defval>QVariant()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>decrypt</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>authSetting get an authentication setting (retrieved as string and returned as QVariant( QString )) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>setting key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decrypt</parametername>
</parameternamelist>
<parameterdescription>
<para>if the value needs decrypted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>QVariant( QString ) authentication setting </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="375" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1584" bodyend="1625"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1af1caaed5349a4214cfc56e718c2094dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="qgsauthconfig_8h_1ab317cb1239ba59b99835b409ecb74dfe" kindref="member">QgsAuthMethodConfigsMap</ref></type>
        <definition>QgsAuthMethodConfigsMap QgsAuthManager::availableAuthMethodConfigs</definition>
        <argsstring>(const QString &amp;dataprovider=QString())</argsstring>
        <name>availableAuthMethodConfigs</name>
        <param>
          <type>const QString &amp;</type>
          <declname>dataprovider</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Gets mapping of authentication config ids and their base configs (not decrypted data) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="200" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="900" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a91708e0ade02930b854747c4826c2c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::backupAuthenticationDatabase</definition>
        <argsstring>(QString *backuppath=nullptr)</argsstring>
        <name>backupAuthenticationDatabase</name>
        <param>
          <type>QString *</type>
          <declname>backuppath</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Close connection to current authentication database and back it up. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Path to backup </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="309" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1324" bodyend="1358"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ac0c073165e8c83f59fadfb3891456af9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const QMap&lt; QString, QPair&lt; <ref refid="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375dd" kindref="member">QgsAuthCertUtils::CaCertSource</ref>, QSslCertificate &gt; &gt;</type>
        <definition>const QMap&lt;QString, QPair&lt;QgsAuthCertUtils::CaCertSource, QSslCertificate&gt; &gt; QgsAuthManager::caCertsCache</definition>
        <argsstring>()</argsstring>
        <name>caCertsCache</name>
        <briefdescription>
<para>caCertsCache get all CA certs mapped to their sha1 from cache. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>map of sha1 &lt;source, certificates&gt; </para></simplesect>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="550" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="550" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a80358f3cb7e1d4e4d75ac5975c9f6090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QSslCertificate</type>
        <definition>const QSslCertificate QgsAuthManager::certAuthority</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>certAuthority</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets a certificate authority by id (sha hash) </para>        </briefdescription>
        <detaileddescription>
<para>certAuthority get a certificate authority by <emphasis>id</emphasis> (sha hash) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>sha hash </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a certificate </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="508" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2395" bodyend="2427"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aa2bc56ee03fe7867c051add4df61936d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; QSslCertificate &gt;</type>
        <definition>const QList&lt; QSslCertificate &gt; QgsAuthManager::certIdentities</definition>
        <argsstring>()</argsstring>
        <name>certIdentities</name>
        <briefdescription>
<para>certIdentities get certificate identities </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of certificates </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="422" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1848" bodyend="1868"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a04e95b520e445f94f040590adc9f0626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QSslCertificate</type>
        <definition>const QSslCertificate QgsAuthManager::certIdentity</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>certIdentity</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>certIdentity get a certificate identity by <emphasis>id</emphasis> (sha hash) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>sha hash of the cert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the certificate </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="398" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1748" bodyend="1780"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a4b9ca6756070bb7df42ad4b72b4c5765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QPair&lt; QSslCertificate, QSslKey &gt;</type>
        <definition>const QPair&lt; QSslCertificate, QSslKey &gt; QgsAuthManager::certIdentityBundle</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>certIdentityBundle</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets a certificate identity bundle by <emphasis>id</emphasis> (sha hash). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>sha shash </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pair with the certificate and its SSL key </para></simplesect>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="407" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1782" bodyend="1835"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a07b1beedd757983bd618f92530b70906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QStringList</type>
        <definition>const QStringList QgsAuthManager::certIdentityBundleToPem</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>certIdentityBundleToPem</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>certIdentityBundleToPem get a certificate identity bundle by <emphasis>id</emphasis> (sha hash) returned as PEM text </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>sha hash </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a list of strings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="415" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1837" bodyend="1846"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aa3fb213e6777d238455fce04ae96a803" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsAuthManager::certIdentityIds</definition>
        <argsstring>() const</argsstring>
        <name>certIdentityIds</name>
        <briefdescription>
<para>certIdentityIds get list of certificate identity ids from database </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of certificate ids </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="431" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1870" bodyend="1894"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a60c9d30487a369472134d08685292525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371" kindref="member">QgsAuthCertUtils::CertTrustPolicy</ref></type>
        <definition>QgsAuthCertUtils::CertTrustPolicy QgsAuthManager::certificateTrustPolicy</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certificateTrustPolicy</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>certificateTrustPolicy get trust policy for a particular certificate <emphasis>cert</emphasis> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cert</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DefaultTrust if certificate sha not in trust table, i.e. follows default trust policy </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="581" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2708" bodyend="2730"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a020327d08c301f203e8ec979319e0117" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const QMap&lt; <ref refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371" kindref="member">QgsAuthCertUtils::CertTrustPolicy</ref>, QStringList &gt;</type>
        <definition>const QMap&lt;QgsAuthCertUtils::CertTrustPolicy, QStringList &gt; QgsAuthManager::certTrustCache</definition>
        <argsstring>()</argsstring>
        <name>certTrustCache</name>
        <briefdescription>
<para>certTrustCache get cache of certificate sha1s, per trust policy </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>trust-policy-mapped certificate sha1s </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="594" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="594" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a75eeb8006413c1d21fc9ee3f39800133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371" kindref="member">QgsAuthCertUtils::CertTrustPolicy</ref></type>
        <definition>QgsAuthCertUtils::CertTrustPolicy QgsAuthManager::certTrustPolicy</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>certTrustPolicy</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>certTrustPolicy get whether certificate <emphasis>cert</emphasis> is trusted by user </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cert</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DefaultTrust if certificate sha not in trust table, i.e. follows default trust policy </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="567" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2622" bodyend="2658"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aa043e800ddc0714a5009e6ae4c3a8463" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::clearMasterPassword</definition>
        <argsstring>()</argsstring>
        <name>clearMasterPassword</name>
        <briefdescription>
<para>Clear supplied master password. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This will not necessarily clear authenticated connections cached in network connection managers </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="145" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a14d35a31054a7ac2c7cfd607cdf5db29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsAuthMethod" kindref="compound">QgsAuthMethod</ref> *</type>
        <definition>QgsAuthMethod * QgsAuthManager::configAuthMethod</definition>
        <argsstring>(const QString &amp;authcfg)</argsstring>
        <name>configAuthMethod</name>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <briefdescription>
<para>Gets authentication method from the config/provider cache. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>authcfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Authentication config id </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="209" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="974" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aff04d81ca53fc37ceee81d90c7bdf518" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthManager::configAuthMethodKey</definition>
        <argsstring>(const QString &amp;authcfg) const</argsstring>
        <name>configAuthMethodKey</name>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <briefdescription>
<para>Gets key of authentication method associated with config ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>authcfg</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="215" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="990" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a83a0f4145438323bf414e4cc2d4b5733" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthManager::configIdRegex</definition>
        <argsstring>() const</argsstring>
        <name>configIdRegex</name>
        <briefdescription>
<para>Returns the regular expression for authcfg=.{7} key/value token for authentication ids. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="264" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a714ffa9adc9f88e402f6a0630282e385" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsAuthManager::configIds</definition>
        <argsstring>() const</argsstring>
        <name>configIds</name>
        <briefdescription>
<para>Gets list of authentication ids from database. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="267" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3332" bodyend="3355"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a6f5ea5adbdc0eab79cfc6e87e01f0c6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::configIdUnique</definition>
        <argsstring>(const QString &amp;id) const</argsstring>
        <name>configIdUnique</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Verify if provided authentication id is unique. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Id to check </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="255" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="878" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a8eeaf4bcfc17f3f86a0f01b1ce6785aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; QSslCertificate &gt;</type>
        <definition>const QList&lt; QSslCertificate &gt; QgsAuthManager::databaseCAs</definition>
        <argsstring>()</argsstring>
        <name>databaseCAs</name>
        <briefdescription>
<para>databaseCAs get database-stored certificate authorities </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of certificate authorities </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="535" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2541" bodyend="2561"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a56b91514c33d1754359f389ff2ede2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371" kindref="member">QgsAuthCertUtils::CertTrustPolicy</ref></type>
        <definition>QgsAuthCertUtils::CertTrustPolicy QgsAuthManager::defaultCertTrustPolicy</definition>
        <argsstring>()</argsstring>
        <name>defaultCertTrustPolicy</name>
        <briefdescription>
<para>Gets the default certificate trust policy preferred by user. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="587" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2743" bodyend="2752"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a142353b507abd1bd3fd06f5e438572ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::disabledMessage</definition>
        <argsstring>() const</argsstring>
        <name>disabledMessage</name>
        <briefdescription>
<para>Standard message for when <ref refid="namespaceQCA" kindref="compound">QCA</ref>&apos;s qca-ossl plugin is missing and system is disabled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="105" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="485" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a8ede00489324f224119794094a4801ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::dumpIgnoredSslErrorsCache_</definition>
        <argsstring>()</argsstring>
        <name>dumpIgnoredSslErrorsCache_</name>
        <briefdescription>
<para>Utility function to dump the cache for debug purposes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="482" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2183" bodyend="2205"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a30efd772621612e5a896fcea5230eb40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::eraseAuthenticationDatabase</definition>
        <argsstring>(bool backup, QString *backuppath=nullptr)</argsstring>
        <name>eraseAuthenticationDatabase</name>
        <param>
          <type>bool</type>
          <declname>backup</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>backuppath</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Erase all rows from all tables in authentication database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>backup</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to backup of current database </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backuppath</parametername>
</parameternamelist>
<parameterdescription>
<para>Where the backup is locate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether operation succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="317" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1360" bodyend="1438"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a9ef8749744d3665f89af093cf274e970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::existsAuthSetting</definition>
        <argsstring>(const QString &amp;key)</argsstring>
        <name>existsAuthSetting</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Check if an authentication setting exists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="378" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1627" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a6a222f8abd22807a121f669b98b17082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::existsCertAuthority</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>existsCertAuthority</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Check if a certificate authority exists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="511" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2429" bodyend="2465"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1abf26ffaea65e630062c24359de533969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::existsCertIdentity</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>existsCertIdentity</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check if a certificate identity exists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="434" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1896" bodyend="1927"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a9a2a1484912fda4af562fe6ef2bfe10f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::existsSslCertCustomConfig</definition>
        <argsstring>(const QString &amp;id, const QString &amp;hostport)</argsstring>
        <name>existsSslCertCustomConfig</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>hostport</declname>
        </param>
        <briefdescription>
<para>Check if SSL certificate custom config exists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="468" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2109" bodyend="2145"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a2b2f6b20f0e29adab71004cb6f1802d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; QSslCertificate &gt;</type>
        <definition>const QList&lt; QSslCertificate &gt; QgsAuthManager::extraFileCAs</definition>
        <argsstring>()</argsstring>
        <name>extraFileCAs</name>
        <briefdescription>
<para>extraFileCAs extra file-based certificate authorities </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of certificate authorities </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="528" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2507" bodyend="2539"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1af0cbd457e9e678cd9b2ebc3f871b45e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::hasConfigId</definition>
        <argsstring>(const QString &amp;txt) const</argsstring>
        <name>hasConfigId</name>
        <param>
          <type>const QString &amp;</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
<para>Returns whether a string includes an authcfg ID token. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>txt</parametername>
</parameternamelist>
<parameterdescription>
<para>String to check </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="261" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="894" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a3b210ec3bd5b02f088eff9477cc4d7de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QHash&lt; QString, QSet&lt; QSslError::SslError &gt; &gt;</type>
        <definition>QHash&lt;QString, QSet&lt;QSslError::SslError&gt; &gt; QgsAuthManager::ignoredSslErrorCache</definition>
        <argsstring>()</argsstring>
        <name>ignoredSslErrorCache</name>
        <briefdescription>
<para>ignoredSslErrorCache Get ignored SSL error cache, keyed with cert/connection&apos;s sha:host:port. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>hash keyed with cert/connection&apos;s sha:host:port. </para></simplesect>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="479" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="479" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a3cd5ebc04fbd90b3f6dec1cad4c9995d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::init</definition>
        <argsstring>(const QString &amp;pluginPath=QString(), const QString &amp;authDatabasePath=QString())</argsstring>
        <name>init</name>
        <param>
          <type>const QString &amp;</type>
          <declname>pluginPath</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>authDatabasePath</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>init initialize <ref refid="namespaceQCA" kindref="compound">QCA</ref>, prioritize qca-ossl plugin and optionally set up the authentication database </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pluginPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the plugin path </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authDatabasePath</parametername>
</parameternamelist>
<parameterdescription>
<para>the authentication DB path </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsApplication_1a41b2d890c1cd6426451a46c1dc110d27" kindref="member">QgsApplication::pluginPath</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsApplication_1ab4e912d6a82a6abb8f75b65147ef99f9" kindref="member">QgsApplication::qgisAuthDatabaseFilePath</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="87" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="171" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a2032136d836deeedbb587e81880c7ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::initSslCaches</definition>
        <argsstring>()</argsstring>
        <name>initSslCaches</name>
        <briefdescription>
<para>Initialize various SSL authentication caches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="387" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1691" bodyend="1702"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a4cb0c49262776c240edfd96a2e788087" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::isDisabled</definition>
        <argsstring>() const</argsstring>
        <name>isDisabled</name>
        <briefdescription>
<para>Whether <ref refid="namespaceQCA" kindref="compound">QCA</ref> has the qca-ossl plugin, which a base run-time requirement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="102" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="476" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a75e5d58e73e192f1a054e5e56a38834c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::loadAuthenticationConfig</definition>
        <argsstring>(const QString &amp;authcfg, QgsAuthMethodConfig &amp;mconfig, bool full=false)</argsstring>
        <name>loadAuthenticationConfig</name>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <param>
          <type><ref refid="classQgsAuthMethodConfig" kindref="compound">QgsAuthMethodConfig</ref> &amp;</type>
          <declname>mconfig</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>full</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Load an authentication config from the database into subclass. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>authcfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Associated authentication config id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mconfig</parametername>
</parameternamelist>
<parameterdescription>
<para>Subclassed config to load into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>full</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to decrypt and populate all sensitive data in subclass </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether operation succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="290" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1203" bodyend="1268"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a6bebc32db002489768722e703e9c5e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QMap&lt; QString, QSslCertificate &gt;</type>
        <definition>const QMap&lt; QString, QSslCertificate &gt; QgsAuthManager::mappedDatabaseCAs</definition>
        <argsstring>()</argsstring>
        <name>mappedDatabaseCAs</name>
        <briefdescription>
<para>mappedDatabaseCAs get sha1-mapped database-stored certificate authorities </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>sha1-mapped certificate authorities </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="542" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2563" bodyend="2567"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a770e2a216408f8315ed1c0dc9e2bf468" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::masterPasswordHashInDatabase</definition>
        <argsstring>() const</argsstring>
        <name>masterPasswordHashInDatabase</name>
        <briefdescription>
<para>Verify a password hash existing in authentication database. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="139" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3238" bodyend="3253"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ad1ad9b645814719551b731ecbe0b373a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::masterPasswordIsSet</definition>
        <argsstring>() const</argsstring>
        <name>masterPasswordIsSet</name>
        <briefdescription>
<para>Whether master password has be input and verified, i.e. authentication database is accessible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="136" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="641" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a275cd0a82ef15e097d95b48918b5b5cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::masterPasswordSame</definition>
        <argsstring>(const QString &amp;pass) const</argsstring>
        <name>masterPasswordSame</name>
        <param>
          <type>const QString &amp;</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
<para>Check whether supplied password is the same as the one already set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pass</parametername>
</parameternamelist>
<parameterdescription>
<para>Password to verify </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="151" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="646" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a8995989aa4717dfcb72b687193e15a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::passwordHelperDelete</definition>
        <argsstring>()</argsstring>
        <name>passwordHelperDelete</name>
        <briefdescription>
<para>Delete master password from wallet. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="643" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2995" bodyend="3024"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ad2c9c590b26f05d97be1ec1af0e40033" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::passwordHelperEnabled</definition>
        <argsstring>() const</argsstring>
        <name>passwordHelperEnabled</name>
        <briefdescription>
<para>Password helper enabled getter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="649" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3102" bodyend="3107"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aa95fdb46d0b5159116a0182108f9c60e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::passwordHelperErrorMessage</definition>
        <argsstring>()</argsstring>
        <name>passwordHelperErrorMessage</name>
        <briefdescription>
<para>Error message getter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="637" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="637" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ad3615eb2b77edce80253dd61cb4ed84b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::passwordHelperLoggingEnabled</definition>
        <argsstring>() const</argsstring>
        <name>passwordHelperLoggingEnabled</name>
        <briefdescription>
<para>Password helper logging enabled getter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="661" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3119" bodyend="3124"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1acdbdd5a5b2490429770b4ad43df93418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::passwordHelperSync</definition>
        <argsstring>()</argsstring>
        <name>passwordHelperSync</name>
        <briefdescription>
<para>Store the password manager into the wallet. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="673" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2863" bodyend="2871"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a2f6664d7f2fd71d8e370c602af630ebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::rebuildCaCertsCache</definition>
        <argsstring>()</argsstring>
        <name>rebuildCaCertsCache</name>
        <briefdescription>
<para>Rebuild certificate authority cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="556" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2569" bodyend="2581"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a62bfcaa274803a4e2451e32f7cbb6516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::rebuildCertTrustCache</definition>
        <argsstring>()</argsstring>
        <name>rebuildCertTrustCache</name>
        <briefdescription>
<para>Rebuild certificate authority cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="597" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2754" bodyend="2786"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a1fac62c3b4a0e0dca1cc80817f6f26d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::rebuildIgnoredSslErrorCache</definition>
        <argsstring>()</argsstring>
        <name>rebuildIgnoredSslErrorCache</name>
        <briefdescription>
<para>Rebuild ignoredSSL error cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="491" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2280" bodyend="2339"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ae98ac1ff820d0ed32d2b64f94e45e9f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::rebuildTrustedCaCertsCache</definition>
        <argsstring>()</argsstring>
        <name>rebuildTrustedCaCertsCache</name>
        <briefdescription>
<para>Rebuild trusted certificate authorities cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="615" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2848" bodyend="2855"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a882635d254abd1faf1352929eb41818c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::registerCoreAuthMethods</definition>
        <argsstring>()</argsstring>
        <name>registerCoreAuthMethods</name>
        <briefdescription>
<para>Instantiate and register existing C++ core authentication methods from plugins. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="197" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="825" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a5dd69411db5fb27315d57b91ca45d31d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::removeAllAuthenticationConfigs</definition>
        <argsstring>()</argsstring>
        <name>removeAllAuthenticationConfigs</name>
        <briefdescription>
<para>Clear all authentication configs from table in database and from provider caches. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether operation succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="303" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1303" bodyend="1322"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aeeb910abba7f205f4c4f1b3ec137a4b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::removeAuthenticationConfig</definition>
        <argsstring>(const QString &amp;authcfg)</argsstring>
        <name>removeAuthenticationConfig</name>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <briefdescription>
<para>Remove an authentication config in the database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>authcfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Associated authentication config id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether operation succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="297" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1270" bodyend="1301"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a2d8ae3c52b4362c34b55a7ff7927f850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::removeAuthSetting</definition>
        <argsstring>(const QString &amp;key)</argsstring>
        <name>removeAuthSetting</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Remove an authentication setting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="381" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1660" bodyend="1684"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a68b8c4e8cbeeb38777c110e3dff07471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::removeCertAuthority</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>removeCertAuthority</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Remove a certificate authority. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="514" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2467" bodyend="2495"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1af866ef2648509e697765d72e94ac2310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::removeCertIdentity</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>removeCertIdentity</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Remove a certificate identity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="437" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1929" bodyend="1955"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aa4175b246b0d33e64c52dbc0569dd8be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::removeCertTrustPolicies</definition>
        <argsstring>(const QList&lt; QSslCertificate &gt; &amp;certs)</argsstring>
        <name>removeCertTrustPolicies</name>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>certs</declname>
        </param>
        <briefdescription>
<para>Remove a group certificate authorities. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="570" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2660" bodyend="2675"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aefa692506182b7c7492c8240e6bb981c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::removeCertTrustPolicy</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>removeCertTrustPolicy</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Remove a certificate authority. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="573" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2677" bodyend="2706"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ade63c2329f9c52971a8a92f36c468861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::removeSslCertCustomConfig</definition>
        <argsstring>(const QString &amp;id, const QString &amp;hostport)</argsstring>
        <name>removeSslCertCustomConfig</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>hostport</declname>
        </param>
        <briefdescription>
<para>Remove an SSL certificate custom config. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="471" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2147" bodyend="2181"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ac3a955f406cab920487c8a9513c40680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::resetMasterPassword</definition>
        <argsstring>(const QString &amp;newpass, const QString &amp;oldpass, bool keepbackup, QString *backuppath=nullptr)</argsstring>
        <name>resetMasterPassword</name>
        <param>
          <type>const QString &amp;</type>
          <declname>newpass</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>oldpass</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepbackup</declname>
        </param>
        <param>
          <type>QString *</type>
          <declname>backuppath</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Reset the master password to a new one, then re-encrypt all previous configs in a new database file, optionally backup curren database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newpass</parametername>
</parameternamelist>
<parameterdescription>
<para>New master password to replace existing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldpass</parametername>
</parameternamelist>
<parameterdescription>
<para>Current master password to replace existing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keepbackup</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to keep the generated backup of current database </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>backuppath</parametername>
</parameternamelist>
<parameterdescription>
<para>Where the backup is located, if kept </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="161" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="651" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a2f7b1955272f7ee2034f40064cc614a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::scheduledAuthDatabaseErase</definition>
        <argsstring>()</argsstring>
        <name>scheduledAuthDatabaseErase</name>
        <briefdescription>
<para>Whether there is a scheduled opitonal erase of authentication database. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="167" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a02be6d8dd90bc2631de6e22a6fbfca3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::setDefaultCertTrustPolicy</definition>
        <argsstring>(QgsAuthCertUtils::CertTrustPolicy policy)</argsstring>
        <name>setDefaultCertTrustPolicy</name>
        <param>
          <type><ref refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371" kindref="member">QgsAuthCertUtils::CertTrustPolicy</ref></type>
          <declname>policy</declname>
        </param>
        <briefdescription>
<para>Sets the default certificate trust policy preferred by user. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="584" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2732" bodyend="2741"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ad37105c67520f4fa34b8559d1147e766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::setMasterPassword</definition>
        <argsstring>(bool verify=false)</argsstring>
        <name>setMasterPassword</name>
        <param>
          <type>bool</type>
          <declname>verify</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Main call to initially set or continually check master password is set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If it is not set, the user is asked for its input </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>verify</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether password&apos;s hash was saved in authentication database </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="118" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="490" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a6f4c7a90aca88821b246513821b042a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::setMasterPassword</definition>
        <argsstring>(const QString &amp;pass, bool verify=false)</argsstring>
        <name>setMasterPassword</name>
        <param>
          <type>const QString &amp;</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verify</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Overloaded call to reset master password or set it initially without user interaction. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Only use this in trusted reset functions, unit tests or user/app setup scripts! </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pass</parametername>
</parameternamelist>
<parameterdescription>
<para>Password to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verify</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether password&apos;s hash was saved in authentication database </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="126" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="522" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a4088886e34ce0aace8155c439577407d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::setPasswordHelperEnabled</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setPasswordHelperEnabled</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Password helper enabled setter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="655" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3109" bodyend="3117"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ab795db878e487484c1d67f1cc7111bae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::setPasswordHelperLoggingEnabled</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setPasswordHelperLoggingEnabled</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Password helper logging enabled setter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="667" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3126" bodyend="3130"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a42dc4ad650ab3b9629701afb356779cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::setScheduledAuthDatabaseErase</definition>
        <argsstring>(bool scheduleErase)</argsstring>
        <name>setScheduledAuthDatabaseErase</name>
        <param>
          <type>bool</type>
          <declname>scheduleErase</declname>
        </param>
        <briefdescription>
<para>Schedule an optional erase of authentication database, starting when mutex is lockable. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When an erase is scheduled, any attempt to set the master password, e.g. password input dialog, is effectively canceled. For example: In a GUI app, this keeps excess password input dialogs from popping up when a user has initiated an erase, from a password input dialog, because they forgot their password. The created schedule timer will emit a request to gain access to the user, through the given application, to prompt the erase operation (e.g. via a dialog); if no access to user interaction occurs within 90 seconds, it cancels the schedule. </para></simplesect>
<simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="181" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="798" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a93082481b9b745dec09b09663d7a5f54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::setScheduledAuthDatabaseEraseRequestEmitted</definition>
        <argsstring>(bool emitted)</argsstring>
        <name>setScheduledAuthDatabaseEraseRequestEmitted</name>
        <param>
          <type>bool</type>
          <declname>emitted</declname>
        </param>
        <briefdescription>
<para>Re-emit a signal to schedule an optional erase of authentication database. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This can be called from the slot connected to a previously emitted scheduling signal, so that the slot can ask for another emit later, if the slot noticies the current GUI processing state is not ready for interacting with the user, e.g. project is still loading </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>emitted</parametername>
</parameternamelist>
<parameterdescription>
<para>Setting to false will cause signal to be emitted by the schedule timer. Setting to true will stop any emitting, but will not stop the schedule timer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="191" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1af19ee1e173e07e7d5ef9bb4d8e8d401e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classQgsAuthConfigSslServer" kindref="compound">QgsAuthConfigSslServer</ref></type>
        <definition>const QgsAuthConfigSslServer QgsAuthManager::sslCertCustomConfig</definition>
        <argsstring>(const QString &amp;id, const QString &amp;hostport)</argsstring>
        <name>sslCertCustomConfig</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>hostport</declname>
        </param>
        <briefdescription>
<para>sslCertCustomConfig get an SSL certificate custom config by <emphasis>id</emphasis> (sha hash) and <emphasis>hostport</emphasis> (host:port) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>sha hash </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostport</parametername>
</parameternamelist>
<parameterdescription>
<para>string host:port </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a SSL certificate custom config </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="450" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1999" bodyend="2039"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1abb2c9b101f3e46f7bbb0d2964b6fed2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classQgsAuthConfigSslServer" kindref="compound">QgsAuthConfigSslServer</ref></type>
        <definition>const QgsAuthConfigSslServer QgsAuthManager::sslCertCustomConfigByHost</definition>
        <argsstring>(const QString &amp;hostport)</argsstring>
        <name>sslCertCustomConfigByHost</name>
        <param>
          <type>const QString &amp;</type>
          <declname>hostport</declname>
        </param>
        <briefdescription>
<para>sslCertCustomConfigByHost get an SSL certificate custom config by <emphasis>hostport</emphasis> (host:port) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hostport</parametername>
</parameternamelist>
<parameterdescription>
<para>host:port </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a SSL certificate custom config </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="458" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2041" bodyend="2080"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a458849efbffe61c1014f7d7b48d21d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; <ref refid="classQgsAuthConfigSslServer" kindref="compound">QgsAuthConfigSslServer</ref> &gt;</type>
        <definition>const QList&lt; QgsAuthConfigSslServer &gt; QgsAuthManager::sslCertCustomConfigs</definition>
        <argsstring>()</argsstring>
        <name>sslCertCustomConfigs</name>
        <briefdescription>
<para>sslCertCustomConfigs get SSL certificate custom configs </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of SSL certificate custom config </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="465" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2082" bodyend="2107"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a6acf1b15905a9692d1cb552e748d010b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::storeAuthenticationConfig</definition>
        <argsstring>(QgsAuthMethodConfig &amp;mconfig)</argsstring>
        <name>storeAuthenticationConfig</name>
        <param>
          <type><ref refid="classQgsAuthMethodConfig" kindref="compound">QgsAuthMethodConfig</ref> &amp;</type>
          <declname>mconfig</declname>
        </param>
        <briefdescription>
<para>Store an authentication config in the database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mconfig</parametername>
</parameternamelist>
<parameterdescription>
<para>Associated authentication config id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether operation succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="274" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1055" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a0095aebea6a29248e7060d725269354d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::storeAuthSetting</definition>
        <argsstring>(const QString &amp;key, const QVariant &amp;value, bool encrypt=false)</argsstring>
        <name>storeAuthSetting</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>encrypt</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Store an authentication setting (stored as string via QVariant( value ).toString() ) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="365" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1543" bodyend="1582"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1adc0a5d1f3fd446f26c71252f378ce6c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::storeCertAuthorities</definition>
        <argsstring>(const QList&lt; QSslCertificate &gt; &amp;certs)</argsstring>
        <name>storeCertAuthorities</name>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>certs</declname>
        </param>
        <briefdescription>
<para>Store multiple certificate authorities. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="495" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2342" bodyend="2357"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aa36186380a584dfc579d5325dd4bde17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::storeCertAuthority</definition>
        <argsstring>(const QSslCertificate &amp;cert)</argsstring>
        <name>storeCertAuthority</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <briefdescription>
<para>Store a certificate authority. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="498" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2359" bodyend="2393"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a1bce5f8bebb7ec5d636fd99b2b60fd75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::storeCertIdentity</definition>
        <argsstring>(const QSslCertificate &amp;cert, const QSslKey &amp;key)</argsstring>
        <name>storeCertIdentity</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <param>
          <type>const QSslKey &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Store a certificate identity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="390" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1704" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a2eb7c0805cf0cdc9cb19130ac9c0237a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::storeCertTrustPolicy</definition>
        <argsstring>(const QSslCertificate &amp;cert, QgsAuthCertUtils::CertTrustPolicy policy)</argsstring>
        <name>storeCertTrustPolicy</name>
        <param>
          <type>const QSslCertificate &amp;</type>
          <declname>cert</declname>
        </param>
        <param>
          <type><ref refid="classQgsAuthCertUtils_1a245baf0d84d532415adba1518bff7371" kindref="member">QgsAuthCertUtils::CertTrustPolicy</ref></type>
          <declname>policy</declname>
        </param>
        <briefdescription>
<para>Store user trust value for a certificate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="559" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2583" bodyend="2620"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ab6bc87f601291f0923604adc73cb35e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::storeSslCertCustomConfig</definition>
        <argsstring>(const QgsAuthConfigSslServer &amp;config)</argsstring>
        <name>storeSslCertCustomConfig</name>
        <param>
          <type>const <ref refid="classQgsAuthConfigSslServer" kindref="compound">QgsAuthConfigSslServer</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Store an SSL certificate custom config. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="441" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1957" bodyend="1997"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1af18f219986048fa96252051c300fd5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QgsAuthMethod::Expansions</type>
        <definition>QgsAuthMethod::Expansions QgsAuthManager::supportedAuthMethodExpansions</definition>
        <argsstring>(const QString &amp;authcfg)</argsstring>
        <name>supportedAuthMethodExpansions</name>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <briefdescription>
<para>Gets supported authentication method expansion(s), e.g. </para>        </briefdescription>
        <detaileddescription>
<para>NetworkRequest | DataSourceURI, as flags <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>authcfg</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="246" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1042" bodyend="1053"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a65488d78b99b0a291fd10173b803afd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; QSslCertificate &gt;</type>
        <definition>const QList&lt; QSslCertificate &gt; QgsAuthManager::systemRootCAs</definition>
        <argsstring>()</argsstring>
        <name>systemRootCAs</name>
        <briefdescription>
<para>systemRootCAs get root system certificate authorities </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of certificate authorities </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="521" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2497" bodyend="2505"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a69c387221a912f7e54b65de297f3dafb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; QSslCertificate &gt;</type>
        <definition>const QList&lt; QSslCertificate &gt; QgsAuthManager::trustedCaCerts</definition>
        <argsstring>(bool includeinvalid=false)</argsstring>
        <name>trustedCaCerts</name>
        <param>
          <type>bool</type>
          <declname>includeinvalid</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>trustedCaCerts get list of all trusted CA certificates </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>includeinvalid</parametername>
</parameternamelist>
<parameterdescription>
<para>whether invalid certs needs to be returned </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>list of certificates </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="605" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2788" bodyend="2820"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aff3ce69491acfbb993b37b5627893d43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const QList&lt; QSslCertificate &gt;</type>
        <definition>const QList&lt;QSslCertificate&gt; QgsAuthManager::trustedCaCertsCache</definition>
        <argsstring>()</argsstring>
        <name>trustedCaCertsCache</name>
        <briefdescription>
<para>trustedCaCertsCache cache of trusted certificate authorities, ready for network connections </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of certificates </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="622" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="622" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a58be91a20b5f4eb5850830560649be05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QByteArray</type>
        <definition>const QByteArray QgsAuthManager::trustedCaCertsPemText</definition>
        <argsstring>()</argsstring>
        <name>trustedCaCertsPemText</name>
        <briefdescription>
<para>trustedCaCertsPemText get concatenated string of all trusted CA certificates </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bye array with all PEM encoded trusted CAs </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="629" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2857" bodyend="2861"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a4add655971f72e4d3dec6cecb76f695c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::uniqueConfigId</definition>
        <argsstring>() const</argsstring>
        <name>uniqueConfigId</name>
        <briefdescription>
<para>Gets a unique generated 7-character string to assign to as config id. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="249" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="841" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a45f5e9dd0863a2a33b348169e0436866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; QSslCertificate &gt;</type>
        <definition>const QList&lt; QSslCertificate &gt; QgsAuthManager::untrustedCaCerts</definition>
        <argsstring>(QList&lt; QSslCertificate &gt; trustedCAs=QList&lt; QSslCertificate &gt;())</argsstring>
        <name>untrustedCaCerts</name>
        <param>
          <type>QList&lt; QSslCertificate &gt;</type>
          <declname>trustedCAs</declname>
          <defval>QList&lt; QSslCertificate &gt;()</defval>
        </param>
        <briefdescription>
<para>untrustedCaCerts get list of untrusted certificate authorities </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>list of certificates </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="612" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2822" bodyend="2846"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1abd0af607b2faee76f339cf7f96e1dd1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::updateAuthenticationConfig</definition>
        <argsstring>(const QgsAuthMethodConfig &amp;config)</argsstring>
        <name>updateAuthenticationConfig</name>
        <param>
          <type>const <ref refid="classQgsAuthMethodConfig" kindref="compound">QgsAuthMethodConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Update an authentication config in the database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Associated authentication config id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether operation succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="281" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1132" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ab4e593fca6b024902e7499dcb73d3f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::updateConfigAuthMethods</definition>
        <argsstring>()</argsstring>
        <name>updateConfigAuthMethods</name>
        <briefdescription>
<para>Sync the confg/authentication method cache with what is in database. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="203" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="945" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aa7005267b6811022b623412a9e7cbb86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::updateDataSourceUriItems</definition>
        <argsstring>(QStringList &amp;connectionItems, const QString &amp;authcfg, const QString &amp;dataprovider=QString())</argsstring>
        <name>updateDataSourceUriItems</name>
        <param>
          <type>QStringList &amp;</type>
          <declname>connectionItems</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>dataprovider</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Provider call to update a <ref refid="classQgsDataSourceUri" kindref="compound">QgsDataSourceUri</ref> with an authentication config. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionItems</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection items, e.g. username=myname, of <ref refid="classQgsDataSourceUri" kindref="compound">QgsDataSourceUri</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authcfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Associated authentication config id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataprovider</parametername>
</parameternamelist>
<parameterdescription>
<para>Provider key filter, offering logic branching in authentication method </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether operation succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="349" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1491" bodyend="1515"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a0a68a8c2cc638e55eddfde67490dbc8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::updateIgnoredSslErrorsCache</definition>
        <argsstring>(const QString &amp;shahostport, const QList&lt; QSslError &gt; &amp;errors)</argsstring>
        <name>updateIgnoredSslErrorsCache</name>
        <param>
          <type>const QString &amp;</type>
          <declname>shahostport</declname>
        </param>
        <param>
          <type>const QList&lt; QSslError &gt; &amp;</type>
          <declname>errors</declname>
        </param>
        <briefdescription>
<para>Update ignored SSL error cache with possible ignored SSL errors, using sha:host:port key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="488" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2236" bodyend="2278"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a0cc65e483d7b50243c73cb2ea6e375ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::updateIgnoredSslErrorsCacheFromConfig</definition>
        <argsstring>(const QgsAuthConfigSslServer &amp;config)</argsstring>
        <name>updateIgnoredSslErrorsCacheFromConfig</name>
        <param>
          <type>const <ref refid="classQgsAuthConfigSslServer" kindref="compound">QgsAuthConfigSslServer</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Update ignored SSL error cache with possible ignored SSL errors, using server config. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="485" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2207" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a7e7a1e6c0f08ccdb979bc0adf9e2230d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::updateNetworkProxy</definition>
        <argsstring>(QNetworkProxy &amp;proxy, const QString &amp;authcfg, const QString &amp;dataprovider=QString())</argsstring>
        <name>updateNetworkProxy</name>
        <param>
          <type>QNetworkProxy &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>dataprovider</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Provider call to update a QNetworkProxy with an authentication config. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>the QNetworkProxy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authcfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Associated authentication config id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataprovider</parametername>
</parameternamelist>
<parameterdescription>
<para>Provider key filter, offering logic branching in authentication method </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether operation succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="359" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1517" bodyend="1541"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ae351364f98af3ad988b0a646aa4bed12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::updateNetworkReply</definition>
        <argsstring>(QNetworkReply *reply, const QString &amp;authcfg, const QString &amp;dataprovider=QString())</argsstring>
        <name>updateNetworkReply</name>
        <param>
          <type>QNetworkReply *</type>
          <declname>reply</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>dataprovider</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Provider call to update a QNetworkReply with an authentication config (used to skip known SSL errors, etc.) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reply</parametername>
</parameternamelist>
<parameterdescription>
<para>The QNetworkReply </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authcfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Associated authentication config id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataprovider</parametername>
</parameternamelist>
<parameterdescription>
<para>Provider key filter, offering logic branching in authentication method </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether operation succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="339" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1465" bodyend="1489"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aa04d0781bcee7fccb5125f54d35bc666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::updateNetworkRequest</definition>
        <argsstring>(QNetworkRequest &amp;request, const QString &amp;authcfg, const QString &amp;dataprovider=QString())</argsstring>
        <name>updateNetworkRequest</name>
        <param>
          <type>QNetworkRequest &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>dataprovider</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Provider call to update a QNetworkRequest with an authentication config. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>The QNetworkRequest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authcfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Associated authentication config id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataprovider</parametername>
</parameternamelist>
<parameterdescription>
<para>Provider key filter, offering logic branching in authentication method </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether operation succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="329" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="1440" bodyend="1463"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a0ca0f51eba177642dcaaa8bcbcb4f656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::verifyMasterPassword</definition>
        <argsstring>(const QString &amp;compare=QString())</argsstring>
        <name>verifyMasterPassword</name>
        <param>
          <type>const QString &amp;</type>
          <declname>compare</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
<para>Verify the supplied master password against any existing hash in authentication database. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Do not emit verification signals when only comparing </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>compare</parametername>
</parameternamelist>
<parameterdescription>
<para>Password to compare against </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="133" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="547" bodyend="639"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classQgsAuthManager_1a3e4155611a9d4712470309fa9cbad447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::authDatabaseChanged</definition>
        <argsstring>()</argsstring>
        <name>authDatabaseChanged</name>
        <briefdescription>
<para>Emitted when the authentication db is significantly changed, e.g. large record removal, erased, etc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="724" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsAuthManager_1a91da660b4be246ac88e6b63285619acf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::authDatabaseEraseRequested</definition>
        <argsstring>()</argsstring>
        <name>authDatabaseEraseRequested</name>
        <briefdescription>
<para>Emitted when a user has indicated they may want to erase the authentication db. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="721" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsAuthManager_1ad36687d7f760fdd88045b37ddd2e71dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::masterPasswordVerified</definition>
        <argsstring>(bool verified)</argsstring>
        <name>masterPasswordVerified</name>
        <param>
          <type>bool</type>
          <declname>verified</declname>
        </param>
        <briefdescription>
<para>Emitted when a password has been verify (or not) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>verified</parametername>
</parameternamelist>
<parameterdescription>
<para>The state of password&apos;s verification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="718" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsAuthManager_1a16aabb9e6efac56fe214b89a9ebd30c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::messageOut</definition>
        <argsstring>(const QString &amp;message, const QString &amp;tag=QgsAuthManager::AUTH_MAN_TAG, QgsAuthManager::MessageLevel level=QgsAuthManager::INFO) const</argsstring>
        <name>messageOut</name>
        <param>
          <type>const QString &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>tag</declname>
          <defval><ref refid="classQgsAuthManager_1a52374b6f35514ca47e203633c9366679" kindref="member">QgsAuthManager::AUTH_MAN_TAG</ref></defval>
        </param>
        <param>
          <type><ref refid="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecb" kindref="member">QgsAuthManager::MessageLevel</ref></type>
          <declname>level</declname>
          <defval><ref refid="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecbab514eac53b2ccdd151c01b97eeee89e5" kindref="member">QgsAuthManager::INFO</ref></defval>
        </param>
        <briefdescription>
<para>Custom logging signal to relay to console output and <ref refid="classQgsMessageLog" kindref="compound">QgsMessageLog</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Message to send </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Associated tag (title) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Message log level </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsMessageLog" kindref="compound">QgsMessageLog</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="702" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsAuthManager_1a9989475a10455ae23a59c0edd6181eee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::passwordHelperFailure</definition>
        <argsstring>()</argsstring>
        <name>passwordHelperFailure</name>
        <briefdescription>
<para>Signals emitted on password helper failure, mainly used in the tests to exit main application loop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="687" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsAuthManager_1a444c9f3f77a24f14b7229097bfd9388f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::passwordHelperMessageOut</definition>
        <argsstring>(const QString &amp;message, const QString &amp;tag=QgsAuthManager::AUTH_MAN_TAG, QgsAuthManager::MessageLevel level=QgsAuthManager::INFO)</argsstring>
        <name>passwordHelperMessageOut</name>
        <param>
          <type>const QString &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>tag</declname>
          <defval><ref refid="classQgsAuthManager_1a52374b6f35514ca47e203633c9366679" kindref="member">QgsAuthManager::AUTH_MAN_TAG</ref></defval>
        </param>
        <param>
          <type><ref refid="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecb" kindref="member">QgsAuthManager::MessageLevel</ref></type>
          <declname>level</declname>
          <defval><ref refid="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecbab514eac53b2ccdd151c01b97eeee89e5" kindref="member">QgsAuthManager::INFO</ref></defval>
        </param>
        <briefdescription>
<para>Custom logging signal to inform the user about master password &lt;-&gt; password manager interactions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Message to send </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Associated tag (title) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Message log level </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsMessageLog" kindref="compound">QgsMessageLog</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="711" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsAuthManager_1a808a7420c3b28645322dcb0726261ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::passwordHelperSuccess</definition>
        <argsstring>()</argsstring>
        <name>passwordHelperSuccess</name>
        <briefdescription>
<para>Signals emitted on password helper success, mainly used in the tests to exit main application loop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="693" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="classQgsAuthManager_1a034969428ad72f39f56ca3cd49f08475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::clearAllCachedConfigs</definition>
        <argsstring>()</argsstring>
        <name>clearAllCachedConfigs</name>
        <briefdescription>
<para>Clear all authentication configs from authentication method caches. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="728" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2878" bodyend="2888"/>
      </memberdef>
      <memberdef kind="slot" id="classQgsAuthManager_1a9f1f186d6952f6c860b910c2544b3cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::clearCachedConfig</definition>
        <argsstring>(const QString &amp;authcfg)</argsstring>
        <name>clearCachedConfig</name>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <briefdescription>
<para>Clear an authentication config from its associated authentication method cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="731" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2890" bodyend="2900"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-slot">
      <memberdef kind="slot" id="classQgsAuthManager_1a49dbdc98dac7d23ab8bf33aede3dfb54" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::tryToStartDbErase</definition>
        <argsstring>()</argsstring>
        <name>tryToStartDbErase</name>
        <briefdescription>
<para>This slot emits the authDatabaseEraseRequested signal, instead of attempting the erase. </para>        </briefdescription>
        <detaileddescription>
<para>It relies upon a slot connected to the signal in calling application (the one that initiated the erase) to initiate the erase, when it is ready. Upon activation, a receiving slot should get confimation from the user, then IMMEDIATELY call setScheduledAuthDatabaseErase( false ) to stop the scheduling timer. If receiving slot is NOT ready to initiate the erase, e.g. project is still loading, it can skip the confirmation and request another signal emit from the scheduling timer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="745" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2930" bodyend="2959"/>
      </memberdef>
      <memberdef kind="slot" id="classQgsAuthManager_1a80f32e226a6e06e841c1339d783c1734" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::writeToConsole</definition>
        <argsstring>(const QString &amp;message, const QString &amp;tag=QString(), QgsAuthManager::MessageLevel level=INFO)</argsstring>
        <name>writeToConsole</name>
        <param>
          <type>const QString &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>tag</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type><ref refid="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecb" kindref="member">QgsAuthManager::MessageLevel</ref></type>
          <declname>level</declname>
          <defval><ref refid="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecbab514eac53b2ccdd151c01b97eeee89e5" kindref="member">INFO</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="734" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2902" bodyend="2928"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classQgsAuthManager_1aacc49706c9dd0aa1ed6a94361bdc15c9" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsAuthManager" kindref="compound">QgsAuthManager</ref> *</type>
        <definition>QgsAuthManager * QgsAuthManager::instance</definition>
        <argsstring>()</argsstring>
        <name>instance</name>
        <briefdescription>
<para>Enforce singleton pattern. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>To set up the manager instance and initialize everything use <ref refid="classQgsAuthManager_1aacc49706c9dd0aa1ed6a94361bdc15c9" kindref="member">QgsAuthManager::instance()</ref>-&gt;<ref refid="classQgsAuthManager_1a3cd5ebc04fbd90b3f6dec1cad4c9995d" kindref="member">init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="753" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="88" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsAuthManager_1a223a30239ed355c4c64aac84c11e67d4" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsAuthManager::QgsAuthManager</definition>
        <argsstring>()</argsstring>
        <name>QgsAuthManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="755" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="103" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsAuthManager_1afea9a16eca6847a33595ed19a2e938a9" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::authDbAuthoritiesTable</definition>
        <argsstring>() const</argsstring>
        <name>authDbAuthoritiesTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="834" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="834" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1abe8bee1f45f6e0745bf449f23de6162c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::authDbCommit</definition>
        <argsstring>() const</argsstring>
        <name>authDbCommit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="820" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3698" bodyend="3713"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1aed99cd1c9dc060c96f15d6074ad0ada9" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::authDbIdentitiesTable</definition>
        <argsstring>() const</argsstring>
        <name>authDbIdentitiesTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="832" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="832" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a9588fd5074185d0a8f1c5dc980482d9c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::authDbOpen</definition>
        <argsstring>() const</argsstring>
        <name>authDbOpen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="814" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3635" bodyend="3654"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ad17295cfbe4230a8a932e7056754be0b" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::authDbPassTable</definition>
        <argsstring>() const</argsstring>
        <name>authDbPassTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="828" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="828" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ac339990f84d2f75597469aadc9a92ab2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::authDbQuery</definition>
        <argsstring>(QSqlQuery *query) const</argsstring>
        <name>authDbQuery</name>
        <param>
          <type>QSqlQuery *</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="816" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3656" bodyend="3680"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ab6173599c3d96f451602f35771460beb" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::authDbSettingsTable</definition>
        <argsstring>() const</argsstring>
        <name>authDbSettingsTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="830" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="830" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a0909b862671a7fb737d25128a8a00e3d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::authDbStartTransaction</definition>
        <argsstring>() const</argsstring>
        <name>authDbStartTransaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="818" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3682" bodyend="3696"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ac9d85dccc976f4cd010c0e838542ebaf" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::authDbTransactionQuery</definition>
        <argsstring>(QSqlQuery *query) const</argsstring>
        <name>authDbTransactionQuery</name>
        <param>
          <type>QSqlQuery *</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="822" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3715" bodyend="3740"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ab20c091e8b9512365193ac1f6e7836fa" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::authDbTrustTable</definition>
        <argsstring>() const</argsstring>
        <name>authDbTrustTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="836" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="836" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a30f8ba24e2de41b5394f4428b966637f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::createCertTables</definition>
        <argsstring>()</argsstring>
        <name>createCertTables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="788" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="392" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a8470ec2008f15b8fe52aacb1dde0678e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::createConfigTables</definition>
        <argsstring>()</argsstring>
        <name>createConfigTables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="786" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="339" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a5a9c0b1688f151aa0dbb6c7e9769ace8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::insertCaCertInCache</definition>
        <argsstring>(QgsAuthCertUtils::CaCertSource source, const QList&lt; QSslCertificate &gt; &amp;certs)</argsstring>
        <name>insertCaCertInCache</name>
        <param>
          <type><ref refid="classQgsAuthCertUtils_1abe90cccf324e3bd5c7f81691140375dd" kindref="member">QgsAuthCertUtils::CaCertSource</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type>const QList&lt; QSslCertificate &gt; &amp;</type>
          <declname>certs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="825" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3742" bodyend="3749"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a2197bf5601f5529e92d7ecd678a0aec8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::masterPasswordCheckAgainstDb</definition>
        <argsstring>(const QString &amp;compare=QString()) const</argsstring>
        <name>masterPasswordCheckAgainstDb</name>
        <param>
          <type>const QString &amp;</type>
          <declname>compare</declname>
          <defval>QString()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="794" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3255" bodyend="3274"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ab38c0fdf4082d0ccd04502252a951ca2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QString</type>
        <definition>const QString QgsAuthManager::masterPasswordCiv</definition>
        <argsstring>() const</argsstring>
        <name>masterPasswordCiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="800" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3316" bodyend="3330"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1afdcfdb1e5babf0682a7fadf2ff22bd8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::masterPasswordClearDb</definition>
        <argsstring>()</argsstring>
        <name>masterPasswordClearDb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="798" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3303" bodyend="3314"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a16fa7a2c49cea22ed00b9e2b71e2ed3a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::masterPasswordInput</definition>
        <argsstring>()</argsstring>
        <name>masterPasswordInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="790" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3164" bodyend="3219"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a07f3f8c785adbd1afa408acf31358b54" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::masterPasswordRowsInDb</definition>
        <argsstring>(int *rows) const</argsstring>
        <name>masterPasswordRowsInDb</name>
        <param>
          <type>int *</type>
          <declname>rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="792" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3221" bodyend="3236"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a5e8d191565a4828797a1de227fd7d554" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::masterPasswordStoreInDb</definition>
        <argsstring>() const</argsstring>
        <name>masterPasswordStoreInDb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="796" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3276" bodyend="3301"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a02f39b3a85b25d94e41abbb6dec52499" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::passwordHelperClearErrors</definition>
        <argsstring>()</argsstring>
        <name>passwordHelperClearErrors</name>
        <briefdescription>
<para>Clear error code and message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="778" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3132" bodyend="3136"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a079f6c487ee635b4ee0383dfc6c5d5b5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::passwordHelperLog</definition>
        <argsstring>(const QString &amp;msg) const</argsstring>
        <name>passwordHelperLog</name>
        <param>
          <type>const QString &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Print a debug message in QGIS. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="766" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2987" bodyend="2993"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1ac4a0603dc8ad20eb5b4a33ea44986a72" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthManager::passwordHelperName</definition>
        <argsstring>() const</argsstring>
        <name>passwordHelperName</name>
        <briefdescription>
<para>Returns the name for logging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="763" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="2981" bodyend="2984"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1afc037cbbb0eea1fb6639682d6058505c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::passwordHelperProcessError</definition>
        <argsstring>()</argsstring>
        <name>passwordHelperProcessError</name>
        <briefdescription>
<para>Process the error: show it and/or disable the password helper system in case of access denied or no backend, reset error flags at the end. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="784" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3138" bodyend="3161"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a1fca177eb9eda12a5c391f83d6445c5a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsAuthManager::passwordHelperRead</definition>
        <argsstring>()</argsstring>
        <name>passwordHelperRead</name>
        <briefdescription>
<para>Read Master password from the wallet. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="769" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3026" bodyend="3066"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a396f31f10c7f97e1aa28e102d7c5666c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsAuthManager::passwordHelperSetErrorMessage</definition>
        <argsstring>(const QString &amp;errorMessage)</argsstring>
        <name>passwordHelperSetErrorMessage</name>
        <param>
          <type>const QString &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <briefdescription>
<para>Error message setter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="775" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="775" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a1b23a5f1bebef6839917745f16ff9ca6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::passwordHelperWrite</definition>
        <argsstring>(const QString &amp;password)</argsstring>
        <name>passwordHelperWrite</name>
        <param>
          <type>const QString &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Store Master password in the wallet. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="772" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3068" bodyend="3100"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a68e70f72aaa05daf90183a7b8415f6aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::reencryptAllAuthenticationConfigs</definition>
        <argsstring>(const QString &amp;prevpass, const QString &amp;prevciv)</argsstring>
        <name>reencryptAllAuthenticationConfigs</name>
        <param>
          <type>const QString &amp;</type>
          <declname>prevpass</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>prevciv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="804" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3394" bodyend="3406"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a4e234352a747f411057e2f65d0d9137b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::reencryptAllAuthenticationIdentities</definition>
        <argsstring>(const QString &amp;prevpass, const QString &amp;prevciv)</argsstring>
        <name>reencryptAllAuthenticationIdentities</name>
        <param>
          <type>const QString &amp;</type>
          <declname>prevpass</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>prevciv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="810" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3556" bodyend="3568"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a9213771ba6dcd112bae0deedba8c6f97" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::reencryptAllAuthenticationSettings</definition>
        <argsstring>(const QString &amp;prevpass, const QString &amp;prevciv)</argsstring>
        <name>reencryptAllAuthenticationSettings</name>
        <param>
          <type>const QString &amp;</type>
          <declname>prevpass</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>prevciv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="808" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3470" bodyend="3554"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1abec79fd776a2fd71b102d04596158a46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::reencryptAuthenticationConfig</definition>
        <argsstring>(const QString &amp;authcfg, const QString &amp;prevpass, const QString &amp;prevciv)</argsstring>
        <name>reencryptAuthenticationConfig</name>
        <param>
          <type>const QString &amp;</type>
          <declname>authcfg</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>prevpass</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>prevciv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="806" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3408" bodyend="3468"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a6acde8a4c930cbffe1a6b903587ae400" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::reencryptAuthenticationIdentity</definition>
        <argsstring>(const QString &amp;identid, const QString &amp;prevpass, const QString &amp;prevciv)</argsstring>
        <name>reencryptAuthenticationIdentity</name>
        <param>
          <type>const QString &amp;</type>
          <declname>identid</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>prevpass</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>prevciv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="812" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3570" bodyend="3633"/>
      </memberdef>
      <memberdef kind="function" id="classQgsAuthManager_1a9922a1917e079cc324d8233e4d915254" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsAuthManager::verifyPasswordCanDecryptConfigs</definition>
        <argsstring>() const</argsstring>
        <name>verifyPasswordCanDecryptConfigs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="802" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.cpp" bodystart="3357" bodyend="3392"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Singleton offering an interface to manage the authentication configuration database and to utilize configurations through various authentication method plugins. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classQgsAuthManager" kindref="compound">QgsAuthManager</ref> should not usually be directly created, but rather accessed through <ref refid="classQgsApplication_1aa879f2f9f0d9d79f1d7968cc0f1b9a6a" kindref="member">QgsApplication::authManager()</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1376">
        <label>QObject</label>
      </node>
      <node id="1375">
        <label>QgsAuthManager</label>
        <link refid="classQgsAuthManager"/>
        <childnode refid="1376" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1378">
        <label>QObject</label>
      </node>
      <node id="1377">
        <label>QgsAuthManager</label>
        <link refid="classQgsAuthManager"/>
        <childnode refid="1378" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" line="65" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/auth/qgsauthmanager.h" bodystart="64" bodyend="905"/>
    <listofallmembers>
      <member refid="classQgsAuthManager_1ab70b2dfb1c29b4c969aa80e9d2a39981" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_AUTHORITIES_TABLE</name></member>
      <member refid="classQgsAuthManager_1ae7479eb7c1040001d7b8fd8b010d144a" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_CFG_REGEX</name></member>
      <member refid="classQgsAuthManager_1ab79867629938c22bfa5607c884c434ab" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_CONFIG_TABLE</name></member>
      <member refid="classQgsAuthManager_1aa100b8b6401d54ddd07f915a92c9dd9a" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_IDENTITIES_TABLE</name></member>
      <member refid="classQgsAuthManager_1a52374b6f35514ca47e203633c9366679" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_MAN_TAG</name></member>
      <member refid="classQgsAuthManager_1a27deaaccc0f575c909f21a7d2570acf2" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_PASS_TABLE</name></member>
      <member refid="classQgsAuthManager_1ae0107862e97a6b3333613bac43aafc3a" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_PASSWORD_HELPER_DISPLAY_NAME</name></member>
      <member refid="classQgsAuthManager_1ade2733a2812ef33df5f42051f9d7fee0" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_PASSWORD_HELPER_FOLDER_NAME</name></member>
      <member refid="classQgsAuthManager_1a629a6827c038b76f53ec6f3824173772" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_PASSWORD_HELPER_KEY_NAME</name></member>
      <member refid="classQgsAuthManager_1aef945da4ccfc96ad5d4a79974997647f" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_SERVERS_TABLE</name></member>
      <member refid="classQgsAuthManager_1aaaef12e586d4ba95a1c16d68620fa966" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_SETTINGS_TABLE</name></member>
      <member refid="classQgsAuthManager_1a96df8a259614502fc419656c4b11be74" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>AUTH_TRUST_TABLE</name></member>
      <member refid="classQgsAuthManager_1a3e4155611a9d4712470309fa9cbad447" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDatabaseChanged</name></member>
      <member refid="classQgsAuthManager_1abe4afe518eefe8e58d87979d4fd65443" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDatabaseConfigTable</name></member>
      <member refid="classQgsAuthManager_1ab280f075bed9633cd892de8c76a43600" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDatabaseConnection</name></member>
      <member refid="classQgsAuthManager_1a91da660b4be246ac88e6b63285619acf" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDatabaseEraseRequested</name></member>
      <member refid="classQgsAuthManager_1a013a5421764b48dd3dd34cf3f3e4739c" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDatabaseServersTable</name></member>
      <member refid="classQgsAuthManager_1afea9a16eca6847a33595ed19a2e938a9" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDbAuthoritiesTable</name></member>
      <member refid="classQgsAuthManager_1abe8bee1f45f6e0745bf449f23de6162c" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDbCommit</name></member>
      <member refid="classQgsAuthManager_1aed99cd1c9dc060c96f15d6074ad0ada9" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDbIdentitiesTable</name></member>
      <member refid="classQgsAuthManager_1a9588fd5074185d0a8f1c5dc980482d9c" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDbOpen</name></member>
      <member refid="classQgsAuthManager_1ad17295cfbe4230a8a932e7056754be0b" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDbPassTable</name></member>
      <member refid="classQgsAuthManager_1ac339990f84d2f75597469aadc9a92ab2" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDbQuery</name></member>
      <member refid="classQgsAuthManager_1ab6173599c3d96f451602f35771460beb" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDbSettingsTable</name></member>
      <member refid="classQgsAuthManager_1a0909b862671a7fb737d25128a8a00e3d" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDbStartTransaction</name></member>
      <member refid="classQgsAuthManager_1ac9d85dccc976f4cd010c0e838542ebaf" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDbTransactionQuery</name></member>
      <member refid="classQgsAuthManager_1ab20c091e8b9512365193ac1f6e7836fa" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>authDbTrustTable</name></member>
      <member refid="classQgsAuthManager_1a63e68de971ab1515b4b3862f25a47c32" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authenticationDatabasePath</name></member>
      <member refid="classQgsAuthManager_1a734154dbef7490b25551632a0455a9ff" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authManTag</name></member>
      <member refid="classQgsAuthManager_1aa6685e6402ff2ad836f63e2a0d7666f2" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authMethod</name></member>
      <member refid="classQgsAuthManager_1a1eec643c8dfdf852e65e127fa3ca7cfe" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authMethodEditWidget</name></member>
      <member refid="classQgsAuthManager_1aca194ec2e5772dfe3a836773c9510e9c" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authMethodsKeys</name></member>
      <member refid="classQgsAuthManager_1a1de130513a8c8f4faebde50d3b57eb7e" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authMethodsMap</name></member>
      <member refid="classQgsAuthManager_1a4ff5a1b02994e7915ea70c1996591fc8" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>authSetting</name></member>
      <member refid="classQgsAuthManager_1af1caaed5349a4214cfc56e718c2094dd" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>availableAuthMethodConfigs</name></member>
      <member refid="classQgsAuthManager_1a91708e0ade02930b854747c4826c2c5b" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>backupAuthenticationDatabase</name></member>
      <member refid="classQgsAuthManager_1ac0c073165e8c83f59fadfb3891456af9" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>caCertsCache</name></member>
      <member refid="classQgsAuthManager_1a80358f3cb7e1d4e4d75ac5975c9f6090" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>certAuthority</name></member>
      <member refid="classQgsAuthManager_1aa2bc56ee03fe7867c051add4df61936d" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>certIdentities</name></member>
      <member refid="classQgsAuthManager_1a04e95b520e445f94f040590adc9f0626" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>certIdentity</name></member>
      <member refid="classQgsAuthManager_1a4b9ca6756070bb7df42ad4b72b4c5765" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>certIdentityBundle</name></member>
      <member refid="classQgsAuthManager_1a07b1beedd757983bd618f92530b70906" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>certIdentityBundleToPem</name></member>
      <member refid="classQgsAuthManager_1aa3fb213e6777d238455fce04ae96a803" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>certIdentityIds</name></member>
      <member refid="classQgsAuthManager_1a60c9d30487a369472134d08685292525" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>certificateTrustPolicy</name></member>
      <member refid="classQgsAuthManager_1a020327d08c301f203e8ec979319e0117" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>certTrustCache</name></member>
      <member refid="classQgsAuthManager_1a75eeb8006413c1d21fc9ee3f39800133" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>certTrustPolicy</name></member>
      <member refid="classQgsAuthManager_1a034969428ad72f39f56ca3cd49f08475" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>clearAllCachedConfigs</name></member>
      <member refid="classQgsAuthManager_1a9f1f186d6952f6c860b910c2544b3cec" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>clearCachedConfig</name></member>
      <member refid="classQgsAuthManager_1aa043e800ddc0714a5009e6ae4c3a8463" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>clearMasterPassword</name></member>
      <member refid="classQgsAuthManager_1a14d35a31054a7ac2c7cfd607cdf5db29" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>configAuthMethod</name></member>
      <member refid="classQgsAuthManager_1aff04d81ca53fc37ceee81d90c7bdf518" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>configAuthMethodKey</name></member>
      <member refid="classQgsAuthManager_1a83a0f4145438323bf414e4cc2d4b5733" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>configIdRegex</name></member>
      <member refid="classQgsAuthManager_1a714ffa9adc9f88e402f6a0630282e385" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>configIds</name></member>
      <member refid="classQgsAuthManager_1a6f5ea5adbdc0eab79cfc6e87e01f0c6d" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>configIdUnique</name></member>
      <member refid="classQgsAuthManager_1a30f8ba24e2de41b5394f4428b966637f" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>createCertTables</name></member>
      <member refid="classQgsAuthManager_1a8470ec2008f15b8fe52aacb1dde0678e" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>createConfigTables</name></member>
      <member refid="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecba7afe794b70c36cdf9961854f061ecf8a" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>CRITICAL</name></member>
      <member refid="classQgsAuthManager_1a8eeaf4bcfc17f3f86a0f01b1ce6785aa" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>databaseCAs</name></member>
      <member refid="classQgsAuthManager_1a56b91514c33d1754359f389ff2ede2f0" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>defaultCertTrustPolicy</name></member>
      <member refid="classQgsAuthManager_1a142353b507abd1bd3fd06f5e438572ca" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>disabledMessage</name></member>
      <member refid="classQgsAuthManager_1a8ede00489324f224119794094a4801ef" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>dumpIgnoredSslErrorsCache_</name></member>
      <member refid="classQgsAuthManager_1a30efd772621612e5a896fcea5230eb40" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>eraseAuthenticationDatabase</name></member>
      <member refid="classQgsAuthManager_1a9ef8749744d3665f89af093cf274e970" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>existsAuthSetting</name></member>
      <member refid="classQgsAuthManager_1a6a222f8abd22807a121f669b98b17082" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>existsCertAuthority</name></member>
      <member refid="classQgsAuthManager_1abf26ffaea65e630062c24359de533969" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>existsCertIdentity</name></member>
      <member refid="classQgsAuthManager_1a9a2a1484912fda4af562fe6ef2bfe10f" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>existsSslCertCustomConfig</name></member>
      <member refid="classQgsAuthManager_1a2b2f6b20f0e29adab71004cb6f1802d2" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>extraFileCAs</name></member>
      <member refid="classQgsAuthManager_1af0cbd457e9e678cd9b2ebc3f871b45e8" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>hasConfigId</name></member>
      <member refid="classQgsAuthManager_1a3b210ec3bd5b02f088eff9477cc4d7de" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>ignoredSslErrorCache</name></member>
      <member refid="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecbab514eac53b2ccdd151c01b97eeee89e5" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>INFO</name></member>
      <member refid="classQgsAuthManager_1a3cd5ebc04fbd90b3f6dec1cad4c9995d" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>init</name></member>
      <member refid="classQgsAuthManager_1a2032136d836deeedbb587e81880c7ff8" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>initSslCaches</name></member>
      <member refid="classQgsAuthManager_1a5a9c0b1688f151aa0dbb6c7e9769ace8" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>insertCaCertInCache</name></member>
      <member refid="classQgsAuthManager_1aacc49706c9dd0aa1ed6a94361bdc15c9" prot="protected" virt="non-virtual"><scope>QgsAuthManager</scope><name>instance</name></member>
      <member refid="classQgsAuthManager_1a4cb0c49262776c240edfd96a2e788087" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>isDisabled</name></member>
      <member refid="classQgsAuthManager_1a75e5d58e73e192f1a054e5e56a38834c" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>loadAuthenticationConfig</name></member>
      <member refid="classQgsAuthManager_1a6bebc32db002489768722e703e9c5e8c" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>mappedDatabaseCAs</name></member>
      <member refid="classQgsAuthManager_1a2197bf5601f5529e92d7ecd678a0aec8" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>masterPasswordCheckAgainstDb</name></member>
      <member refid="classQgsAuthManager_1ab38c0fdf4082d0ccd04502252a951ca2" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>masterPasswordCiv</name></member>
      <member refid="classQgsAuthManager_1afdcfdb1e5babf0682a7fadf2ff22bd8b" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>masterPasswordClearDb</name></member>
      <member refid="classQgsAuthManager_1a770e2a216408f8315ed1c0dc9e2bf468" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>masterPasswordHashInDatabase</name></member>
      <member refid="classQgsAuthManager_1a16fa7a2c49cea22ed00b9e2b71e2ed3a" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>masterPasswordInput</name></member>
      <member refid="classQgsAuthManager_1ad1ad9b645814719551b731ecbe0b373a" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>masterPasswordIsSet</name></member>
      <member refid="classQgsAuthManager_1a07f3f8c785adbd1afa408acf31358b54" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>masterPasswordRowsInDb</name></member>
      <member refid="classQgsAuthManager_1a275cd0a82ef15e097d95b48918b5b5cd" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>masterPasswordSame</name></member>
      <member refid="classQgsAuthManager_1a5e8d191565a4828797a1de227fd7d554" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>masterPasswordStoreInDb</name></member>
      <member refid="classQgsAuthManager_1ad36687d7f760fdd88045b37ddd2e71dc" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>masterPasswordVerified</name></member>
      <member refid="classQgsAuthManager_1adf99cb5baf9597df0c62f6c0e1afba35" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mAuthDbPath</name></member>
      <member refid="classQgsAuthManager_1a13c1c7437f5edc7b699ecdf3b588295f" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mAuthDisabled</name></member>
      <member refid="classQgsAuthManager_1af93cc31a221bf0a0fe9711bbcff94195" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mAuthDisabledMessage</name></member>
      <member refid="classQgsAuthManager_1a9e3d13f2d7a8d352bf5cf9bc87932a00" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mAuthInit</name></member>
      <member refid="classQgsAuthManager_1a66a4f636d00cfea86d9be941cc8cce64" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mAuthMethods</name></member>
      <member refid="classQgsAuthManager_1a4fc40810dfe3d75f88a80e284274b3bb" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mCaCertsCache</name></member>
      <member refid="classQgsAuthManager_1aa27d566cd7b7701d9ec5d38af3e28f38" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mCertTrustCache</name></member>
      <member refid="classQgsAuthManager_1a1df0e01385250b57363729e68113904c" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mConfigAuthMethods</name></member>
      <member refid="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecb" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>MessageLevel</name></member>
      <member refid="classQgsAuthManager_1a16aabb9e6efac56fe214b89a9ebd30c5" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>messageOut</name></member>
      <member refid="classQgsAuthManager_1a7ca0d1fdc8fe928c89a7a0cecb5f65f0" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mIgnoredSslErrorsCache</name></member>
      <member refid="classQgsAuthManager_1aa08c872fb5af310ca0ac79b34c0f6c0f" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mMasterPass</name></member>
      <member refid="classQgsAuthManager_1a781710f3960ae9aac84c3c65b9543fab" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mMutex</name></member>
      <member refid="classQgsAuthManager_1a23787a817f57ea8d9810b32ac0b89d8a" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mPassTries</name></member>
      <member refid="classQgsAuthManager_1a5899e2bd2d761f33bf72a8d053547874" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mPasswordHelperErrorCode</name></member>
      <member refid="classQgsAuthManager_1ad5b8492cf40db0848622b02e99eef1f8" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mPasswordHelperErrorMessage</name></member>
      <member refid="classQgsAuthManager_1a38b4d3c92757d9d0ff5d285d067a7329" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mPasswordHelperFailedInit</name></member>
      <member refid="classQgsAuthManager_1a2404bf186d903aab1ac33aa3bc6ba7c9" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mPasswordHelperLoggingEnabled</name></member>
      <member refid="classQgsAuthManager_1a3c1b8012d913f8b71f65e057740342f0" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mPasswordHelperVerificationError</name></member>
      <member refid="classQgsAuthManager_1afa967ce04618509d99de37b7701bf1ae" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mQcaInitializer</name></member>
      <member refid="classQgsAuthManager_1aba157de3f5184df2ba3ed7afbb97235c" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mScheduledDbErase</name></member>
      <member refid="classQgsAuthManager_1acf6cb3dfd6e437aadf01ebb102ef9ed7" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mScheduledDbEraseRequestCount</name></member>
      <member refid="classQgsAuthManager_1aa060b556197c05326e6537d246318843" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mScheduledDbEraseRequestEmitted</name></member>
      <member refid="classQgsAuthManager_1a19b1035d85d122bacf0573c731a0610d" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mScheduledDbEraseRequestWait</name></member>
      <member refid="classQgsAuthManager_1a1a70d41ed9bdb4b6d33616d4524dadeb" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mScheduledDbEraseTimer</name></member>
      <member refid="classQgsAuthManager_1a11080926f9451c96d24b71e31fca41c5" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>mTrustedCaCertsCache</name></member>
      <member refid="classQgsAuthManager_1a02f39b3a85b25d94e41abbb6dec52499" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperClearErrors</name></member>
      <member refid="classQgsAuthManager_1a8995989aa4717dfcb72b687193e15a3f" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperDelete</name></member>
      <member refid="classQgsAuthManager_1ad2c9c590b26f05d97be1ec1af0e40033" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperEnabled</name></member>
      <member refid="classQgsAuthManager_1aa95fdb46d0b5159116a0182108f9c60e" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperErrorMessage</name></member>
      <member refid="classQgsAuthManager_1a9989475a10455ae23a59c0edd6181eee" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperFailure</name></member>
      <member refid="classQgsAuthManager_1a079f6c487ee635b4ee0383dfc6c5d5b5" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperLog</name></member>
      <member refid="classQgsAuthManager_1ad3615eb2b77edce80253dd61cb4ed84b" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperLoggingEnabled</name></member>
      <member refid="classQgsAuthManager_1a444c9f3f77a24f14b7229097bfd9388f" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperMessageOut</name></member>
      <member refid="classQgsAuthManager_1ac4a0603dc8ad20eb5b4a33ea44986a72" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperName</name></member>
      <member refid="classQgsAuthManager_1afc037cbbb0eea1fb6639682d6058505c" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperProcessError</name></member>
      <member refid="classQgsAuthManager_1a1fca177eb9eda12a5c391f83d6445c5a" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperRead</name></member>
      <member refid="classQgsAuthManager_1a396f31f10c7f97e1aa28e102d7c5666c" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperSetErrorMessage</name></member>
      <member refid="classQgsAuthManager_1a808a7420c3b28645322dcb0726261ec1" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperSuccess</name></member>
      <member refid="classQgsAuthManager_1acdbdd5a5b2490429770b4ad43df93418" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperSync</name></member>
      <member refid="classQgsAuthManager_1a1b23a5f1bebef6839917745f16ff9ca6" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>passwordHelperWrite</name></member>
      <member refid="classQgsAuthManager_1a69e368b600d24379429119ab9b6616ca" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>QgsApplication</name></member>
      <member refid="classQgsAuthManager_1a223a30239ed355c4c64aac84c11e67d4" prot="protected" virt="non-virtual"><scope>QgsAuthManager</scope><name>QgsAuthManager</name></member>
      <member refid="classQgsAuthManager_1a2f6664d7f2fd71d8e370c602af630ebe" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>rebuildCaCertsCache</name></member>
      <member refid="classQgsAuthManager_1a62bfcaa274803a4e2451e32f7cbb6516" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>rebuildCertTrustCache</name></member>
      <member refid="classQgsAuthManager_1a1fac62c3b4a0e0dca1cc80817f6f26d6" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>rebuildIgnoredSslErrorCache</name></member>
      <member refid="classQgsAuthManager_1ae98ac1ff820d0ed32d2b64f94e45e9f8" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>rebuildTrustedCaCertsCache</name></member>
      <member refid="classQgsAuthManager_1a68e70f72aaa05daf90183a7b8415f6aa" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>reencryptAllAuthenticationConfigs</name></member>
      <member refid="classQgsAuthManager_1a4e234352a747f411057e2f65d0d9137b" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>reencryptAllAuthenticationIdentities</name></member>
      <member refid="classQgsAuthManager_1a9213771ba6dcd112bae0deedba8c6f97" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>reencryptAllAuthenticationSettings</name></member>
      <member refid="classQgsAuthManager_1abec79fd776a2fd71b102d04596158a46" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>reencryptAuthenticationConfig</name></member>
      <member refid="classQgsAuthManager_1a6acde8a4c930cbffe1a6b903587ae400" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>reencryptAuthenticationIdentity</name></member>
      <member refid="classQgsAuthManager_1a882635d254abd1faf1352929eb41818c" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>registerCoreAuthMethods</name></member>
      <member refid="classQgsAuthManager_1a5dd69411db5fb27315d57b91ca45d31d" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>removeAllAuthenticationConfigs</name></member>
      <member refid="classQgsAuthManager_1aeeb910abba7f205f4c4f1b3ec137a4b3" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>removeAuthenticationConfig</name></member>
      <member refid="classQgsAuthManager_1a2d8ae3c52b4362c34b55a7ff7927f850" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>removeAuthSetting</name></member>
      <member refid="classQgsAuthManager_1a68b8c4e8cbeeb38777c110e3dff07471" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>removeCertAuthority</name></member>
      <member refid="classQgsAuthManager_1af866ef2648509e697765d72e94ac2310" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>removeCertIdentity</name></member>
      <member refid="classQgsAuthManager_1aa4175b246b0d33e64c52dbc0569dd8be" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>removeCertTrustPolicies</name></member>
      <member refid="classQgsAuthManager_1aefa692506182b7c7492c8240e6bb981c" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>removeCertTrustPolicy</name></member>
      <member refid="classQgsAuthManager_1ade63c2329f9c52971a8a92f36c468861" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>removeSslCertCustomConfig</name></member>
      <member refid="classQgsAuthManager_1ac3a955f406cab920487c8a9513c40680" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>resetMasterPassword</name></member>
      <member refid="classQgsAuthManager_1a2f7b1955272f7ee2034f40064cc614a1" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>scheduledAuthDatabaseErase</name></member>
      <member refid="classQgsAuthManager_1a02be6d8dd90bc2631de6e22a6fbfca3d" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>setDefaultCertTrustPolicy</name></member>
      <member refid="classQgsAuthManager_1ad37105c67520f4fa34b8559d1147e766" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>setMasterPassword</name></member>
      <member refid="classQgsAuthManager_1a6f4c7a90aca88821b246513821b042a5" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>setMasterPassword</name></member>
      <member refid="classQgsAuthManager_1a4088886e34ce0aace8155c439577407d" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>setPasswordHelperEnabled</name></member>
      <member refid="classQgsAuthManager_1ab795db878e487484c1d67f1cc7111bae" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>setPasswordHelperLoggingEnabled</name></member>
      <member refid="classQgsAuthManager_1a42dc4ad650ab3b9629701afb356779cb" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>setScheduledAuthDatabaseErase</name></member>
      <member refid="classQgsAuthManager_1a93082481b9b745dec09b09663d7a5f54" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>setScheduledAuthDatabaseEraseRequestEmitted</name></member>
      <member refid="classQgsAuthManager_1a8f00fe351cee0cecfbf1ba5a433245ab" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>sInstance</name></member>
      <member refid="classQgsAuthManager_1af19ee1e173e07e7d5ef9bb4d8e8d401e" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>sslCertCustomConfig</name></member>
      <member refid="classQgsAuthManager_1abb2c9b101f3e46f7bbb0d2964b6fed2c" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>sslCertCustomConfigByHost</name></member>
      <member refid="classQgsAuthManager_1a458849efbffe61c1014f7d7b48d21d95" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>sslCertCustomConfigs</name></member>
      <member refid="classQgsAuthManager_1a6acf1b15905a9692d1cb552e748d010b" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>storeAuthenticationConfig</name></member>
      <member refid="classQgsAuthManager_1a0095aebea6a29248e7060d725269354d" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>storeAuthSetting</name></member>
      <member refid="classQgsAuthManager_1adc0a5d1f3fd446f26c71252f378ce6c4" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>storeCertAuthorities</name></member>
      <member refid="classQgsAuthManager_1aa36186380a584dfc579d5325dd4bde17" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>storeCertAuthority</name></member>
      <member refid="classQgsAuthManager_1a1bce5f8bebb7ec5d636fd99b2b60fd75" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>storeCertIdentity</name></member>
      <member refid="classQgsAuthManager_1a2eb7c0805cf0cdc9cb19130ac9c0237a" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>storeCertTrustPolicy</name></member>
      <member refid="classQgsAuthManager_1ab6bc87f601291f0923604adc73cb35e7" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>storeSslCertCustomConfig</name></member>
      <member refid="classQgsAuthManager_1af18f219986048fa96252051c300fd5a1" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>supportedAuthMethodExpansions</name></member>
      <member refid="classQgsAuthManager_1a65488d78b99b0a291fd10173b803afd6" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>systemRootCAs</name></member>
      <member refid="classQgsAuthManager_1a69c387221a912f7e54b65de297f3dafb" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>trustedCaCerts</name></member>
      <member refid="classQgsAuthManager_1aff3ce69491acfbb993b37b5627893d43" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>trustedCaCertsCache</name></member>
      <member refid="classQgsAuthManager_1a58be91a20b5f4eb5850830560649be05" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>trustedCaCertsPemText</name></member>
      <member refid="classQgsAuthManager_1a49dbdc98dac7d23ab8bf33aede3dfb54" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>tryToStartDbErase</name></member>
      <member refid="classQgsAuthManager_1a4add655971f72e4d3dec6cecb76f695c" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>uniqueConfigId</name></member>
      <member refid="classQgsAuthManager_1a45f5e9dd0863a2a33b348169e0436866" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>untrustedCaCerts</name></member>
      <member refid="classQgsAuthManager_1abd0af607b2faee76f339cf7f96e1dd1b" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>updateAuthenticationConfig</name></member>
      <member refid="classQgsAuthManager_1ab4e593fca6b024902e7499dcb73d3f24" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>updateConfigAuthMethods</name></member>
      <member refid="classQgsAuthManager_1aa7005267b6811022b623412a9e7cbb86" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>updateDataSourceUriItems</name></member>
      <member refid="classQgsAuthManager_1a0a68a8c2cc638e55eddfde67490dbc8d" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>updateIgnoredSslErrorsCache</name></member>
      <member refid="classQgsAuthManager_1a0cc65e483d7b50243c73cb2ea6e375ba" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>updateIgnoredSslErrorsCacheFromConfig</name></member>
      <member refid="classQgsAuthManager_1a7e7a1e6c0f08ccdb979bc0adf9e2230d" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>updateNetworkProxy</name></member>
      <member refid="classQgsAuthManager_1ae351364f98af3ad988b0a646aa4bed12" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>updateNetworkReply</name></member>
      <member refid="classQgsAuthManager_1aa04d0781bcee7fccb5125f54d35bc666" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>updateNetworkRequest</name></member>
      <member refid="classQgsAuthManager_1a0ca0f51eba177642dcaaa8bcbcb4f656" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>verifyMasterPassword</name></member>
      <member refid="classQgsAuthManager_1a9922a1917e079cc324d8233e4d915254" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>verifyPasswordCanDecryptConfigs</name></member>
      <member refid="classQgsAuthManager_1a0fc84dfac89f5b14f1ee802a13d24ecba2027aa626ba578ffbcc931442d479d4a" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>WARNING</name></member>
      <member refid="classQgsAuthManager_1a80f32e226a6e06e841c1339d783c1734" prot="private" virt="non-virtual"><scope>QgsAuthManager</scope><name>writeToConsole</name></member>
      <member refid="classQgsAuthManager_1a8cb7b07def4878d1e74c331f43e05f05" prot="public" virt="non-virtual"><scope>QgsAuthManager</scope><name>~QgsAuthManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
