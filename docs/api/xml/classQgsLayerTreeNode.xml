<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsLayerTreeNode" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QgsLayerTreeNode</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <derivedcompoundref refid="classQgsLayerTreeGroup" prot="public" virt="non-virtual">QgsLayerTreeGroup</derivedcompoundref>
    <derivedcompoundref refid="classQgsLayerTreeLayer" prot="public" virt="non-virtual">QgsLayerTreeLayer</derivedcompoundref>
    <includes refid="qgslayertreenode_8h" local="no">qgslayertreenode.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17" prot="public" static="no">
        <name>NodeType</name>
        <enumvalue id="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17a103cb3fb5a9106380034458fd88e109f" prot="public">
          <name>NodeGroup</name>
          <briefdescription>
<para>Container of other groups and layers. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17ad3da24ad32e5a6f7542c169090fec525" prot="public">
          <name>NodeLayer</name>
          <briefdescription>
<para>Leaf node pointing to a layer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of possible tree node types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="98" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="97" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQgsLayerTreeNode_1a60603d68b98ab4926557f7d96354a933" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsLayerTreeNode::mChecked</definition>
        <argsstring></argsstring>
        <name>mChecked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="268" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsLayerTreeNode_1acea8600cfa07bc1ee6cd920b916fa53c" prot="protected" static="no" mutable="no">
        <type>QList&lt; <ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> * &gt;</type>
        <definition>QList&lt;QgsLayerTreeNode *&gt; QgsLayerTreeNode::mChildren</definition>
        <argsstring></argsstring>
        <name>mChildren</name>
        <briefdescription>
<para>list of children - node is responsible for their deletion </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="272" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsLayerTreeNode_1ad2d4c027b8a41587a5360ba216fbe10f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QgsLayerTreeNode::mExpanded</definition>
        <argsstring></argsstring>
        <name>mExpanded</name>
        <briefdescription>
<para>whether the node should be shown in GUI as expanded </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="274" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsLayerTreeNode_1aa0b9118acdb3c431eeaace4598eb1fc5" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17" kindref="member">NodeType</ref></type>
        <definition>NodeType QgsLayerTreeNode::mNodeType</definition>
        <argsstring></argsstring>
        <name>mNodeType</name>
        <briefdescription>
<para>type of the node - determines which subclass is used </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="267" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsLayerTreeNode_1add3ae71428644c7c1aacea5ab98a6e62" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
        <definition>QgsLayerTreeNode* QgsLayerTreeNode::mParent</definition>
        <argsstring></argsstring>
        <name>mParent</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>pointer to the parent node - null in case of root node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="270" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsLayerTreeNode_1a95e870816acd0915a5447d0d935c32df" prot="protected" static="no" mutable="no">
        <type><ref refid="classQgsObjectCustomProperties" kindref="compound">QgsObjectCustomProperties</ref></type>
        <definition>QgsObjectCustomProperties QgsLayerTreeNode::mProperties</definition>
        <argsstring></argsstring>
        <name>mProperties</name>
        <briefdescription>
<para>custom properties attached to the node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="276" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsLayerTreeNode_1a7b72d81658009aa698415cfc8496fca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsLayerTreeNode::~QgsLayerTreeNode</definition>
        <argsstring>() override</argsstring>
        <name>~QgsLayerTreeNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="103" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1ad8e7856e52c56219ff1f2c06fbe2909b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *&gt;</type>
        <definition>QList&lt; QgsMapLayer * &gt; QgsLayerTreeNode::checkedLayers</definition>
        <argsstring>() const</argsstring>
        <name>checkedLayers</name>
        <briefdescription>
<para>Returns a list of any checked layers which belong to this node or its children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="206" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1ab82bb4fef5dec90baa927927a11f86d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> * &gt;</type>
        <definition>QList&lt;QgsLayerTreeNode *&gt; QgsLayerTreeNode::children</definition>
        <argsstring>()</argsstring>
        <name>children</name>
        <briefdescription>
<para>Gets list of children of the node. Children are owned by the parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="110" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1acaea1a6ec08656295a2aea2b3259c7aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> * &gt;</type>
        <definition>QList&lt;QgsLayerTreeNode *&gt; QgsLayerTreeNode::children</definition>
        <argsstring>() const</argsstring>
        <name>children</name>
        <briefdescription>
<para>Gets list of children of the node. Children are owned by the parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="112" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a6ec9f401dfe34909830758ed8712a106" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
        <definition>virtual QgsLayerTreeNode* QgsLayerTreeNode::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classQgsLayerTreeLayer_1af7016f2bd7af8b589ffcb21286b4702e">clone</reimplementedby>
        <reimplementedby refid="classQgsLayerTreeGroup_1aa83708ac49e41c0411667881c719d0a7">clone</reimplementedby>
        <reimplementedby refid="classQgsLayerTree_1adef4aa5c36fc685a7e8030cbd2f7135a">clone</reimplementedby>
        <briefdescription>
<para>Create a copy of the node. Returns new instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1ad67169a8134ec13520fe6e011cb0ae88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QStringList</type>
        <definition>QStringList QgsLayerTreeNode::customProperties</definition>
        <argsstring>() const</argsstring>
        <name>customProperties</name>
        <briefdescription>
<para>Returns list of keys stored in custom properties. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="220" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a8050bc62c7d37e25e707d47dee3752ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsLayerTreeNode::customProperty</definition>
        <argsstring>(const QString &amp;key, const QVariant &amp;defaultValue=QVariant()) const</argsstring>
        <name>customProperty</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>defaultValue</declname>
          <defval>QVariant()</defval>
        </param>
        <briefdescription>
<para>Read a custom property from layer. Properties are stored in a map and saved in project file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="216" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a4278dd40612d41d44f86448fc3071cf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString QgsLayerTreeNode::dump</definition>
        <argsstring>() const =0</argsstring>
        <name>dump</name>
        <reimplementedby refid="classQgsLayerTreeLayer_1a030e807886cbd8c43a5692c25594830b">dump</reimplementedby>
        <reimplementedby refid="classQgsLayerTreeGroup_1aef9b017f8cbbe3a3f9fdaddb434c405f">dump</reimplementedby>
        <briefdescription>
<para>Returns string with layer tree structure. For debug purposes only. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1ad5da9180a4f3eb57a45da2f66d2ce541" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeNode::isExpanded</definition>
        <argsstring>() const</argsstring>
        <name>isExpanded</name>
        <briefdescription>
<para>Returns whether the node should be shown as expanded or collapsed in GUI. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="209" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1aea605ad4f0e8868e49514c0038727f02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeNode::isItemVisibilityCheckedRecursive</definition>
        <argsstring>() const</argsstring>
        <name>isItemVisibilityCheckedRecursive</name>
        <briefdescription>
<para>Returns whether this node is checked and all its children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="193" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="108" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a5771045c9d5fa3e037d62acbf5ad6351" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeNode::isItemVisibilityUncheckedRecursive</definition>
        <argsstring>() const</argsstring>
        <name>isItemVisibilityUncheckedRecursive</name>
        <briefdescription>
<para>Returns whether this node is unchecked and all its children. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="199" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="121" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a406d4f892502e2c7ffa3eb2b10be03bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeNode::isVisible</definition>
        <argsstring>() const</argsstring>
        <name>isVisible</name>
        <briefdescription>
<para>Returns whether a node is really visible (ie checked and all its ancestors checked as well) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="163" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1aebb513ef0ace30a9049d50ca050baf97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeNode::itemVisibilityChecked</definition>
        <argsstring>() const</argsstring>
        <name>itemVisibilityChecked</name>
        <briefdescription>
<para>Returns whether a node is checked (independently of its ancestors or children) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="169" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a8a5842f42fa01189b8381f2d41a3709c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>QString</type>
        <definition>virtual QString QgsLayerTreeNode::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <reimplementedby refid="classQgsLayerTreeGroup_1a4b794ad235e0efdbb04ca1bbb25da64f">name</reimplementedby>
        <reimplementedby refid="classQgsLayerTreeLayer_1ac2fd69d59d7e57360c6848c407a0ca5e">name</reimplementedby>
        <briefdescription>
<para>Returns name of the node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a94c93bd93107268171a35f422e720789" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17" kindref="member">NodeType</ref></type>
        <definition>NodeType QgsLayerTreeNode::nodeType</definition>
        <argsstring>() const</argsstring>
        <name>nodeType</name>
        <briefdescription>
<para>Find out about type of the node. It is usually shorter to use convenience functions from <ref refid="classQgsLayerTree" kindref="compound">QgsLayerTree</ref> namespace for that. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="106" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1aa29249808413d2442f212193be6a2327" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
        <definition>QgsLayerTreeNode* QgsLayerTreeNode::parent</definition>
        <argsstring>()</argsstring>
        <name>parent</name>
        <briefdescription>
<para>Gets pointer to the parent. If parent is a null pointer, the node is a root node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="108" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a79dfdb61628cd7a1260d5bdef8fc69b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::removeCustomProperty</definition>
        <argsstring>(const QString &amp;key)</argsstring>
        <name>removeCustomProperty</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Remove a custom property from layer. Properties are stored in a map and saved in project file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="218" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1aec39036eeba5cb921bc7a371374fb09e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QgsLayerTreeNode::resolveReferences</definition>
        <argsstring>(const QgsProject *project, bool looseMatching=false)=0</argsstring>
        <name>resolveReferences</name>
        <reimplementedby refid="classQgsLayerTreeLayer_1a050513065c862eaae7ea7cdcaeb421e9">resolveReferences</reimplementedby>
        <reimplementedby refid="classQgsLayerTreeGroup_1a23c3ef4f67a608996ed86c97a807e8fa">resolveReferences</reimplementedby>
        <param>
          <type>const <ref refid="classQgsProject" kindref="compound">QgsProject</ref> *</type>
          <declname>project</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>looseMatching</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Turn textual references to layers into map layer object from project. </para>        </briefdescription>
        <detaileddescription>
<para>This method should be called after <ref refid="classQgsLayerTreeNode_1a589a3a4f3631902a5bf4e1516c31e6d7" kindref="member">readXml()</ref> If <emphasis>looseMatching</emphasis> is true then a looser match will be used, where a layer will match if the name, public source, and data provider match. This can be used to match legend customization from different projects where layers will have different layer IDs. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a488cad4a41eceea25b44ba1091a11cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::setCustomProperty</definition>
        <argsstring>(const QString &amp;key, const QVariant &amp;value)</argsstring>
        <name>setCustomProperty</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a custom property for the node. Properties are stored in a map and saved in project file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="214" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a86b03df69ebcce2733f9cc3f191caa40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::setExpanded</definition>
        <argsstring>(bool expanded)</argsstring>
        <name>setExpanded</name>
        <param>
          <type>bool</type>
          <declname>expanded</declname>
        </param>
        <briefdescription>
<para>Sets whether the node should be shown as expanded or collapsed in GUI. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="211" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="154" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1ad6c4e357cbf618dbe00fe5e7d44276e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::setItemVisibilityChecked</definition>
        <argsstring>(bool checked)</argsstring>
        <name>setItemVisibilityChecked</name>
        <param>
          <type>bool</type>
          <declname>checked</declname>
        </param>
        <briefdescription>
<para>Check or uncheck a node (independently of its ancestors or children) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="175" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1aff2ca3e672c1dd14adadf35331b33a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::setItemVisibilityCheckedParentRecursive</definition>
        <argsstring>(bool checked)</argsstring>
        <name>setItemVisibilityCheckedParentRecursive</name>
        <param>
          <type>bool</type>
          <declname>checked</declname>
        </param>
        <briefdescription>
<para>Check or uncheck a node and all its parents. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="187" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1ad0bf89c61a9a9d375c522aa18829246a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::setItemVisibilityCheckedRecursive</definition>
        <argsstring>(bool checked)</argsstring>
        <name>setItemVisibilityCheckedRecursive</name>
        <reimplementedby refid="classQgsLayerTreeGroup_1a9d33edae0778adaaf906fa57b73e3e2c">setItemVisibilityCheckedRecursive</reimplementedby>
        <param>
          <type>bool</type>
          <declname>checked</declname>
        </param>
        <briefdescription>
<para>Check or uncheck a node and all its children (taking into account exclusion rules) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="181" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a0da23e08cdc978febb1096be93f0823c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QgsLayerTreeNode::setName</definition>
        <argsstring>(const QString &amp;name)=0</argsstring>
        <name>setName</name>
        <reimplementedby refid="classQgsLayerTreeGroup_1a1e9a7ffbb5fbad92197dcc5f569c2213">setName</reimplementedby>
        <reimplementedby refid="classQgsLayerTreeLayer_1a4ee79504969aa13fb97740ab883350fd">setName</reimplementedby>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set name of the node. </para>        </briefdescription>
        <detaileddescription>
<para>Emits nameChanged signal. <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1ab36fcba57b7cb24f88e340357205fa9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerTreeNode::takeChild</definition>
        <argsstring>(QgsLayerTreeNode *node)</argsstring>
        <name>takeChild</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Remove a child from a node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="222" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="250" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a4dc22571b3da21e911922ec287673889" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QgsLayerTreeNode::writeXml</definition>
        <argsstring>(QDomElement &amp;parentElement, const QgsReadWriteContext &amp;context)=0</argsstring>
        <name>writeXml</name>
        <reimplementedby refid="classQgsLayerTreeLayer_1a08caaec892d0d8061d67acbf09baa555">writeXml</reimplementedby>
        <reimplementedby refid="classQgsLayerTreeGroup_1a4ab5f30739e8be9824bc21a45b09ac5d">writeXml</reimplementedby>
        <reimplementedby refid="classQgsLayerTree_1a40fbe7fc18bb506cbfd66451225a1bf7">writeXml</reimplementedby>
        <param>
          <type>QDomElement &amp;</type>
          <declname>parentElement</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Write layer tree to XML. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="140" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsLayerTreeNode_1a589a3a4f3631902a5bf4e1516c31e6d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
        <definition>QgsLayerTreeNode * QgsLayerTreeNode::readXml</definition>
        <argsstring>(QDomElement &amp;element, const QgsReadWriteContext &amp;context)</argsstring>
        <name>readXml</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Read layer tree from XML. </para>        </briefdescription>
        <detaileddescription>
<para>Returns new instance. Does not resolve textual references to layers. Call <ref refid="classQgsLayerTreeNode_1aec39036eeba5cb921bc7a371374fb09e" kindref="member">resolveReferences()</ref> afterwards to do it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="130" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="50" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a043c1dedb591384cdbb03d0001ffc7a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
        <definition>QgsLayerTreeNode * QgsLayerTreeNode::readXml</definition>
        <argsstring>(QDomElement &amp;element, const QgsProject *project)</argsstring>
        <name>readXml</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsProject" kindref="compound">QgsProject</ref> *</type>
          <declname>project</declname>
        </param>
        <briefdescription>
<para>Read layer tree from XML. </para>        </briefdescription>
        <detaileddescription>
<para>Returns new instance. Also resolves textual references to layers from the project (calls <ref refid="classQgsLayerTreeNode_1aec39036eeba5cb921bc7a371374fb09e" kindref="member">resolveReferences()</ref> internally). <simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="137" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="61" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="classQgsLayerTreeNode_1aafb8fcdf1f88cf30b2cfb8ac02305062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::addedChildren</definition>
        <argsstring>(QgsLayerTreeNode *node, int indexFrom, int indexTo)</argsstring>
        <name>addedChildren</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexFrom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexTo</declname>
        </param>
        <briefdescription>
<para>Emitted when one or more nodes have been added to a node within the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsLayerTreeNode_1a9d0d7f92fddbbb1931d0e9d8ff438fe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::customPropertyChanged</definition>
        <argsstring>(QgsLayerTreeNode *node, const QString &amp;key)</argsstring>
        <name>customPropertyChanged</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Emitted when a custom property of a node within the tree has been changed or removed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsLayerTreeNode_1afa1caacfe93c69d39f2c1294a2d0580e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::expandedChanged</definition>
        <argsstring>(QgsLayerTreeNode *node, bool expanded)</argsstring>
        <name>expandedChanged</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>expanded</declname>
        </param>
        <briefdescription>
<para>Emitted when the collapsed/expanded state of a node within the tree has been changed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsLayerTreeNode_1a3d1c3582f58e93f71e70bd1c0b00005a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::nameChanged</definition>
        <argsstring>(QgsLayerTreeNode *node, QString name)</argsstring>
        <name>nameChanged</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Emitted when the name of the node is changed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsLayerTreeNode_1a31ee6e9bbf0ef9ef67af37e55baa426b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::removedChildren</definition>
        <argsstring>(QgsLayerTreeNode *node, int indexFrom, int indexTo)</argsstring>
        <name>removedChildren</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexFrom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexTo</declname>
        </param>
        <briefdescription>
<para>Emitted when one or more nodes has been removed from a node within the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsLayerTreeNode_1acd8ebad3e3fc5b7f8ac7f500a50ca12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::visibilityChanged</definition>
        <argsstring>(QgsLayerTreeNode *node)</argsstring>
        <name>visibilityChanged</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Emitted when check state of a node within the tree has been changed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsLayerTreeNode_1ac7965be1caea0ee54119991fa2480545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::willAddChildren</definition>
        <argsstring>(QgsLayerTreeNode *node, int indexFrom, int indexTo)</argsstring>
        <name>willAddChildren</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexFrom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexTo</declname>
        </param>
        <briefdescription>
<para>Emitted when one or more nodes will be added to a node within the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="signal" id="classQgsLayerTreeNode_1a69e34928a72b1d457cb45e04207941bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::willRemoveChildren</definition>
        <argsstring>(QgsLayerTreeNode *node, int indexFrom, int indexTo)</argsstring>
        <name>willRemoveChildren</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexFrom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexTo</declname>
        </param>
        <briefdescription>
<para>Emitted when one or more nodes will be removed from a node within the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="231" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQgsLayerTreeNode_1a8fe0bee04f087e06705307a85b29a9c6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsLayerTreeNode::QgsLayerTreeNode</definition>
        <argsstring>(NodeType t, bool checked=true)</argsstring>
        <name>QgsLayerTreeNode</name>
        <param>
          <type><ref refid="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17" kindref="member">NodeType</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checked</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="250" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a9fc4a0559b15d96c9153faa012a5f8b9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsLayerTreeNode::QgsLayerTreeNode</definition>
        <argsstring>(const QgsLayerTreeNode &amp;other)</argsstring>
        <name>QgsLayerTreeNode</name>
        <param>
          <type>const <ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="251" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="32" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a54de98df55157b3e521e53cbf9627c66" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::insertChildrenPrivate</definition>
        <argsstring>(int index, QList&lt; QgsLayerTreeNode *&gt; nodes)</argsstring>
        <name>insertChildrenPrivate</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>QList&lt; <ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *&gt;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Low-level insertion of children to the node. The children must not have any parent yet! </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="261" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="197" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a05da768f2ed0d97e63badb424469e482" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::readCommonXml</definition>
        <argsstring>(QDomElement &amp;element)</argsstring>
        <name>readCommonXml</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Read common XML elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="256" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1afccc54112d91019d9917f33fa70c5268" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::removeChildrenPrivate</definition>
        <argsstring>(int from, int count, bool destroy=true)</argsstring>
        <name>removeChildrenPrivate</name>
        <param>
          <type>int</type>
          <declname>from</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>destroy</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Low-level removal of children from the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="263" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="231" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerTreeNode_1a91e058716212a62000179bcfe5348749" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayerTreeNode::writeCommonXml</definition>
        <argsstring>(QDomElement &amp;element)</argsstring>
        <name>writeCommonXml</name>
        <param>
          <type>QDomElement &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Write common XML elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="258" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.cpp" bodystart="191" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is a base class for nodes in a layer tree. </para>    </briefdescription>
    <detaileddescription>
<para>Layer tree is a hierarchical structure consisting of group and layer nodes:<itemizedlist>
<listitem><para>group nodes are containers and may contain children (layer and group nodes)</para></listitem><listitem><para>layer nodes point to map layers, they do not contain further children</para></listitem></itemizedlist>
</para><para>Layer trees may be used for organization of layers, typically a layer tree is exposed to the user using <ref refid="classQgsLayerTreeView" kindref="compound">QgsLayerTreeView</ref> widget which shows the tree and allows manipulation with the tree.</para><para>Ownership of nodes: every node is owned by its parent. Therefore once node is added to a layer tree, it is the responsibility of the parent to delete it when the node is not needed anymore. Deletion of root node of a tree will delete all nodes of the tree.</para><para>Signals: signals are propagated from children to parent. That means it is sufficient to connect to root node in order to get signals about updates in the whole layer tree. When adding or removing a node that contains further children (i.e. a whole subtree), the addition/removal signals are emitted only for the root node of the subtree that is being added or removed.</para><para>Custom properties: Every node may have some custom properties assigned to it. This mechanism allows third parties store additional data with the nodes. The properties are used within QGIS code (whether to show layer in overview, whether the node is embedded from another project etc), but may be also used by third party plugins. Custom properties are stored also in the project file. The storage is not efficient for large amount of data.</para><para>Custom properties that have already been used within QGIS:<itemizedlist>
<listitem><para>&quot;loading&quot; - whether the project is being currently loaded (root node only)</para></listitem><listitem><para>&quot;overview&quot; - whether to show a layer in overview</para></listitem><listitem><para>&quot;showFeatureCount&quot; - whether to show feature counts in layer tree (vector only)</para></listitem><listitem><para>&quot;embedded&quot; - whether the node comes from an external project</para></listitem><listitem><para>&quot;embedded_project&quot; - path to the external project (embedded root node only)</para></listitem><listitem><para>&quot;legend/...&quot; - properties for legend appearance customization</para></listitem><listitem><para>&quot;expandedLegendNodes&quot; - list of layer&apos;s legend nodes&apos; rules in expanded state</para></listitem></itemizedlist>
</para><para><simplesect kind="see"><para>also <ref refid="classQgsLayerTree" kindref="compound">QgsLayerTree</ref>, <ref refid="classQgsLayerTreeLayer" kindref="compound">QgsLayerTreeLayer</ref>, <ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.4 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="4310">
        <label>QObject</label>
      </node>
      <node id="4309">
        <label>QgsLayerTreeNode</label>
        <link refid="classQgsLayerTreeNode"/>
        <childnode refid="4310" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4313">
        <label>QgsLayerTreeLayer</label>
        <link refid="classQgsLayerTreeLayer"/>
        <childnode refid="4309" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4312">
        <label>QgsLayerTree</label>
        <link refid="classQgsLayerTree"/>
        <childnode refid="4311" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4311">
        <label>QgsLayerTreeGroup</label>
        <link refid="classQgsLayerTreeGroup"/>
        <childnode refid="4309" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4315">
        <label>QObject</label>
      </node>
      <node id="4314">
        <label>QgsLayerTreeNode</label>
        <link refid="classQgsLayerTreeNode"/>
        <childnode refid="4315" relation="public-inheritance">
        </childnode>
        <childnode refid="4314" relation="usage">
          <edgelabel>mParent</edgelabel>
        </childnode>
        <childnode refid="4316" relation="usage">
          <edgelabel>mProperties</edgelabel>
        </childnode>
      </node>
      <node id="4316">
        <label>QgsObjectCustomProperties</label>
        <link refid="classQgsObjectCustomProperties"/>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" line="73" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layertree/qgslayertreenode.h" bodystart="72" bodyend="277"/>
    <listofallmembers>
      <member refid="classQgsLayerTreeNode_1aafb8fcdf1f88cf30b2cfb8ac02305062" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>addedChildren</name></member>
      <member refid="classQgsLayerTreeNode_1ad8e7856e52c56219ff1f2c06fbe2909b" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>checkedLayers</name></member>
      <member refid="classQgsLayerTreeNode_1ab82bb4fef5dec90baa927927a11f86d9" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>children</name></member>
      <member refid="classQgsLayerTreeNode_1acaea1a6ec08656295a2aea2b3259c7aa" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>children</name></member>
      <member refid="classQgsLayerTreeNode_1a6ec9f401dfe34909830758ed8712a106" prot="public" virt="pure-virtual"><scope>QgsLayerTreeNode</scope><name>clone</name></member>
      <member refid="classQgsLayerTreeNode_1ad67169a8134ec13520fe6e011cb0ae88" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>customProperties</name></member>
      <member refid="classQgsLayerTreeNode_1a8050bc62c7d37e25e707d47dee3752ee" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>customProperty</name></member>
      <member refid="classQgsLayerTreeNode_1a9d0d7f92fddbbb1931d0e9d8ff438fe2" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>customPropertyChanged</name></member>
      <member refid="classQgsLayerTreeNode_1a4278dd40612d41d44f86448fc3071cf3" prot="public" virt="pure-virtual"><scope>QgsLayerTreeNode</scope><name>dump</name></member>
      <member refid="classQgsLayerTreeNode_1afa1caacfe93c69d39f2c1294a2d0580e" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>expandedChanged</name></member>
      <member refid="classQgsLayerTreeNode_1a54de98df55157b3e521e53cbf9627c66" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>insertChildrenPrivate</name></member>
      <member refid="classQgsLayerTreeNode_1ad5da9180a4f3eb57a45da2f66d2ce541" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>isExpanded</name></member>
      <member refid="classQgsLayerTreeNode_1aea605ad4f0e8868e49514c0038727f02" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>isItemVisibilityCheckedRecursive</name></member>
      <member refid="classQgsLayerTreeNode_1a5771045c9d5fa3e037d62acbf5ad6351" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>isItemVisibilityUncheckedRecursive</name></member>
      <member refid="classQgsLayerTreeNode_1a406d4f892502e2c7ffa3eb2b10be03bc" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>isVisible</name></member>
      <member refid="classQgsLayerTreeNode_1aebb513ef0ace30a9049d50ca050baf97" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>itemVisibilityChecked</name></member>
      <member refid="classQgsLayerTreeNode_1a60603d68b98ab4926557f7d96354a933" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>mChecked</name></member>
      <member refid="classQgsLayerTreeNode_1acea8600cfa07bc1ee6cd920b916fa53c" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>mChildren</name></member>
      <member refid="classQgsLayerTreeNode_1ad2d4c027b8a41587a5360ba216fbe10f" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>mExpanded</name></member>
      <member refid="classQgsLayerTreeNode_1aa0b9118acdb3c431eeaace4598eb1fc5" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>mNodeType</name></member>
      <member refid="classQgsLayerTreeNode_1add3ae71428644c7c1aacea5ab98a6e62" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>mParent</name></member>
      <member refid="classQgsLayerTreeNode_1a95e870816acd0915a5447d0d935c32df" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>mProperties</name></member>
      <member refid="classQgsLayerTreeNode_1a8a5842f42fa01189b8381f2d41a3709c" prot="public" virt="pure-virtual"><scope>QgsLayerTreeNode</scope><name>name</name></member>
      <member refid="classQgsLayerTreeNode_1a3d1c3582f58e93f71e70bd1c0b00005a" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>nameChanged</name></member>
      <member refid="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17a103cb3fb5a9106380034458fd88e109f" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>NodeGroup</name></member>
      <member refid="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17ad3da24ad32e5a6f7542c169090fec525" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>NodeLayer</name></member>
      <member refid="classQgsLayerTreeNode_1a2a159ed7a5a428acd53fb226234cda17" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>NodeType</name></member>
      <member refid="classQgsLayerTreeNode_1a94c93bd93107268171a35f422e720789" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>nodeType</name></member>
      <member refid="classQgsLayerTreeNode_1aa29249808413d2442f212193be6a2327" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>parent</name></member>
      <member refid="classQgsLayerTreeNode_1a8fe0bee04f087e06705307a85b29a9c6" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>QgsLayerTreeNode</name></member>
      <member refid="classQgsLayerTreeNode_1a9fc4a0559b15d96c9153faa012a5f8b9" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>QgsLayerTreeNode</name></member>
      <member refid="classQgsLayerTreeNode_1a05da768f2ed0d97e63badb424469e482" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>readCommonXml</name></member>
      <member refid="classQgsLayerTreeNode_1a589a3a4f3631902a5bf4e1516c31e6d7" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>readXml</name></member>
      <member refid="classQgsLayerTreeNode_1a043c1dedb591384cdbb03d0001ffc7a5" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>readXml</name></member>
      <member refid="classQgsLayerTreeNode_1afccc54112d91019d9917f33fa70c5268" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>removeChildrenPrivate</name></member>
      <member refid="classQgsLayerTreeNode_1a79dfdb61628cd7a1260d5bdef8fc69b5" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>removeCustomProperty</name></member>
      <member refid="classQgsLayerTreeNode_1a31ee6e9bbf0ef9ef67af37e55baa426b" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>removedChildren</name></member>
      <member refid="classQgsLayerTreeNode_1aec39036eeba5cb921bc7a371374fb09e" prot="public" virt="pure-virtual"><scope>QgsLayerTreeNode</scope><name>resolveReferences</name></member>
      <member refid="classQgsLayerTreeNode_1a488cad4a41eceea25b44ba1091a11cb5" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>setCustomProperty</name></member>
      <member refid="classQgsLayerTreeNode_1a86b03df69ebcce2733f9cc3f191caa40" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>setExpanded</name></member>
      <member refid="classQgsLayerTreeNode_1ad6c4e357cbf618dbe00fe5e7d44276e8" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>setItemVisibilityChecked</name></member>
      <member refid="classQgsLayerTreeNode_1aff2ca3e672c1dd14adadf35331b33a97" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>setItemVisibilityCheckedParentRecursive</name></member>
      <member refid="classQgsLayerTreeNode_1ad0bf89c61a9a9d375c522aa18829246a" prot="public" virt="virtual"><scope>QgsLayerTreeNode</scope><name>setItemVisibilityCheckedRecursive</name></member>
      <member refid="classQgsLayerTreeNode_1a0da23e08cdc978febb1096be93f0823c" prot="public" virt="pure-virtual"><scope>QgsLayerTreeNode</scope><name>setName</name></member>
      <member refid="classQgsLayerTreeNode_1ab36fcba57b7cb24f88e340357205fa9c" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>takeChild</name></member>
      <member refid="classQgsLayerTreeNode_1acd8ebad3e3fc5b7f8ac7f500a50ca12f" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>visibilityChanged</name></member>
      <member refid="classQgsLayerTreeNode_1ac7965be1caea0ee54119991fa2480545" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>willAddChildren</name></member>
      <member refid="classQgsLayerTreeNode_1a69e34928a72b1d457cb45e04207941bd" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>willRemoveChildren</name></member>
      <member refid="classQgsLayerTreeNode_1a91e058716212a62000179bcfe5348749" prot="protected" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>writeCommonXml</name></member>
      <member refid="classQgsLayerTreeNode_1a4dc22571b3da21e911922ec287673889" prot="public" virt="pure-virtual"><scope>QgsLayerTreeNode</scope><name>writeXml</name></member>
      <member refid="classQgsLayerTreeNode_1a7b72d81658009aa698415cfc8496fca5" prot="public" virt="non-virtual"><scope>QgsLayerTreeNode</scope><name>~QgsLayerTreeNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
