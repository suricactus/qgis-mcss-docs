<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsGeometrySnapperSingleSource" kind="class" language="C++" prot="public">
    <compoundname>QgsGeometrySnapperSingleSource</compoundname>
    <includes refid="qgsgeometrysnappersinglesource_8h" local="no">qgsgeometrysnappersinglesource.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsGeometrySnapperSingleSource_1a168b0d100f9a77645ecf526e345e0d05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsGeometrySnapperSingleSource::run</definition>
        <argsstring>(const QgsFeatureSource &amp;source, QgsFeatureSink &amp;sink, double thresh, QgsFeedback *feedback)</argsstring>
        <name>run</name>
        <param>
          <type>const <ref refid="classQgsFeatureSource" kindref="compound">QgsFeatureSource</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classQgsFeatureSink" kindref="compound">QgsFeatureSink</ref> &amp;</type>
          <declname>sink</declname>
        </param>
        <param>
          <type>double</type>
          <declname>thresh</declname>
        </param>
        <param>
          <type><ref refid="classQgsFeedback" kindref="compound">QgsFeedback</ref> *</type>
          <declname>feedback</declname>
        </param>
        <briefdescription>
<para>Run the algorithm on given source and output results to the sink, using threshold value in the source&apos;s map units. </para>        </briefdescription>
        <detaileddescription>
<para>Returns number of modified geometries. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/analysis/vector/qgsgeometrysnappersinglesource.h" line="51" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/analysis/vector/qgsgeometrysnappersinglesource.cpp" bodystart="304" bodyend="356"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Makes sure that any two vertices of the vector layer are at least at distance given by the threshold value. </para>    </briefdescription>
    <detaileddescription>
<para>The algorithm moves nearby vertices to one location and adds vertices to segments that are passing around other vertices within the threshold. It does not remove any vertices. Also, it does not modify geometries unless needed (it does not snap coordinates to a grid).</para><para>This algorithm comes handy when doing vector overlay operations such as intersection, union or difference to prevent possible topological errors caused by numerical errors if coordinates are very close to each other.</para><para>After running the algorithm some previously valid geometries may become invalid and therefore it may be useful to run Fix geometries algorithm afterwards.</para><para><simplesect kind="note"><para>Originally ported from GRASS implementation of Vect_snap_lines_list()</para></simplesect>
<simplesect kind="since"><para>QGIS 3.4 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/analysis/vector/qgsgeometrysnappersinglesource.h" line="44" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/analysis/vector/qgsgeometrysnappersinglesource.h" bodystart="43" bodyend="52"/>
    <listofallmembers>
      <member refid="classQgsGeometrySnapperSingleSource_1a168b0d100f9a77645ecf526e345e0d05" prot="public" virt="non-virtual"><scope>QgsGeometrySnapperSingleSource</scope><name>run</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
