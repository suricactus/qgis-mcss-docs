<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsCacheIndexFeatureId" kind="class" language="C++" prot="public">
    <compoundname>QgsCacheIndexFeatureId</compoundname>
    <basecompoundref refid="classQgsAbstractCacheIndex" prot="public" virt="non-virtual">QgsAbstractCacheIndex</basecompoundref>
    <includes refid="qgscacheindexfeatureid_8h" local="no">qgscacheindexfeatureid.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsCacheIndexFeatureId_1a08061f8be604e677df8880ba02f6a2e4" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsVectorLayerCache" kindref="compound">QgsVectorLayerCache</ref> *</type>
        <definition>QgsVectorLayerCache* QgsCacheIndexFeatureId::C</definition>
        <argsstring></argsstring>
        <name>C</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.h" line="39" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsCacheIndexFeatureId_1a701e2f5b6666915bdecf3ac796b8c90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsCacheIndexFeatureId::QgsCacheIndexFeatureId</definition>
        <argsstring>(QgsVectorLayerCache *)</argsstring>
        <name>QgsCacheIndexFeatureId</name>
        <param>
          <type><ref refid="classQgsVectorLayerCache" kindref="compound">QgsVectorLayerCache</ref> *</type>
          <defname>cachedVectorLayer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.h" line="31" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCacheIndexFeatureId_1a9e2233adba6f2eb29ea56a30eacf2a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsCacheIndexFeatureId::flush</definition>
        <argsstring>() override</argsstring>
        <name>flush</name>
        <reimplements refid="classQgsAbstractCacheIndex_1a7cad2444ab378f874177a04c3f311829">flush</reimplements>
        <briefdescription>
<para>Sometimes, the whole cache changes its state and its easier to just withdraw everything. </para>        </briefdescription>
        <detaileddescription>
<para>In this case, this method is issued. Be sure to clear all cache information in here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.h" line="34" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.cpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCacheIndexFeatureId_1adcb644df7f065d875c2e3cbed0d1f10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsCacheIndexFeatureId::flushFeature</definition>
        <argsstring>(QgsFeatureId fid) override</argsstring>
        <name>flushFeature</name>
        <reimplements refid="classQgsAbstractCacheIndex_1ac0d7b30dd9dfbd4ba0b16c5ba36039fa">flushFeature</reimplements>
        <param>
          <type><ref refid="qgsfeatureid_8h_1a857d022277fb1026d921b0ec9bdb7ce5" kindref="member">QgsFeatureId</ref></type>
          <declname>fid</declname>
        </param>
        <briefdescription>
<para>Is called, whenever a feature is removed from the cache. </para>        </briefdescription>
        <detaileddescription>
<para>You should update your indexes, so they become invalid in case this feature was required to successfully answer a request. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.h" line="33" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCacheIndexFeatureId_1acea3444237523a735dc7c47842eff851" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsCacheIndexFeatureId::getCacheIterator</definition>
        <argsstring>(QgsFeatureIterator &amp;featureIterator, const QgsFeatureRequest &amp;featureRequest) override</argsstring>
        <name>getCacheIterator</name>
        <reimplements refid="classQgsAbstractCacheIndex_1a0da9fe905c319f6513a1c69e10622cdb">getCacheIterator</reimplements>
        <param>
          <type><ref refid="classQgsFeatureIterator" kindref="compound">QgsFeatureIterator</ref> &amp;</type>
          <declname>featureIterator</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
          <declname>featureRequest</declname>
        </param>
        <briefdescription>
<para>Is called, when a feature request is issued on a cached layer. </para>        </briefdescription>
        <detaileddescription>
<para>If this cache index is able to completely answer the feature request, it will return true and set the iterator to a valid iterator over the cached features. If it is not able it will return false.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>featureIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a <ref refid="classQgsFeatureIterator" kindref="compound">QgsFeatureIterator</ref>. A valid featureIterator will be assigned in case this index is able to answer the request and the return value is true. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>featureRequest</parametername>
</parameternamelist>
<parameterdescription>
<para>The feature request, for which this index is queried.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, if this index holds the information to answer the request. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.h" line="36" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.cpp" bodystart="42" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCacheIndexFeatureId_1a71570243efeb2799cc2cc096454c5934" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QgsCacheIndexFeatureId::requestCompleted</definition>
        <argsstring>(const QgsFeatureRequest &amp;featureRequest, const QgsFeatureIds &amp;fids) override</argsstring>
        <name>requestCompleted</name>
        <reimplements refid="classQgsAbstractCacheIndex_1a596d344dc1399cc3f684eaaae65e5ac5">requestCompleted</reimplements>
        <param>
          <type>const <ref refid="classQgsFeatureRequest" kindref="compound">QgsFeatureRequest</ref> &amp;</type>
          <declname>featureRequest</declname>
        </param>
        <param>
          <type>const <ref refid="qgsfeatureid_8h_1a443917048a2ef75006fdeba30f1549f3" kindref="member">QgsFeatureIds</ref> &amp;</type>
          <declname>fids</declname>
        </param>
        <briefdescription>
<para>Implement this method to update the the indices, in case you need information contained by the request to properly index. </para>        </briefdescription>
        <detaileddescription>
<para>(E.g. spatial index) Does nothing by default</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>featureRequest</parametername>
</parameternamelist>
<parameterdescription>
<para>The feature request that was answered </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fids</parametername>
</parameternamelist>
<parameterdescription>
<para>The feature ids that have been returned </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.h" line="35" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.cpp" bodystart="36" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1564">
        <label>QgsCacheIndexFeatureId</label>
        <link refid="classQgsCacheIndexFeatureId"/>
        <childnode refid="1565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1565">
        <label>QgsAbstractCacheIndex</label>
        <link refid="classQgsAbstractCacheIndex"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1566">
        <label>QgsCacheIndexFeatureId</label>
        <link refid="classQgsCacheIndexFeatureId"/>
        <childnode refid="1567" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1567">
        <label>QgsAbstractCacheIndex</label>
        <link refid="classQgsAbstractCacheIndex"/>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.h" line="29" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscacheindexfeatureid.h" bodystart="28" bodyend="40"/>
    <listofallmembers>
      <member refid="classQgsCacheIndexFeatureId_1a08061f8be604e677df8880ba02f6a2e4" prot="private" virt="non-virtual"><scope>QgsCacheIndexFeatureId</scope><name>C</name></member>
      <member refid="classQgsCacheIndexFeatureId_1a9e2233adba6f2eb29ea56a30eacf2a11" prot="public" virt="virtual"><scope>QgsCacheIndexFeatureId</scope><name>flush</name></member>
      <member refid="classQgsCacheIndexFeatureId_1adcb644df7f065d875c2e3cbed0d1f10c" prot="public" virt="virtual"><scope>QgsCacheIndexFeatureId</scope><name>flushFeature</name></member>
      <member refid="classQgsCacheIndexFeatureId_1acea3444237523a735dc7c47842eff851" prot="public" virt="virtual"><scope>QgsCacheIndexFeatureId</scope><name>getCacheIterator</name></member>
      <member refid="classQgsAbstractCacheIndex_1a20dad2c1fea131858a8d523f5d01e360" prot="public" virt="non-virtual"><scope>QgsCacheIndexFeatureId</scope><name>QgsAbstractCacheIndex</name></member>
      <member refid="classQgsCacheIndexFeatureId_1a701e2f5b6666915bdecf3ac796b8c90d" prot="public" virt="non-virtual"><scope>QgsCacheIndexFeatureId</scope><name>QgsCacheIndexFeatureId</name></member>
      <member refid="classQgsCacheIndexFeatureId_1a71570243efeb2799cc2cc096454c5934" prot="public" virt="virtual"><scope>QgsCacheIndexFeatureId</scope><name>requestCompleted</name></member>
      <member refid="classQgsAbstractCacheIndex_1a73fbf9622aa5f5f5deaa6f9bf0cd1219" prot="public" virt="virtual"><scope>QgsCacheIndexFeatureId</scope><name>~QgsAbstractCacheIndex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
