<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsExpression" kind="class" language="C++" prot="public">
    <compoundname>QgsExpression</compoundname>
    <includes refid="qgsexpression_8h" local="no">qgsexpression.h</includes>
    <innerclass refid="structQgsExpression_1_1Help" prot="private">QgsExpression::Help</innerclass>
    <innerclass refid="structQgsExpression_1_1HelpArg" prot="private">QgsExpression::HelpArg</innerclass>
    <innerclass refid="structQgsExpression_1_1HelpExample" prot="private">QgsExpression::HelpExample</innerclass>
    <innerclass refid="structQgsExpression_1_1HelpVariant" prot="private">QgsExpression::HelpVariant</innerclass>
    <innerclass refid="structQgsExpression_1_1ParserError" prot="public">QgsExpression::ParserError</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730" prot="public" static="no">
        <name>SpatialOperator</name>
        <enumvalue id="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a2c04ba0675fe7e6413a776ebccc50128" prot="public">
          <name>soBbox</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730af74498ca55d365d25e3246bdfeb85dcf" prot="public">
          <name>soIntersects</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730ac1d522c3e18479bfed6659dc41ae022a" prot="public">
          <name>soContains</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a89d5473df7b32f4c7bbc1e994099d3ec" prot="public">
          <name>soCrosses</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a8e9a3ce07e229f54938b478a6f9c534a" prot="public">
          <name>soEquals</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a1181c4bff2ab8854328fc217ac73fced" prot="public">
          <name>soDisjoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a43c95df9c03a518f54e0f0416f92ce1b" prot="public">
          <name>soOverlaps</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a5051c4b413f16afe5dc9c06e04fab1e6" prot="public">
          <name>soTouches</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730ad87be514cfa6c80369d2655104eb2bce" prot="public">
          <name>soWithin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="463" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="462" bodyend="473"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classQgsExpression_1a4d6ec3434ccbf3bff65a6d865ee8a90f" prot="public" static="yes" mutable="no">
        <type>QStringList</type>
        <definition>QStringList QgsExpression::sBuiltinFunctions</definition>
        <argsstring></argsstring>
        <name>sBuiltinFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="480" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpression_1a3055bacc2aa733906149a6c6a1ac8d75" prot="public" static="yes" mutable="no">
        <type>QList&lt; <ref refid="classQgsExpressionFunction" kindref="compound">QgsExpressionFunction</ref> * &gt;</type>
        <definition>QList&lt; QgsExpressionFunction * &gt; QgsExpression::sFunctions</definition>
        <argsstring></argsstring>
        <name>sFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="476" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpression_1a2f6be212ceb140221faf382768a03b76" prot="public" static="yes" mutable="no">
        <type>QList&lt; <ref refid="classQgsExpressionFunction" kindref="compound">QgsExpressionFunction</ref> * &gt;</type>
        <definition>QList&lt; QgsExpressionFunction * &gt; QgsExpression::sOwnedFunctions</definition>
        <argsstring></argsstring>
        <name>sOwnedFunctions</name>
        <briefdescription>
<para>List of functions owned by the expression engine. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="503" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsExpression_1a057aef8ece0b0269f7c13976a105627f" prot="private" static="no" mutable="no">
        <type>QgsExpressionPrivate *</type>
        <definition>QgsExpressionPrivate* QgsExpression::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="706" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="706" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classQgsExpression_1a4e4bf3c279667b4de08a8c280ea45922" prot="private" static="yes" mutable="no">
        <type>QHash&lt; QString, Help &gt;</type>
        <definition>QHash&lt;QString, Help&gt; QgsExpression::sFunctionHelpTexts</definition>
        <argsstring></argsstring>
        <name>sFunctionHelpTexts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="708" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpression_1a2c5d9a9fafee4c0d4edd8d42f62a1919" prot="private" static="yes" mutable="no">
        <type>QHash&lt; QString, QString &gt;</type>
        <definition>QHash&lt; QString, QString &gt; QgsExpression::sGroups</definition>
        <argsstring></argsstring>
        <name>sGroups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="710" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="710" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsExpression_1aaa0ba0c8b7e36ef4e715e17e69c148ea" prot="private" static="yes" mutable="no">
        <type>QHash&lt; QString, QString &gt;</type>
        <definition>QHash&lt; QString, QString &gt; QgsExpression::sVariableHelpTexts</definition>
        <argsstring></argsstring>
        <name>sVariableHelpTexts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="709" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="709" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classQgsExpression_1a106a43d594fc02b6d54da0ec17ff6a24" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class QgsOgcUtils</definition>
        <argsstring></argsstring>
        <name>QgsOgcUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="717" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsExpression_1ad6fb2304bf9bb52faff3c159b99dfd0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpression::QgsExpression</definition>
        <argsstring>(const QString &amp;expr)</argsstring>
        <name>QgsExpression</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Creates a new expression based on the provided string. </para>        </briefdescription>
        <detaileddescription>
<para>The string will immediately be parsed. For optimization <ref refid="classQgsExpression_1a0285763c2bc4a7202878e7723b9c5ce2" kindref="member">prepare()</ref> should always be called before every loop in which this expression is used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="172" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="196" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a55be0e5380a32cb1296e2a46570a8cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpression::QgsExpression</definition>
        <argsstring>(const QgsExpression &amp;other)</argsstring>
        <name>QgsExpression</name>
        <param>
          <type>const <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create a copy of this expression. </para>        </briefdescription>
        <detaileddescription>
<para>This is preferred over recreating an expression from a string since it does not need to be re-parsed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="179" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="204" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a883d6a2bff57f3a6a3e40659e6e19d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpression::QgsExpression</definition>
        <argsstring>()</argsstring>
        <name>QgsExpression</name>
        <briefdescription>
<para>Create an empty expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="200" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1ad2935db36c7bacfeb2cdf1f984ad0b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpression::~QgsExpression</definition>
        <argsstring>()</argsstring>
        <name>~QgsExpression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="202" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="232" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a826637f29c885a28e7133e36ba06f46f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsUnitTypes_1ab05b10caef047c173a83a5c8838a061a" kindref="member">QgsUnitTypes::AreaUnit</ref></type>
        <definition>QgsUnitTypes::AreaUnit QgsExpression::areaUnits</definition>
        <argsstring>() const</argsstring>
        <name>areaUnits</name>
        <briefdescription>
<para>Returns the desired areal units for calculations involving <ref refid="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" kindref="member">geomCalculator()</ref>, e.g., &quot;$area&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>areas are only converted when a <ref refid="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" kindref="member">geomCalculator()</ref> has been set </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1acb090c93e2c8576267bf8fe121d12454" kindref="member">setAreaUnits()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1ab9f75d8a4e8359ea013e00348f286d5f" kindref="member">distanceUnits()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="416" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="429" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1ab9f75d8a4e8359ea013e00348f286d5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsUnitTypes_1a0602e8a06afd37c267e9e532bb27f50d" kindref="member">QgsUnitTypes::DistanceUnit</ref></type>
        <definition>QgsUnitTypes::DistanceUnit QgsExpression::distanceUnits</definition>
        <argsstring>() const</argsstring>
        <name>distanceUnits</name>
        <briefdescription>
<para>Returns the desired distance units for calculations involving <ref refid="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" kindref="member">geomCalculator()</ref>, e.g., &quot;$length&quot; and &quot;$perimeter&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>distances are only converted when a <ref refid="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" kindref="member">geomCalculator()</ref> has been set </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a6d568e034aec07bf98dddecceccdb894" kindref="member">setDistanceUnits()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a826637f29c885a28e7133e36ba06f46f" kindref="member">areaUnits()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="398" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="419" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a964405819287c1dc7d6256dba11ccf21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::dump</definition>
        <argsstring>() const</argsstring>
        <name>dump</name>
        <briefdescription>
<para>Returns an expression string, constructed from the internal abstract syntax tree. </para>        </briefdescription>
        <detaileddescription>
<para>This does not contain any nice whitespace formatting or comments. In general it is preferable to use <ref refid="classQgsExpression_1a088d751afb7cc54785b69eba09e433f1" kindref="member">expression()</ref> instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="369" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="406" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a3aa8dc1071b06e692a3fdadfd78bd42c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::evalErrorString</definition>
        <argsstring>() const</argsstring>
        <name>evalErrorString</name>
        <briefdescription>
<para>Returns evaluation error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="329" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1aed92c6b72450d23e340f55b9844d14b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsExpression::evaluate</definition>
        <argsstring>()</argsstring>
        <name>evaluate</name>
        <briefdescription>
<para>Evaluate the feature and return the result. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this method does not expect that <ref refid="classQgsExpression_1a0285763c2bc4a7202878e7723b9c5ce2" kindref="member">prepare()</ref> has been called on this instance </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="316" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="367" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a279785f0a59cc4ac977022797599bdc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant QgsExpression::evaluate</definition>
        <argsstring>(const QgsExpressionContext *context)</argsstring>
        <name>evaluate</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Evaluate the expression against the specified context and return the result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>context for evaluating expression </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><ref refid="classQgsExpression_1a0285763c2bc4a7202878e7723b9c5ce2" kindref="member">prepare()</ref> should be called before calling this method. </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="324" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="379" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a088d751afb7cc54785b69eba09e433f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::expression</definition>
        <argsstring>() const</argsstring>
        <name>expression</name>
        <briefdescription>
<para>Returns the original, unmodified expression string. </para>        </briefdescription>
        <detaileddescription>
<para>If there was none supplied because it was constructed by sole API calls, <ref refid="classQgsExpression_1a964405819287c1dc7d6256dba11ccf21" kindref="member">dump()</ref> will be used to create one instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="361" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a83560cb2a0e956d71ac62b28cb559c1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>QList&lt; const T * &gt;</type>
        <definition>QList&lt;const T *&gt; QgsExpression::findNodes</definition>
        <argsstring>() const</argsstring>
        <name>findNodes</name>
        <briefdescription>
<para>Returns a list of all nodes of the given class which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="285" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="285" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> *</type>
        <definition>QgsDistanceArea * QgsExpression::geomCalculator</definition>
        <argsstring>()</argsstring>
        <name>geomCalculator</name>
        <briefdescription>
<para>Returns calculator used for distance and area calculations (used by $length, $area and $perimeter functions only) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpression_1acc299a58fce972fd8dd76acfbaf85aba" kindref="member">setGeomCalculator()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1ab9f75d8a4e8359ea013e00348f286d5f" kindref="member">distanceUnits()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a826637f29c885a28e7133e36ba06f46f" kindref="member">areaUnits()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="378" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="414" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1ad28c51ada5bc7b3ad6d76e7a9fd92cfc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::hasEvalError</definition>
        <argsstring>() const</argsstring>
        <name>hasEvalError</name>
        <briefdescription>
<para>Returns true if an error occurred when evaluating last input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="327" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a3636e8467726b4767f2f2806d083dc5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::hasParserError</definition>
        <argsstring>() const</argsstring>
        <name>hasParserError</name>
        <briefdescription>
<para>Returns true if an error occurred when parsing the input expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="221" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a748d8721011bf26864dd5b7c458d0680" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::isField</definition>
        <argsstring>() const</argsstring>
        <name>isField</name>
        <briefdescription>
<para>Checks whether an expression consists only of a single field reference. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.9 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="337" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="1000" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1af30007688deb7583391c5c71ccdb84ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Checks if this expression is valid. </para>        </briefdescription>
        <detaileddescription>
<para>A valid expression could be parsed but does not necessarily evaluate properly.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="218" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1ae2fbc77e693c755269305212eb3bfb37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::needsGeometry</definition>
        <argsstring>() const</argsstring>
        <name>needsGeometry</name>
        <briefdescription>
<para>Returns true if the expression uses feature geometry for some computation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="307" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="309" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a2a8ce2966c260497d77555c3f8c8d124" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; const <ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> * &gt;</type>
        <definition>QList&lt; const QgsExpressionNode * &gt; QgsExpression::nodes</definition>
        <argsstring>() const</argsstring>
        <name>nodes</name>
        <briefdescription>
<para>Returns a list of all nodes which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="276" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="1005" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a3ba97853186ab2925aee36fd22103606" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsExpression::operator QString</definition>
        <argsstring>() const</argsstring>
        <name>operator QString</name>
        <briefdescription>
<para>Automatically convert this expression to a string where requested. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="193" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a06860926aa2e4d9553a9eb0e20b0650e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> &amp;</type>
        <definition>QgsExpression &amp; QgsExpression::operator=</definition>
        <argsstring>(const QgsExpression &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create a copy of this expression. </para>        </briefdescription>
        <detaileddescription>
<para>This is preferred over recreating an expression from a string since it does not need to be re-parsed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="186" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="210" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a527839698d3437bf896d648a021277b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::operator==</definition>
        <argsstring>(const QgsExpression &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares two expressions. </para>        </briefdescription>
        <detaileddescription>
<para>The operator returns true if the expression string is equal.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="210" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a3a5d8dc84a2cb677dcf02d269bd9d6a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="structQgsExpression_1_1ParserError" kindref="compound">QgsExpression::ParserError</ref> &gt;</type>
        <definition>QList&lt; QgsExpression::ParserError &gt; QgsExpression::parserErrors</definition>
        <argsstring>() const</argsstring>
        <name>parserErrors</name>
        <briefdescription>
<para>Returns parser error details including location of error. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="229" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a5a0caebf6fde03106c509cb0cdbc05a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::parserErrorString</definition>
        <argsstring>() const</argsstring>
        <name>parserErrorString</name>
        <briefdescription>
<para>Returns parser error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="223" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a0285763c2bc4a7202878e7723b9c5ce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::prepare</definition>
        <argsstring>(const QgsExpressionContext *context)</argsstring>
        <name>prepare</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Gets the expression ready for evaluation - find out column indexes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>context for preparing expression </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="239" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="346" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1afca235efb1d341782df1dce301538fb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSet&lt; int &gt;</type>
        <definition>QSet&lt; int &gt; QgsExpression::referencedAttributeIndexes</definition>
        <argsstring>(const QgsFields &amp;fields) const</argsstring>
        <name>referencedAttributeIndexes</name>
        <param>
          <type>const <ref refid="classQgsFields" kindref="compound">QgsFields</ref> &amp;</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
<para>Returns a list of field name indexes obtained from the provided fields. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="304" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="288" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a75ca21b18b29c445a88bc212b1fdf1ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpression::referencedColumns</definition>
        <argsstring>() const</argsstring>
        <name>referencedColumns</name>
        <briefdescription>
<para>Gets list of columns referenced by the expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If the returned list contains the QgsFeatureRequest::AllAttributes constant then all attributes from the layer are required for evaluation of the expression. <ref refid="classQgsFeatureRequest_1a85f831f339a9882822d5d5cf19b29fdf" kindref="member">QgsFeatureRequest::setSubsetOfAttributes</ref> automatically handles this case.</para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1afca235efb1d341782df1dce301538fb1" kindref="member">referencedAttributeIndexes()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="250" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="264" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1ab628ee5b51f27bc56b55e3571765fbbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpression::referencedFunctions</definition>
        <argsstring>() const</argsstring>
        <name>referencedFunctions</name>
        <briefdescription>
<para>Returns a list of the names of all functions which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="266" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="280" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a32cc13155574d799720f7fec906617e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpression::referencedVariables</definition>
        <argsstring>() const</argsstring>
        <name>referencedVariables</name>
        <briefdescription>
<para>Returns a list of all variables which are used in this expression. </para>        </briefdescription>
        <detaileddescription>
<para>If the list contains a NULL QString, there is a variable name used which is determined at runtime.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="259" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="272" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1ace3c8447a8429d1a642c1d6fdabfe837" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classQgsExpressionNode" kindref="compound">QgsExpressionNode</ref> *</type>
        <definition>const QgsExpressionNode * QgsExpression::rootNode</definition>
        <argsstring>() const</argsstring>
        <name>rootNode</name>
        <briefdescription>
<para>Returns root node of the expression. Root node is null is parsing has failed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="232" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="995" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1acb090c93e2c8576267bf8fe121d12454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpression::setAreaUnits</definition>
        <argsstring>(QgsUnitTypes::AreaUnit unit)</argsstring>
        <name>setAreaUnits</name>
        <param>
          <type><ref refid="classQgsUnitTypes_1ab05b10caef047c173a83a5c8838a061a" kindref="member">QgsUnitTypes::AreaUnit</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Sets the desired areal units for calculations involving <ref refid="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" kindref="member">geomCalculator()</ref>, e.g., &quot;$area&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>areas are only converted when a <ref refid="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" kindref="member">geomCalculator()</ref> has been set </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a826637f29c885a28e7133e36ba06f46f" kindref="member">areaUnits()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a6d568e034aec07bf98dddecceccdb894" kindref="member">setDistanceUnits()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="425" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="434" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a6d568e034aec07bf98dddecceccdb894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpression::setDistanceUnits</definition>
        <argsstring>(QgsUnitTypes::DistanceUnit unit)</argsstring>
        <name>setDistanceUnits</name>
        <param>
          <type><ref refid="classQgsUnitTypes_1a0602e8a06afd37c267e9e532bb27f50d" kindref="member">QgsUnitTypes::DistanceUnit</ref></type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Sets the desired distance units for calculations involving <ref refid="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" kindref="member">geomCalculator()</ref>, e.g., &quot;$length&quot; and &quot;$perimeter&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>distances are only converted when a <ref refid="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" kindref="member">geomCalculator()</ref> has been set </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1ab9f75d8a4e8359ea013e00348f286d5f" kindref="member">distanceUnits()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1acb090c93e2c8576267bf8fe121d12454" kindref="member">setAreaUnits()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="407" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="424" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1abaef4ef91cfe086fdc67a17b7e82f725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpression::setEvalErrorString</definition>
        <argsstring>(const QString &amp;str)</argsstring>
        <name>setEvalErrorString</name>
        <param>
          <type>const QString &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Sets evaluation error (used internally by evaluation functions) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="331" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="401" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a1e65240b668da7f8e098f7d55d4f9f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpression::setExpression</definition>
        <argsstring>(const QString &amp;expression)</argsstring>
        <name>setExpression</name>
        <param>
          <type>const QString &amp;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
<para>Set the expression string, will reset the whole internal structure. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="354" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1acc299a58fce972fd8dd76acfbaf85aba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpression::setGeomCalculator</definition>
        <argsstring>(const QgsDistanceArea *calc)</argsstring>
        <name>setGeomCalculator</name>
        <param>
          <type>const <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> *</type>
          <declname>calc</declname>
        </param>
        <briefdescription>
<para>Sets the geometry calculator used for distance and area calculations in expressions. </para>        </briefdescription>
        <detaileddescription>
<para>(used by $length, $area and $perimeter functions only). By default, no geometry calculator is set and all distance and area calculations are performed using simple Cartesian methods (ie no ellipsoidal calculations). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>calc</parametername>
</parameternamelist>
<parameterdescription>
<para>geometry calculator. Ownership is not transferred. Set to a nullptr to force Cartesian calculations. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" kindref="member">geomCalculator()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="389" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="337" bodyend="344"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsExpression_1a2a63f65c19e2e2e0270b7acae27e9eee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QStringList &amp;</type>
        <definition>const QStringList &amp; QgsExpression::BuiltinFunctions</definition>
        <argsstring>()</argsstring>
        <name>BuiltinFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="481" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="79" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1afe5e1cb19de48ff8714e2338003ba6cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::checkExpression</definition>
        <argsstring>(const QString &amp;text, const QgsExpressionContext *context, QString &amp;errorMessage)</argsstring>
        <name>checkExpression</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>QString &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <briefdescription>
<para>Tests whether a string is a valid expression. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>string to test </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>optional expression context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errorMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>will be filled with any error message from the validation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if string is a valid expression </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="347" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="91" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a0d9918089a0818137eeaa0ff8244d61c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpression::cleanRegisteredFunctions</definition>
        <argsstring>()</argsstring>
        <name>cleanRegisteredFunctions</name>
        <briefdescription>
<para>Deletes all registered functions whose ownership have been transferred to the expression engine. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="509" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a8a5d203eb763bfa484df803ba46473ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::createFieldEqualityExpression</definition>
        <argsstring>(const QString &amp;fieldName, const QVariant &amp;value)</argsstring>
        <name>createFieldEqualityExpression</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fieldName</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Create an expression allowing to evaluate if a field is equal to a value. </para>        </briefdescription>
        <detaileddescription>
<para>The value may be null. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fieldName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the field </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the field </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the expression to evaluate field equality </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="611" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="983" bodyend="993"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a22f525ac79d09d864b86edfbf56fe1e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsExpression::evaluateToDouble</definition>
        <argsstring>(const QString &amp;text, double fallbackValue)</argsstring>
        <name>evaluateToDouble</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fallbackValue</declname>
        </param>
        <briefdescription>
<para>Attempts to evaluate a text string as an expression to a resultant double value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>text to evaluate as expression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fallbackValue</parametername>
</parameternamelist>
<parameterdescription>
<para>value to return if text can not be evaluated as a double </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>evaluated double value, or fallback value </para></simplesect>
<simplesect kind="note"><para>this method is inefficient for bulk evaluation of expressions, it is intended for one-off evaluations only. </para></simplesect>
<simplesect kind="since"><para>QGIS 2.7 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="460" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="511" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a09c93c04c3e4b257e12031b3a2798824" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::formatPreviewString</definition>
        <argsstring>(const QVariant &amp;value, bool htmlOutput=true)</argsstring>
        <name>formatPreviewString</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>htmlOutput</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Formats an expression result for friendly display to the user. </para>        </briefdescription>
        <detaileddescription>
<para>Truncates the result to a sensible length, and presents text representations of non numeric/text types (e.g., geometries and features). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>expression result to format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>htmlOutput</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true to allow HTML formatting, or false for plain text output </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>formatted string, may contain HTML formatting characters if <emphasis>htmlOutput</emphasis> is true </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="601" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="862" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1ad5cbf2fa7dcdfe6bc61b98cdf09c5f67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::formatVariableHelp</definition>
        <argsstring>(const QString &amp;description, bool showValue=true, const QVariant &amp;value=QVariant())</argsstring>
        <name>formatVariableHelp</name>
        <param>
          <type>const QString &amp;</type>
          <declname>description</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>showValue</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
          <defval>QVariant()</defval>
        </param>
        <briefdescription>
<para>Returns formatted help text for a variable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>description</parametername>
</parameternamelist>
<parameterdescription>
<para>translated description of variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>showValue</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true to include current value of variable in help text </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>current value of variable to show in help text </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a9aa84954036549de593eef3fd0393b2b" kindref="member">helpText()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a3976fd1aaa7537bd091b46fab972149b" kindref="member">variableHelpText()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="585" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="810" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a290e46c4bfcb4af3ab0ac944cdf927a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsExpression::functionCount</definition>
        <argsstring>()</argsstring>
        <name>functionCount</name>
        <briefdescription>
<para>Returns the number of functions defined in the parser. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of function defined in the parser. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="521" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a20cb1ca0bf870edb9c29edbb0a984a10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QgsExpression::functionIndex</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>functionIndex</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns index of the function in Functions array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="515" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="173" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a03269f2446dce4609c5e086b91ded8d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const QList&lt; <ref refid="classQgsExpressionFunction" kindref="compound">QgsExpressionFunction</ref> * &gt; &amp;</type>
        <definition>const QList&lt; QgsExpressionFunction * &gt; &amp; QgsExpression::Functions</definition>
        <argsstring>()</argsstring>
        <name>Functions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="477" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="4613" bodyend="5264"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1ab7bcb533b56f900b43a863d102e0ba8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::group</definition>
        <argsstring>(const QString &amp;group)</argsstring>
        <name>group</name>
        <param>
          <type>const QString &amp;</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Returns the translated name for a function group. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>untranslated group name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="591" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="831" bodyend="860"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a9aa84954036549de593eef3fd0393b2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::helpText</definition>
        <argsstring>(QString name)</argsstring>
        <name>helpText</name>
        <param>
          <type>QString</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the help text for a specified function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>function name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a3976fd1aaa7537bd091b46fab972149b" kindref="member">variableHelpText()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1ad5cbf2fa7dcdfe6bc61b98cdf09c5f67" kindref="member">formatVariableHelp()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="566" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="541" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a343b21611e75946213f9a1767ecab088" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::isFunctionName</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>isFunctionName</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>tells whether the identifier is a name of existing function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="512" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1ac097a532fe4113c3c648f800270feeb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::quotedColumnRef</definition>
        <argsstring>(QString name)</argsstring>
        <name>quotedColumnRef</name>
        <param>
          <type>QString</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns a quoted column reference (in double quotes) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpression_1a2da0ec1d5d759bf0e3947f0e7ac946f7" kindref="member">quotedString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a16635b2f5be459e2348cc1fdd00f7689" kindref="member">quotedValue()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="528" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a2da0ec1d5d759bf0e3947f0e7ac946f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::quotedString</definition>
        <argsstring>(QString text)</argsstring>
        <name>quotedString</name>
        <param>
          <type>QString</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Returns a quoted version of a string (in single quotes) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsExpression_1a16635b2f5be459e2348cc1fdd00f7689" kindref="member">quotedValue()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1ac097a532fe4113c3c648f800270feeb6" kindref="member">quotedColumnRef()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="535" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="120" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a16635b2f5be459e2348cc1fdd00f7689" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::quotedValue</definition>
        <argsstring>(const QVariant &amp;value)</argsstring>
        <name>quotedValue</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Returns a string representation of a literal value, including appropriate quotations where required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to convert to a string representation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a2da0ec1d5d759bf0e3947f0e7ac946f7" kindref="member">quotedString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1ac097a532fe4113c3c648f800270feeb6" kindref="member">quotedColumnRef()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="545" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1ab1f6b7d6d0ead216d94ebc3e76eb7649" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::quotedValue</definition>
        <argsstring>(const QVariant &amp;value, QVariant::Type type)</argsstring>
        <name>quotedValue</name>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>QVariant::Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns a string representation of a literal value, including appropriate quotations where required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to convert to a string representation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>value type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a2da0ec1d5d759bf0e3947f0e7ac946f7" kindref="member">quotedString()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1ac097a532fe4113c3c648f800270feeb6" kindref="member">quotedColumnRef()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.14 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="556" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="134" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1abc4900eea538ba0cd2d80fcf738705d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QSet&lt; QString &gt;</type>
        <definition>QSet&lt; QString &gt; QgsExpression::referencedVariables</definition>
        <argsstring>(const QString &amp;text)</argsstring>
        <name>referencedVariables</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>This function returns variables in each expression between [% and %]. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The source string in which variables should be searched.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="448" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="489" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a156907cc7f06ffa70198f0db51dc928b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::registerFunction</definition>
        <argsstring>(QgsExpressionFunction *function, bool transferOwnership=false)</argsstring>
        <name>registerFunction</name>
        <param>
          <type><ref refid="classQgsExpressionFunction" kindref="compound">QgsExpressionFunction</ref> *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transferOwnership</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Registers a function to the expression engine. </para>        </briefdescription>
        <detaileddescription>
<para>This is required to allow expressions to utilize the function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to register </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transferOwnership</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true to transfer ownership of function to expression engine </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on successful registration </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a9ec4e7dbdd799f0cdeb90c5402dde048" kindref="member">unregisterFunction</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="490" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="42" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a5d51cbf8b96a2b4d2ce115171e5522fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::replaceExpressionText</definition>
        <argsstring>(const QString &amp;action, const QgsExpressionContext *context, const QgsDistanceArea *distanceArea=nullptr)</argsstring>
        <name>replaceExpressionText</name>
        <param>
          <type>const QString &amp;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> *</type>
          <declname>distanceArea</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>This function replaces each expression between [% and %] in the string with the result of its evaluation with the specified context. </para>        </briefdescription>
        <detaileddescription>
<para>Additional substitutions can be passed through the substitutionMap parameter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The source string in which placeholders should be replaced. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distanceArea</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref>. If specified, the <ref refid="classQgsDistanceArea" kindref="compound">QgsDistanceArea</ref> is used for distance and area conversion </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="438" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="439" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a9ec4e7dbdd799f0cdeb90c5402dde048" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsExpression::unregisterFunction</definition>
        <argsstring>(const QString &amp;name)</argsstring>
        <name>unregisterFunction</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Unregisters a function from the expression engine. </para>        </briefdescription>
        <detaileddescription>
<para>The function will no longer be usable in expressions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>function name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a156907cc7f06ffa70198f0db51dc928b" kindref="member">registerFunction</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="497" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="55" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a3976fd1aaa7537bd091b46fab972149b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsExpression::variableHelpText</definition>
        <argsstring>(const QString &amp;variableName)</argsstring>
        <name>variableHelpText</name>
        <param>
          <type>const QString &amp;</type>
          <declname>variableName</declname>
        </param>
        <briefdescription>
<para>Returns the help text for a specified variable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variableName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of variable </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classQgsExpression_1a9aa84954036549de593eef3fd0393b2b" kindref="member">helpText()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 2.12 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="574" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="804" bodyend="808"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsExpression_1a68a2d9f59cd79b0cff943933dedda9f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpression::detach</definition>
        <argsstring>()</argsstring>
        <name>detach</name>
        <briefdescription>
<para>Helper for implicit sharing. </para>        </briefdescription>
        <detaileddescription>
<para>When called will create a new deep copy of this expression.</para><para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="704" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="325" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1a64f2c176ab9e20040b4dcfe26ac1cb57" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpression::initGeomCalculator</definition>
        <argsstring>()</argsstring>
        <name>initGeomCalculator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="622" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="316" bodyend="323"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classQgsExpression_1aee3c8512f3f5466b85c822fe8b0ee9b5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void QgsExpression::initFunctionHelp</definition>
        <argsstring>()</argsstring>
        <name>initFunctionHelp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="713" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsExpression_1abd76aaa8d7416facf985bcc0306e8404" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsExpression::initVariableHelp</definition>
        <argsstring>()</argsstring>
        <name>initVariableHelp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="715" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.cpp" bodystart="678" bodyend="802"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for parsing and evaluation of expressions (formerly called &quot;search strings&quot;). </para>    </briefdescription>
    <detaileddescription>
<para>The expressions try to follow both syntax and semantics of SQL expressions.</para><para>Usage: <programlisting><codeline><highlight class="normal"><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref><sp/>exp(</highlight><highlight class="stringliteral">&quot;gid*2<sp/>&gt;<sp/>10<sp/>and<sp/>type<sp/>not<sp/>in<sp/>(&apos;D&apos;,&apos;F&apos;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exp.hasParserError())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>error<sp/>message<sp/>with<sp/>parserErrorString()<sp/>and<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">QVariant<sp/>result<sp/>=<sp/>exp.evaluate(feature,<sp/>fields);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exp.hasEvalError())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>error<sp/>message<sp/>with<sp/>evalErrorString()</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>examine<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><heading level="1">Three Value Logic </heading>
</para><para>Similarly to SQL, this class supports three-value logic: true/false/unknown. Unknown value may be a result of operations with missing data (NULL). Please note that NULL is different value than zero or an empty string. For example 3 &gt; NULL returns unknown.</para><para>There is no special (three-value) &apos;boolean&apos; type: true/false is represented as 1/0 integer, unknown value is represented the same way as NULL values: NULL QVariant.</para><para><heading level="1">Performance </heading>
</para><para>For better performance with many evaluations you may first call prepare(fields) function to find out indices of columns and then repeatedly call evaluate(feature).</para><para><heading level="1">Type conversion </heading>
</para><para>Operators and functions that expect arguments to be of a particular type automatically convert the arguments to that type, e.g. sin(&apos;2.1&apos;) will convert the argument to a double, length(123) will first convert the number to a string. Explicit conversion can be achieved with to_int, to_real, to_string functions. If implicit or explicit conversion is invalid, the evaluation returns an error. Comparison operators do numeric comparison in case both operators are numeric (int/double) or they can be converted to numeric types.</para><para><heading level="1">Implicit sharing </heading>
</para><para>This class is implicitly shared, copying has a very low overhead. It is normally preferable to call <computeroutput><ref refid="classQgsExpression" kindref="compound">QgsExpression( otherExpression )</ref></computeroutput> instead of <computeroutput><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref>( otherExpression.expression() )</computeroutput>. A deep copy will only be made when <ref refid="classQgsExpression_1a0285763c2bc4a7202878e7723b9c5ce2" kindref="member">prepare()</ref> is called. For usage this means mainly, that you should normally keep an unprepared master copy of a <ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> and whenever using it with a particular <ref refid="classQgsFeatureIterator" kindref="compound">QgsFeatureIterator</ref> copy it just before and prepare it using the same context as the iterator.</para><para>Implicit sharing was added in 2.14 </para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" line="114" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpression.h" bodystart="113" bodyend="718"/>
    <listofallmembers>
      <member refid="classQgsExpression_1a826637f29c885a28e7133e36ba06f46f" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>areaUnits</name></member>
      <member refid="classQgsExpression_1a2a63f65c19e2e2e0270b7acae27e9eee" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>BuiltinFunctions</name></member>
      <member refid="classQgsExpression_1afe5e1cb19de48ff8714e2338003ba6cb" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>checkExpression</name></member>
      <member refid="classQgsExpression_1a0d9918089a0818137eeaa0ff8244d61c" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>cleanRegisteredFunctions</name></member>
      <member refid="classQgsExpression_1a8a5d203eb763bfa484df803ba46473ae" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>createFieldEqualityExpression</name></member>
      <member refid="classQgsExpression_1a057aef8ece0b0269f7c13976a105627f" prot="private" virt="non-virtual"><scope>QgsExpression</scope><name>d</name></member>
      <member refid="classQgsExpression_1a68a2d9f59cd79b0cff943933dedda9f6" prot="private" virt="non-virtual"><scope>QgsExpression</scope><name>detach</name></member>
      <member refid="classQgsExpression_1ab9f75d8a4e8359ea013e00348f286d5f" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>distanceUnits</name></member>
      <member refid="classQgsExpression_1a964405819287c1dc7d6256dba11ccf21" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>dump</name></member>
      <member refid="classQgsExpression_1a3aa8dc1071b06e692a3fdadfd78bd42c" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>evalErrorString</name></member>
      <member refid="classQgsExpression_1aed92c6b72450d23e340f55b9844d14b0" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>evaluate</name></member>
      <member refid="classQgsExpression_1a279785f0a59cc4ac977022797599bdc6" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>evaluate</name></member>
      <member refid="classQgsExpression_1a22f525ac79d09d864b86edfbf56fe1e8" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>evaluateToDouble</name></member>
      <member refid="classQgsExpression_1a088d751afb7cc54785b69eba09e433f1" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>expression</name></member>
      <member refid="classQgsExpression_1a83560cb2a0e956d71ac62b28cb559c1f" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>findNodes</name></member>
      <member refid="classQgsExpression_1a09c93c04c3e4b257e12031b3a2798824" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>formatPreviewString</name></member>
      <member refid="classQgsExpression_1ad5cbf2fa7dcdfe6bc61b98cdf09c5f67" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>formatVariableHelp</name></member>
      <member refid="classQgsExpression_1a290e46c4bfcb4af3ab0ac944cdf927a2" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>functionCount</name></member>
      <member refid="classQgsExpression_1a20cb1ca0bf870edb9c29edbb0a984a10" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>functionIndex</name></member>
      <member refid="classQgsExpression_1a03269f2446dce4609c5e086b91ded8d4" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>Functions</name></member>
      <member refid="classQgsExpression_1af8986df333a858826ae3c4a7873e1ca5" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>geomCalculator</name></member>
      <member refid="classQgsExpression_1ab7bcb533b56f900b43a863d102e0ba8f" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>group</name></member>
      <member refid="classQgsExpression_1ad28c51ada5bc7b3ad6d76e7a9fd92cfc" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>hasEvalError</name></member>
      <member refid="classQgsExpression_1a3636e8467726b4767f2f2806d083dc5d" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>hasParserError</name></member>
      <member refid="classQgsExpression_1a9aa84954036549de593eef3fd0393b2b" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>helpText</name></member>
      <member refid="classQgsExpression_1aee3c8512f3f5466b85c822fe8b0ee9b5" prot="private" virt="non-virtual"><scope>QgsExpression</scope><name>initFunctionHelp</name></member>
      <member refid="classQgsExpression_1a64f2c176ab9e20040b4dcfe26ac1cb57" prot="private" virt="non-virtual"><scope>QgsExpression</scope><name>initGeomCalculator</name></member>
      <member refid="classQgsExpression_1abd76aaa8d7416facf985bcc0306e8404" prot="private" virt="non-virtual"><scope>QgsExpression</scope><name>initVariableHelp</name></member>
      <member refid="classQgsExpression_1a748d8721011bf26864dd5b7c458d0680" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>isField</name></member>
      <member refid="classQgsExpression_1a343b21611e75946213f9a1767ecab088" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>isFunctionName</name></member>
      <member refid="classQgsExpression_1af30007688deb7583391c5c71ccdb84ad" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>isValid</name></member>
      <member refid="classQgsExpression_1ae2fbc77e693c755269305212eb3bfb37" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>needsGeometry</name></member>
      <member refid="classQgsExpression_1a2a8ce2966c260497d77555c3f8c8d124" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>nodes</name></member>
      <member refid="classQgsExpression_1a3ba97853186ab2925aee36fd22103606" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>operator QString</name></member>
      <member refid="classQgsExpression_1a06860926aa2e4d9553a9eb0e20b0650e" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>operator=</name></member>
      <member refid="classQgsExpression_1a527839698d3437bf896d648a021277b5" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>operator==</name></member>
      <member refid="classQgsExpression_1a3a5d8dc84a2cb677dcf02d269bd9d6a3" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>parserErrors</name></member>
      <member refid="classQgsExpression_1a5a0caebf6fde03106c509cb0cdbc05a9" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>parserErrorString</name></member>
      <member refid="classQgsExpression_1a0285763c2bc4a7202878e7723b9c5ce2" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>prepare</name></member>
      <member refid="classQgsExpression_1ad6fb2304bf9bb52faff3c159b99dfd0a" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>QgsExpression</name></member>
      <member refid="classQgsExpression_1a55be0e5380a32cb1296e2a46570a8cb0" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>QgsExpression</name></member>
      <member refid="classQgsExpression_1a883d6a2bff57f3a6a3e40659e6e19d98" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>QgsExpression</name></member>
      <member refid="classQgsExpression_1a106a43d594fc02b6d54da0ec17ff6a24" prot="private" virt="non-virtual"><scope>QgsExpression</scope><name>QgsOgcUtils</name></member>
      <member refid="classQgsExpression_1ac097a532fe4113c3c648f800270feeb6" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>quotedColumnRef</name></member>
      <member refid="classQgsExpression_1a2da0ec1d5d759bf0e3947f0e7ac946f7" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>quotedString</name></member>
      <member refid="classQgsExpression_1a16635b2f5be459e2348cc1fdd00f7689" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>quotedValue</name></member>
      <member refid="classQgsExpression_1ab1f6b7d6d0ead216d94ebc3e76eb7649" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>quotedValue</name></member>
      <member refid="classQgsExpression_1afca235efb1d341782df1dce301538fb1" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>referencedAttributeIndexes</name></member>
      <member refid="classQgsExpression_1a75ca21b18b29c445a88bc212b1fdf1ed" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>referencedColumns</name></member>
      <member refid="classQgsExpression_1ab628ee5b51f27bc56b55e3571765fbbd" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>referencedFunctions</name></member>
      <member refid="classQgsExpression_1a32cc13155574d799720f7fec906617e0" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>referencedVariables</name></member>
      <member refid="classQgsExpression_1abc4900eea538ba0cd2d80fcf738705d5" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>referencedVariables</name></member>
      <member refid="classQgsExpression_1a156907cc7f06ffa70198f0db51dc928b" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>registerFunction</name></member>
      <member refid="classQgsExpression_1a5d51cbf8b96a2b4d2ce115171e5522fd" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>replaceExpressionText</name></member>
      <member refid="classQgsExpression_1ace3c8447a8429d1a642c1d6fdabfe837" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>rootNode</name></member>
      <member refid="classQgsExpression_1a4d6ec3434ccbf3bff65a6d865ee8a90f" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>sBuiltinFunctions</name></member>
      <member refid="classQgsExpression_1acb090c93e2c8576267bf8fe121d12454" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>setAreaUnits</name></member>
      <member refid="classQgsExpression_1a6d568e034aec07bf98dddecceccdb894" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>setDistanceUnits</name></member>
      <member refid="classQgsExpression_1abaef4ef91cfe086fdc67a17b7e82f725" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>setEvalErrorString</name></member>
      <member refid="classQgsExpression_1a1e65240b668da7f8e098f7d55d4f9f7a" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>setExpression</name></member>
      <member refid="classQgsExpression_1acc299a58fce972fd8dd76acfbaf85aba" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>setGeomCalculator</name></member>
      <member refid="classQgsExpression_1a4e4bf3c279667b4de08a8c280ea45922" prot="private" virt="non-virtual"><scope>QgsExpression</scope><name>sFunctionHelpTexts</name></member>
      <member refid="classQgsExpression_1a3055bacc2aa733906149a6c6a1ac8d75" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>sFunctions</name></member>
      <member refid="classQgsExpression_1a2c5d9a9fafee4c0d4edd8d42f62a1919" prot="private" virt="non-virtual"><scope>QgsExpression</scope><name>sGroups</name></member>
      <member refid="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a2c04ba0675fe7e6413a776ebccc50128" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>soBbox</name></member>
      <member refid="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730ac1d522c3e18479bfed6659dc41ae022a" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>soContains</name></member>
      <member refid="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a89d5473df7b32f4c7bbc1e994099d3ec" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>soCrosses</name></member>
      <member refid="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a1181c4bff2ab8854328fc217ac73fced" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>soDisjoint</name></member>
      <member refid="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a8e9a3ce07e229f54938b478a6f9c534a" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>soEquals</name></member>
      <member refid="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730af74498ca55d365d25e3246bdfeb85dcf" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>soIntersects</name></member>
      <member refid="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a43c95df9c03a518f54e0f0416f92ce1b" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>soOverlaps</name></member>
      <member refid="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730a5051c4b413f16afe5dc9c06e04fab1e6" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>soTouches</name></member>
      <member refid="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730ad87be514cfa6c80369d2655104eb2bce" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>soWithin</name></member>
      <member refid="classQgsExpression_1a2f6be212ceb140221faf382768a03b76" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>sOwnedFunctions</name></member>
      <member refid="classQgsExpression_1a7ca51327cfc29041de787b797e2f9730" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>SpatialOperator</name></member>
      <member refid="classQgsExpression_1aaa0ba0c8b7e36ef4e715e17e69c148ea" prot="private" virt="non-virtual"><scope>QgsExpression</scope><name>sVariableHelpTexts</name></member>
      <member refid="classQgsExpression_1a9ec4e7dbdd799f0cdeb90c5402dde048" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>unregisterFunction</name></member>
      <member refid="classQgsExpression_1a3976fd1aaa7537bd091b46fab972149b" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>variableHelpText</name></member>
      <member refid="classQgsExpression_1ad2935db36c7bacfeb2cdf1f984ad0b57" prot="public" virt="non-virtual"><scope>QgsExpression</scope><name>~QgsExpression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
