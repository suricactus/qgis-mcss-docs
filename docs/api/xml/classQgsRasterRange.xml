<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsRasterRange" kind="class" language="C++" prot="public">
    <compoundname>QgsRasterRange</compoundname>
    <includes refid="qgsrasterrange_8h" local="no">qgsrasterrange.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62" prot="public" static="no">
        <name>BoundsType</name>
        <enumvalue id="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62a6c24f2b77360aa984588f6636461c186" prot="public">
          <name>IncludeMinAndMax</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Min and max values are inclusive. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62af7b037f8f20215d45480307c7daf92bf" prot="public">
          <name>IncludeMax</name>
          <briefdescription>
<para>Include the max value, but not the min value, e.g. min &lt; value &lt;= max. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62a1b086068484ad0fc534d1cae8605c1c7" prot="public">
          <name>IncludeMin</name>
          <briefdescription>
<para>Include the min value, but not the max value, e.g. min &lt;= value &lt; max. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62ac1af9a09746eb7aeffbbc739088aec4e" prot="public">
          <name>Exclusive</name>
          <briefdescription>
<para>Don&apos;t include either the min or max value, e.g. min &lt; value &lt; max. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Handling for min and max bounds. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="41" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="40" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQgsRasterRange_1a076103968efa3e241e1c53b22601c877" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsRasterRange::mMax</definition>
        <argsstring></argsstring>
        <name>mMax</name>
        <initializer>= std::numeric_limits&lt;double&gt;::quiet_NaN()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="157" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsRasterRange_1a02a85c56af71e54b29dca0b2cb285f99" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double QgsRasterRange::mMin</definition>
        <argsstring></argsstring>
        <name>mMin</name>
        <initializer>= std::numeric_limits&lt;double&gt;::quiet_NaN()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="156" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQgsRasterRange_1ad12332f193b7917860d31d343255e993" prot="private" static="no" mutable="no">
        <type><ref refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62" kindref="member">BoundsType</ref></type>
        <definition>BoundsType QgsRasterRange::mType</definition>
        <argsstring></argsstring>
        <name>mType</name>
        <initializer>= <ref refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62a6c24f2b77360aa984588f6636461c186" kindref="member">IncludeMinAndMax</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="158" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsRasterRange_1ad000769e3212ad0fc0dd08875bfc05d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsRasterRange::QgsRasterRange</definition>
        <argsstring>()=default</argsstring>
        <name>QgsRasterRange</name>
        <briefdescription>
<para>Default constructor, both min and max value for the range will be set to NaN. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1a9e7074f4b4664cc99342bc42d3921bd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsRasterRange::QgsRasterRange</definition>
        <argsstring>(double min, double max, BoundsType bounds=IncludeMinAndMax)</argsstring>
        <name>QgsRasterRange</name>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62" kindref="member">BoundsType</ref></type>
          <declname>bounds</declname>
          <defval><ref refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62a6c24f2b77360aa984588f6636461c186" kindref="member">IncludeMinAndMax</ref></defval>
        </param>
        <briefdescription>
<para>Constructor for a range with the given <emphasis>min</emphasis> and <emphasis>max</emphasis> values. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>bounds</emphasis> argument dictates how the min and max value themselves will be handled by the range. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="59" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1a976d58d3cbe0034881cbda4b01a0a801" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString QgsRasterRange::asText</definition>
        <argsstring>() const</argsstring>
        <name>asText</name>
        <briefdescription>
<para>Returns a text representation of the range. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="153" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.cpp" bodystart="68" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1aee6cc9bd76453019a7edfd02fd1b1187" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62" kindref="member">BoundsType</ref></type>
        <definition>BoundsType QgsRasterRange::bounds</definition>
        <argsstring>() const</argsstring>
        <name>bounds</name>
        <briefdescription>
<para>Returns the bounds type for the range, which specifies whether or not the min and max values themselves are included in the range. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterRange_1a9fbabdb843a03a4aa2d25ad89c8cd327" kindref="member">setBounds()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="80" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1aaa9d9455f4a06755d90344bf86462519" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsRasterRange::contains</definition>
        <argsstring>(double value) const</argsstring>
        <name>contains</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Returns true if this range contains the specified <emphasis>value</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="114" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="114" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1acb1945c03276c9daae45b4fd5cdd4c1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsRasterRange::max</definition>
        <argsstring>() const</argsstring>
        <name>max</name>
        <briefdescription>
<para>Returns the maximum value for the range. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterRange_1ac86fe048a0b7ed286ce74b7561ee304e" kindref="member">setMax()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="71" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1a8dfacdf46796a9ca2e8f3155b2c2f6f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsRasterRange::min</definition>
        <argsstring>() const</argsstring>
        <name>min</name>
        <briefdescription>
<para>Returns the minimum value for the range. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterRange_1a29f0b9d384a38f2e25992e3c6ddd2efd" kindref="member">setMin()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="65" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1a7271db5acebcc62cab883d70cf4affe4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsRasterRange::operator==</definition>
        <argsstring>(const QgsRasterRange &amp;o) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classQgsRasterRange" kindref="compound">QgsRasterRange</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="103" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1a8ece9ca1c7025596ea662ae00314b2cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsRasterRange::overlaps</definition>
        <argsstring>(const QgsRasterRange &amp;other) const</argsstring>
        <name>overlaps</name>
        <param>
          <type>const <ref refid="classQgsRasterRange" kindref="compound">QgsRasterRange</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this range overlaps another range. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="147" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.cpp" bodystart="27" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1a9fbabdb843a03a4aa2d25ad89c8cd327" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QgsRasterRange::setBounds</definition>
        <argsstring>(BoundsType type)</argsstring>
        <name>setBounds</name>
        <param>
          <type><ref refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62" kindref="member">BoundsType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Sets the bounds <emphasis>type</emphasis> for the range, which specifies whether or not the min and max values themselves are included in the range. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterRange_1aee6cc9bd76453019a7edfd02fd1b1187" kindref="member">bounds()</ref> </para></simplesect>
<simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="101" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1ac86fe048a0b7ed286ce74b7561ee304e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsRasterRange::setMax</definition>
        <argsstring>(double max)</argsstring>
        <name>setMax</name>
        <param>
          <type>double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Sets the maximum value for the range. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterRange_1acb1945c03276c9daae45b4fd5cdd4c1a" kindref="member">max()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="92" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classQgsRasterRange_1a29f0b9d384a38f2e25992e3c6ddd2efd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QgsRasterRange::setMin</definition>
        <argsstring>(double min)</argsstring>
        <name>setMin</name>
        <param>
          <type>double</type>
          <declname>min</declname>
        </param>
        <briefdescription>
<para>Sets the minimum value for the range. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsRasterRange_1a8dfacdf46796a9ca2e8f3155b2c2f6f8" kindref="member">min()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="86" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="86" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsRasterRange_1afff23c2d52d87427f9d12850eeba2012" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool QgsRasterRange::contains</definition>
        <argsstring>(double value, const QgsRasterRangeList &amp;rangeList)</argsstring>
        <name>contains</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="qgsrasterrange_8h_1aa019f327f8ac3e6a626f33ed9d047d1e" kindref="member">QgsRasterRangeList</ref> &amp;</type>
          <declname>rangeList</declname>
        </param>
        <briefdescription>
<para>Tests if a <emphasis>value</emphasis> is within the list of ranges. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangeList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of ranges </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if value is in at least one of ranges </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="131" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="131" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Raster values range container. </para>    </briefdescription>
    <detaileddescription>
<para>Represents range of values between min and max including min and max value. </para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" line="36" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/raster/qgsrasterrange.h" bodystart="35" bodyend="159"/>
    <listofallmembers>
      <member refid="classQgsRasterRange_1a976d58d3cbe0034881cbda4b01a0a801" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>asText</name></member>
      <member refid="classQgsRasterRange_1aee6cc9bd76453019a7edfd02fd1b1187" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>bounds</name></member>
      <member refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>BoundsType</name></member>
      <member refid="classQgsRasterRange_1aaa9d9455f4a06755d90344bf86462519" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>contains</name></member>
      <member refid="classQgsRasterRange_1afff23c2d52d87427f9d12850eeba2012" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>contains</name></member>
      <member refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62ac1af9a09746eb7aeffbbc739088aec4e" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>Exclusive</name></member>
      <member refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62af7b037f8f20215d45480307c7daf92bf" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>IncludeMax</name></member>
      <member refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62a1b086068484ad0fc534d1cae8605c1c7" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>IncludeMin</name></member>
      <member refid="classQgsRasterRange_1a6715ceb3ebd5415dc192d4d80dfc2e62a6c24f2b77360aa984588f6636461c186" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>IncludeMinAndMax</name></member>
      <member refid="classQgsRasterRange_1acb1945c03276c9daae45b4fd5cdd4c1a" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>max</name></member>
      <member refid="classQgsRasterRange_1a8dfacdf46796a9ca2e8f3155b2c2f6f8" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>min</name></member>
      <member refid="classQgsRasterRange_1a076103968efa3e241e1c53b22601c877" prot="private" virt="non-virtual"><scope>QgsRasterRange</scope><name>mMax</name></member>
      <member refid="classQgsRasterRange_1a02a85c56af71e54b29dca0b2cb285f99" prot="private" virt="non-virtual"><scope>QgsRasterRange</scope><name>mMin</name></member>
      <member refid="classQgsRasterRange_1ad12332f193b7917860d31d343255e993" prot="private" virt="non-virtual"><scope>QgsRasterRange</scope><name>mType</name></member>
      <member refid="classQgsRasterRange_1a7271db5acebcc62cab883d70cf4affe4" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>operator==</name></member>
      <member refid="classQgsRasterRange_1a8ece9ca1c7025596ea662ae00314b2cf" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>overlaps</name></member>
      <member refid="classQgsRasterRange_1ad000769e3212ad0fc0dd08875bfc05d9" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>QgsRasterRange</name></member>
      <member refid="classQgsRasterRange_1a9e7074f4b4664cc99342bc42d3921bd6" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>QgsRasterRange</name></member>
      <member refid="classQgsRasterRange_1a9fbabdb843a03a4aa2d25ad89c8cd327" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>setBounds</name></member>
      <member refid="classQgsRasterRange_1ac86fe048a0b7ed286ce74b7561ee304e" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>setMax</name></member>
      <member refid="classQgsRasterRange_1a29f0b9d384a38f2e25992e3c6ddd2efd" prot="public" virt="non-virtual"><scope>QgsRasterRange</scope><name>setMin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
