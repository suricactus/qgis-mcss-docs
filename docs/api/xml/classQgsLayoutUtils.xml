<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsLayoutUtils" kind="class" language="C++" prot="public">
    <compoundname>QgsLayoutUtils</compoundname>
    <includes refid="qgslayoututils_8h" local="no">qgslayoututils.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classQgsLayoutUtils_1afb90da2fa37a0f9eaf1ab90082016b4f" prot="private" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double QgsLayoutUtils::FONT_WORKAROUND_SCALE</definition>
        <argsstring></argsstring>
        <name>FONT_WORKAROUND_SCALE</name>
        <initializer>= 10</initializer>
        <briefdescription>
<para>Scale factor for upscaling fontsize and downscaling painter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="228" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classQgsLayoutUtils_1a46e1792f6283aaf04b3b761146d7384a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TestQgsLayoutUtils</definition>
        <argsstring></argsstring>
        <name>TestQgsLayoutUtils</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="242" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsLayoutUtils_1a205804cd4bdcc333ef96db8caaf850bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref></type>
        <definition>QgsRenderContext QgsLayoutUtils::createRenderContextForLayout</definition>
        <argsstring>(QgsLayout *layout, QPainter *painter, double dpi=-1)</argsstring>
        <name>createRenderContextForLayout</name>
        <param>
          <type><ref refid="classQgsLayout" kindref="compound">QgsLayout</ref> *</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dpi</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Creates a render context suitable for the specified <emphasis>layout</emphasis> and <emphasis>painter</emphasis> destination. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns a new <ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> which matches the scale and settings from the layout&apos;s <ref refid="classQgsLayout_1a5838d5539b724909bdb685a9c380374d" kindref="member">QgsLayout::referenceMap()</ref>. If the <emphasis>dpi</emphasis> argument is not specified then the dpi will be taken from the destination painter device. <simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a7fc4599a151457f72b6ff28dc5c9aee7" kindref="member">createRenderContextForMap()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="79" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="138" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a7fc4599a151457f72b6ff28dc5c9aee7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref></type>
        <definition>QgsRenderContext QgsLayoutUtils::createRenderContextForMap</definition>
        <argsstring>(QgsLayoutItemMap *map, QPainter *painter, double dpi=-1)</argsstring>
        <name>createRenderContextForMap</name>
        <param>
          <type><ref refid="classQgsLayoutItemMap" kindref="compound">QgsLayoutItemMap</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dpi</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Creates a render context suitable for the specified layout <emphasis>map</emphasis> and <emphasis>painter</emphasis> destination. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns a new <ref refid="classQgsRenderContext" kindref="compound">QgsRenderContext</ref> which matches the scale and settings of the target map. If the <emphasis>dpi</emphasis> argument is not specified then the dpi will be taken from the destination painter device. <simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a205804cd4bdcc333ef96db8caaf850bc" kindref="member">createRenderContextForLayout()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="69" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="94" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a982264168f76d3e5f30114c73fbd1834" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsLayoutItemPage_1adaba6fc4a6b62125bfd919c5e8af898e" kindref="member">QgsLayoutItemPage::Orientation</ref></type>
        <definition>QgsLayoutItemPage::Orientation QgsLayoutUtils::decodePaperOrientation</definition>
        <argsstring>(const QString &amp;string, bool &amp;ok)</argsstring>
        <name>decodePaperOrientation</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>ok</declname>
        </param>
        <briefdescription>
<para>Decodes a <emphasis>string</emphasis> representing a paper orientation and returns the decoded orientation. </para>        </briefdescription>
        <detaileddescription>
<para>If the string was correctly decoded, <emphasis>ok</emphasis> will be set to true. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="207" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="373" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1ad1d896afd6f02a331a4c1e943d178812" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayoutUtils::drawText</definition>
        <argsstring>(QPainter *painter, QPointF position, const QString &amp;text, const QFont &amp;font, const QColor &amp;color=QColor())</argsstring>
        <name>drawText</name>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QPointF</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>color</declname>
          <defval>QColor()</defval>
        </param>
        <briefdescription>
<para>Draws <emphasis>text</emphasis> on a <emphasis>painter</emphasis> at a specific <emphasis>position</emphasis>, taking care of layout specific issues (calculation to pixel, scaling of font and painter to work around Qt font bugs). </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>color</emphasis> is specified, text will be rendered in that color. If not specified, the current painter pen color will be used instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="176" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="244" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1ae68c6fd4a0096448557f70739fa9ecd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayoutUtils::drawText</definition>
        <argsstring>(QPainter *painter, const QRectF &amp;rectangle, const QString &amp;text, const QFont &amp;font, const QColor &amp;color=QColor(), Qt::AlignmentFlag halignment=Qt::AlignLeft, Qt::AlignmentFlag valignment=Qt::AlignTop, int flags=Qt::TextWordWrap)</argsstring>
        <name>drawText</name>
        <param>
          <type>QPainter *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rectangle</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>color</declname>
          <defval>QColor()</defval>
        </param>
        <param>
          <type>Qt::AlignmentFlag</type>
          <declname>halignment</declname>
          <defval>Qt::AlignLeft</defval>
        </param>
        <param>
          <type>Qt::AlignmentFlag</type>
          <declname>valignment</declname>
          <defval>Qt::AlignTop</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>Qt::TextWordWrap</defval>
        </param>
        <briefdescription>
<para>Draws <emphasis>text</emphasis> on a <emphasis>painter</emphasis> within a <emphasis>rectangle</emphasis>, taking care of layout specific issues (calculation to pixel, scaling of font and painter to work around Qt font bugs). </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>color</emphasis> is specified, text will be rendered in that color. If not specified, the current painter pen color will be used instead.</para><para>The text alignment within <emphasis>rectangle</emphasis> can be set via the <emphasis>halignment</emphasis> and <emphasis>valignment</emphasis> arguments.</para><para>The <emphasis>flags</emphasis> parameter allows for passing Qt::TextFlags to control appearance of rendered text. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="190" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="267" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a5290da79477bb19a43d12525c9edacfc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::fontAscentMM</definition>
        <argsstring>(const QFont &amp;font)</argsstring>
        <name>fontAscentMM</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Calculates a <emphasis>font</emphasis> ascent in millimeters, including workarounds for QT font rendering issues. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a441376503ba517c14e51b4aece73f0c8" kindref="member">fontDescentMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a3b52451f814f1c8a1bda695cdc3db4ad" kindref="member">fontHeightMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1aa7f3649a277cf3c4e539d4934537f266" kindref="member">fontHeightCharacterMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1ad6e2025b4f5b04c5a61677d7e624d857" kindref="member">textWidthMM()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="116" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="181" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a441376503ba517c14e51b4aece73f0c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::fontDescentMM</definition>
        <argsstring>(const QFont &amp;font)</argsstring>
        <name>fontDescentMM</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Calculate a <emphasis>font</emphasis> descent in millimeters, including workarounds for QT font rendering issues. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a5290da79477bb19a43d12525c9edacfc" kindref="member">fontAscentMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a3b52451f814f1c8a1bda695cdc3db4ad" kindref="member">fontHeightMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1aa7f3649a277cf3c4e539d4934537f266" kindref="member">fontHeightCharacterMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1ad6e2025b4f5b04c5a61677d7e624d857" kindref="member">textWidthMM()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="125" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="190" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1aa7f3649a277cf3c4e539d4934537f266" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::fontHeightCharacterMM</definition>
        <argsstring>(const QFont &amp;font, QChar character)</argsstring>
        <name>fontHeightCharacterMM</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>QChar</type>
          <declname>character</declname>
        </param>
        <briefdescription>
<para>Calculate a <emphasis>font</emphasis> height in millimeters of a single <emphasis>character</emphasis>, including workarounds for QT font rendering issues. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a5290da79477bb19a43d12525c9edacfc" kindref="member">fontAscentMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a441376503ba517c14e51b4aece73f0c8" kindref="member">fontDescentMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a3b52451f814f1c8a1bda695cdc3db4ad" kindref="member">fontHeightMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1ad6e2025b4f5b04c5a61677d7e624d857" kindref="member">textWidthMM()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="145" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="210" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a3b52451f814f1c8a1bda695cdc3db4ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::fontHeightMM</definition>
        <argsstring>(const QFont &amp;font)</argsstring>
        <name>fontHeightMM</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Calculate a <emphasis>font</emphasis> height in millimeters, including workarounds for QT font rendering issues. </para>        </briefdescription>
        <detaileddescription>
<para>The font height is the font ascent + descent + 1 (for the baseline). <simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a5290da79477bb19a43d12525c9edacfc" kindref="member">fontAscentMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a441376503ba517c14e51b4aece73f0c8" kindref="member">fontDescentMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1aa7f3649a277cf3c4e539d4934537f266" kindref="member">fontHeightCharacterMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1ad6e2025b4f5b04c5a61677d7e624d857" kindref="member">textWidthMM()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="135" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="200" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a66d0b42d4440c577f57ce4a7b71c279d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF QgsLayoutUtils::largestRotatedRectWithinBounds</definition>
        <argsstring>(const QRectF &amp;originalRect, const QRectF &amp;boundsRect, double rotation)</argsstring>
        <name>largestRotatedRectWithinBounds</name>
        <param>
          <type>const QRectF &amp;</type>
          <declname>originalRect</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>boundsRect</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Calculates the largest scaled version of <emphasis>originalRect</emphasis> which fits within <emphasis>boundsRect</emphasis>, when it is rotated by the a specified <emphasis>rotation</emphasis> amount. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>originalRect</parametername>
</parameternamelist>
<parameterdescription>
<para>QRectF to be rotated and scaled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundsRect</parametername>
</parameternamelist>
<parameterdescription>
<para>QRectF specifying the bounds which the rotated and scaled rectangle must fit within </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>the rotation in degrees to be applied to the rectangle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>largest scaled version of the rectangle possible </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="200" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="293" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1aecc33f04e8c5a1992fc4c91753c795ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *</type>
        <definition>QgsMapLayer * QgsLayoutUtils::mapLayerFromString</definition>
        <argsstring>(const QString &amp;string, QgsProject *project)</argsstring>
        <name>mapLayerFromString</name>
        <param>
          <type>const QString &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="classQgsProject" kindref="compound">QgsProject</ref> *</type>
          <declname>project</declname>
        </param>
        <briefdescription>
<para>Resolves a <emphasis>string</emphasis> into a map layer from a given <emphasis>project</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Attempts different forms of layer matching such as matching by layer id or layer name.</para><para>Layer names are matched using a case-insensitive check, ONLY if an exact case match was not found.</para><para><simplesect kind="since"><para>QGIS 3.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="223" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="403" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1ac0fd2b17f3f33541263b7afdcc289c2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::normalizedAngle</definition>
        <argsstring>(double angle, bool allowNegative=false)</argsstring>
        <name>normalizedAngle</name>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowNegative</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Ensures that an <emphasis>angle</emphasis> (in degrees) is in the range 0 &lt;= angle &lt; 360. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>allowNegative</emphasis> is true then angles between (-360, 360) are allowed. If false, angles are converted to positive angles in the range [0, 360). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="54" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="40" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a3d1f2c9b1a8df7c09403b30b1dfa7699" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::relativePosition</definition>
        <argsstring>(double position, double beforeMin, double beforeMax, double afterMin, double afterMax)</argsstring>
        <name>relativePosition</name>
        <param>
          <type>double</type>
          <declname>position</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beforeMin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beforeMax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>afterMin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>afterMax</declname>
        </param>
        <briefdescription>
<para>Returns a scaled position given a before and after range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>initial position within before range to scale </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beforeMin</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value in before range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beforeMax</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value in before range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>afterMin</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value in after range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>afterMax</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value in after range </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>position scaled to range specified by afterMin and afterMax </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="100" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="162" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1afdb1d571c9bb4d2464db61b568d435ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayoutUtils::relativeResizeRect</definition>
        <argsstring>(QRectF &amp;rectToResize, const QRectF &amp;boundsBefore, const QRectF &amp;boundsAfter)</argsstring>
        <name>relativeResizeRect</name>
        <param>
          <type>QRectF &amp;</type>
          <declname>rectToResize</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>boundsBefore</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>boundsAfter</declname>
        </param>
        <briefdescription>
<para>Resizes a QRectF relative to a resized bounding rectangle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rectToResize</parametername>
</parameternamelist>
<parameterdescription>
<para>QRectF to resize, contained within boundsBefore. The rectangle is linearly scaled to retain its relative position and size within boundsAfter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundsBefore</parametername>
</parameternamelist>
<parameterdescription>
<para>QRectF of bounds before resize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boundsAfter</parametername>
</parameternamelist>
<parameterdescription>
<para>QRectF of bounds after resize </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="89" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="151" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a9fe8fda07192990b556804f6789de45b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsLayoutUtils::rotate</definition>
        <argsstring>(double angle, double &amp;x, double &amp;y)</argsstring>
        <name>rotate</name>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Rotates a point / vector around the origin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>rotation angle in degrees, counterclockwise </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>in/out: x coordinate before / after the rotation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>in/out: y coordinate before / after the rotation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="47" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a7315d7fa62f7ceafc723b5085a733a22" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QFont</type>
        <definition>QFont QgsLayoutUtils::scaledFontPixelSize</definition>
        <argsstring>(const QFont &amp;font)</argsstring>
        <name>scaledFontPixelSize</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Returns a <emphasis>font</emphasis> where size is set in points and the size has been upscaled with FONT_WORKAROUND_SCALE to workaround QT font rendering bugs. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a font with size set in pixels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="107" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="171" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1af91b81bc32d61d0404b4c73ef1dbe025" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::scaleFactorFromItemStyle</definition>
        <argsstring>(const QStyleOptionGraphicsItem *style)</argsstring>
        <name>scaleFactorFromItemStyle</name>
        <param>
          <type>const QStyleOptionGraphicsItem *</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Extracts the scale factor from an item <emphasis>style</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="212" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="390" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a8fb45861f4471b46a5c6eff95691bb94" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::snappedAngle</definition>
        <argsstring>(double angle)</argsstring>
        <name>snappedAngle</name>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Snaps an <emphasis>angle</emphasis> (in degrees) to its closest 45 degree angle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>angle snapped to 0, 45/90/135/180/225/270 or 315 degrees </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="60" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="54" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a96988d1533cb37d73bc9dc50d78fba0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::textHeightMM</definition>
        <argsstring>(const QFont &amp;font, const QString &amp;text, double multiLineHeight=1.0)</argsstring>
        <name>textHeightMM</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>double</type>
          <declname>multiLineHeight</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Calculate a <emphasis>font</emphasis> height in millimeters for a <emphasis>text</emphasis> string, including workarounds for QT font rendering issues. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this method uses a non-standard measure of text height, where only the font ascent is considered for the first line of text.</para><para>The <emphasis>multiLineHeight</emphasis> parameter specifies the line spacing factor.</para><para><simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1ad6e2025b4f5b04c5a61677d7e624d857" kindref="member">textWidthMM()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="167" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="228" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1ad6e2025b4f5b04c5a61677d7e624d857" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::textWidthMM</definition>
        <argsstring>(const QFont &amp;font, const QString &amp;text)</argsstring>
        <name>textWidthMM</name>
        <param>
          <type>const QFont &amp;</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Calculate a <emphasis>font</emphasis> width in millimeters for a <emphasis>text</emphasis> string, including workarounds for QT font rendering issues. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a5290da79477bb19a43d12525c9edacfc" kindref="member">fontAscentMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a441376503ba517c14e51b4aece73f0c8" kindref="member">fontDescentMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a3b52451f814f1c8a1bda695cdc3db4ad" kindref="member">fontHeightMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1aa7f3649a277cf3c4e539d4934537f266" kindref="member">fontHeightCharacterMM()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsLayoutUtils_1a96988d1533cb37d73bc9dc50d78fba0d" kindref="member">textHeightMM()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="156" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="219" bodyend="226"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classQgsLayoutUtils_1a3226e66b67802bab517d000df0712995" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::mmToPoints</definition>
        <argsstring>(double mmSize)</argsstring>
        <name>mmToPoints</name>
        <param>
          <type>double</type>
          <declname>mmSize</declname>
        </param>
        <briefdescription>
<para>Returns the size in points corresponding to a font <emphasis>mmSize</emphasis> in mm. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>pointsToMM() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="240" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="430" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayoutUtils_1a9a20c009b08bd5c280993e25162da9f1" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QgsLayoutUtils::pointsToMM</definition>
        <argsstring>(double pointSize)</argsstring>
        <name>pointsToMM</name>
        <param>
          <type>double</type>
          <declname>pointSize</declname>
        </param>
        <briefdescription>
<para>Returns the size in mm corresponding to a font <emphasis>pointSize</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>mmToPoints() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="234" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.cpp" bodystart="424" bodyend="428"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utilities for layouts. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" line="38" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/layout/qgslayoututils.h" bodystart="37" bodyend="243"/>
    <listofallmembers>
      <member refid="classQgsLayoutUtils_1a205804cd4bdcc333ef96db8caaf850bc" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>createRenderContextForLayout</name></member>
      <member refid="classQgsLayoutUtils_1a7fc4599a151457f72b6ff28dc5c9aee7" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>createRenderContextForMap</name></member>
      <member refid="classQgsLayoutUtils_1a982264168f76d3e5f30114c73fbd1834" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>decodePaperOrientation</name></member>
      <member refid="classQgsLayoutUtils_1ad1d896afd6f02a331a4c1e943d178812" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>drawText</name></member>
      <member refid="classQgsLayoutUtils_1ae68c6fd4a0096448557f70739fa9ecd7" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>drawText</name></member>
      <member refid="classQgsLayoutUtils_1afb90da2fa37a0f9eaf1ab90082016b4f" prot="private" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>FONT_WORKAROUND_SCALE</name></member>
      <member refid="classQgsLayoutUtils_1a5290da79477bb19a43d12525c9edacfc" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>fontAscentMM</name></member>
      <member refid="classQgsLayoutUtils_1a441376503ba517c14e51b4aece73f0c8" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>fontDescentMM</name></member>
      <member refid="classQgsLayoutUtils_1aa7f3649a277cf3c4e539d4934537f266" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>fontHeightCharacterMM</name></member>
      <member refid="classQgsLayoutUtils_1a3b52451f814f1c8a1bda695cdc3db4ad" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>fontHeightMM</name></member>
      <member refid="classQgsLayoutUtils_1a66d0b42d4440c577f57ce4a7b71c279d" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>largestRotatedRectWithinBounds</name></member>
      <member refid="classQgsLayoutUtils_1aecc33f04e8c5a1992fc4c91753c795ab" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>mapLayerFromString</name></member>
      <member refid="classQgsLayoutUtils_1a3226e66b67802bab517d000df0712995" prot="private" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>mmToPoints</name></member>
      <member refid="classQgsLayoutUtils_1ac0fd2b17f3f33541263b7afdcc289c2b" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>normalizedAngle</name></member>
      <member refid="classQgsLayoutUtils_1a9a20c009b08bd5c280993e25162da9f1" prot="private" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>pointsToMM</name></member>
      <member refid="classQgsLayoutUtils_1a3d1f2c9b1a8df7c09403b30b1dfa7699" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>relativePosition</name></member>
      <member refid="classQgsLayoutUtils_1afdb1d571c9bb4d2464db61b568d435ff" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>relativeResizeRect</name></member>
      <member refid="classQgsLayoutUtils_1a9fe8fda07192990b556804f6789de45b" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>rotate</name></member>
      <member refid="classQgsLayoutUtils_1a7315d7fa62f7ceafc723b5085a733a22" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>scaledFontPixelSize</name></member>
      <member refid="classQgsLayoutUtils_1af91b81bc32d61d0404b4c73ef1dbe025" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>scaleFactorFromItemStyle</name></member>
      <member refid="classQgsLayoutUtils_1a8fb45861f4471b46a5c6eff95691bb94" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>snappedAngle</name></member>
      <member refid="classQgsLayoutUtils_1a46e1792f6283aaf04b3b761146d7384a" prot="private" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>TestQgsLayoutUtils</name></member>
      <member refid="classQgsLayoutUtils_1a96988d1533cb37d73bc9dc50d78fba0d" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>textHeightMM</name></member>
      <member refid="classQgsLayoutUtils_1ad6e2025b4f5b04c5a61677d7e624d857" prot="public" virt="non-virtual"><scope>QgsLayoutUtils</scope><name>textWidthMM</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
