<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsWithVariableExpressionFunction" kind="class" language="C++" prot="public">
    <compoundname>QgsWithVariableExpressionFunction</compoundname>
    <basecompoundref refid="classQgsExpressionFunction" prot="public" virt="non-virtual">QgsExpressionFunction</basecompoundref>
    <includes refid="qgsexpressionfunction_8h" local="no">qgsexpressionfunction.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsWithVariableExpressionFunction_1a3f09428b9ad6d71941e229bff9a2f108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsWithVariableExpressionFunction::QgsWithVariableExpressionFunction</definition>
        <argsstring>()</argsstring>
        <name>QgsWithVariableExpressionFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="561" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="5454" bodyend="5462"/>
      </memberdef>
      <memberdef kind="function" id="classQgsWithVariableExpressionFunction_1aba04dbaad16dd33908fdf2324692c269" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsWithVariableExpressionFunction::func</definition>
        <argsstring>(const QVariantList &amp;values, const QgsExpressionContext *context, QgsExpression *parent, const QgsExpressionNodeFunction *node) override</argsstring>
        <name>func</name>
        <reimplements refid="classQgsExpressionFunction_1aac3bdce16c2974dff049cdd6f9946d6f">func</reimplements>
        <param>
          <type>const QVariantList &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Returns result of evaluating the function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>list of values passed to the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>context expression is being evaluated against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>parent expression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>expression node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result of function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="567" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="5518" bodyend="5528"/>
      </memberdef>
      <memberdef kind="function" id="classQgsWithVariableExpressionFunction_1a3ae6eee9c8baf9518cf352515ef74d44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsWithVariableExpressionFunction::isStatic</definition>
        <argsstring>(const QgsExpressionNodeFunction *node, QgsExpression *parent, const QgsExpressionContext *context) const override</argsstring>
        <name>isStatic</name>
        <reimplements refid="classQgsExpressionFunction_1a399b81147422abf64c288d0c8b74b596">isStatic</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Will be called during prepare to determine if the function is static. </para>        </briefdescription>
        <detaileddescription>
<para>A function is static if it will return the same value for every feature with different attributes and/or geometry.</para><para>By default this will return true, if all arguments that have been passed to the function are also static.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="563" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="5464" bodyend="5487"/>
      </memberdef>
      <memberdef kind="function" id="classQgsWithVariableExpressionFunction_1aef5779c90afd23d3cbeed2157d016ba1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsWithVariableExpressionFunction::prepare</definition>
        <argsstring>(const QgsExpressionNodeFunction *node, QgsExpression *parent, const QgsExpressionContext *context) const override</argsstring>
        <name>prepare</name>
        <reimplements refid="classQgsExpressionFunction_1ac8dcaad4093a5831ff42d5b7755d43b1">prepare</reimplements>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>This will be called during the prepare step() of an expression if it is not static. </para>        </briefdescription>
        <detaileddescription>
<para>This can be used by functions to do any preparation steps that might help to speedup the upcoming evaluation.</para><para><simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="569" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="5530" bodyend="5556"/>
      </memberdef>
      <memberdef kind="function" id="classQgsWithVariableExpressionFunction_1a66cc71793c323c04a9f88311fb5142eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant QgsWithVariableExpressionFunction::run</definition>
        <argsstring>(QgsExpressionNode::NodeList *args, const QgsExpressionContext *context, QgsExpression *parent, const QgsExpressionNodeFunction *node) override</argsstring>
        <name>run</name>
        <reimplements refid="classQgsExpressionFunction_1a8cd98eda990f063851b333b5ebc2fbd5">run</reimplements>
        <param>
          <type><ref refid="classQgsExpressionNode_1_1NodeList" kindref="compound">QgsExpressionNode::NodeList</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classQgsExpression" kindref="compound">QgsExpression</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsExpressionNodeFunction" kindref="compound">QgsExpressionNodeFunction</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Evaluates the function, first evaluating all required arguments before passing them to the function&apos;s <ref refid="classQgsWithVariableExpressionFunction_1aba04dbaad16dd33908fdf2324692c269" kindref="member">func()</ref> method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="565" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="5489" bodyend="5516"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classQgsWithVariableExpressionFunction_1ae7acdc2e70245689d85fd1f41aecc1f5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsWithVariableExpressionFunction::appendTemporaryVariable</definition>
        <argsstring>(const QgsExpressionContext *context, const QString &amp;name, const QVariant &amp;value) const</argsstring>
        <name>appendTemporaryVariable</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Append a scope with a single variable definition (<computeroutput>name</computeroutput>=<computeroutput>value</computeroutput>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="576" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="5564" bodyend="5571"/>
      </memberdef>
      <memberdef kind="function" id="classQgsWithVariableExpressionFunction_1a1783945a677b0044fc2ddfb1568bb1ef" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QgsWithVariableExpressionFunction::popTemporaryVariable</definition>
        <argsstring>(const QgsExpressionContext *context) const</argsstring>
        <name>popTemporaryVariable</name>
        <param>
          <type>const <ref refid="classQgsExpressionContext" kindref="compound">QgsExpressionContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Pop the temporary scope again. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="581" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.cpp" bodystart="5558" bodyend="5562"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Handles the <computeroutput>with_variable(name, value, node)</computeroutput> expression function. </para>    </briefdescription>
    <detaileddescription>
<para>It temporarily appends a new scope to the expression context for all nested nodes.</para><para><simplesect kind="note"><para>Not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10056">
        <label>QgsWithVariableExpressionFunction</label>
        <link refid="classQgsWithVariableExpressionFunction"/>
        <childnode refid="10057" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10057">
        <label>QgsExpressionFunction</label>
        <link refid="classQgsExpressionFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10058">
        <label>QgsWithVariableExpressionFunction</label>
        <link refid="classQgsWithVariableExpressionFunction"/>
        <childnode refid="10059" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10059">
        <label>QgsExpressionFunction</label>
        <link refid="classQgsExpressionFunction"/>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" line="559" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/expression/qgsexpressionfunction.h" bodystart="558" bodyend="582"/>
    <listofallmembers>
      <member refid="classQgsExpressionFunction_1a3df939a4995ff37fa1bd5c85f5c5b48a" prot="public" virt="virtual"><scope>QgsWithVariableExpressionFunction</scope><name>aliases</name></member>
      <member refid="classQgsExpressionFunction_1a4b513026b2f50b370d62210acc38dbd9" prot="protected" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>allParamsStatic</name></member>
      <member refid="classQgsWithVariableExpressionFunction_1ae7acdc2e70245689d85fd1f41aecc1f5" prot="private" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>appendTemporaryVariable</name></member>
      <member refid="classQgsExpressionFunction_1af8f1aaa201835de29f9e58d0ae726af2" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>FcnEval</name></member>
      <member refid="classQgsWithVariableExpressionFunction_1aba04dbaad16dd33908fdf2324692c269" prot="public" virt="virtual"><scope>QgsWithVariableExpressionFunction</scope><name>func</name></member>
      <member refid="classQgsExpressionFunction_1aa29b1d86d870e46689d02d9c0d7db236" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>group</name></member>
      <member refid="classQgsExpressionFunction_1a1b9cee2c24287bd685088a96471e66e9" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>groups</name></member>
      <member refid="classQgsExpressionFunction_1ac0b17f18a0e5280ec554d89ea5475b51" prot="public" virt="virtual"><scope>QgsWithVariableExpressionFunction</scope><name>handlesNull</name></member>
      <member refid="classQgsExpressionFunction_1ad61ceb46aa3133a40d29300fdb73777c" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>helpText</name></member>
      <member refid="classQgsExpressionFunction_1a0a6475c1b384c3654f2269dfc6e7a243" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>isContextual</name></member>
      <member refid="classQgsExpressionFunction_1a324a412f350be861600cef3b4a07bd6e" prot="public" virt="virtual"><scope>QgsWithVariableExpressionFunction</scope><name>isDeprecated</name></member>
      <member refid="classQgsWithVariableExpressionFunction_1a3ae6eee9c8baf9518cf352515ef74d44" prot="public" virt="virtual"><scope>QgsWithVariableExpressionFunction</scope><name>isStatic</name></member>
      <member refid="classQgsExpressionFunction_1a3fb17cb0e65635ea646fd80ed1d51f8c" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>lazyEval</name></member>
      <member refid="classQgsExpressionFunction_1a70702a09951459dbb665622ba65c755e" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>minParams</name></member>
      <member refid="classQgsExpressionFunction_1a75b3d6b9d50a8dd663465a42cce11848" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>name</name></member>
      <member refid="classQgsExpressionFunction_1a22fc286594b6d3ba60d2a222a1ced67b" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>operator==</name></member>
      <member refid="classQgsExpressionFunction_1a06d7401e94e98cb20e2014f1ef0d009a" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>ParameterList</name></member>
      <member refid="classQgsExpressionFunction_1ab3056f181ae6085f89ca16639db00ed0" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>parameters</name></member>
      <member refid="classQgsExpressionFunction_1a14d5dbed8e5dd8fdcf7d5c02e18bbd7d" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>params</name></member>
      <member refid="classQgsWithVariableExpressionFunction_1a1783945a677b0044fc2ddfb1568bb1ef" prot="private" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>popTemporaryVariable</name></member>
      <member refid="classQgsWithVariableExpressionFunction_1aef5779c90afd23d3cbeed2157d016ba1" prot="public" virt="virtual"><scope>QgsWithVariableExpressionFunction</scope><name>prepare</name></member>
      <member refid="classQgsExpressionFunction_1a2637c89917718ead50b08c760316c328" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1a721f8a31e84ecf173278082ee6f345c3" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1afc7af3ed9f0bb5da6c2e3df39b65fb06" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1a0a1834d566ebe3860d3772913b9a9fe3" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>QgsExpressionFunction</name></member>
      <member refid="classQgsWithVariableExpressionFunction_1a3f09428b9ad6d71941e229bff9a2f108" prot="public" virt="non-virtual"><scope>QgsWithVariableExpressionFunction</scope><name>QgsWithVariableExpressionFunction</name></member>
      <member refid="classQgsExpressionFunction_1abef6a1ef1af36137394c969371a23aed" prot="public" virt="virtual"><scope>QgsWithVariableExpressionFunction</scope><name>referencedColumns</name></member>
      <member refid="classQgsWithVariableExpressionFunction_1a66cc71793c323c04a9f88311fb5142eb" prot="public" virt="virtual"><scope>QgsWithVariableExpressionFunction</scope><name>run</name></member>
      <member refid="classQgsExpressionFunction_1aea286ec1a3c8ced38d33b0544385924d" prot="public" virt="virtual"><scope>QgsWithVariableExpressionFunction</scope><name>usesGeometry</name></member>
      <member refid="classQgsExpressionFunction_1a4fcb413c419837eeb3b425d046048844" prot="public" virt="virtual"><scope>QgsWithVariableExpressionFunction</scope><name>~QgsExpressionFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
