<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsCustomColorScheme" kind="class" language="C++" prot="public">
    <compoundname>QgsCustomColorScheme</compoundname>
    <basecompoundref refid="classQgsColorScheme" prot="public" virt="non-virtual">QgsColorScheme</basecompoundref>
    <includes refid="qgscolorscheme_8h" local="no">qgscolorscheme.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQgsCustomColorScheme_1a8ec5dd4bf963c26719fe05eac5ae2c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QgsCustomColorScheme::QgsCustomColorScheme</definition>
        <argsstring>()=default</argsstring>
        <name>QgsCustomColorScheme</name>
        <briefdescription>
<para>Constructor for <ref refid="classQgsCustomColorScheme" kindref="compound">QgsCustomColorScheme</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCustomColorScheme_1a6f385d38f89d47abf5258ae9ae1abd63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQgsCustomColorScheme" kindref="compound">QgsCustomColorScheme</ref> *</type>
        <definition>QgsCustomColorScheme * QgsCustomColorScheme::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classQgsColorScheme_1a379eb8a7c757983a9e66588b3221266c">clone</reimplements>
        <briefdescription>
<para>Clones a color scheme. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>copy of color scheme </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" line="290" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.cpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCustomColorScheme_1a2268f1b8808d171a9f0e01e911a2f8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="group__core_1ga555b19dee407e2563e0c0c1993617ba6" kindref="member">QgsNamedColorList</ref></type>
        <definition>QgsNamedColorList QgsCustomColorScheme::fetchColors</definition>
        <argsstring>(const QString &amp;context=QString(), const QColor &amp;baseColor=QColor()) override</argsstring>
        <name>fetchColors</name>
        <reimplements refid="classQgsColorScheme_1a50dd4e6636e495e82c8f01fde74cc59b">fetchColors</reimplements>
        <param>
          <type>const QString &amp;</type>
          <declname>context</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>baseColor</declname>
          <defval>QColor()</defval>
        </param>
        <briefdescription>
<para>Gets a list of colors from the scheme. </para>        </briefdescription>
        <detaileddescription>
<para>The colors can optionally be generated using the supplied context and base color. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>string specifying an optional context for the returned colors. For instance, a &quot;recent colors&quot; scheme may filter returned colors by context so that colors used only in a &quot;composer&quot; context are returned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baseColor</parametername>
</parameternamelist>
<parameterdescription>
<para>base color for the scheme&apos;s colors. Some color schemes may take advantage of this to filter or modify their returned colors to colors related to the base color. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a list of QPairs of color and color name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" line="283" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.cpp" bodystart="113" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCustomColorScheme_1a194ec0cfe0524622e00174b260263019" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>SchemeFlags</type>
        <definition>SchemeFlags QgsCustomColorScheme::flags</definition>
        <argsstring>() const override</argsstring>
        <name>flags</name>
        <reimplements refid="classQgsColorScheme_1a49ae592ffa2bea5faf330eaa89e1b617">flags</reimplements>
        <briefdescription>
<para>Returns the current flags for the color scheme. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>current flags </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" line="281" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCustomColorScheme_1a4e4243a118c56ecad08bf1f50df3d311" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool QgsCustomColorScheme::isEditable</definition>
        <argsstring>() const override</argsstring>
        <name>isEditable</name>
        <reimplements refid="classQgsColorScheme_1ad7ba0c708a49aa0404fda9db77f1ce4d">isEditable</reimplements>
        <briefdescription>
<para>Returns whether the color scheme is editable. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if scheme is editable </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCustomColorScheme_1a58ed0437e1f88eb35449cba1b8410813" kindref="member">setColors</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" line="286" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCustomColorScheme_1a6a69dab67410bdf6baa4037fa9c048e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>QString QgsCustomColorScheme::schemeName</definition>
        <argsstring>() const override</argsstring>
        <name>schemeName</name>
        <reimplements refid="classQgsColorScheme_1a21f8d24b1c7cb93d15808f904b0df647">schemeName</reimplements>
        <briefdescription>
<para>Gets the name for the color scheme. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>color scheme name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" line="279" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" bodystart="279" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classQgsCustomColorScheme_1a58ed0437e1f88eb35449cba1b8410813" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QgsCustomColorScheme::setColors</definition>
        <argsstring>(const QgsNamedColorList &amp;colors, const QString &amp;context=QString(), const QColor &amp;baseColor=QColor()) override</argsstring>
        <name>setColors</name>
        <reimplements refid="classQgsColorScheme_1a2442bb8a80b8b0b30282696875ca711a">setColors</reimplements>
        <param>
          <type>const <ref refid="group__core_1ga555b19dee407e2563e0c0c1993617ba6" kindref="member">QgsNamedColorList</ref> &amp;</type>
          <declname>colors</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>context</declname>
          <defval>QString()</defval>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>baseColor</declname>
          <defval>QColor()</defval>
        </param>
        <briefdescription>
<para>Sets the colors for the scheme. </para>        </briefdescription>
        <detaileddescription>
<para>This method is only valid for editable color schemes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colors</parametername>
</parameternamelist>
<parameterdescription>
<para>list of colors for the scheme </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>to set colors for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baseColor</parametername>
</parameternamelist>
<parameterdescription>
<para>base color to set colors for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if colors were set successfully </para></simplesect>
<simplesect kind="see"><para><ref refid="classQgsCustomColorScheme_1a4e4243a118c56ecad08bf1f50df3d311" kindref="member">isEditable</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" line="288" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.cpp" bodystart="162" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A color scheme which contains custom colors set through QGIS app options dialog. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="since"><para>QGIS 2.5 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2111">
        <label>QgsColorScheme</label>
        <link refid="classQgsColorScheme"/>
      </node>
      <node id="2110">
        <label>QgsCustomColorScheme</label>
        <link refid="classQgsCustomColorScheme"/>
        <childnode refid="2111" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2113">
        <label>QgsColorScheme</label>
        <link refid="classQgsColorScheme"/>
      </node>
      <node id="2112">
        <label>QgsCustomColorScheme</label>
        <link refid="classQgsCustomColorScheme"/>
        <childnode refid="2113" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" line="271" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgscolorscheme.h" bodystart="270" bodyend="291"/>
    <listofallmembers>
      <member refid="classQgsCustomColorScheme_1a6f385d38f89d47abf5258ae9ae1abd63" prot="public" virt="virtual"><scope>QgsCustomColorScheme</scope><name>clone</name></member>
      <member refid="classQgsCustomColorScheme_1a2268f1b8808d171a9f0e01e911a2f8c9" prot="public" virt="virtual"><scope>QgsCustomColorScheme</scope><name>fetchColors</name></member>
      <member refid="classQgsCustomColorScheme_1a194ec0cfe0524622e00174b260263019" prot="public" virt="virtual"><scope>QgsCustomColorScheme</scope><name>flags</name></member>
      <member refid="classQgsCustomColorScheme_1a4e4243a118c56ecad08bf1f50df3d311" prot="public" virt="virtual"><scope>QgsCustomColorScheme</scope><name>isEditable</name></member>
      <member refid="classQgsColorScheme_1a91af00a23ec74c7635fd35d031300da3" prot="public" virt="non-virtual"><scope>QgsCustomColorScheme</scope><name>QgsColorScheme</name></member>
      <member refid="classQgsCustomColorScheme_1a8ec5dd4bf963c26719fe05eac5ae2c21" prot="public" virt="non-virtual"><scope>QgsCustomColorScheme</scope><name>QgsCustomColorScheme</name></member>
      <member refid="classQgsColorScheme_1a0540cff97194466d2af354ccbed1bf7c" prot="public" virt="non-virtual"><scope>QgsCustomColorScheme</scope><name>SchemeFlag</name></member>
      <member refid="classQgsCustomColorScheme_1a6a69dab67410bdf6baa4037fa9c048e1" prot="public" virt="virtual"><scope>QgsCustomColorScheme</scope><name>schemeName</name></member>
      <member refid="classQgsCustomColorScheme_1a58ed0437e1f88eb35449cba1b8410813" prot="public" virt="virtual"><scope>QgsCustomColorScheme</scope><name>setColors</name></member>
      <member refid="classQgsColorScheme_1a0540cff97194466d2af354ccbed1bf7ca776295542017551c06216fde1dfc40b3" prot="public" virt="non-virtual"><scope>QgsCustomColorScheme</scope><name>ShowInAllContexts</name></member>
      <member refid="classQgsColorScheme_1a0540cff97194466d2af354ccbed1bf7ca9b1d3957dff417bea8b71b1dd9459a78" prot="public" virt="non-virtual"><scope>QgsCustomColorScheme</scope><name>ShowInColorButtonMenu</name></member>
      <member refid="classQgsColorScheme_1a0540cff97194466d2af354ccbed1bf7caa9e806c8c020b3fd941c23f287277edc" prot="public" virt="non-virtual"><scope>QgsCustomColorScheme</scope><name>ShowInColorDialog</name></member>
      <member refid="classQgsColorScheme_1a6c1ba080bbc4452283cb1565f75c625b" prot="public" virt="virtual"><scope>QgsCustomColorScheme</scope><name>~QgsColorScheme</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
