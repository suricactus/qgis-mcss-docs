<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsGeometryFactory" kind="class" language="C++" prot="public">
    <compoundname>QgsGeometryFactory</compoundname>
    <includes refid="qgsgeometryfactory_8h" local="no">qgsgeometryfactory.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsGeometryFactory_1ab73d6d63bf954e19dfef593f22c5a62f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsGeometryCollection" kindref="compound">QgsGeometryCollection</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsGeometryCollection &gt; QgsGeometryFactory::createCollectionOfType</definition>
        <argsstring>(QgsWkbTypes::Type type)</argsstring>
        <name>createCollectionOfType</name>
        <param>
          <type><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11" kindref="member">QgsWkbTypes::Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns a new geometry collection matching a specified WKB <emphasis>type</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>For instance, if type is PolygonM the returned geometry will be a <ref refid="classQgsMultiPolygon" kindref="compound">QgsMultiPolygon</ref> with M values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="86" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="253" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeometryFactory_1a3e98cb9563cea219e620424e91ac211e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsMultiPoint" kindref="compound">QgsMultiPoint</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsMultiPoint &gt; QgsGeometryFactory::fromMultiPointXY</definition>
        <argsstring>(const QgsMultiPointXY &amp;multipoint)</argsstring>
        <name>fromMultiPointXY</name>
        <param>
          <type>const <ref refid="qgsgeometry_8h_1a9cfedf77fdc8df5917f214afe763eb0b" kindref="member">QgsMultiPointXY</ref> &amp;</type>
          <declname>multipoint</declname>
        </param>
        <briefdescription>
<para>Construct geometry from a multipoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="70" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="140" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeometryFactory_1a1207c0b9306d85667488e453e06305ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsMultiPolygon" kindref="compound">QgsMultiPolygon</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsMultiPolygon &gt; QgsGeometryFactory::fromMultiPolygonXY</definition>
        <argsstring>(const QgsMultiPolygonXY &amp;multipoly)</argsstring>
        <name>fromMultiPolygonXY</name>
        <param>
          <type>const <ref refid="qgsgeometry_8h_1aedb145a58392587c67f1c23d24b7a3de" kindref="member">QgsMultiPolygonXY</ref> &amp;</type>
          <declname>multipoly</declname>
        </param>
        <briefdescription>
<para>Construct geometry from a multipolygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="78" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="191" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeometryFactory_1a9a0ec65bdfacd1e9a2aebed9f1981ef2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsMultiLineString" kindref="compound">QgsMultiLineString</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsMultiLineString &gt; QgsGeometryFactory::fromMultiPolylineXY</definition>
        <argsstring>(const QgsMultiPolylineXY &amp;multiline)</argsstring>
        <name>fromMultiPolylineXY</name>
        <param>
          <type>const <ref refid="qgsgeometry_8h_1a6451e2e014d2984af57e090a10b1e16f" kindref="member">QgsMultiPolylineXY</ref> &amp;</type>
          <declname>multiline</declname>
        </param>
        <briefdescription>
<para>Construct geometry from a multipolyline. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="74" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="157" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeometryFactory_1ac91549ba67ac1c7bd017fcc31c6a67f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeometryFactory::fromPointXY</definition>
        <argsstring>(const QgsPointXY &amp;point)</argsstring>
        <name>fromPointXY</name>
        <param>
          <type>const <ref refid="classQgsPointXY" kindref="compound">QgsPointXY</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Construct geometry from a point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="68" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeometryFactory_1ad77f9b106ddeb74b6ba35e5f84dc74f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsPolygon" kindref="compound">QgsPolygon</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsPolygon &gt; QgsGeometryFactory::fromPolygonXY</definition>
        <argsstring>(const QgsPolygonXY &amp;polygon)</argsstring>
        <name>fromPolygonXY</name>
        <param>
          <type>const <ref refid="qgsgeometry_8h_1a271a798c4388adbfcfda3f8b3ec289df" kindref="member">QgsPolygonXY</ref> &amp;</type>
          <declname>polygon</declname>
        </param>
        <briefdescription>
<para>Construct geometry from a polygon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="76" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="167" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeometryFactory_1a31db799e5c136156a2170b4704719176" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeometryFactory::fromPolylineXY</definition>
        <argsstring>(const QgsPolylineXY &amp;polyline)</argsstring>
        <name>fromPolylineXY</name>
        <param>
          <type>const <ref refid="qgsgeometry_8h_1aa509befb347910684b1a14f10c62cc89" kindref="member">QgsPolylineXY</ref> &amp;</type>
          <declname>polyline</declname>
        </param>
        <briefdescription>
<para>Construct geometry from a polyline. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="72" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeometryFactory_1a15f5d2f4bcd18bf17e208a67bc5ec31b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeometryFactory::geomFromWkb</definition>
        <argsstring>(QgsConstWkbPtr &amp;wkb)</argsstring>
        <name>geomFromWkb</name>
        <param>
          <type><ref refid="classQgsConstWkbPtr" kindref="compound">QgsConstWkbPtr</ref> &amp;</type>
          <declname>wkb</declname>
        </param>
        <briefdescription>
<para>Construct geometry from a WKB string. </para>        </briefdescription>
        <detaileddescription>
<para>Updates position of the passed WKB pointer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="60" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="34" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeometryFactory_1a983c3435e68a4fb7265ea90f867847ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeometryFactory::geomFromWkbType</definition>
        <argsstring>(QgsWkbTypes::Type t)</argsstring>
        <name>geomFromWkbType</name>
        <param>
          <type><ref refid="classQgsWkbTypes_1a70dff7aceefd4b16909f038e32aece11" kindref="member">QgsWkbTypes::Type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Returns empty geometry from wkb type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="80" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="217" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classQgsGeometryFactory_1a7edb6084c467b1d89cfc801fb07bff41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsAbstractGeometry" kindref="compound">QgsAbstractGeometry</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsAbstractGeometry &gt; QgsGeometryFactory::geomFromWkt</definition>
        <argsstring>(const QString &amp;text)</argsstring>
        <name>geomFromWkt</name>
        <param>
          <type>const QString &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Construct geometry from a WKT string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="65" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="72" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classQgsGeometryFactory_1aca1ee64acdde1615a82a450edd777713" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classQgsLineString" kindref="compound">QgsLineString</ref> &gt;</type>
        <definition>std::unique_ptr&lt; QgsLineString &gt; QgsGeometryFactory::linestringFromPolyline</definition>
        <argsstring>(const QgsPolylineXY &amp;polyline)</argsstring>
        <name>linestringFromPolyline</name>
        <param>
          <type>const <ref refid="qgsgeometry_8h_1aa509befb347910684b1a14f10c62cc89" kindref="member">QgsPolylineXY</ref> &amp;</type>
          <declname>polyline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="89" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.cpp" bodystart="201" bodyend="215"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains geometry creation routines. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>not available in Python bindings </para></simplesect>
<simplesect kind="since"><para>QGIS 2.10 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" line="53" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/geometry/qgsgeometryfactory.h" bodystart="52" bodyend="90"/>
    <listofallmembers>
      <member refid="classQgsGeometryFactory_1ab73d6d63bf954e19dfef593f22c5a62f" prot="public" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>createCollectionOfType</name></member>
      <member refid="classQgsGeometryFactory_1a3e98cb9563cea219e620424e91ac211e" prot="public" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>fromMultiPointXY</name></member>
      <member refid="classQgsGeometryFactory_1a1207c0b9306d85667488e453e06305ae" prot="public" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>fromMultiPolygonXY</name></member>
      <member refid="classQgsGeometryFactory_1a9a0ec65bdfacd1e9a2aebed9f1981ef2" prot="public" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>fromMultiPolylineXY</name></member>
      <member refid="classQgsGeometryFactory_1ac91549ba67ac1c7bd017fcc31c6a67f2" prot="public" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>fromPointXY</name></member>
      <member refid="classQgsGeometryFactory_1ad77f9b106ddeb74b6ba35e5f84dc74f2" prot="public" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>fromPolygonXY</name></member>
      <member refid="classQgsGeometryFactory_1a31db799e5c136156a2170b4704719176" prot="public" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>fromPolylineXY</name></member>
      <member refid="classQgsGeometryFactory_1a15f5d2f4bcd18bf17e208a67bc5ec31b" prot="public" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>geomFromWkb</name></member>
      <member refid="classQgsGeometryFactory_1a983c3435e68a4fb7265ea90f867847ee" prot="public" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>geomFromWkbType</name></member>
      <member refid="classQgsGeometryFactory_1a7edb6084c467b1d89cfc801fb07bff41" prot="public" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>geomFromWkt</name></member>
      <member refid="classQgsGeometryFactory_1aca1ee64acdde1615a82a450edd777713" prot="private" virt="non-virtual"><scope>QgsGeometryFactory</scope><name>linestringFromPolyline</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
