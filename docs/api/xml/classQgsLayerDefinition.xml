<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classQgsLayerDefinition" kind="class" language="C++" prot="public">
    <compoundname>QgsLayerDefinition</compoundname>
    <includes refid="qgslayerdefinition_8h" local="no">qgslayerdefinition.h</includes>
    <innerclass refid="classQgsLayerDefinition_1_1DependencySorter" prot="public">QgsLayerDefinition::DependencySorter</innerclass>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQgsLayerDefinition_1a183639dbaade37166aed8a3d79dd7db1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerDefinition::exportLayerDefinition</definition>
        <argsstring>(QString path, const QList&lt; QgsLayerTreeNode *&gt; &amp;selectedTreeNodes, QString &amp;errorMessage)</argsstring>
        <name>exportLayerDefinition</name>
        <param>
          <type>QString</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *&gt; &amp;</type>
          <declname>selectedTreeNodes</declname>
        </param>
        <param>
          <type>QString &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <briefdescription>
<para>Export the selected layer tree nodes to a QLR file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.h" line="50" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.cpp" bodystart="174" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerDefinition_1ac9ef729fb5536957c04252aa178e279b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerDefinition::exportLayerDefinition</definition>
        <argsstring>(QDomDocument doc, const QList&lt; QgsLayerTreeNode *&gt; &amp;selectedTreeNodes, QString &amp;errorMessage, const QgsReadWriteContext &amp;context)</argsstring>
        <name>exportLayerDefinition</name>
        <param>
          <type>QDomDocument</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const QList&lt; <ref refid="classQgsLayerTreeNode" kindref="compound">QgsLayerTreeNode</ref> *&gt; &amp;</type>
          <declname>selectedTreeNodes</declname>
        </param>
        <param>
          <type>QString &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Export the selected layer tree nodes to a QLR-XML document. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.h" line="52" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.cpp" bodystart="199" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerDefinition_1a2684a1b1120822696bc075e9134a2f93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QDomDocument</type>
        <definition>QDomDocument QgsLayerDefinition::exportLayerDefinitionLayers</definition>
        <argsstring>(const QList&lt; QgsMapLayer *&gt; &amp;layers, const QgsReadWriteContext &amp;context)</argsstring>
        <name>exportLayerDefinitionLayers</name>
        <param>
          <type>const QList&lt; <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> *&gt; &amp;</type>
          <declname>layers</declname>
        </param>
        <param>
          <type>const <ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns the given layer as a layer definition document Layer definitions store the data source as well as styling and custom properties. </para>        </briefdescription>
        <detaileddescription>
<para>Layer definitions can be used to load a layer and styling all from a single file.</para><para>This is a low-level routine that does not write layer tree. <simplesect kind="see"><para><ref refid="classQgsLayerDefinition_1a183639dbaade37166aed8a3d79dd7db1" kindref="member">exportLayerDefinition()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.h" line="63" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.cpp" bodystart="230" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerDefinition_1a04716c6e6606b6f5f6af4193e6cf6a38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerDefinition::loadLayerDefinition</definition>
        <argsstring>(const QString &amp;path, QgsProject *project, QgsLayerTreeGroup *rootGroup, QString &amp;errorMessage)</argsstring>
        <name>loadLayerDefinition</name>
        <param>
          <type>const QString &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="classQgsProject" kindref="compound">QgsProject</ref> *</type>
          <declname>project</declname>
        </param>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>rootGroup</declname>
        </param>
        <param>
          <type>QString &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <briefdescription>
<para>Loads the QLR at path into QGIS. New layers are added to given project into layer tree specified by rootGroup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.h" line="46" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.cpp" bodystart="32" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerDefinition_1aed9237c13dcdebf9da6ac2f2fe722900" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QgsLayerDefinition::loadLayerDefinition</definition>
        <argsstring>(QDomDocument doc, QgsProject *project, QgsLayerTreeGroup *rootGroup, QString &amp;errorMessage, QgsReadWriteContext &amp;context)</argsstring>
        <name>loadLayerDefinition</name>
        <param>
          <type>QDomDocument</type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="classQgsProject" kindref="compound">QgsProject</ref> *</type>
          <declname>project</declname>
        </param>
        <param>
          <type><ref refid="classQgsLayerTreeGroup" kindref="compound">QgsLayerTreeGroup</ref> *</type>
          <declname>rootGroup</declname>
        </param>
        <param>
          <type>QString &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <param>
          <type><ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Loads the QLR from the XML document. New layers are added to given project into layer tree specified by rootGroup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.h" line="48" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.cpp" bodystart="59" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerDefinition_1a2e2c459fa2a508283c335d5a82db08a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> * &gt;</type>
        <definition>QList&lt; QgsMapLayer * &gt; QgsLayerDefinition::loadLayerDefinitionLayers</definition>
        <argsstring>(QDomDocument &amp;document, QgsReadWriteContext &amp;context)</argsstring>
        <name>loadLayerDefinitionLayers</name>
        <param>
          <type>QDomDocument &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type><ref refid="classQgsReadWriteContext" kindref="compound">QgsReadWriteContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Creates new layers from a layer definition document. </para>        </briefdescription>
        <detaileddescription>
<para>This is a low-level routine that does not resolve layer ID conflicts, dependencies and joins <simplesect kind="see"><para><ref refid="classQgsLayerDefinition_1a04716c6e6606b6f5f6af4193e6cf6a38" kindref="member">loadLayerDefinition()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.h" line="70" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.cpp" bodystart="246" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classQgsLayerDefinition_1a173568bc58553247235d06f3dc45dd0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QList&lt; <ref refid="classQgsMapLayer" kindref="compound">QgsMapLayer</ref> * &gt;</type>
        <definition>QList&lt; QgsMapLayer * &gt; QgsLayerDefinition::loadLayerDefinitionLayers</definition>
        <argsstring>(const QString &amp;qlrfile)</argsstring>
        <name>loadLayerDefinitionLayers</name>
        <param>
          <type>const QString &amp;</type>
          <declname>qlrfile</declname>
        </param>
        <briefdescription>
<para>Creates new layers from a layer definition file (.QLR) This is a low-level routine that does not resolve layer ID conflicts, dependencies and joins. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classQgsLayerDefinition_1a04716c6e6606b6f5f6af4193e6cf6a38" kindref="member">loadLayerDefinition()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.h" line="77" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.cpp" bodystart="284" bodyend="304"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classQgsLayerDefinition" kindref="compound">QgsLayerDefinition</ref> class holds generic methods for loading/exporting QLR files. </para>    </briefdescription>
    <detaileddescription>
<para>QLR files are an export of the layer xml including the style and datasource location. There is no link to the QLR file once loaded. Consider the QLR file a mini project file for layers and styles. QLR files also store the layer tree info for the exported layers, including group information. </para>    </detaileddescription>
    <location file="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.h" line="43" column="1" bodyfile="/home/suricactus/work/qgis/QGIS/src/core/qgslayerdefinition.h" bodystart="42" bodyend="118"/>
    <listofallmembers>
      <member refid="classQgsLayerDefinition_1a183639dbaade37166aed8a3d79dd7db1" prot="public" virt="non-virtual"><scope>QgsLayerDefinition</scope><name>exportLayerDefinition</name></member>
      <member refid="classQgsLayerDefinition_1ac9ef729fb5536957c04252aa178e279b" prot="public" virt="non-virtual"><scope>QgsLayerDefinition</scope><name>exportLayerDefinition</name></member>
      <member refid="classQgsLayerDefinition_1a2684a1b1120822696bc075e9134a2f93" prot="public" virt="non-virtual"><scope>QgsLayerDefinition</scope><name>exportLayerDefinitionLayers</name></member>
      <member refid="classQgsLayerDefinition_1a04716c6e6606b6f5f6af4193e6cf6a38" prot="public" virt="non-virtual"><scope>QgsLayerDefinition</scope><name>loadLayerDefinition</name></member>
      <member refid="classQgsLayerDefinition_1aed9237c13dcdebf9da6ac2f2fe722900" prot="public" virt="non-virtual"><scope>QgsLayerDefinition</scope><name>loadLayerDefinition</name></member>
      <member refid="classQgsLayerDefinition_1a2e2c459fa2a508283c335d5a82db08a0" prot="public" virt="non-virtual"><scope>QgsLayerDefinition</scope><name>loadLayerDefinitionLayers</name></member>
      <member refid="classQgsLayerDefinition_1a173568bc58553247235d06f3dc45dd0c" prot="public" virt="non-virtual"><scope>QgsLayerDefinition</scope><name>loadLayerDefinitionLayers</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
